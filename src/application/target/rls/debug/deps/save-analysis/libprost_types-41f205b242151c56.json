{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1","program":"C:\\Users\\renat\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","prost_types","--edition=2018","C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-Cembed-bitcode=no","-C","debuginfo=2","-C","metadata=41f205b242151c56","-C","extra-filename=-41f205b242151c56","--out-dir","c:\\rustProjects\\example_real_word\\example_real_word\\src\\application\\target\\rls\\debug\\deps","-L","dependency=c:\\rustProjects\\example_real_word\\example_real_word\\src\\application\\target\\rls\\debug\\deps","--extern","bytes=c:\\rustProjects\\example_real_word\\example_real_word\\src\\application\\target\\rls\\debug\\deps\\libbytes-3d21b7de71eaf4d5.rmeta","--extern","prost=c:\\rustProjects\\example_real_word\\example_real_word\\src\\application\\target\\rls\\debug\\deps\\libprost-42ba5c88807caf97.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\renat\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\rustProjects\\example_real_word\\example_real_word\\src\\application\\target\\rls\\debug\\deps\\libprost_types-41f205b242151c56.rmeta"},"prelude":{"crate_id":{"name":"prost_types","disambiguator":[9829756256784750773,12914174919603154743]},"crate_root":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src","external_crates":[{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[2951836381390344939,16649128255697415692]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[11710271729537087300,7936810236211621860]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[221620535861096092,14052674651022364528]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6754765288211962248,11319126938093173531]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12146955935630897969,9411134559866261862]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[14833668363639865695,5655522694650611187]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4272166054306925428,11429919485785531186]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12683507629027033058,3032465482526171902]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[3621516987667804763,14118985286121416357]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[3114763798488812350,3771385689256703239]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[12308387851717752688,1271721453298801945]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[41357415245366713,267475365531445088]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[14877867959531453948,6948897495248942720]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","num":14,"id":{"name":"prost","disambiguator":[6803095622977065727,16075194922368852135]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","num":15,"id":{"name":"prost_derive","disambiguator":[2237986993125276680,18404888850274619507]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","num":16,"id":{"name":"bytes","disambiguator":[992690529738327013,16343194271114906222]}}],"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\lib.rs","byte_start":0,"byte_end":5271,"line_start":1,"line_end":153,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\lib.rs","byte_start":0,"byte_end":5271,"line_start":1,"line_end":153,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":34},{"krate":0,"index":53},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":36},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":55},{"krate":0,"index":159},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":68},{"krate":0,"index":93},{"krate":0,"index":95},{"krate":0,"index":151},{"krate":0,"index":161},{"krate":0,"index":220},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":172},{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":214},{"krate":0,"index":23},{"krate":0,"index":317},{"krate":0,"index":336},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":319},{"krate":0,"index":328},{"krate":0,"index":330},{"krate":0,"index":338},{"krate":0,"index":488},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":349},{"krate":0,"index":377},{"krate":0,"index":379},{"krate":0,"index":472},{"krate":0,"index":24},{"krate":0,"index":605},{"krate":0,"index":639},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":608},{"krate":0,"index":620},{"krate":0,"index":622},{"krate":0,"index":633},{"krate":0,"index":641},{"krate":0,"index":690},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":647},{"krate":0,"index":662},{"krate":0,"index":664},{"krate":0,"index":684},{"krate":0,"index":25},{"krate":0,"index":738},{"krate":0,"index":785},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":742},{"krate":0,"index":756},{"krate":0,"index":758},{"krate":0,"index":778},{"krate":0,"index":787},{"krate":0,"index":823},{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":791},{"krate":0,"index":804},{"krate":0,"index":806},{"krate":0,"index":817},{"krate":0,"index":825},{"krate":0,"index":911},{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":832},{"krate":0,"index":852},{"krate":0,"index":854},{"krate":0,"index":901},{"krate":0,"index":913},{"krate":0,"index":1199},{"krate":0,"index":1195},{"krate":0,"index":1196},{"krate":0,"index":935},{"krate":0,"index":984},{"krate":0,"index":986},{"krate":0,"index":1173},{"krate":0,"index":26},{"krate":0,"index":1236},{"krate":0,"index":1308},{"krate":0,"index":1304},{"krate":0,"index":1305},{"krate":0,"index":1242},{"krate":0,"index":1259},{"krate":0,"index":1261},{"krate":0,"index":1299},{"krate":0,"index":1310},{"krate":0,"index":1420},{"krate":0,"index":1416},{"krate":0,"index":1417},{"krate":0,"index":1318},{"krate":0,"index":1339},{"krate":0,"index":1341},{"krate":0,"index":1407},{"krate":0,"index":27},{"krate":0,"index":1492},{"krate":0,"index":1511},{"krate":0,"index":1507},{"krate":0,"index":1508},{"krate":0,"index":1494},{"krate":0,"index":1503},{"krate":0,"index":1505},{"krate":0,"index":1513},{"krate":0,"index":1559},{"krate":0,"index":1555},{"krate":0,"index":1556},{"krate":0,"index":1517},{"krate":0,"index":1530},{"krate":0,"index":1532},{"krate":0,"index":1552},{"krate":0,"index":1561},{"krate":0,"index":1594},{"krate":0,"index":1590},{"krate":0,"index":1591},{"krate":0,"index":1564},{"krate":0,"index":1575},{"krate":0,"index":1577},{"krate":0,"index":1588},{"krate":0,"index":1596},{"krate":0,"index":1629},{"krate":0,"index":1625},{"krate":0,"index":1626},{"krate":0,"index":1599},{"krate":0,"index":1610},{"krate":0,"index":1612},{"krate":0,"index":1623},{"krate":0,"index":1631},{"krate":0,"index":1683},{"krate":0,"index":1679},{"krate":0,"index":1680},{"krate":0,"index":1635},{"krate":0,"index":1648},{"krate":0,"index":1650},{"krate":0,"index":1675},{"krate":0,"index":28},{"krate":0,"index":1720},{"krate":0,"index":1818},{"krate":0,"index":1814},{"krate":0,"index":1815},{"krate":0,"index":1728},{"krate":0,"index":1749},{"krate":0,"index":1751},{"krate":0,"index":1807},{"krate":0,"index":29},{"krate":0,"index":1847},{"krate":0,"index":1866},{"krate":0,"index":1862},{"krate":0,"index":1863},{"krate":0,"index":1849},{"krate":0,"index":1858},{"krate":0,"index":1860},{"krate":0,"index":30},{"krate":0,"index":1947},{"krate":0,"index":1966},{"krate":0,"index":1962},{"krate":0,"index":1963},{"krate":0,"index":1949},{"krate":0,"index":1958},{"krate":0,"index":1960},{"krate":0,"index":31},{"krate":0,"index":2038},{"krate":0,"index":2063},{"krate":0,"index":2059},{"krate":0,"index":2060},{"krate":0,"index":2041},{"krate":0,"index":2051},{"krate":0,"index":2053},{"krate":0,"index":2065},{"krate":0,"index":2086},{"krate":0,"index":2082},{"krate":0,"index":2083},{"krate":0,"index":2067},{"krate":0,"index":2076},{"krate":0,"index":2078},{"krate":0,"index":2088},{"krate":0,"index":2139},{"krate":0,"index":2135},{"krate":0,"index":2136},{"krate":0,"index":2095},{"krate":0,"index":2110},{"krate":0,"index":2112},{"krate":0,"index":2132},{"krate":0,"index":2141},{"krate":0,"index":2211},{"krate":0,"index":2207},{"krate":0,"index":2208},{"krate":0,"index":2152},{"krate":0,"index":2170},{"krate":0,"index":2172},{"krate":0,"index":2202},{"krate":0,"index":32},{"krate":0,"index":2334},{"krate":0,"index":2374},{"krate":0,"index":2370},{"krate":0,"index":2371},{"krate":0,"index":2340},{"krate":0,"index":2354},{"krate":0,"index":2356},{"krate":0,"index":2367},{"krate":0,"index":2376},{"krate":0,"index":2403},{"krate":0,"index":2399},{"krate":0,"index":2400},{"krate":0,"index":2380},{"krate":0,"index":2391},{"krate":0,"index":2393},{"krate":0,"index":2405},{"krate":0,"index":2429},{"krate":0,"index":2425},{"krate":0,"index":2426},{"krate":0,"index":2408},{"krate":0,"index":2419},{"krate":0,"index":2421},{"krate":0,"index":2431},{"krate":0,"index":2461},{"krate":0,"index":2460},{"krate":0,"index":2458},{"krate":0,"index":2455},{"krate":0,"index":2456},{"krate":0,"index":2452},{"krate":0,"index":2453},{"krate":0,"index":2449},{"krate":0,"index":2447},{"krate":0,"index":2445},{"krate":0,"index":2438},{"krate":0,"index":2441},{"krate":0,"index":2443},{"krate":0,"index":2463},{"krate":0,"index":2509},{"krate":0,"index":2505},{"krate":0,"index":2506},{"krate":0,"index":2471},{"krate":0,"index":2487},{"krate":0,"index":2489},{"krate":0,"index":2502},{"krate":0,"index":2511},{"krate":0,"index":2562},{"krate":0,"index":2558},{"krate":0,"index":2559},{"krate":0,"index":2519},{"krate":0,"index":2534},{"krate":0,"index":2536},{"krate":0,"index":2555},{"krate":0,"index":2564},{"krate":0,"index":2589},{"krate":0,"index":2585},{"krate":0,"index":2586},{"krate":0,"index":2567},{"krate":0,"index":2577},{"krate":0,"index":2579},{"krate":0,"index":2591},{"krate":0,"index":2616},{"krate":0,"index":2612},{"krate":0,"index":2613},{"krate":0,"index":2594},{"krate":0,"index":2604},{"krate":0,"index":2606},{"krate":0,"index":2618},{"krate":0,"index":2646},{"krate":0,"index":2642},{"krate":0,"index":2643},{"krate":0,"index":2620},{"krate":0,"index":2629},{"krate":0,"index":2631},{"krate":0,"index":2648},{"krate":0,"index":2680},{"krate":0,"index":2676},{"krate":0,"index":2677},{"krate":0,"index":2650},{"krate":0,"index":2659},{"krate":0,"index":2661},{"krate":0,"index":2682},{"krate":0,"index":2701},{"krate":0,"index":2697},{"krate":0,"index":2698},{"krate":0,"index":2684},{"krate":0,"index":2693},{"krate":0,"index":2695},{"krate":0,"index":33},{"krate":0,"index":2755},{"krate":0,"index":2774},{"krate":0,"index":2770},{"krate":0,"index":2771},{"krate":0,"index":2757},{"krate":0,"index":2766},{"krate":0,"index":2768},{"krate":0,"index":2776},{"krate":0,"index":2803},{"krate":0,"index":2802},{"krate":0,"index":2800},{"krate":0,"index":2797},{"krate":0,"index":2798},{"krate":0,"index":2794},{"krate":0,"index":2795},{"krate":0,"index":2791},{"krate":0,"index":2789},{"krate":0,"index":2787},{"krate":0,"index":2780},{"krate":0,"index":2783},{"krate":0,"index":2785},{"krate":0,"index":2805},{"krate":0,"index":2830},{"krate":0,"index":2826},{"krate":0,"index":2827},{"krate":0,"index":2808},{"krate":0,"index":2818},{"krate":0,"index":2820},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":11},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":20}],"decl_id":null,"docs":" Protocol Buffers well-known types.","sig":null,"attributes":[{"value":"! Protocol Buffers well-known types.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\lib.rs","byte_start":62,"byte_end":100,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\lib.rs","byte_start":101,"byte_end":104,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! Note that the documentation for the types defined in this crate are generated from the Protobuf","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\lib.rs","byte_start":105,"byte_end":204,"line_start":5,"line_end":5,"column_start":1,"column_end":100}},{"value":"! definitions, so code examples are not in Rust.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\lib.rs","byte_start":205,"byte_end":255,"line_start":6,"line_end":6,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\lib.rs","byte_start":256,"byte_end":259,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! See the [Protobuf reference][1] for more information about well-known types.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\lib.rs","byte_start":260,"byte_end":340,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\lib.rs","byte_start":341,"byte_end":344,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! [1]: https://developers.google.com/protocol-buffers/docs/reference/google.protobuf","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\lib.rs","byte_start":345,"byte_end":431,"line_start":10,"line_end":10,"column_start":1,"column_end":87}}]},{"kind":"Struct","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6389877,"byte_end":6389894,"line_start":4,"line_end":4,"column_start":12,"column_end":29},"name":"FileDescriptorSet","qualname":"::FileDescriptorSet","value":"FileDescriptorSet { file }","parent":null,"children":[{"krate":0,"index":35}],"decl_id":null,"docs":" The protocol compiler can output a FileDescriptorSet containing the .proto\n files it parses.\n","sig":null,"attributes":[{"value":"/ The protocol compiler can output a FileDescriptorSet containing the .proto","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6389720,"byte_end":6389798,"line_start":1,"line_end":1,"column_start":1,"column_end":79}},{"value":"/ files it parses.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6389799,"byte_end":6389819,"line_start":2,"line_end":2,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":35},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6389946,"byte_end":6389950,"line_start":6,"line_end":6,"column_start":9,"column_end":13},"name":"file","qualname":"::FileDescriptorSet::file","value":"std::vec::Vec<FileDescriptorProto>","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"1\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6389901,"byte_end":6389937,"line_start":5,"line_end":5,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6390087,"byte_end":6390106,"line_start":10,"line_end":10,"column_start":12,"column_end":31},"name":"FileDescriptorProto","qualname":"::FileDescriptorProto","value":"FileDescriptorProto { name, package, dependency, public_dependency, weak_dependency, message_type, enum_type, service, extension, options, source_code_info, syntax }","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67}],"decl_id":null,"docs":" Describes a complete .proto file.\n","sig":null,"attributes":[{"value":"/ Describes a complete .proto file.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6389992,"byte_end":6390029,"line_start":8,"line_end":8,"column_start":1,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":56},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6390208,"byte_end":6390212,"line_start":13,"line_end":13,"column_start":9,"column_end":13},"name":"name","qualname":"::FileDescriptorProto::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":55},"children":[],"decl_id":null,"docs":" file name, relative to root of source tree\n","sig":null,"attributes":[{"value":"/ file name, relative to root of source tree","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6390113,"byte_end":6390159,"line_start":11,"line_end":11,"column_start":5,"column_end":51}},{"value":"prost(string, optional, tag = \"1\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6390164,"byte_end":6390199,"line_start":12,"line_end":12,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6390342,"byte_end":6390349,"line_start":16,"line_end":16,"column_start":9,"column_end":16},"name":"package","qualname":"::FileDescriptorProto::package","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":55},"children":[],"decl_id":null,"docs":" e.g. \"foo\", \"foo.bar\", etc.\n","sig":null,"attributes":[{"value":"/ e.g. \"foo\", \"foo.bar\", etc.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6390262,"byte_end":6390293,"line_start":14,"line_end":14,"column_start":5,"column_end":36}},{"value":"prost(string, optional, tag = \"2\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6390298,"byte_end":6390333,"line_start":15,"line_end":15,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6390489,"byte_end":6390499,"line_start":19,"line_end":19,"column_start":9,"column_end":19},"name":"dependency","qualname":"::FileDescriptorProto::dependency","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":55},"children":[],"decl_id":null,"docs":" Names of files imported by this file.\n","sig":null,"attributes":[{"value":"/ Names of files imported by this file.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6390399,"byte_end":6390440,"line_start":17,"line_end":17,"column_start":5,"column_end":46}},{"value":"prost(string, repeated, tag = \"3\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6390445,"byte_end":6390480,"line_start":18,"line_end":18,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":59},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6390678,"byte_end":6390695,"line_start":22,"line_end":22,"column_start":9,"column_end":26},"name":"public_dependency","qualname":"::FileDescriptorProto::public_dependency","value":"std::vec::Vec<i32>","parent":{"krate":0,"index":55},"children":[],"decl_id":null,"docs":" Indexes of the public imported files in the dependency list above.\n","sig":null,"attributes":[{"value":"/ Indexes of the public imported files in the dependency list above.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6390543,"byte_end":6390613,"line_start":20,"line_end":20,"column_start":5,"column_end":75}},{"value":"prost(int32, repeated, packed = \"false\", tag = \"10\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6390618,"byte_end":6390669,"line_start":21,"line_end":21,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6390906,"byte_end":6390921,"line_start":26,"line_end":26,"column_start":9,"column_end":24},"name":"weak_dependency","qualname":"::FileDescriptorProto::weak_dependency","value":"std::vec::Vec<i32>","parent":{"krate":0,"index":55},"children":[],"decl_id":null,"docs":" Indexes of the weak imported files in the dependency list.\n For Google-internal migration only. Do not use.\n","sig":null,"attributes":[{"value":"/ Indexes of the weak imported files in the dependency list.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6390723,"byte_end":6390785,"line_start":23,"line_end":23,"column_start":5,"column_end":67}},{"value":"/ For Google-internal migration only. Do not use.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6390790,"byte_end":6390841,"line_start":24,"line_end":24,"column_start":5,"column_end":56}},{"value":"prost(int32, repeated, packed = \"false\", tag = \"11\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6390846,"byte_end":6390897,"line_start":25,"line_end":25,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":61},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6391042,"byte_end":6391054,"line_start":29,"line_end":29,"column_start":9,"column_end":21},"name":"message_type","qualname":"::FileDescriptorProto::message_type","value":"std::vec::Vec<DescriptorProto>","parent":{"krate":0,"index":55},"children":[],"decl_id":null,"docs":" All top-level definitions in this file.\n","sig":null,"attributes":[{"value":"/ All top-level definitions in this file.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6390949,"byte_end":6390992,"line_start":27,"line_end":27,"column_start":5,"column_end":48}},{"value":"prost(message, repeated, tag = \"4\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6390997,"byte_end":6391033,"line_start":28,"line_end":28,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6391139,"byte_end":6391148,"line_start":31,"line_end":31,"column_start":9,"column_end":18},"name":"enum_type","qualname":"::FileDescriptorProto::enum_type","value":"std::vec::Vec<EnumDescriptorProto>","parent":{"krate":0,"index":55},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"5\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6391094,"byte_end":6391130,"line_start":30,"line_end":30,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":63},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6391237,"byte_end":6391244,"line_start":33,"line_end":33,"column_start":9,"column_end":16},"name":"service","qualname":"::FileDescriptorProto::service","value":"std::vec::Vec<ServiceDescriptorProto>","parent":{"krate":0,"index":55},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"6\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6391192,"byte_end":6391228,"line_start":32,"line_end":32,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":64},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6391336,"byte_end":6391345,"line_start":35,"line_end":35,"column_start":9,"column_end":18},"name":"extension","qualname":"::FileDescriptorProto::extension","value":"std::vec::Vec<FieldDescriptorProto>","parent":{"krate":0,"index":55},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"7\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6391291,"byte_end":6391327,"line_start":34,"line_end":34,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":65},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6391435,"byte_end":6391442,"line_start":37,"line_end":37,"column_start":9,"column_end":16},"name":"options","qualname":"::FileDescriptorProto::options","value":"std::option::Option<FileOptions>","parent":{"krate":0,"index":55},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, optional, tag = \"8\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6391390,"byte_end":6391426,"line_start":36,"line_end":36,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":66},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6391787,"byte_end":6391803,"line_start":43,"line_end":43,"column_start":9,"column_end":25},"name":"source_code_info","qualname":"::FileDescriptorProto::source_code_info","value":"std::option::Option<SourceCodeInfo>","parent":{"krate":0,"index":55},"children":[],"decl_id":null,"docs":" This field contains optional information about the original source code.\n You may safely remove this entire field without harming runtime\n functionality of the descriptors -- the information is needed only by\n development tools.\n","sig":null,"attributes":[{"value":"/ This field contains optional information about the original source code.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6391484,"byte_end":6391560,"line_start":38,"line_end":38,"column_start":5,"column_end":81}},{"value":"/ You may safely remove this entire field without harming runtime","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6391565,"byte_end":6391632,"line_start":39,"line_end":39,"column_start":5,"column_end":72}},{"value":"/ functionality of the descriptors -- the information is needed only by","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6391637,"byte_end":6391710,"line_start":40,"line_end":40,"column_start":5,"column_end":78}},{"value":"/ development tools.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6391715,"byte_end":6391737,"line_start":41,"line_end":41,"column_start":5,"column_end":27}},{"value":"prost(message, optional, tag = \"9\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6391742,"byte_end":6391778,"line_start":42,"line_end":42,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6391987,"byte_end":6391993,"line_start":47,"line_end":47,"column_start":9,"column_end":15},"name":"syntax","qualname":"::FileDescriptorProto::syntax","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":55},"children":[],"decl_id":null,"docs":" The syntax of the proto file.\n The supported values are \"proto2\" and \"proto3\".\n","sig":null,"attributes":[{"value":"/ The syntax of the proto file.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6391848,"byte_end":6391881,"line_start":44,"line_end":44,"column_start":5,"column_end":38}},{"value":"/ The supported values are \"proto2\" and \"proto3\".","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6391886,"byte_end":6391937,"line_start":45,"line_end":45,"column_start":5,"column_end":56}},{"value":"prost(string, optional, tag = \"12\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6391942,"byte_end":6391978,"line_start":46,"line_end":46,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6390208,"byte_end":6390212,"line_start":13,"line_end":13,"column_start":9,"column_end":13},"name":"name","qualname":"<FileDescriptorProto>::name","value":"pub fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `name`, or the default value if `name` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6390342,"byte_end":6390349,"line_start":16,"line_end":16,"column_start":9,"column_end":16},"name":"package","qualname":"<FileDescriptorProto>::package","value":"pub fn package(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `package`, or the default value if `package` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6391987,"byte_end":6391993,"line_start":47,"line_end":47,"column_start":9,"column_end":15},"name":"syntax","qualname":"<FileDescriptorProto>::syntax","value":"pub fn syntax(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `syntax`, or the default value if `syntax` is unset.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":161},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6392128,"byte_end":6392143,"line_start":51,"line_end":51,"column_start":12,"column_end":27},"name":"DescriptorProto","qualname":"::DescriptorProto","value":"DescriptorProto { name, field, extension, nested_type, enum_type, extension_range, oneof_decl, options, reserved_range, reserved_name }","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171}],"decl_id":null,"docs":" Describes a message type.\n","sig":null,"attributes":[{"value":"/ Describes a message type.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6392041,"byte_end":6392070,"line_start":49,"line_end":49,"column_start":1,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6392194,"byte_end":6392198,"line_start":53,"line_end":53,"column_start":9,"column_end":13},"name":"name","qualname":"::DescriptorProto::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":161},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(string, optional, tag = \"1\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6392150,"byte_end":6392185,"line_start":52,"line_end":52,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6392293,"byte_end":6392298,"line_start":55,"line_end":55,"column_start":9,"column_end":14},"name":"field","qualname":"::DescriptorProto::field","value":"std::vec::Vec<FieldDescriptorProto>","parent":{"krate":0,"index":161},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"2\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6392248,"byte_end":6392284,"line_start":54,"line_end":54,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6392388,"byte_end":6392397,"line_start":57,"line_end":57,"column_start":9,"column_end":18},"name":"extension","qualname":"::DescriptorProto::extension","value":"std::vec::Vec<FieldDescriptorProto>","parent":{"krate":0,"index":161},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"6\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6392343,"byte_end":6392379,"line_start":56,"line_end":56,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":165},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6392487,"byte_end":6392498,"line_start":59,"line_end":59,"column_start":9,"column_end":20},"name":"nested_type","qualname":"::DescriptorProto::nested_type","value":"std::vec::Vec<DescriptorProto>","parent":{"krate":0,"index":161},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"3\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6392442,"byte_end":6392478,"line_start":58,"line_end":58,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":166},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6392583,"byte_end":6392592,"line_start":61,"line_end":61,"column_start":9,"column_end":18},"name":"enum_type","qualname":"::DescriptorProto::enum_type","value":"std::vec::Vec<EnumDescriptorProto>","parent":{"krate":0,"index":161},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"4\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6392538,"byte_end":6392574,"line_start":60,"line_end":60,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6392681,"byte_end":6392696,"line_start":63,"line_end":63,"column_start":9,"column_end":24},"name":"extension_range","qualname":"::DescriptorProto::extension_range","value":"std::vec::Vec<descriptor_proto::ExtensionRange>","parent":{"krate":0,"index":161},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"5\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6392636,"byte_end":6392672,"line_start":62,"line_end":62,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":168},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6392798,"byte_end":6392808,"line_start":65,"line_end":65,"column_start":9,"column_end":19},"name":"oneof_decl","qualname":"::DescriptorProto::oneof_decl","value":"std::vec::Vec<OneofDescriptorProto>","parent":{"krate":0,"index":161},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"8\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6392753,"byte_end":6392789,"line_start":64,"line_end":64,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6392898,"byte_end":6392905,"line_start":67,"line_end":67,"column_start":9,"column_end":16},"name":"options","qualname":"::DescriptorProto::options","value":"std::option::Option<MessageOptions>","parent":{"krate":0,"index":161},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, optional, tag = \"7\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6392853,"byte_end":6392889,"line_start":66,"line_end":66,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6392995,"byte_end":6393009,"line_start":69,"line_end":69,"column_start":9,"column_end":23},"name":"reserved_range","qualname":"::DescriptorProto::reserved_range","value":"std::vec::Vec<descriptor_proto::ReservedRange>","parent":{"krate":0,"index":161},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"9\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6392950,"byte_end":6392986,"line_start":68,"line_end":68,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6393241,"byte_end":6393254,"line_start":73,"line_end":73,"column_start":9,"column_end":22},"name":"reserved_name","qualname":"::DescriptorProto::reserved_name","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":161},"children":[],"decl_id":null,"docs":" Reserved field names, which may not be used by fields in the same message.\n A given name may only be reserved once.\n","sig":null,"attributes":[{"value":"/ Reserved field names, which may not be used by fields in the same message.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6393065,"byte_end":6393143,"line_start":70,"line_end":70,"column_start":5,"column_end":83}},{"value":"/ A given name may only be reserved once.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6393148,"byte_end":6393191,"line_start":71,"line_end":71,"column_start":5,"column_end":48}},{"value":"prost(string, repeated, tag = \"10\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6393196,"byte_end":6393232,"line_start":72,"line_end":72,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6392194,"byte_end":6392198,"line_start":53,"line_end":53,"column_start":9,"column_end":13},"name":"name","qualname":"<DescriptorProto>::name","value":"pub fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `name`, or the default value if `name` is unset.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":23},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6393304,"byte_end":6393320,"line_start":75,"line_end":75,"column_start":9,"column_end":25},"name":"descriptor_proto","qualname":"::descriptor_proto","value":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":269},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":226},{"krate":0,"index":240},{"krate":0,"index":242},{"krate":0,"index":262},{"krate":0,"index":271},{"krate":0,"index":315},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":274},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":308}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":222},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6393388,"byte_end":6393402,"line_start":77,"line_end":77,"column_start":16,"column_end":30},"name":"ExtensionRange","qualname":"::descriptor_proto::ExtensionRange","value":"ExtensionRange { start, end, options }","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":223},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6393483,"byte_end":6393488,"line_start":80,"line_end":80,"column_start":13,"column_end":18},"name":"start","qualname":"::descriptor_proto::ExtensionRange::start","value":"std::option::Option<i32>","parent":{"krate":0,"index":222},"children":[],"decl_id":null,"docs":" Inclusive.\n","sig":null,"attributes":[{"value":"/ Inclusive.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6393413,"byte_end":6393427,"line_start":78,"line_end":78,"column_start":9,"column_end":23}},{"value":"prost(int32, optional, tag = \"1\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6393436,"byte_end":6393470,"line_start":79,"line_end":79,"column_start":9,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":224},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6393596,"byte_end":6393599,"line_start":83,"line_end":83,"column_start":13,"column_end":16},"name":"end","qualname":"::descriptor_proto::ExtensionRange::end","value":"std::option::Option<i32>","parent":{"krate":0,"index":222},"children":[],"decl_id":null,"docs":" Exclusive.\n","sig":null,"attributes":[{"value":"/ Exclusive.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6393526,"byte_end":6393540,"line_start":81,"line_end":81,"column_start":9,"column_end":23}},{"value":"prost(int32, optional, tag = \"2\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6393549,"byte_end":6393583,"line_start":82,"line_end":82,"column_start":9,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":225},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6393686,"byte_end":6393693,"line_start":85,"line_end":85,"column_start":13,"column_end":20},"name":"options","qualname":"::descriptor_proto::ExtensionRange::options","value":"std::option::Option<ExtensionRangeOptions>","parent":{"krate":0,"index":222},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, optional, tag = \"3\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6393637,"byte_end":6393673,"line_start":84,"line_end":84,"column_start":9,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6393483,"byte_end":6393488,"line_start":80,"line_end":80,"column_start":13,"column_end":18},"name":"start","qualname":"<ExtensionRange>::start","value":"pub fn start(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `start`, or the default value if `start` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6393596,"byte_end":6393599,"line_start":83,"line_end":83,"column_start":13,"column_end":16},"name":"end","qualname":"<ExtensionRange>::end","value":"pub fn end(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `end`, or the default value if `end` is unset.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":271},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6393995,"byte_end":6394008,"line_start":91,"line_end":91,"column_start":16,"column_end":29},"name":"ReservedRange","qualname":"::descriptor_proto::ReservedRange","value":"ReservedRange { start, end }","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":273}],"decl_id":null,"docs":" Range of reserved tag numbers. Reserved tag numbers may not be used by\n fields or extension ranges in the same message. Reserved ranges may\n not overlap.\n","sig":null,"attributes":[{"value":"/ Range of reserved tag numbers. Reserved tag numbers may not be used by","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6393758,"byte_end":6393832,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ fields or extension ranges in the same message. Reserved ranges may","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6393837,"byte_end":6393908,"line_start":88,"line_end":88,"column_start":5,"column_end":76}},{"value":"/ not overlap.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6393913,"byte_end":6393929,"line_start":89,"line_end":89,"column_start":5,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":272},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6394089,"byte_end":6394094,"line_start":94,"line_end":94,"column_start":13,"column_end":18},"name":"start","qualname":"::descriptor_proto::ReservedRange::start","value":"std::option::Option<i32>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Inclusive.\n","sig":null,"attributes":[{"value":"/ Inclusive.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6394019,"byte_end":6394033,"line_start":92,"line_end":92,"column_start":9,"column_end":23}},{"value":"prost(int32, optional, tag = \"1\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6394042,"byte_end":6394076,"line_start":93,"line_end":93,"column_start":9,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":273},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6394202,"byte_end":6394205,"line_start":97,"line_end":97,"column_start":13,"column_end":16},"name":"end","qualname":"::descriptor_proto::ReservedRange::end","value":"std::option::Option<i32>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Exclusive.\n","sig":null,"attributes":[{"value":"/ Exclusive.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6394132,"byte_end":6394146,"line_start":95,"line_end":95,"column_start":9,"column_end":23}},{"value":"prost(int32, optional, tag = \"2\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6394155,"byte_end":6394189,"line_start":96,"line_end":96,"column_start":9,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6394089,"byte_end":6394094,"line_start":94,"line_end":94,"column_start":13,"column_end":18},"name":"start","qualname":"<ReservedRange>::start","value":"pub fn start(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `start`, or the default value if `start` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6394202,"byte_end":6394205,"line_start":97,"line_end":97,"column_start":13,"column_end":16},"name":"end","qualname":"<ReservedRange>::end","value":"pub fn end(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `end`, or the default value if `end` is unset.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":317},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6394300,"byte_end":6394321,"line_start":101,"line_end":101,"column_start":12,"column_end":33},"name":"ExtensionRangeOptions","qualname":"::ExtensionRangeOptions","value":"ExtensionRangeOptions { uninterpreted_option }","parent":null,"children":[{"krate":0,"index":318}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":318},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6394447,"byte_end":6394467,"line_start":104,"line_end":104,"column_start":9,"column_end":29},"name":"uninterpreted_option","qualname":"::ExtensionRangeOptions::uninterpreted_option","value":"std::vec::Vec<UninterpretedOption>","parent":{"krate":0,"index":317},"children":[],"decl_id":null,"docs":" The parser stores options it doesn't recognize here. See above.\n","sig":null,"attributes":[{"value":"/ The parser stores options it doesn't recognize here. See above.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6394328,"byte_end":6394395,"line_start":102,"line_end":102,"column_start":5,"column_end":72}},{"value":"prost(message, repeated, tag = \"999\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6394400,"byte_end":6394438,"line_start":103,"line_end":103,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":338},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6394606,"byte_end":6394626,"line_start":108,"line_end":108,"column_start":12,"column_end":32},"name":"FieldDescriptorProto","qualname":"::FieldDescriptorProto","value":"FieldDescriptorProto { name, number, label, r#type, type_name, extendee, default_value, oneof_index, json_name, options }","parent":null,"children":[{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348}],"decl_id":null,"docs":" Describes a field within a message.\n","sig":null,"attributes":[{"value":"/ Describes a field within a message.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6394509,"byte_end":6394548,"line_start":106,"line_end":106,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":339},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6394677,"byte_end":6394681,"line_start":110,"line_end":110,"column_start":9,"column_end":13},"name":"name","qualname":"::FieldDescriptorProto::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(string, optional, tag = \"1\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6394633,"byte_end":6394668,"line_start":109,"line_end":109,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":340},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6394774,"byte_end":6394780,"line_start":112,"line_end":112,"column_start":9,"column_end":15},"name":"number","qualname":"::FieldDescriptorProto::number","value":"std::option::Option<i32>","parent":{"krate":0,"index":338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(int32, optional, tag = \"3\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6394731,"byte_end":6394765,"line_start":111,"line_end":111,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":341},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6394895,"byte_end":6394900,"line_start":114,"line_end":114,"column_start":9,"column_end":14},"name":"label","qualname":"::FieldDescriptorProto::label","value":"std::option::Option<i32>","parent":{"krate":0,"index":338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(enumeration = \"field_descriptor_proto::Label\", optional, tag = \"4\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6394814,"byte_end":6394886,"line_start":113,"line_end":113,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":342},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6395169,"byte_end":6395175,"line_start":118,"line_end":118,"column_start":9,"column_end":15},"name":"r#type","qualname":"::FieldDescriptorProto::r#type","value":"std::option::Option<i32>","parent":{"krate":0,"index":338},"children":[],"decl_id":null,"docs":" If type_name is set, this need not be set.  If both this and type_name\n are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP.\n","sig":null,"attributes":[{"value":"/ If type_name is set, this need not be set.  If both this and type_name","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6394934,"byte_end":6395008,"line_start":115,"line_end":115,"column_start":5,"column_end":79}},{"value":"/ are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6395013,"byte_end":6395084,"line_start":116,"line_end":116,"column_start":5,"column_end":76}},{"value":"prost(enumeration = \"field_descriptor_proto::Type\", optional, tag = \"5\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6395089,"byte_end":6395160,"line_start":117,"line_end":117,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":343},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6395584,"byte_end":6395593,"line_start":125,"line_end":125,"column_start":9,"column_end":18},"name":"type_name","qualname":"::FieldDescriptorProto::type_name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":338},"children":[],"decl_id":null,"docs":" For message and enum types, this is the name of the type.  If the name\n starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping\n rules are used to find the type (i.e. first the nested types within this\n message are searched, then within the parent, on up to the root\n namespace).\n","sig":null,"attributes":[{"value":"/ For message and enum types, this is the name of the type.  If the name","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6395209,"byte_end":6395283,"line_start":119,"line_end":119,"column_start":5,"column_end":79}},{"value":"/ starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6395288,"byte_end":6395362,"line_start":120,"line_end":120,"column_start":5,"column_end":79}},{"value":"/ rules are used to find the type (i.e. first the nested types within this","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6395367,"byte_end":6395443,"line_start":121,"line_end":121,"column_start":5,"column_end":81}},{"value":"/ message are searched, then within the parent, on up to the root","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6395448,"byte_end":6395515,"line_start":122,"line_end":122,"column_start":5,"column_end":72}},{"value":"/ namespace).","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6395520,"byte_end":6395535,"line_start":123,"line_end":123,"column_start":5,"column_end":20}},{"value":"prost(string, optional, tag = \"6\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6395540,"byte_end":6395575,"line_start":124,"line_end":124,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":344},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6395813,"byte_end":6395821,"line_start":129,"line_end":129,"column_start":9,"column_end":17},"name":"extendee","qualname":"::FieldDescriptorProto::extendee","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":338},"children":[],"decl_id":null,"docs":" For extensions, this is the name of the type being extended.  It is\n resolved in the same manner as type_name.\n","sig":null,"attributes":[{"value":"/ For extensions, this is the name of the type being extended.  It is","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6395643,"byte_end":6395714,"line_start":126,"line_end":126,"column_start":5,"column_end":76}},{"value":"/ resolved in the same manner as type_name.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6395719,"byte_end":6395764,"line_start":127,"line_end":127,"column_start":5,"column_end":50}},{"value":"prost(string, optional, tag = \"2\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6395769,"byte_end":6395804,"line_start":128,"line_end":128,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":345},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6396240,"byte_end":6396253,"line_start":136,"line_end":136,"column_start":9,"column_end":22},"name":"default_value","qualname":"::FieldDescriptorProto::default_value","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":338},"children":[],"decl_id":null,"docs":" For numeric types, contains the original text representation of the value.\n For booleans, \"true\" or \"false\".\n For strings, contains the default text contents (not escaped in any way).\n For bytes, contains the C escaped value.  All bytes >= 128 are escaped.\n TODO(kenton):  Base-64 encode?\n","sig":null,"attributes":[{"value":"/ For numeric types, contains the original text representation of the value.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6395871,"byte_end":6395949,"line_start":130,"line_end":130,"column_start":5,"column_end":83}},{"value":"/ For booleans, \"true\" or \"false\".","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6395954,"byte_end":6395990,"line_start":131,"line_end":131,"column_start":5,"column_end":41}},{"value":"/ For strings, contains the default text contents (not escaped in any way).","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6395995,"byte_end":6396072,"line_start":132,"line_end":132,"column_start":5,"column_end":82}},{"value":"/ For bytes, contains the C escaped value.  All bytes >= 128 are escaped.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6396077,"byte_end":6396152,"line_start":133,"line_end":133,"column_start":5,"column_end":80}},{"value":"/ TODO(kenton):  Base-64 encode?","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6396157,"byte_end":6396191,"line_start":134,"line_end":134,"column_start":5,"column_end":39}},{"value":"prost(string, optional, tag = \"7\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6396196,"byte_end":6396231,"line_start":135,"line_end":135,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":346},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6396478,"byte_end":6396489,"line_start":140,"line_end":140,"column_start":9,"column_end":20},"name":"oneof_index","qualname":"::FieldDescriptorProto::oneof_index","value":"std::option::Option<i32>","parent":{"krate":0,"index":338},"children":[],"decl_id":null,"docs":" If set, gives the index of a oneof in the containing type's oneof_decl\n list.  This field is a member of that oneof.\n","sig":null,"attributes":[{"value":"/ If set, gives the index of a oneof in the containing type's oneof_decl","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6396303,"byte_end":6396377,"line_start":137,"line_end":137,"column_start":5,"column_end":79}},{"value":"/ list.  This field is a member of that oneof.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6396382,"byte_end":6396430,"line_start":138,"line_end":138,"column_start":5,"column_end":53}},{"value":"prost(int32, optional, tag = \"9\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6396435,"byte_end":6396469,"line_start":139,"line_end":139,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":347},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6396831,"byte_end":6396840,"line_start":146,"line_end":146,"column_start":9,"column_end":18},"name":"json_name","qualname":"::FieldDescriptorProto::json_name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":338},"children":[],"decl_id":null,"docs":" JSON name of this field. The value is set by protocol compiler. If the\n user has set a \"json_name\" option on this field, that option's value\n will be used. Otherwise, it's deduced from the field's name by converting\n it to camelCase.\n","sig":null,"attributes":[{"value":"/ JSON name of this field. The value is set by protocol compiler. If the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6396523,"byte_end":6396597,"line_start":141,"line_end":141,"column_start":5,"column_end":79}},{"value":"/ user has set a \"json_name\" option on this field, that option's value","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6396602,"byte_end":6396674,"line_start":142,"line_end":142,"column_start":5,"column_end":77}},{"value":"/ will be used. Otherwise, it's deduced from the field's name by converting","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6396679,"byte_end":6396756,"line_start":143,"line_end":143,"column_start":5,"column_end":82}},{"value":"/ it to camelCase.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6396761,"byte_end":6396781,"line_start":144,"line_end":144,"column_start":5,"column_end":25}},{"value":"prost(string, optional, tag = \"10\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6396786,"byte_end":6396822,"line_start":145,"line_end":145,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":348},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6396935,"byte_end":6396942,"line_start":148,"line_end":148,"column_start":9,"column_end":16},"name":"options","qualname":"::FieldDescriptorProto::options","value":"std::option::Option<FieldOptions>","parent":{"krate":0,"index":338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, optional, tag = \"8\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6396890,"byte_end":6396926,"line_start":147,"line_end":147,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6394677,"byte_end":6394681,"line_start":110,"line_end":110,"column_start":9,"column_end":13},"name":"name","qualname":"<FieldDescriptorProto>::name","value":"pub fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `name`, or the default value if `name` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6395813,"byte_end":6395821,"line_start":129,"line_end":129,"column_start":9,"column_end":17},"name":"extendee","qualname":"<FieldDescriptorProto>::extendee","value":"pub fn extendee(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `extendee`, or the default value if `extendee` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6394774,"byte_end":6394780,"line_start":112,"line_end":112,"column_start":9,"column_end":15},"name":"number","qualname":"<FieldDescriptorProto>::number","value":"pub fn number(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `number`, or the default value if `number` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6394895,"byte_end":6394900,"line_start":114,"line_end":114,"column_start":9,"column_end":14},"name":"label","qualname":"<FieldDescriptorProto>::label","value":"pub fn label(&Self) -> field_descriptor_proto::Label","parent":null,"children":[],"decl_id":null,"docs":"Returns the enum value of `label`, or the default if the field is unset or set to an invalid enum value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6395169,"byte_end":6395175,"line_start":118,"line_end":118,"column_start":9,"column_end":15},"name":"type","qualname":"<FieldDescriptorProto>::type","value":"pub fn r#type(&Self) -> field_descriptor_proto::Type","parent":null,"children":[],"decl_id":null,"docs":"Returns the enum value of `type`, or the default if the field is unset or set to an invalid enum value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6395584,"byte_end":6395593,"line_start":125,"line_end":125,"column_start":9,"column_end":18},"name":"type_name","qualname":"<FieldDescriptorProto>::type_name","value":"pub fn type_name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `type_name`, or the default value if `type_name` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6396240,"byte_end":6396253,"line_start":136,"line_end":136,"column_start":9,"column_end":22},"name":"default_value","qualname":"<FieldDescriptorProto>::default_value","value":"pub fn default_value(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `default_value`, or the default value if `default_value` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6396478,"byte_end":6396489,"line_start":140,"line_end":140,"column_start":9,"column_end":20},"name":"oneof_index","qualname":"<FieldDescriptorProto>::oneof_index","value":"pub fn oneof_index(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `oneof_index`, or the default value if `oneof_index` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6396831,"byte_end":6396840,"line_start":146,"line_end":146,"column_start":9,"column_end":18},"name":"json_name","qualname":"<FieldDescriptorProto>::json_name","value":"pub fn json_name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `json_name`, or the default value if `json_name` is unset.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":24},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6396991,"byte_end":6397013,"line_start":150,"line_end":150,"column_start":9,"column_end":31},"name":"field_descriptor_proto","qualname":"::field_descriptor_proto","value":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","parent":null,"children":[{"krate":0,"index":490},{"krate":0,"index":568},{"krate":0,"index":567},{"krate":0,"index":565},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":556},{"krate":0,"index":554},{"krate":0,"index":552},{"krate":0,"index":545},{"krate":0,"index":548},{"krate":0,"index":550},{"krate":0,"index":570},{"krate":0,"index":603},{"krate":0,"index":602},{"krate":0,"index":600},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":591},{"krate":0,"index":589},{"krate":0,"index":587},{"krate":0,"index":580},{"krate":0,"index":583},{"krate":0,"index":585}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":491},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6397244,"byte_end":6397250,"line_start":156,"line_end":156,"column_start":9,"column_end":15},"name":"Double","qualname":"::field_descriptor_proto::Type::Double","value":"Type::Double","parent":{"krate":0,"index":490},"children":[],"decl_id":null,"docs":" 0 is reserved for errors.\n Order is weird for historical reasons.\n","sig":null,"attributes":[{"value":"/ 0 is reserved for errors.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6397155,"byte_end":6397184,"line_start":154,"line_end":154,"column_start":9,"column_end":38}},{"value":"/ Order is weird for historical reasons.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6397193,"byte_end":6397235,"line_start":155,"line_end":155,"column_start":9,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":494},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6397264,"byte_end":6397269,"line_start":157,"line_end":157,"column_start":9,"column_end":14},"name":"Float","qualname":"::field_descriptor_proto::Type::Float","value":"Type::Float","parent":{"krate":0,"index":490},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":497},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6397408,"byte_end":6397413,"line_start":160,"line_end":160,"column_start":9,"column_end":14},"name":"Int64","qualname":"::field_descriptor_proto::Type::Int64","value":"Type::Int64","parent":{"krate":0,"index":490},"children":[],"decl_id":null,"docs":" Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if\n negative values are likely.\n","sig":null,"attributes":[{"value":"/ Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6397283,"byte_end":6397359,"line_start":158,"line_end":158,"column_start":9,"column_end":85}},{"value":"/ negative values are likely.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6397368,"byte_end":6397399,"line_start":159,"line_end":159,"column_start":9,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":500},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6397427,"byte_end":6397433,"line_start":161,"line_end":161,"column_start":9,"column_end":15},"name":"Uint64","qualname":"::field_descriptor_proto::Type::Uint64","value":"Type::Uint64","parent":{"krate":0,"index":490},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":503},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6397572,"byte_end":6397577,"line_start":164,"line_end":164,"column_start":9,"column_end":14},"name":"Int32","qualname":"::field_descriptor_proto::Type::Int32","value":"Type::Int32","parent":{"krate":0,"index":490},"children":[],"decl_id":null,"docs":" Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if\n negative values are likely.\n","sig":null,"attributes":[{"value":"/ Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6397447,"byte_end":6397523,"line_start":162,"line_end":162,"column_start":9,"column_end":85}},{"value":"/ negative values are likely.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6397532,"byte_end":6397563,"line_start":163,"line_end":163,"column_start":9,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":506},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6397591,"byte_end":6397598,"line_start":165,"line_end":165,"column_start":9,"column_end":16},"name":"Fixed64","qualname":"::field_descriptor_proto::Type::Fixed64","value":"Type::Fixed64","parent":{"krate":0,"index":490},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":509},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6397612,"byte_end":6397619,"line_start":166,"line_end":166,"column_start":9,"column_end":16},"name":"Fixed32","qualname":"::field_descriptor_proto::Type::Fixed32","value":"Type::Fixed32","parent":{"krate":0,"index":490},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":512},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6397633,"byte_end":6397637,"line_start":167,"line_end":167,"column_start":9,"column_end":13},"name":"Bool","qualname":"::field_descriptor_proto::Type::Bool","value":"Type::Bool","parent":{"krate":0,"index":490},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":515},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6397651,"byte_end":6397657,"line_start":168,"line_end":168,"column_start":9,"column_end":15},"name":"String","qualname":"::field_descriptor_proto::Type::String","value":"Type::String","parent":{"krate":0,"index":490},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":518},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6397924,"byte_end":6397929,"line_start":173,"line_end":173,"column_start":9,"column_end":14},"name":"Group","qualname":"::field_descriptor_proto::Type::Group","value":"Type::Group","parent":{"krate":0,"index":490},"children":[],"decl_id":null,"docs":" Tag-delimited aggregate.\n Group type is deprecated and not supported in proto3. However, Proto3\n implementations should still be able to parse the group wire format and\n treat group fields as unknown fields.\n","sig":null,"attributes":[{"value":"/ Tag-delimited aggregate.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6397671,"byte_end":6397699,"line_start":169,"line_end":169,"column_start":9,"column_end":37}},{"value":"/ Group type is deprecated and not supported in proto3. However, Proto3","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6397708,"byte_end":6397781,"line_start":170,"line_end":170,"column_start":9,"column_end":82}},{"value":"/ implementations should still be able to parse the group wire format and","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6397790,"byte_end":6397865,"line_start":171,"line_end":171,"column_start":9,"column_end":84}},{"value":"/ treat group fields as unknown fields.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6397874,"byte_end":6397915,"line_start":172,"line_end":172,"column_start":9,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":521},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6397984,"byte_end":6397991,"line_start":175,"line_end":175,"column_start":9,"column_end":16},"name":"Message","qualname":"::field_descriptor_proto::Type::Message","value":"Type::Message","parent":{"krate":0,"index":490},"children":[],"decl_id":null,"docs":" Length-delimited aggregate.\n","sig":null,"attributes":[{"value":"/ Length-delimited aggregate.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6397944,"byte_end":6397975,"line_start":174,"line_end":174,"column_start":9,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":524},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6398036,"byte_end":6398041,"line_start":177,"line_end":177,"column_start":9,"column_end":14},"name":"Bytes","qualname":"::field_descriptor_proto::Type::Bytes","value":"Type::Bytes","parent":{"krate":0,"index":490},"children":[],"decl_id":null,"docs":" New in version 2.\n","sig":null,"attributes":[{"value":"/ New in version 2.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6398006,"byte_end":6398027,"line_start":176,"line_end":176,"column_start":9,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":527},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6398056,"byte_end":6398062,"line_start":178,"line_end":178,"column_start":9,"column_end":15},"name":"Uint32","qualname":"::field_descriptor_proto::Type::Uint32","value":"Type::Uint32","parent":{"krate":0,"index":490},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":530},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6398077,"byte_end":6398081,"line_start":179,"line_end":179,"column_start":9,"column_end":13},"name":"Enum","qualname":"::field_descriptor_proto::Type::Enum","value":"Type::Enum","parent":{"krate":0,"index":490},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":533},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6398096,"byte_end":6398104,"line_start":180,"line_end":180,"column_start":9,"column_end":17},"name":"Sfixed32","qualname":"::field_descriptor_proto::Type::Sfixed32","value":"Type::Sfixed32","parent":{"krate":0,"index":490},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":536},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6398119,"byte_end":6398127,"line_start":181,"line_end":181,"column_start":9,"column_end":17},"name":"Sfixed64","qualname":"::field_descriptor_proto::Type::Sfixed64","value":"Type::Sfixed64","parent":{"krate":0,"index":490},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":539},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6398176,"byte_end":6398182,"line_start":183,"line_end":183,"column_start":9,"column_end":15},"name":"Sint32","qualname":"::field_descriptor_proto::Type::Sint32","value":"Type::Sint32","parent":{"krate":0,"index":490},"children":[],"decl_id":null,"docs":" Uses ZigZag encoding.\n","sig":null,"attributes":[{"value":"/ Uses ZigZag encoding.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6398142,"byte_end":6398167,"line_start":182,"line_end":182,"column_start":9,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":542},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6398231,"byte_end":6398237,"line_start":185,"line_end":185,"column_start":9,"column_end":15},"name":"Sint64","qualname":"::field_descriptor_proto::Type::Sint64","value":"Type::Sint64","parent":{"krate":0,"index":490},"children":[],"decl_id":null,"docs":" Uses ZigZag encoding.\n","sig":null,"attributes":[{"value":"/ Uses ZigZag encoding.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6398197,"byte_end":6398222,"line_start":184,"line_end":184,"column_start":9,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":490},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6397140,"byte_end":6397144,"line_start":153,"line_end":153,"column_start":14,"column_end":18},"name":"Type","qualname":"::field_descriptor_proto::Type","value":"pub enum Type {\n\n    /// 0 is reserved for errors.\n    /// Order is weird for historical reasons.\n    Double = ,\n    Float = ,\n\n    /// Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if\n    /// negative values are likely.\n    Int64 = ,\n    Uint64 = ,\n\n    /// Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if\n    /// negative values are likely.\n    Int32 = ,\n    Fixed64 = ,\n    Fixed32 = ,\n    Bool = ,\n    String = ,\n\n    /// Tag-delimited aggregate.\n    /// Group type is deprecated and not supported in proto3. However, Proto3\n    /// implementations should still be able to parse the group wire format and\n    /// treat group fields as unknown fields.\n    Group = ,\n\n    /// Length-delimited aggregate.\n    Message = ,\n\n    /// New in version 2.\n    Bytes = ,\n    Uint32 = ,\n    Enum = ,\n    Sfixed32 = ,\n    Sfixed64 = ,\n\n    /// Uses ZigZag encoding.\n    Sint32 = ,\n\n    /// Uses ZigZag encoding.\n    Sint64 = ,\n}","parent":null,"children":[{"krate":0,"index":491},{"krate":0,"index":494},{"krate":0,"index":497},{"krate":0,"index":500},{"krate":0,"index":503},{"krate":0,"index":506},{"krate":0,"index":509},{"krate":0,"index":512},{"krate":0,"index":515},{"krate":0,"index":518},{"krate":0,"index":521},{"krate":0,"index":524},{"krate":0,"index":527},{"krate":0,"index":530},{"krate":0,"index":533},{"krate":0,"index":536},{"krate":0,"index":539},{"krate":0,"index":542}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(i32)","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6397114,"byte_end":6397126,"line_start":152,"line_end":152,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":571},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6398427,"byte_end":6398435,"line_start":191,"line_end":191,"column_start":9,"column_end":17},"name":"Optional","qualname":"::field_descriptor_proto::Label::Optional","value":"Label::Optional","parent":{"krate":0,"index":570},"children":[],"decl_id":null,"docs":" 0 is reserved for errors\n","sig":null,"attributes":[{"value":"/ 0 is reserved for errors","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6398390,"byte_end":6398418,"line_start":190,"line_end":190,"column_start":9,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":574},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6398449,"byte_end":6398457,"line_start":192,"line_end":192,"column_start":9,"column_end":17},"name":"Required","qualname":"::field_descriptor_proto::Label::Required","value":"Label::Required","parent":{"krate":0,"index":570},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":577},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6398471,"byte_end":6398479,"line_start":193,"line_end":193,"column_start":9,"column_end":17},"name":"Repeated","qualname":"::field_descriptor_proto::Label::Repeated","value":"Label::Repeated","parent":{"krate":0,"index":570},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":570},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6398374,"byte_end":6398379,"line_start":189,"line_end":189,"column_start":14,"column_end":19},"name":"Label","qualname":"::field_descriptor_proto::Label","value":"pub enum Label {\n\n    /// 0 is reserved for errors\n    Optional = ,\n    Required = ,\n    Repeated = ,\n}","parent":null,"children":[{"krate":0,"index":571},{"krate":0,"index":574},{"krate":0,"index":577}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(i32)","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6398348,"byte_end":6398360,"line_start":188,"line_end":188,"column_start":5,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":605},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6398573,"byte_end":6398593,"line_start":198,"line_end":198,"column_start":12,"column_end":32},"name":"OneofDescriptorProto","qualname":"::OneofDescriptorProto","value":"OneofDescriptorProto { name, options }","parent":null,"children":[{"krate":0,"index":606},{"krate":0,"index":607}],"decl_id":null,"docs":" Describes a oneof.\n","sig":null,"attributes":[{"value":"/ Describes a oneof.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6398493,"byte_end":6398515,"line_start":196,"line_end":196,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":606},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6398644,"byte_end":6398648,"line_start":200,"line_end":200,"column_start":9,"column_end":13},"name":"name","qualname":"::OneofDescriptorProto::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":605},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(string, optional, tag = \"1\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6398600,"byte_end":6398635,"line_start":199,"line_end":199,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":607},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6398743,"byte_end":6398750,"line_start":202,"line_end":202,"column_start":9,"column_end":16},"name":"options","qualname":"::OneofDescriptorProto::options","value":"std::option::Option<OneofOptions>","parent":{"krate":0,"index":605},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, optional, tag = \"2\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6398698,"byte_end":6398734,"line_start":201,"line_end":201,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6398644,"byte_end":6398648,"line_start":200,"line_end":200,"column_start":9,"column_end":13},"name":"name","qualname":"<OneofDescriptorProto>::name","value":"pub fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `name`, or the default value if `name` is unset.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":641},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6398876,"byte_end":6398895,"line_start":206,"line_end":206,"column_start":12,"column_end":31},"name":"EnumDescriptorProto","qualname":"::EnumDescriptorProto","value":"EnumDescriptorProto { name, value, options, reserved_range, reserved_name }","parent":null,"children":[{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646}],"decl_id":null,"docs":" Describes an enum type.\n","sig":null,"attributes":[{"value":"/ Describes an enum type.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6398791,"byte_end":6398818,"line_start":204,"line_end":204,"column_start":1,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":642},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6398946,"byte_end":6398950,"line_start":208,"line_end":208,"column_start":9,"column_end":13},"name":"name","qualname":"::EnumDescriptorProto::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":641},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(string, optional, tag = \"1\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6398902,"byte_end":6398937,"line_start":207,"line_end":207,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":643},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6399045,"byte_end":6399050,"line_start":210,"line_end":210,"column_start":9,"column_end":14},"name":"value","qualname":"::EnumDescriptorProto::value","value":"std::vec::Vec<EnumValueDescriptorProto>","parent":{"krate":0,"index":641},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"2\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6399000,"byte_end":6399036,"line_start":209,"line_end":209,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":644},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6399144,"byte_end":6399151,"line_start":212,"line_end":212,"column_start":9,"column_end":16},"name":"options","qualname":"::EnumDescriptorProto::options","value":"std::option::Option<EnumOptions>","parent":{"krate":0,"index":641},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, optional, tag = \"3\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6399099,"byte_end":6399135,"line_start":211,"line_end":211,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":645},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6399414,"byte_end":6399428,"line_start":217,"line_end":217,"column_start":9,"column_end":23},"name":"reserved_range","qualname":"::EnumDescriptorProto::reserved_range","value":"std::vec::Vec<enum_descriptor_proto::EnumReservedRange>","parent":{"krate":0,"index":641},"children":[],"decl_id":null,"docs":" Range of reserved numeric values. Reserved numeric values may not be used\n by enum values in the same enum declaration. Reserved ranges may not\n overlap.\n","sig":null,"attributes":[{"value":"/ Range of reserved numeric values. Reserved numeric values may not be used","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6399193,"byte_end":6399270,"line_start":213,"line_end":213,"column_start":5,"column_end":82}},{"value":"/ by enum values in the same enum declaration. Reserved ranges may not","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6399275,"byte_end":6399347,"line_start":214,"line_end":214,"column_start":5,"column_end":77}},{"value":"/ overlap.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6399352,"byte_end":6399364,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"prost(message, repeated, tag = \"4\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6399369,"byte_end":6399405,"line_start":216,"line_end":216,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":646},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6399645,"byte_end":6399658,"line_start":221,"line_end":221,"column_start":9,"column_end":22},"name":"reserved_name","qualname":"::EnumDescriptorProto::reserved_name","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":641},"children":[],"decl_id":null,"docs":" Reserved enum value names, which may not be reused. A given name may only\n be reserved once.\n","sig":null,"attributes":[{"value":"/ Reserved enum value names, which may not be reused. A given name may only","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6399493,"byte_end":6399570,"line_start":218,"line_end":218,"column_start":5,"column_end":82}},{"value":"/ be reserved once.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6399575,"byte_end":6399596,"line_start":219,"line_end":219,"column_start":5,"column_end":26}},{"value":"prost(string, repeated, tag = \"5\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6399601,"byte_end":6399636,"line_start":220,"line_end":220,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6398946,"byte_end":6398950,"line_start":208,"line_end":208,"column_start":9,"column_end":13},"name":"name","qualname":"<EnumDescriptorProto>::name","value":"pub fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `name`, or the default value if `name` is unset.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":25},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6399708,"byte_end":6399729,"line_start":223,"line_end":223,"column_start":9,"column_end":30},"name":"enum_descriptor_proto","qualname":"::enum_descriptor_proto","value":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","parent":null,"children":[{"krate":0,"index":692},{"krate":0,"index":736},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":695},{"krate":0,"index":707},{"krate":0,"index":709},{"krate":0,"index":729}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":692},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6400125,"byte_end":6400142,"line_start":231,"line_end":231,"column_start":16,"column_end":33},"name":"EnumReservedRange","qualname":"::enum_descriptor_proto::EnumReservedRange","value":"EnumReservedRange { start, end }","parent":null,"children":[{"krate":0,"index":693},{"krate":0,"index":694}],"decl_id":null,"docs":" Range of reserved numeric values. Reserved values may not be used by\n entries in the same enum. Reserved ranges may not overlap.","sig":null,"attributes":[{"value":"/ Range of reserved numeric values. Reserved values may not be used by","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6399736,"byte_end":6399808,"line_start":224,"line_end":224,"column_start":5,"column_end":77}},{"value":"/ entries in the same enum. Reserved ranges may not overlap.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6399813,"byte_end":6399875,"line_start":225,"line_end":225,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6399880,"byte_end":6399883,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ Note that this is distinct from DescriptorProto.ReservedRange in that it","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6399888,"byte_end":6399964,"line_start":227,"line_end":227,"column_start":5,"column_end":81}},{"value":"/ is inclusive such that it can appropriately represent the entire int32","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6399969,"byte_end":6400043,"line_start":228,"line_end":228,"column_start":5,"column_end":79}},{"value":"/ domain.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6400048,"byte_end":6400059,"line_start":229,"line_end":229,"column_start":5,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":693},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6400223,"byte_end":6400228,"line_start":234,"line_end":234,"column_start":13,"column_end":18},"name":"start","qualname":"::enum_descriptor_proto::EnumReservedRange::start","value":"std::option::Option<i32>","parent":{"krate":0,"index":692},"children":[],"decl_id":null,"docs":" Inclusive.\n","sig":null,"attributes":[{"value":"/ Inclusive.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6400153,"byte_end":6400167,"line_start":232,"line_end":232,"column_start":9,"column_end":23}},{"value":"prost(int32, optional, tag = \"1\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6400176,"byte_end":6400210,"line_start":233,"line_end":233,"column_start":9,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":694},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6400336,"byte_end":6400339,"line_start":237,"line_end":237,"column_start":13,"column_end":16},"name":"end","qualname":"::enum_descriptor_proto::EnumReservedRange::end","value":"std::option::Option<i32>","parent":{"krate":0,"index":692},"children":[],"decl_id":null,"docs":" Inclusive.\n","sig":null,"attributes":[{"value":"/ Inclusive.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6400266,"byte_end":6400280,"line_start":235,"line_end":235,"column_start":9,"column_end":23}},{"value":"prost(int32, optional, tag = \"2\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6400289,"byte_end":6400323,"line_start":236,"line_end":236,"column_start":9,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6400223,"byte_end":6400228,"line_start":234,"line_end":234,"column_start":13,"column_end":18},"name":"start","qualname":"<EnumReservedRange>::start","value":"pub fn start(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `start`, or the default value if `start` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":731},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6400336,"byte_end":6400339,"line_start":237,"line_end":237,"column_start":13,"column_end":16},"name":"end","qualname":"<EnumReservedRange>::end","value":"pub fn end(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `end`, or the default value if `end` is unset.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":738},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6400472,"byte_end":6400496,"line_start":242,"line_end":242,"column_start":12,"column_end":36},"name":"EnumValueDescriptorProto","qualname":"::EnumValueDescriptorProto","value":"EnumValueDescriptorProto { name, number, options }","parent":null,"children":[{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":741}],"decl_id":null,"docs":" Describes a value within an enum.\n","sig":null,"attributes":[{"value":"/ Describes a value within an enum.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6400377,"byte_end":6400414,"line_start":240,"line_end":240,"column_start":1,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":739},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6400547,"byte_end":6400551,"line_start":244,"line_end":244,"column_start":9,"column_end":13},"name":"name","qualname":"::EnumValueDescriptorProto::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":738},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(string, optional, tag = \"1\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6400503,"byte_end":6400538,"line_start":243,"line_end":243,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":740},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6400644,"byte_end":6400650,"line_start":246,"line_end":246,"column_start":9,"column_end":15},"name":"number","qualname":"::EnumValueDescriptorProto::number","value":"std::option::Option<i32>","parent":{"krate":0,"index":738},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(int32, optional, tag = \"2\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6400601,"byte_end":6400635,"line_start":245,"line_end":245,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":741},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6400729,"byte_end":6400736,"line_start":248,"line_end":248,"column_start":9,"column_end":16},"name":"options","qualname":"::EnumValueDescriptorProto::options","value":"std::option::Option<EnumValueOptions>","parent":{"krate":0,"index":738},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, optional, tag = \"3\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6400684,"byte_end":6400720,"line_start":247,"line_end":247,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":779},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6400547,"byte_end":6400551,"line_start":244,"line_end":244,"column_start":9,"column_end":13},"name":"name","qualname":"<EnumValueDescriptorProto>::name","value":"pub fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `name`, or the default value if `name` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":780},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6400644,"byte_end":6400650,"line_start":246,"line_end":246,"column_start":9,"column_end":15},"name":"number","qualname":"<EnumValueDescriptorProto>::number","value":"pub fn number(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `number`, or the default value if `number` is unset.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":787},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6400863,"byte_end":6400885,"line_start":252,"line_end":252,"column_start":12,"column_end":34},"name":"ServiceDescriptorProto","qualname":"::ServiceDescriptorProto","value":"ServiceDescriptorProto { name, method, options }","parent":null,"children":[{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":790}],"decl_id":null,"docs":" Describes a service.\n","sig":null,"attributes":[{"value":"/ Describes a service.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6400781,"byte_end":6400805,"line_start":250,"line_end":250,"column_start":1,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":788},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6400936,"byte_end":6400940,"line_start":254,"line_end":254,"column_start":9,"column_end":13},"name":"name","qualname":"::ServiceDescriptorProto::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":787},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(string, optional, tag = \"1\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6400892,"byte_end":6400927,"line_start":253,"line_end":253,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":789},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6401035,"byte_end":6401041,"line_start":256,"line_end":256,"column_start":9,"column_end":15},"name":"method","qualname":"::ServiceDescriptorProto::method","value":"std::vec::Vec<MethodDescriptorProto>","parent":{"krate":0,"index":787},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"2\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6400990,"byte_end":6401026,"line_start":255,"line_end":255,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":790},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6401132,"byte_end":6401139,"line_start":258,"line_end":258,"column_start":9,"column_end":16},"name":"options","qualname":"::ServiceDescriptorProto::options","value":"std::option::Option<ServiceOptions>","parent":{"krate":0,"index":787},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, optional, tag = \"3\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6401087,"byte_end":6401123,"line_start":257,"line_end":257,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":818},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6400936,"byte_end":6400940,"line_start":254,"line_end":254,"column_start":9,"column_end":13},"name":"name","qualname":"<ServiceDescriptorProto>::name","value":"pub fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `name`, or the default value if `name` is unset.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":825},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6401276,"byte_end":6401297,"line_start":262,"line_end":262,"column_start":12,"column_end":33},"name":"MethodDescriptorProto","qualname":"::MethodDescriptorProto","value":"MethodDescriptorProto { name, input_type, output_type, options, client_streaming, server_streaming }","parent":null,"children":[{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831}],"decl_id":null,"docs":" Describes a method of a service.\n","sig":null,"attributes":[{"value":"/ Describes a method of a service.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6401182,"byte_end":6401218,"line_start":260,"line_end":260,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":826},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6401348,"byte_end":6401352,"line_start":264,"line_end":264,"column_start":9,"column_end":13},"name":"name","qualname":"::MethodDescriptorProto::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":825},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(string, optional, tag = \"1\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6401304,"byte_end":6401339,"line_start":263,"line_end":263,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":827},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6401596,"byte_end":6401606,"line_start":268,"line_end":268,"column_start":9,"column_end":19},"name":"input_type","qualname":"::MethodDescriptorProto::input_type","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":825},"children":[],"decl_id":null,"docs":" Input and output type names.  These are resolved in the same way as\n FieldDescriptorProto.type_name, but must refer to a message type.\n","sig":null,"attributes":[{"value":"/ Input and output type names.  These are resolved in the same way as","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6401402,"byte_end":6401473,"line_start":265,"line_end":265,"column_start":5,"column_end":76}},{"value":"/ FieldDescriptorProto.type_name, but must refer to a message type.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6401478,"byte_end":6401547,"line_start":266,"line_end":266,"column_start":5,"column_end":74}},{"value":"prost(string, optional, tag = \"2\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6401552,"byte_end":6401587,"line_start":267,"line_end":267,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":828},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6401700,"byte_end":6401711,"line_start":270,"line_end":270,"column_start":9,"column_end":20},"name":"output_type","qualname":"::MethodDescriptorProto::output_type","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":825},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(string, optional, tag = \"3\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6401656,"byte_end":6401691,"line_start":269,"line_end":269,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":829},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6401806,"byte_end":6401813,"line_start":272,"line_end":272,"column_start":9,"column_end":16},"name":"options","qualname":"::MethodDescriptorProto::options","value":"std::option::Option<MethodOptions>","parent":{"krate":0,"index":825},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, optional, tag = \"4\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6401761,"byte_end":6401797,"line_start":271,"line_end":271,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":830},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6401978,"byte_end":6401994,"line_start":275,"line_end":275,"column_start":9,"column_end":25},"name":"client_streaming","qualname":"::MethodDescriptorProto::client_streaming","value":"std::option::Option<bool>","parent":{"krate":0,"index":825},"children":[],"decl_id":null,"docs":" Identifies if client streams multiple client messages\n","sig":null,"attributes":[{"value":"/ Identifies if client streams multiple client messages","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6401857,"byte_end":6401914,"line_start":273,"line_end":273,"column_start":5,"column_end":62}},{"value":"prost(bool, optional, tag = \"5\", default = \"false\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6401919,"byte_end":6401969,"line_start":274,"line_end":274,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":831},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6402150,"byte_end":6402166,"line_start":278,"line_end":278,"column_start":9,"column_end":25},"name":"server_streaming","qualname":"::MethodDescriptorProto::server_streaming","value":"std::option::Option<bool>","parent":{"krate":0,"index":825},"children":[],"decl_id":null,"docs":" Identifies if server streams multiple server messages\n","sig":null,"attributes":[{"value":"/ Identifies if server streams multiple server messages","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6402029,"byte_end":6402086,"line_start":276,"line_end":276,"column_start":5,"column_end":62}},{"value":"prost(bool, optional, tag = \"6\", default = \"false\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6402091,"byte_end":6402141,"line_start":277,"line_end":277,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":902},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6401348,"byte_end":6401352,"line_start":264,"line_end":264,"column_start":9,"column_end":13},"name":"name","qualname":"<MethodDescriptorProto>::name","value":"pub fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `name`, or the default value if `name` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":903},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6401596,"byte_end":6401606,"line_start":268,"line_end":268,"column_start":9,"column_end":19},"name":"input_type","qualname":"<MethodDescriptorProto>::input_type","value":"pub fn input_type(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `input_type`, or the default value if `input_type` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":904},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6401700,"byte_end":6401711,"line_start":270,"line_end":270,"column_start":9,"column_end":20},"name":"output_type","qualname":"<MethodDescriptorProto>::output_type","value":"pub fn output_type(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `output_type`, or the default value if `output_type` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":905},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6401978,"byte_end":6401994,"line_start":275,"line_end":275,"column_start":9,"column_end":25},"name":"client_streaming","qualname":"<MethodDescriptorProto>::client_streaming","value":"pub fn client_streaming(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `client_streaming`, or the default value if `client_streaming` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":906},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6402150,"byte_end":6402166,"line_start":278,"line_end":278,"column_start":9,"column_end":25},"name":"server_streaming","qualname":"<MethodDescriptorProto>::server_streaming","value":"pub fn server_streaming(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `server_streaming`, or the default value if `server_streaming` is unset.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":913},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6404140,"byte_end":6404151,"line_start":313,"line_end":313,"column_start":12,"column_end":23},"name":"FileOptions","qualname":"::FileOptions","value":"FileOptions { java_package, java_outer_classname, java_multiple_files, java_generate_equals_and_hash, java_string_check_utf8, optimize_for, go_package, cc_generic_services, java_generic_services, py_generic_services, php_generic_services, deprecated, cc_enable_arenas, objc_class_prefix, csharp_namespace, swift_prefix, php_class_prefix, php_namespace, php_metadata_namespace, ruby_package, uninterpreted_option }","parent":null,"children":[{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":920},{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":933},{"krate":0,"index":934}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":914},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6404459,"byte_end":6404471,"line_start":319,"line_end":319,"column_start":9,"column_end":21},"name":"java_package","qualname":"::FileOptions::java_package","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":913},"children":[],"decl_id":null,"docs":" Sets the Java package where classes generated from this .proto will be\n placed.  By default, the proto package is used, but this is often\n inappropriate because proto packages do not normally start with backwards\n domain names.\n","sig":null,"attributes":[{"value":"/ Sets the Java package where classes generated from this .proto will be","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6404158,"byte_end":6404232,"line_start":314,"line_end":314,"column_start":5,"column_end":79}},{"value":"/ placed.  By default, the proto package is used, but this is often","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6404237,"byte_end":6404306,"line_start":315,"line_end":315,"column_start":5,"column_end":74}},{"value":"/ inappropriate because proto packages do not normally start with backwards","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6404311,"byte_end":6404388,"line_start":316,"line_end":316,"column_start":5,"column_end":82}},{"value":"/ domain names.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6404393,"byte_end":6404410,"line_start":317,"line_end":317,"column_start":5,"column_end":22}},{"value":"prost(string, optional, tag = \"1\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6404415,"byte_end":6404450,"line_start":318,"line_end":318,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":915},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6404904,"byte_end":6404924,"line_start":326,"line_end":326,"column_start":9,"column_end":29},"name":"java_outer_classname","qualname":"::FileOptions::java_outer_classname","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":913},"children":[],"decl_id":null,"docs":" If set, all the classes from the .proto file are wrapped in a single\n outer class with the given name.  This applies to both Proto1\n (equivalent to the old \"--one_java_file\" option) and Proto2 (where\n a .proto always translates to a single class, but you may want to\n explicitly choose the class name).\n","sig":null,"attributes":[{"value":"/ If set, all the classes from the .proto file are wrapped in a single","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6404521,"byte_end":6404593,"line_start":320,"line_end":320,"column_start":5,"column_end":77}},{"value":"/ outer class with the given name.  This applies to both Proto1","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6404598,"byte_end":6404663,"line_start":321,"line_end":321,"column_start":5,"column_end":70}},{"value":"/ (equivalent to the old \"--one_java_file\" option) and Proto2 (where","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6404668,"byte_end":6404738,"line_start":322,"line_end":322,"column_start":5,"column_end":75}},{"value":"/ a .proto always translates to a single class, but you may want to","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6404743,"byte_end":6404812,"line_start":323,"line_end":323,"column_start":5,"column_end":74}},{"value":"/ explicitly choose the class name).","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6404817,"byte_end":6404855,"line_start":324,"line_end":324,"column_start":5,"column_end":43}},{"value":"prost(string, optional, tag = \"8\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6404860,"byte_end":6404895,"line_start":325,"line_end":325,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":916},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6405480,"byte_end":6405499,"line_start":334,"line_end":334,"column_start":9,"column_end":28},"name":"java_multiple_files","qualname":"::FileOptions::java_multiple_files","value":"std::option::Option<bool>","parent":{"krate":0,"index":913},"children":[],"decl_id":null,"docs":" If set true, then the Java code generator will generate a separate .java\n file for each top-level message, enum, and service defined in the .proto\n file.  Thus, these types will *not* be nested inside the outer class\n named by java_outer_classname.  However, the outer class will still be\n generated to contain the file's getDescriptor() method as well as any\n top-level extensions defined in the file.\n","sig":null,"attributes":[{"value":"/ If set true, then the Java code generator will generate a separate .java","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6404974,"byte_end":6405050,"line_start":327,"line_end":327,"column_start":5,"column_end":81}},{"value":"/ file for each top-level message, enum, and service defined in the .proto","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6405055,"byte_end":6405131,"line_start":328,"line_end":328,"column_start":5,"column_end":81}},{"value":"/ file.  Thus, these types will *not* be nested inside the outer class","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6405136,"byte_end":6405208,"line_start":329,"line_end":329,"column_start":5,"column_end":77}},{"value":"/ named by java_outer_classname.  However, the outer class will still be","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6405213,"byte_end":6405287,"line_start":330,"line_end":330,"column_start":5,"column_end":79}},{"value":"/ generated to contain the file's getDescriptor() method as well as any","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6405292,"byte_end":6405365,"line_start":331,"line_end":331,"column_start":5,"column_end":78}},{"value":"/ top-level extensions defined in the file.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6405370,"byte_end":6405415,"line_start":332,"line_end":332,"column_start":5,"column_end":50}},{"value":"prost(bool, optional, tag = \"10\", default = \"false\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6405420,"byte_end":6405471,"line_start":333,"line_end":333,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":917},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6405611,"byte_end":6405640,"line_start":337,"line_end":337,"column_start":9,"column_end":38},"name":"java_generate_equals_and_hash","qualname":"::FileOptions::java_generate_equals_and_hash","value":"std::option::Option<bool>","parent":{"krate":0,"index":913},"children":[],"decl_id":null,"docs":" This option does nothing.\n","sig":null,"attributes":[{"value":"/ This option does nothing.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6405534,"byte_end":6405563,"line_start":335,"line_end":335,"column_start":5,"column_end":34}},{"value":"prost(bool, optional, tag = \"20\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6405568,"byte_end":6405602,"line_start":336,"line_end":336,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":918},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6406120,"byte_end":6406142,"line_start":345,"line_end":345,"column_start":9,"column_end":31},"name":"java_string_check_utf8","qualname":"::FileOptions::java_string_check_utf8","value":"std::option::Option<bool>","parent":{"krate":0,"index":913},"children":[],"decl_id":null,"docs":" If set true, then the Java2 code generator will generate code that\n throws an exception whenever an attempt is made to assign a non-UTF-8\n byte sequence to a string field.\n Message reflection will do the same.\n However, an extension field still accepts non-UTF-8 byte sequences.\n This option has no effect on when used with the lite runtime.\n","sig":null,"attributes":[{"value":"/ If set true, then the Java2 code generator will generate code that","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6405675,"byte_end":6405745,"line_start":338,"line_end":338,"column_start":5,"column_end":75}},{"value":"/ throws an exception whenever an attempt is made to assign a non-UTF-8","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6405750,"byte_end":6405823,"line_start":339,"line_end":339,"column_start":5,"column_end":78}},{"value":"/ byte sequence to a string field.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6405828,"byte_end":6405864,"line_start":340,"line_end":340,"column_start":5,"column_end":41}},{"value":"/ Message reflection will do the same.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6405869,"byte_end":6405909,"line_start":341,"line_end":341,"column_start":5,"column_end":45}},{"value":"/ However, an extension field still accepts non-UTF-8 byte sequences.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6405914,"byte_end":6405985,"line_start":342,"line_end":342,"column_start":5,"column_end":76}},{"value":"/ This option has no effect on when used with the lite runtime.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6405990,"byte_end":6406055,"line_start":343,"line_end":343,"column_start":5,"column_end":70}},{"value":"prost(bool, optional, tag = \"27\", default = \"false\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6406060,"byte_end":6406111,"line_start":344,"line_end":344,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":919},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6406272,"byte_end":6406284,"line_start":347,"line_end":347,"column_start":9,"column_end":21},"name":"optimize_for","qualname":"::FileOptions::optimize_for","value":"std::option::Option<i32>","parent":{"krate":0,"index":913},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(enumeration = \"file_options::OptimizeMode\", optional, tag = \"9\",\n        default = \"Speed\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6406177,"byte_end":6406263,"line_start":346,"line_end":346,"column_start":5,"column_end":91}}]},{"kind":"Field","id":{"krate":0,"index":920},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6406737,"byte_end":6406747,"line_start":354,"line_end":354,"column_start":9,"column_end":19},"name":"go_package","qualname":"::FileOptions::go_package","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":913},"children":[],"decl_id":null,"docs":" Sets the Go package where structs generated from this .proto will be\n placed. If omitted, the Go package will be derived from the following:\n   - The basename of the package import path, if provided.\n   - Otherwise, the package statement in the .proto file, if present.\n   - Otherwise, the basename of the .proto file, without extension.\n","sig":null,"attributes":[{"value":"/ Sets the Go package where structs generated from this .proto will be","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6406318,"byte_end":6406390,"line_start":348,"line_end":348,"column_start":5,"column_end":77}},{"value":"/ placed. If omitted, the Go package will be derived from the following:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6406395,"byte_end":6406469,"line_start":349,"line_end":349,"column_start":5,"column_end":79}},{"value":"/   - The basename of the package import path, if provided.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6406474,"byte_end":6406535,"line_start":350,"line_end":350,"column_start":5,"column_end":66}},{"value":"/   - Otherwise, the package statement in the .proto file, if present.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6406540,"byte_end":6406612,"line_start":351,"line_end":351,"column_start":5,"column_end":77}},{"value":"/   - Otherwise, the basename of the .proto file, without extension.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6406617,"byte_end":6406687,"line_start":352,"line_end":352,"column_start":5,"column_end":75}},{"value":"prost(string, optional, tag = \"11\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6406692,"byte_end":6406728,"line_start":353,"line_end":353,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":921},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6407508,"byte_end":6407527,"line_start":366,"line_end":366,"column_start":9,"column_end":28},"name":"cc_generic_services","qualname":"::FileOptions::cc_generic_services","value":"std::option::Option<bool>","parent":{"krate":0,"index":913},"children":[],"decl_id":null,"docs":" Should generic services be generated in each language?  \"Generic\" services\n are not specific to any particular RPC system.  They are generated by the\n main code generators in each language (without additional plugins).\n Generic services were the only kind of service generation supported by\n early versions of google.protobuf.","sig":null,"attributes":[{"value":"/ Should generic services be generated in each language?  \"Generic\" services","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6406797,"byte_end":6406875,"line_start":355,"line_end":355,"column_start":5,"column_end":83}},{"value":"/ are not specific to any particular RPC system.  They are generated by the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6406880,"byte_end":6406957,"line_start":356,"line_end":356,"column_start":5,"column_end":82}},{"value":"/ main code generators in each language (without additional plugins).","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6406962,"byte_end":6407033,"line_start":357,"line_end":357,"column_start":5,"column_end":76}},{"value":"/ Generic services were the only kind of service generation supported by","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6407038,"byte_end":6407112,"line_start":358,"line_end":358,"column_start":5,"column_end":79}},{"value":"/ early versions of google.protobuf.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6407117,"byte_end":6407155,"line_start":359,"line_end":359,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6407160,"byte_end":6407163,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ Generic services are now considered deprecated in favor of using plugins","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6407168,"byte_end":6407244,"line_start":361,"line_end":361,"column_start":5,"column_end":81}},{"value":"/ that generate code specific to your particular RPC system.  Therefore,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6407249,"byte_end":6407323,"line_start":362,"line_end":362,"column_start":5,"column_end":79}},{"value":"/ these default to false.  Old code which depends on generic services should","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6407328,"byte_end":6407406,"line_start":363,"line_end":363,"column_start":5,"column_end":83}},{"value":"/ explicitly set them to true.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6407411,"byte_end":6407443,"line_start":364,"line_end":364,"column_start":5,"column_end":37}},{"value":"prost(bool, optional, tag = \"16\", default = \"false\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6407448,"byte_end":6407499,"line_start":365,"line_end":365,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":922},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6407622,"byte_end":6407643,"line_start":368,"line_end":368,"column_start":9,"column_end":30},"name":"java_generic_services","qualname":"::FileOptions::java_generic_services","value":"std::option::Option<bool>","parent":{"krate":0,"index":913},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(bool, optional, tag = \"17\", default = \"false\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6407562,"byte_end":6407613,"line_start":367,"line_end":367,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":923},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6407738,"byte_end":6407757,"line_start":370,"line_end":370,"column_start":9,"column_end":28},"name":"py_generic_services","qualname":"::FileOptions::py_generic_services","value":"std::option::Option<bool>","parent":{"krate":0,"index":913},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(bool, optional, tag = \"18\", default = \"false\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6407678,"byte_end":6407729,"line_start":369,"line_end":369,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":924},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6407852,"byte_end":6407872,"line_start":372,"line_end":372,"column_start":9,"column_end":29},"name":"php_generic_services","qualname":"::FileOptions::php_generic_services","value":"std::option::Option<bool>","parent":{"krate":0,"index":913},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(bool, optional, tag = \"42\", default = \"false\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6407792,"byte_end":6407843,"line_start":371,"line_end":371,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":925},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6408223,"byte_end":6408233,"line_start":378,"line_end":378,"column_start":9,"column_end":19},"name":"deprecated","qualname":"::FileOptions::deprecated","value":"std::option::Option<bool>","parent":{"krate":0,"index":913},"children":[],"decl_id":null,"docs":" Is this file deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for everything in the file, or it will be completely ignored; in the very\n least, this is a formalization for deprecating files.\n","sig":null,"attributes":[{"value":"/ Is this file deprecated?","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6407907,"byte_end":6407935,"line_start":373,"line_end":373,"column_start":5,"column_end":33}},{"value":"/ Depending on the target platform, this can emit Deprecated annotations","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6407940,"byte_end":6408014,"line_start":374,"line_end":374,"column_start":5,"column_end":79}},{"value":"/ for everything in the file, or it will be completely ignored; in the very","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6408019,"byte_end":6408096,"line_start":375,"line_end":375,"column_start":5,"column_end":82}},{"value":"/ least, this is a formalization for deprecating files.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6408101,"byte_end":6408158,"line_start":376,"line_end":376,"column_start":5,"column_end":62}},{"value":"prost(bool, optional, tag = \"23\", default = \"false\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6408163,"byte_end":6408214,"line_start":377,"line_end":377,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":926},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6408455,"byte_end":6408471,"line_start":382,"line_end":382,"column_start":9,"column_end":25},"name":"cc_enable_arenas","qualname":"::FileOptions::cc_enable_arenas","value":"std::option::Option<bool>","parent":{"krate":0,"index":913},"children":[],"decl_id":null,"docs":" Enables the use of arenas for the proto messages in this file. This applies\n only to generated classes for C++.\n","sig":null,"attributes":[{"value":"/ Enables the use of arenas for the proto messages in this file. This applies","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6408268,"byte_end":6408347,"line_start":379,"line_end":379,"column_start":5,"column_end":84}},{"value":"/ only to generated classes for C++.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6408352,"byte_end":6408390,"line_start":380,"line_end":380,"column_start":5,"column_end":43}},{"value":"prost(bool, optional, tag = \"31\", default = \"false\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6408395,"byte_end":6408446,"line_start":381,"line_end":381,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":927},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6408696,"byte_end":6408713,"line_start":386,"line_end":386,"column_start":9,"column_end":26},"name":"objc_class_prefix","qualname":"::FileOptions::objc_class_prefix","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":913},"children":[],"decl_id":null,"docs":" Sets the objective c class prefix which is prepended to all objective c\n generated classes from this .proto. There is no default.\n","sig":null,"attributes":[{"value":"/ Sets the objective c class prefix which is prepended to all objective c","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6408506,"byte_end":6408581,"line_start":383,"line_end":383,"column_start":5,"column_end":80}},{"value":"/ generated classes from this .proto. There is no default.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6408586,"byte_end":6408646,"line_start":384,"line_end":384,"column_start":5,"column_end":65}},{"value":"prost(string, optional, tag = \"36\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6408651,"byte_end":6408687,"line_start":385,"line_end":385,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":928},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6408874,"byte_end":6408890,"line_start":389,"line_end":389,"column_start":9,"column_end":25},"name":"csharp_namespace","qualname":"::FileOptions::csharp_namespace","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":913},"children":[],"decl_id":null,"docs":" Namespace for generated classes; defaults to the package.\n","sig":null,"attributes":[{"value":"/ Namespace for generated classes; defaults to the package.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6408763,"byte_end":6408824,"line_start":387,"line_end":387,"column_start":5,"column_end":66}},{"value":"prost(string, optional, tag = \"37\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6408829,"byte_end":6408865,"line_start":388,"line_end":388,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":929},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6409271,"byte_end":6409283,"line_start":395,"line_end":395,"column_start":9,"column_end":21},"name":"swift_prefix","qualname":"::FileOptions::swift_prefix","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":913},"children":[],"decl_id":null,"docs":" By default Swift generators will take the proto package and CamelCase it\n replacing '.' with underscore and use that to prefix the types/symbols\n defined. When this options is provided, they will use this value instead\n to prefix the types/symbols defined.\n","sig":null,"attributes":[{"value":"/ By default Swift generators will take the proto package and CamelCase it","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6408940,"byte_end":6409016,"line_start":390,"line_end":390,"column_start":5,"column_end":81}},{"value":"/ replacing '.' with underscore and use that to prefix the types/symbols","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6409021,"byte_end":6409095,"line_start":391,"line_end":391,"column_start":5,"column_end":79}},{"value":"/ defined. When this options is provided, they will use this value instead","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6409100,"byte_end":6409176,"line_start":392,"line_end":392,"column_start":5,"column_end":81}},{"value":"/ to prefix the types/symbols defined.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6409181,"byte_end":6409221,"line_start":393,"line_end":393,"column_start":5,"column_end":45}},{"value":"prost(string, optional, tag = \"39\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6409226,"byte_end":6409262,"line_start":394,"line_end":394,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":930},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6409504,"byte_end":6409520,"line_start":399,"line_end":399,"column_start":9,"column_end":25},"name":"php_class_prefix","qualname":"::FileOptions::php_class_prefix","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":913},"children":[],"decl_id":null,"docs":" Sets the php class prefix which is prepended to all php generated classes\n from this .proto. Default is empty.\n","sig":null,"attributes":[{"value":"/ Sets the php class prefix which is prepended to all php generated classes","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6409333,"byte_end":6409410,"line_start":396,"line_end":396,"column_start":5,"column_end":82}},{"value":"/ from this .proto. Default is empty.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6409415,"byte_end":6409454,"line_start":397,"line_end":397,"column_start":5,"column_end":44}},{"value":"prost(string, optional, tag = \"40\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6409459,"byte_end":6409495,"line_start":398,"line_end":398,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":931},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6409811,"byte_end":6409824,"line_start":404,"line_end":404,"column_start":9,"column_end":22},"name":"php_namespace","qualname":"::FileOptions::php_namespace","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":913},"children":[],"decl_id":null,"docs":" Use this option to change the namespace of php generated classes. Default\n is empty. When this option is empty, the package name will be used for\n determining the namespace.\n","sig":null,"attributes":[{"value":"/ Use this option to change the namespace of php generated classes. Default","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6409570,"byte_end":6409647,"line_start":400,"line_end":400,"column_start":5,"column_end":82}},{"value":"/ is empty. When this option is empty, the package name will be used for","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6409652,"byte_end":6409726,"line_start":401,"line_end":401,"column_start":5,"column_end":79}},{"value":"/ determining the namespace.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6409731,"byte_end":6409761,"line_start":402,"line_end":402,"column_start":5,"column_end":35}},{"value":"prost(string, optional, tag = \"41\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6409766,"byte_end":6409802,"line_start":403,"line_end":403,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":932},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6410127,"byte_end":6410149,"line_start":409,"line_end":409,"column_start":9,"column_end":31},"name":"php_metadata_namespace","qualname":"::FileOptions::php_metadata_namespace","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":913},"children":[],"decl_id":null,"docs":" Use this option to change the namespace of php generated metadata classes.\n Default is empty. When this option is empty, the proto file name will be\n used for determining the namespace.\n","sig":null,"attributes":[{"value":"/ Use this option to change the namespace of php generated metadata classes.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6409874,"byte_end":6409952,"line_start":405,"line_end":405,"column_start":5,"column_end":83}},{"value":"/ Default is empty. When this option is empty, the proto file name will be","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6409957,"byte_end":6410033,"line_start":406,"line_end":406,"column_start":5,"column_end":81}},{"value":"/ used for determining the namespace.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6410038,"byte_end":6410077,"line_start":407,"line_end":407,"column_start":5,"column_end":44}},{"value":"prost(string, optional, tag = \"44\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6410082,"byte_end":6410118,"line_start":408,"line_end":408,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":933},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6410444,"byte_end":6410456,"line_start":414,"line_end":414,"column_start":9,"column_end":21},"name":"ruby_package","qualname":"::FileOptions::ruby_package","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":913},"children":[],"decl_id":null,"docs":" Use this option to change the package of ruby generated classes. Default\n is empty. When this option is not set, the package name will be used for\n determining the ruby package.\n","sig":null,"attributes":[{"value":"/ Use this option to change the package of ruby generated classes. Default","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6410199,"byte_end":6410275,"line_start":410,"line_end":410,"column_start":5,"column_end":81}},{"value":"/ is empty. When this option is not set, the package name will be used for","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6410280,"byte_end":6410356,"line_start":411,"line_end":411,"column_start":5,"column_end":81}},{"value":"/ determining the ruby package.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6410361,"byte_end":6410394,"line_start":412,"line_end":412,"column_start":5,"column_end":38}},{"value":"prost(string, optional, tag = \"45\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6410399,"byte_end":6410435,"line_start":413,"line_end":413,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":934},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6410677,"byte_end":6410697,"line_start":418,"line_end":418,"column_start":9,"column_end":29},"name":"uninterpreted_option","qualname":"::FileOptions::uninterpreted_option","value":"std::vec::Vec<UninterpretedOption>","parent":{"krate":0,"index":913},"children":[],"decl_id":null,"docs":" The parser stores options it doesn't recognize here.\n See the documentation for the \"Options\" section above.\n","sig":null,"attributes":[{"value":"/ The parser stores options it doesn't recognize here.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6410506,"byte_end":6410562,"line_start":415,"line_end":415,"column_start":5,"column_end":61}},{"value":"/ See the documentation for the \"Options\" section above.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6410567,"byte_end":6410625,"line_start":416,"line_end":416,"column_start":5,"column_end":63}},{"value":"prost(message, repeated, tag = \"999\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6410630,"byte_end":6410668,"line_start":417,"line_end":417,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1174},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6404459,"byte_end":6404471,"line_start":319,"line_end":319,"column_start":9,"column_end":21},"name":"java_package","qualname":"<FileOptions>::java_package","value":"pub fn java_package(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `java_package`, or the default value if `java_package` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1175},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6404904,"byte_end":6404924,"line_start":326,"line_end":326,"column_start":9,"column_end":29},"name":"java_outer_classname","qualname":"<FileOptions>::java_outer_classname","value":"pub fn java_outer_classname(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `java_outer_classname`, or the default value if `java_outer_classname` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1176},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6406272,"byte_end":6406284,"line_start":347,"line_end":347,"column_start":9,"column_end":21},"name":"optimize_for","qualname":"<FileOptions>::optimize_for","value":"pub fn optimize_for(&Self) -> file_options::OptimizeMode","parent":null,"children":[],"decl_id":null,"docs":"Returns the enum value of `optimize_for`, or the default if the field is unset or set to an invalid enum value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1178},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6405480,"byte_end":6405499,"line_start":334,"line_end":334,"column_start":9,"column_end":28},"name":"java_multiple_files","qualname":"<FileOptions>::java_multiple_files","value":"pub fn java_multiple_files(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `java_multiple_files`, or the default value if `java_multiple_files` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1179},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6406737,"byte_end":6406747,"line_start":354,"line_end":354,"column_start":9,"column_end":19},"name":"go_package","qualname":"<FileOptions>::go_package","value":"pub fn go_package(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `go_package`, or the default value if `go_package` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1180},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6407508,"byte_end":6407527,"line_start":366,"line_end":366,"column_start":9,"column_end":28},"name":"cc_generic_services","qualname":"<FileOptions>::cc_generic_services","value":"pub fn cc_generic_services(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `cc_generic_services`, or the default value if `cc_generic_services` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1181},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6407622,"byte_end":6407643,"line_start":368,"line_end":368,"column_start":9,"column_end":30},"name":"java_generic_services","qualname":"<FileOptions>::java_generic_services","value":"pub fn java_generic_services(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `java_generic_services`, or the default value if `java_generic_services` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1182},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6407738,"byte_end":6407757,"line_start":370,"line_end":370,"column_start":9,"column_end":28},"name":"py_generic_services","qualname":"<FileOptions>::py_generic_services","value":"pub fn py_generic_services(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `py_generic_services`, or the default value if `py_generic_services` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1183},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6405611,"byte_end":6405640,"line_start":337,"line_end":337,"column_start":9,"column_end":38},"name":"java_generate_equals_and_hash","qualname":"<FileOptions>::java_generate_equals_and_hash","value":"pub fn java_generate_equals_and_hash(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `java_generate_equals_and_hash`, or the default value if `java_generate_equals_and_hash` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1184},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6408223,"byte_end":6408233,"line_start":378,"line_end":378,"column_start":9,"column_end":19},"name":"deprecated","qualname":"<FileOptions>::deprecated","value":"pub fn deprecated(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `deprecated`, or the default value if `deprecated` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1185},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6406120,"byte_end":6406142,"line_start":345,"line_end":345,"column_start":9,"column_end":31},"name":"java_string_check_utf8","qualname":"<FileOptions>::java_string_check_utf8","value":"pub fn java_string_check_utf8(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `java_string_check_utf8`, or the default value if `java_string_check_utf8` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1186},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6408455,"byte_end":6408471,"line_start":382,"line_end":382,"column_start":9,"column_end":25},"name":"cc_enable_arenas","qualname":"<FileOptions>::cc_enable_arenas","value":"pub fn cc_enable_arenas(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `cc_enable_arenas`, or the default value if `cc_enable_arenas` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1187},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6408696,"byte_end":6408713,"line_start":386,"line_end":386,"column_start":9,"column_end":26},"name":"objc_class_prefix","qualname":"<FileOptions>::objc_class_prefix","value":"pub fn objc_class_prefix(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `objc_class_prefix`, or the default value if `objc_class_prefix` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1188},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6408874,"byte_end":6408890,"line_start":389,"line_end":389,"column_start":9,"column_end":25},"name":"csharp_namespace","qualname":"<FileOptions>::csharp_namespace","value":"pub fn csharp_namespace(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `csharp_namespace`, or the default value if `csharp_namespace` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1189},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6409271,"byte_end":6409283,"line_start":395,"line_end":395,"column_start":9,"column_end":21},"name":"swift_prefix","qualname":"<FileOptions>::swift_prefix","value":"pub fn swift_prefix(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `swift_prefix`, or the default value if `swift_prefix` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1190},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6409504,"byte_end":6409520,"line_start":399,"line_end":399,"column_start":9,"column_end":25},"name":"php_class_prefix","qualname":"<FileOptions>::php_class_prefix","value":"pub fn php_class_prefix(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `php_class_prefix`, or the default value if `php_class_prefix` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1191},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6409811,"byte_end":6409824,"line_start":404,"line_end":404,"column_start":9,"column_end":22},"name":"php_namespace","qualname":"<FileOptions>::php_namespace","value":"pub fn php_namespace(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `php_namespace`, or the default value if `php_namespace` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1192},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6407852,"byte_end":6407872,"line_start":372,"line_end":372,"column_start":9,"column_end":29},"name":"php_generic_services","qualname":"<FileOptions>::php_generic_services","value":"pub fn php_generic_services(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `php_generic_services`, or the default value if `php_generic_services` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1193},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6410127,"byte_end":6410149,"line_start":409,"line_end":409,"column_start":9,"column_end":31},"name":"php_metadata_namespace","qualname":"<FileOptions>::php_metadata_namespace","value":"pub fn php_metadata_namespace(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `php_metadata_namespace`, or the default value if `php_metadata_namespace` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1194},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6410444,"byte_end":6410456,"line_start":414,"line_end":414,"column_start":9,"column_end":21},"name":"ruby_package","qualname":"<FileOptions>::ruby_package","value":"pub fn ruby_package(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `ruby_package`, or the default value if `ruby_package` is unset.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":26},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6410747,"byte_end":6410759,"line_start":420,"line_end":420,"column_start":9,"column_end":21},"name":"file_options","qualname":"::file_options","value":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","parent":null,"children":[{"krate":0,"index":1201},{"krate":0,"index":1234},{"krate":0,"index":1233},{"krate":0,"index":1231},{"krate":0,"index":1228},{"krate":0,"index":1229},{"krate":0,"index":1225},{"krate":0,"index":1226},{"krate":0,"index":1222},{"krate":0,"index":1220},{"krate":0,"index":1218},{"krate":0,"index":1211},{"krate":0,"index":1214},{"krate":0,"index":1216}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1202},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6411039,"byte_end":6411044,"line_start":426,"line_end":426,"column_start":9,"column_end":14},"name":"Speed","qualname":"::file_options::OptimizeMode::Speed","value":"OptimizeMode::Speed","parent":{"krate":0,"index":1201},"children":[],"decl_id":null,"docs":" Generate complete code for parsing, serialization,\n","sig":null,"attributes":[{"value":"/ Generate complete code for parsing, serialization,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6410976,"byte_end":6411030,"line_start":425,"line_end":425,"column_start":9,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1205},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6411145,"byte_end":6411153,"line_start":430,"line_end":430,"column_start":9,"column_end":17},"name":"CodeSize","qualname":"::file_options::OptimizeMode::CodeSize","value":"OptimizeMode::CodeSize","parent":{"krate":0,"index":1201},"children":[],"decl_id":null,"docs":" etc.","sig":null,"attributes":[{"value":"/ etc.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6411058,"byte_end":6411066,"line_start":427,"line_end":427,"column_start":9,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6411075,"byte_end":6411078,"line_start":428,"line_end":428,"column_start":9,"column_end":12}},{"value":"/ Use ReflectionOps to implement these methods.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6411087,"byte_end":6411136,"line_start":429,"line_end":429,"column_start":9,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1208},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6411233,"byte_end":6411244,"line_start":432,"line_end":432,"column_start":9,"column_end":20},"name":"LiteRuntime","qualname":"::file_options::OptimizeMode::LiteRuntime","value":"OptimizeMode::LiteRuntime","parent":{"krate":0,"index":1201},"children":[],"decl_id":null,"docs":" Generate code using MessageLite and the lite runtime.\n","sig":null,"attributes":[{"value":"/ Generate code using MessageLite and the lite runtime.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6411167,"byte_end":6411224,"line_start":431,"line_end":431,"column_start":9,"column_end":66}}]},{"kind":"Enum","id":{"krate":0,"index":1201},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6410953,"byte_end":6410965,"line_start":424,"line_end":424,"column_start":14,"column_end":26},"name":"OptimizeMode","qualname":"::file_options::OptimizeMode","value":"pub enum OptimizeMode {\n\n    /// Generate complete code for parsing, serialization,\n    Speed = ,\n\n    /// etc.\n    ///\n    /// Use ReflectionOps to implement these methods.\n    CodeSize = ,\n\n    /// Generate code using MessageLite and the lite runtime.\n    LiteRuntime = ,\n}","parent":null,"children":[{"krate":0,"index":1202},{"krate":0,"index":1205},{"krate":0,"index":1208}],"decl_id":null,"docs":" Generated classes can be optimized for speed or code size.\n","sig":null,"attributes":[{"value":"/ Generated classes can be optimized for speed or code size.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6410766,"byte_end":6410828,"line_start":421,"line_end":421,"column_start":5,"column_end":67}},{"value":"repr(i32)","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6410927,"byte_end":6410939,"line_start":423,"line_end":423,"column_start":5,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":1236},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6411315,"byte_end":6411329,"line_start":436,"line_end":436,"column_start":12,"column_end":26},"name":"MessageOptions","qualname":"::MessageOptions","value":"MessageOptions { message_set_wire_format, no_standard_descriptor_accessor, deprecated, map_entry, uninterpreted_option }","parent":null,"children":[{"krate":0,"index":1237},{"krate":0,"index":1238},{"krate":0,"index":1239},{"krate":0,"index":1240},{"krate":0,"index":1241}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1237},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6412234,"byte_end":6412257,"line_start":456,"line_end":456,"column_start":9,"column_end":32},"name":"message_set_wire_format","qualname":"::MessageOptions::message_set_wire_format","value":"std::option::Option<bool>","parent":{"krate":0,"index":1236},"children":[],"decl_id":null,"docs":" Set true to use the old proto1 MessageSet wire format for extensions.\n This is provided for backwards-compatibility with the MessageSet wire\n format.  You should not use this for any other reason:  It's less\n efficient, has fewer features, and is more complicated.","sig":null,"attributes":[{"value":"/ Set true to use the old proto1 MessageSet wire format for extensions.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6411336,"byte_end":6411409,"line_start":437,"line_end":437,"column_start":5,"column_end":78}},{"value":"/ This is provided for backwards-compatibility with the MessageSet wire","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6411414,"byte_end":6411487,"line_start":438,"line_end":438,"column_start":5,"column_end":78}},{"value":"/ format.  You should not use this for any other reason:  It's less","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6411492,"byte_end":6411561,"line_start":439,"line_end":439,"column_start":5,"column_end":74}},{"value":"/ efficient, has fewer features, and is more complicated.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6411566,"byte_end":6411625,"line_start":440,"line_end":440,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6411630,"byte_end":6411633,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ The message must be defined exactly as follows:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6411638,"byte_end":6411689,"line_start":442,"line_end":442,"column_start":5,"column_end":56}},{"value":"/   message Foo {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6411694,"byte_end":6411713,"line_start":443,"line_end":443,"column_start":5,"column_end":24}},{"value":"/     option message_set_wire_format = true;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6411718,"byte_end":6411764,"line_start":444,"line_end":444,"column_start":5,"column_end":51}},{"value":"/     extensions 4 to max;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6411769,"byte_end":6411797,"line_start":445,"line_end":445,"column_start":5,"column_end":33}},{"value":"/   }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6411802,"byte_end":6411809,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/ Note that the message cannot have any defined fields; MessageSets only","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6411814,"byte_end":6411888,"line_start":447,"line_end":447,"column_start":5,"column_end":79}},{"value":"/ have extensions.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6411893,"byte_end":6411913,"line_start":448,"line_end":448,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6411918,"byte_end":6411921,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ All extensions of your type must be singular messages; e.g. they cannot","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6411926,"byte_end":6412001,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ be int32s, enums, or repeated messages.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6412006,"byte_end":6412049,"line_start":451,"line_end":451,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6412054,"byte_end":6412057,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ Because this is an option, the above two restrictions are not enforced by","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6412062,"byte_end":6412139,"line_start":453,"line_end":453,"column_start":5,"column_end":82}},{"value":"/ the protocol compiler.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6412144,"byte_end":6412170,"line_start":454,"line_end":454,"column_start":5,"column_end":31}},{"value":"prost(bool, optional, tag = \"1\", default = \"false\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6412175,"byte_end":6412225,"line_start":455,"line_end":455,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1238},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6412592,"byte_end":6412623,"line_start":461,"line_end":461,"column_start":9,"column_end":40},"name":"no_standard_descriptor_accessor","qualname":"::MessageOptions::no_standard_descriptor_accessor","value":"std::option::Option<bool>","parent":{"krate":0,"index":1236},"children":[],"decl_id":null,"docs":" Disables the generation of the standard \"descriptor()\" accessor, which can\n conflict with a field of the same name.  This is meant to make migration\n from proto1 easier; new code should avoid fields named \"descriptor\".\n","sig":null,"attributes":[{"value":"/ Disables the generation of the standard \"descriptor()\" accessor, which can","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6412292,"byte_end":6412370,"line_start":457,"line_end":457,"column_start":5,"column_end":83}},{"value":"/ conflict with a field of the same name.  This is meant to make migration","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6412375,"byte_end":6412451,"line_start":458,"line_end":458,"column_start":5,"column_end":81}},{"value":"/ from proto1 easier; new code should avoid fields named \"descriptor\".","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6412456,"byte_end":6412528,"line_start":459,"line_end":459,"column_start":5,"column_end":77}},{"value":"prost(bool, optional, tag = \"2\", default = \"false\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6412533,"byte_end":6412583,"line_start":460,"line_end":460,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1239},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6412968,"byte_end":6412978,"line_start":467,"line_end":467,"column_start":9,"column_end":19},"name":"deprecated","qualname":"::MessageOptions::deprecated","value":"std::option::Option<bool>","parent":{"krate":0,"index":1236},"children":[],"decl_id":null,"docs":" Is this message deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for the message, or it will be completely ignored; in the very least,\n this is a formalization for deprecating messages.\n","sig":null,"attributes":[{"value":"/ Is this message deprecated?","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6412658,"byte_end":6412689,"line_start":462,"line_end":462,"column_start":5,"column_end":36}},{"value":"/ Depending on the target platform, this can emit Deprecated annotations","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6412694,"byte_end":6412768,"line_start":463,"line_end":463,"column_start":5,"column_end":79}},{"value":"/ for the message, or it will be completely ignored; in the very least,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6412773,"byte_end":6412846,"line_start":464,"line_end":464,"column_start":5,"column_end":78}},{"value":"/ this is a formalization for deprecating messages.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6412851,"byte_end":6412904,"line_start":465,"line_end":465,"column_start":5,"column_end":58}},{"value":"prost(bool, optional, tag = \"3\", default = \"false\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6412909,"byte_end":6412959,"line_start":466,"line_end":466,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1240},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6413987,"byte_end":6413996,"line_start":490,"line_end":490,"column_start":9,"column_end":18},"name":"map_entry","qualname":"::MessageOptions::map_entry","value":"std::option::Option<bool>","parent":{"krate":0,"index":1236},"children":[],"decl_id":null,"docs":" Whether the message is an automatically generated map entry type for the\n maps field.","sig":null,"attributes":[{"value":"/ Whether the message is an automatically generated map entry type for the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6413013,"byte_end":6413089,"line_start":468,"line_end":468,"column_start":5,"column_end":81}},{"value":"/ maps field.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6413094,"byte_end":6413109,"line_start":469,"line_end":469,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6413114,"byte_end":6413117,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ For maps fields:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6413122,"byte_end":6413142,"line_start":471,"line_end":471,"column_start":5,"column_end":25}},{"value":"/     map<KeyType, ValueType> map_field = 1;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6413147,"byte_end":6413193,"line_start":472,"line_end":472,"column_start":5,"column_end":51}},{"value":"/ The parsed descriptor looks like:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6413198,"byte_end":6413235,"line_start":473,"line_end":473,"column_start":5,"column_end":42}},{"value":"/     message MapFieldEntry {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6413240,"byte_end":6413271,"line_start":474,"line_end":474,"column_start":5,"column_end":36}},{"value":"/         option map_entry = true;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6413276,"byte_end":6413312,"line_start":475,"line_end":475,"column_start":5,"column_end":41}},{"value":"/         optional KeyType key = 1;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6413317,"byte_end":6413354,"line_start":476,"line_end":476,"column_start":5,"column_end":42}},{"value":"/         optional ValueType value = 2;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6413359,"byte_end":6413400,"line_start":477,"line_end":477,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6413405,"byte_end":6413414,"line_start":478,"line_end":478,"column_start":5,"column_end":14}},{"value":"/     repeated MapFieldEntry map_field = 1;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6413419,"byte_end":6413464,"line_start":479,"line_end":479,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6413469,"byte_end":6413472,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ Implementations may choose not to generate the map_entry=true message, but","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6413477,"byte_end":6413555,"line_start":481,"line_end":481,"column_start":5,"column_end":83}},{"value":"/ use a native map in the target language to hold the keys and values.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6413560,"byte_end":6413632,"line_start":482,"line_end":482,"column_start":5,"column_end":77}},{"value":"/ The reflection APIs in such implementations still need to work as","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6413637,"byte_end":6413706,"line_start":483,"line_end":483,"column_start":5,"column_end":74}},{"value":"/ if the field is a repeated message field.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6413711,"byte_end":6413756,"line_start":484,"line_end":484,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6413761,"byte_end":6413764,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ NOTE: Do not set the option in .proto files. Always use the maps syntax","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6413769,"byte_end":6413844,"line_start":486,"line_end":486,"column_start":5,"column_end":80}},{"value":"/ instead. The option should only be implicitly set by the proto compiler","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6413849,"byte_end":6413924,"line_start":487,"line_end":487,"column_start":5,"column_end":80}},{"value":"/ parser.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6413929,"byte_end":6413940,"line_start":488,"line_end":488,"column_start":5,"column_end":16}},{"value":"prost(bool, optional, tag = \"7\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6413945,"byte_end":6413978,"line_start":489,"line_end":489,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":1241},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6414150,"byte_end":6414170,"line_start":493,"line_end":493,"column_start":9,"column_end":29},"name":"uninterpreted_option","qualname":"::MessageOptions::uninterpreted_option","value":"std::vec::Vec<UninterpretedOption>","parent":{"krate":0,"index":1236},"children":[],"decl_id":null,"docs":" The parser stores options it doesn't recognize here. See above.\n","sig":null,"attributes":[{"value":"/ The parser stores options it doesn't recognize here. See above.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6414031,"byte_end":6414098,"line_start":491,"line_end":491,"column_start":5,"column_end":72}},{"value":"prost(message, repeated, tag = \"999\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6414103,"byte_end":6414141,"line_start":492,"line_end":492,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1300},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6412234,"byte_end":6412257,"line_start":456,"line_end":456,"column_start":9,"column_end":32},"name":"message_set_wire_format","qualname":"<MessageOptions>::message_set_wire_format","value":"pub fn message_set_wire_format(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `message_set_wire_format`, or the default value if `message_set_wire_format` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1301},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6412592,"byte_end":6412623,"line_start":461,"line_end":461,"column_start":9,"column_end":40},"name":"no_standard_descriptor_accessor","qualname":"<MessageOptions>::no_standard_descriptor_accessor","value":"pub fn no_standard_descriptor_accessor(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `no_standard_descriptor_accessor`, or the default value if `no_standard_descriptor_accessor` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1302},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6412968,"byte_end":6412978,"line_start":467,"line_end":467,"column_start":9,"column_end":19},"name":"deprecated","qualname":"<MessageOptions>::deprecated","value":"pub fn deprecated(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `deprecated`, or the default value if `deprecated` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1303},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6413987,"byte_end":6413996,"line_start":490,"line_end":490,"column_start":9,"column_end":18},"name":"map_entry","qualname":"<MessageOptions>::map_entry","value":"pub fn map_entry(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `map_entry`, or the default value if `map_entry` is unset.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1310},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6414269,"byte_end":6414281,"line_start":496,"line_end":496,"column_start":12,"column_end":24},"name":"FieldOptions","qualname":"::FieldOptions","value":"FieldOptions { ctype, packed, jstype, lazy, deprecated, weak, uninterpreted_option }","parent":null,"children":[{"krate":0,"index":1311},{"krate":0,"index":1312},{"krate":0,"index":1313},{"krate":0,"index":1314},{"krate":0,"index":1315},{"krate":0,"index":1316},{"krate":0,"index":1317}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1311},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6414682,"byte_end":6414687,"line_start":502,"line_end":502,"column_start":9,"column_end":14},"name":"ctype","qualname":"::FieldOptions::ctype","value":"std::option::Option<i32>","parent":{"krate":0,"index":1310},"children":[],"decl_id":null,"docs":" The ctype option instructs the C++ code generator to use a different\n representation of the field than it normally would.  See the specific\n options below.  This option is not yet implemented in the open source\n release -- sorry, we'll try to include it in a future version!\n","sig":null,"attributes":[{"value":"/ The ctype option instructs the C++ code generator to use a different","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6414288,"byte_end":6414360,"line_start":497,"line_end":497,"column_start":5,"column_end":77}},{"value":"/ representation of the field than it normally would.  See the specific","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6414365,"byte_end":6414438,"line_start":498,"line_end":498,"column_start":5,"column_end":78}},{"value":"/ options below.  This option is not yet implemented in the open source","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6414443,"byte_end":6414516,"line_start":499,"line_end":499,"column_start":5,"column_end":78}},{"value":"/ release -- sorry, we'll try to include it in a future version!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6414521,"byte_end":6414587,"line_start":500,"line_end":500,"column_start":5,"column_end":71}},{"value":"prost(enumeration = \"field_options::CType\", optional, tag = \"1\", default =\n        \"String\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6414592,"byte_end":6414673,"line_start":501,"line_end":501,"column_start":5,"column_end":86}}]},{"kind":"Field","id":{"krate":0,"index":1312},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6415129,"byte_end":6415135,"line_start":509,"line_end":509,"column_start":9,"column_end":15},"name":"packed","qualname":"::FieldOptions::packed","value":"std::option::Option<bool>","parent":{"krate":0,"index":1310},"children":[],"decl_id":null,"docs":" The packed option can be enabled for repeated primitive fields to enable\n a more efficient representation on the wire. Rather than repeatedly\n writing the tag and type for each element, the entire array is encoded as\n a single length-delimited blob. In proto3, only explicit setting it to\n false will avoid using packed encoding.\n","sig":null,"attributes":[{"value":"/ The packed option can be enabled for repeated primitive fields to enable","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6414721,"byte_end":6414797,"line_start":503,"line_end":503,"column_start":5,"column_end":81}},{"value":"/ a more efficient representation on the wire. Rather than repeatedly","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6414802,"byte_end":6414873,"line_start":504,"line_end":504,"column_start":5,"column_end":76}},{"value":"/ writing the tag and type for each element, the entire array is encoded as","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6414878,"byte_end":6414955,"line_start":505,"line_end":505,"column_start":5,"column_end":82}},{"value":"/ a single length-delimited blob. In proto3, only explicit setting it to","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6414960,"byte_end":6415034,"line_start":506,"line_end":506,"column_start":5,"column_end":79}},{"value":"/ false will avoid using packed encoding.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6415039,"byte_end":6415082,"line_start":507,"line_end":507,"column_start":5,"column_end":48}},{"value":"prost(bool, optional, tag = \"2\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6415087,"byte_end":6415120,"line_start":508,"line_end":508,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":1313},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6415991,"byte_end":6415997,"line_start":522,"line_end":522,"column_start":9,"column_end":15},"name":"jstype","qualname":"::FieldOptions::jstype","value":"std::option::Option<i32>","parent":{"krate":0,"index":1310},"children":[],"decl_id":null,"docs":" The jstype option determines the JavaScript type used for values of the\n field.  The option is permitted only for 64 bit integral and fixed types\n (int64, uint64, sint64, fixed64, sfixed64).  A field with jstype JS_STRING\n is represented as JavaScript string, which avoids loss of precision that\n can happen when a large value is converted to a floating point JavaScript.\n Specifying JS_NUMBER for the jstype causes the generated JavaScript code to\n use the JavaScript \"number\" type.  The behavior of the default option\n JS_NORMAL is implementation dependent.","sig":null,"attributes":[{"value":"/ The jstype option determines the JavaScript type used for values of the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6415170,"byte_end":6415245,"line_start":510,"line_end":510,"column_start":5,"column_end":80}},{"value":"/ field.  The option is permitted only for 64 bit integral and fixed types","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6415250,"byte_end":6415326,"line_start":511,"line_end":511,"column_start":5,"column_end":81}},{"value":"/ (int64, uint64, sint64, fixed64, sfixed64).  A field with jstype JS_STRING","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6415331,"byte_end":6415409,"line_start":512,"line_end":512,"column_start":5,"column_end":83}},{"value":"/ is represented as JavaScript string, which avoids loss of precision that","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6415414,"byte_end":6415490,"line_start":513,"line_end":513,"column_start":5,"column_end":81}},{"value":"/ can happen when a large value is converted to a floating point JavaScript.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6415495,"byte_end":6415573,"line_start":514,"line_end":514,"column_start":5,"column_end":83}},{"value":"/ Specifying JS_NUMBER for the jstype causes the generated JavaScript code to","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6415578,"byte_end":6415657,"line_start":515,"line_end":515,"column_start":5,"column_end":84}},{"value":"/ use the JavaScript \"number\" type.  The behavior of the default option","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6415662,"byte_end":6415735,"line_start":516,"line_end":516,"column_start":5,"column_end":78}},{"value":"/ JS_NORMAL is implementation dependent.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6415740,"byte_end":6415782,"line_start":517,"line_end":517,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6415787,"byte_end":6415790,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ This option is an enum to permit additional types to be added, e.g.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6415795,"byte_end":6415866,"line_start":519,"line_end":519,"column_start":5,"column_end":76}},{"value":"/ goog.math.Integer.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6415871,"byte_end":6415893,"line_start":520,"line_end":520,"column_start":5,"column_end":27}},{"value":"prost(enumeration = \"field_options::JsType\", optional, tag = \"6\", default =\n        \"JsNormal\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6415898,"byte_end":6415982,"line_start":521,"line_end":521,"column_start":5,"column_end":89}}]},{"kind":"Field","id":{"krate":0,"index":1314},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6417918,"byte_end":6417922,"line_start":552,"line_end":552,"column_start":9,"column_end":13},"name":"lazy","qualname":"::FieldOptions::lazy","value":"std::option::Option<bool>","parent":{"krate":0,"index":1310},"children":[],"decl_id":null,"docs":" Should this field be parsed lazily?  Lazy applies only to message-type\n fields.  It means that when the outer message is initially parsed, the\n inner message's contents will not be parsed but instead stored in encoded\n form.  The inner message will actually be parsed when it is first accessed.","sig":null,"attributes":[{"value":"/ Should this field be parsed lazily?  Lazy applies only to message-type","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6416031,"byte_end":6416105,"line_start":523,"line_end":523,"column_start":5,"column_end":79}},{"value":"/ fields.  It means that when the outer message is initially parsed, the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6416110,"byte_end":6416184,"line_start":524,"line_end":524,"column_start":5,"column_end":79}},{"value":"/ inner message's contents will not be parsed but instead stored in encoded","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6416189,"byte_end":6416266,"line_start":525,"line_end":525,"column_start":5,"column_end":82}},{"value":"/ form.  The inner message will actually be parsed when it is first accessed.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6416271,"byte_end":6416350,"line_start":526,"line_end":526,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6416355,"byte_end":6416358,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ This is only a hint.  Implementations are free to choose whether to use","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6416363,"byte_end":6416438,"line_start":528,"line_end":528,"column_start":5,"column_end":80}},{"value":"/ eager or lazy parsing regardless of the value of this option.  However,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6416443,"byte_end":6416518,"line_start":529,"line_end":529,"column_start":5,"column_end":80}},{"value":"/ setting this option true suggests that the protocol author believes that","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6416523,"byte_end":6416599,"line_start":530,"line_end":530,"column_start":5,"column_end":81}},{"value":"/ using lazy parsing on this field is worth the additional bookkeeping","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6416604,"byte_end":6416676,"line_start":531,"line_end":531,"column_start":5,"column_end":77}},{"value":"/ overhead typically needed to implement it.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6416681,"byte_end":6416727,"line_start":532,"line_end":532,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6416732,"byte_end":6416735,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ This option does not affect the public interface of any generated code;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6416740,"byte_end":6416815,"line_start":534,"line_end":534,"column_start":5,"column_end":80}},{"value":"/ all method signatures remain the same.  Furthermore, thread-safety of the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6416820,"byte_end":6416897,"line_start":535,"line_end":535,"column_start":5,"column_end":82}},{"value":"/ interface is not affected by this option; const methods remain safe to","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6416902,"byte_end":6416976,"line_start":536,"line_end":536,"column_start":5,"column_end":79}},{"value":"/ call from multiple threads concurrently, while non-const methods continue","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6416981,"byte_end":6417058,"line_start":537,"line_end":537,"column_start":5,"column_end":82}},{"value":"/ to require exclusive access.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6417063,"byte_end":6417095,"line_start":538,"line_end":538,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6417100,"byte_end":6417103,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6417108,"byte_end":6417111,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ Note that implementations may choose not to check required fields within","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6417116,"byte_end":6417192,"line_start":541,"line_end":541,"column_start":5,"column_end":81}},{"value":"/ a lazy sub-message.  That is, calling IsInitialized() on the outer message","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6417197,"byte_end":6417275,"line_start":542,"line_end":542,"column_start":5,"column_end":83}},{"value":"/ may return true even if the inner message has missing required fields.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6417280,"byte_end":6417354,"line_start":543,"line_end":543,"column_start":5,"column_end":79}},{"value":"/ This is necessary because otherwise the inner message would have to be","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6417359,"byte_end":6417433,"line_start":544,"line_end":544,"column_start":5,"column_end":79}},{"value":"/ parsed in order to perform the check, defeating the purpose of lazy","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6417438,"byte_end":6417509,"line_start":545,"line_end":545,"column_start":5,"column_end":76}},{"value":"/ parsing.  An implementation which chooses not to check required fields","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6417514,"byte_end":6417588,"line_start":546,"line_end":546,"column_start":5,"column_end":79}},{"value":"/ must be consistent about it.  That is, for any particular sub-message, the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6417593,"byte_end":6417671,"line_start":547,"line_end":547,"column_start":5,"column_end":83}},{"value":"/ implementation must either *always* check its required fields, or *never*","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6417676,"byte_end":6417753,"line_start":548,"line_end":548,"column_start":5,"column_end":82}},{"value":"/ check its required fields, regardless of whether or not the message has","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6417758,"byte_end":6417833,"line_start":549,"line_end":549,"column_start":5,"column_end":80}},{"value":"/ been parsed.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6417838,"byte_end":6417854,"line_start":550,"line_end":550,"column_start":5,"column_end":21}},{"value":"prost(bool, optional, tag = \"5\", default = \"false\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6417859,"byte_end":6417909,"line_start":551,"line_end":551,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1315},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6418261,"byte_end":6418271,"line_start":558,"line_end":558,"column_start":9,"column_end":19},"name":"deprecated","qualname":"::FieldOptions::deprecated","value":"std::option::Option<bool>","parent":{"krate":0,"index":1310},"children":[],"decl_id":null,"docs":" Is this field deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for accessors, or it will be completely ignored; in the very least, this\n is a formalization for deprecating fields.\n","sig":null,"attributes":[{"value":"/ Is this field deprecated?","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6417957,"byte_end":6417986,"line_start":553,"line_end":553,"column_start":5,"column_end":34}},{"value":"/ Depending on the target platform, this can emit Deprecated annotations","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6417991,"byte_end":6418065,"line_start":554,"line_end":554,"column_start":5,"column_end":79}},{"value":"/ for accessors, or it will be completely ignored; in the very least, this","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6418070,"byte_end":6418146,"line_start":555,"line_end":555,"column_start":5,"column_end":81}},{"value":"/ is a formalization for deprecating fields.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6418151,"byte_end":6418197,"line_start":556,"line_end":556,"column_start":5,"column_end":51}},{"value":"prost(bool, optional, tag = \"3\", default = \"false\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6418202,"byte_end":6418252,"line_start":557,"line_end":557,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1316},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6418422,"byte_end":6418426,"line_start":561,"line_end":561,"column_start":9,"column_end":13},"name":"weak","qualname":"::FieldOptions::weak","value":"std::option::Option<bool>","parent":{"krate":0,"index":1310},"children":[],"decl_id":null,"docs":" For Google-internal migration only. Do not use.\n","sig":null,"attributes":[{"value":"/ For Google-internal migration only. Do not use.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6418306,"byte_end":6418357,"line_start":559,"line_end":559,"column_start":5,"column_end":56}},{"value":"prost(bool, optional, tag = \"10\", default = \"false\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6418362,"byte_end":6418413,"line_start":560,"line_end":560,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1317},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6418580,"byte_end":6418600,"line_start":564,"line_end":564,"column_start":9,"column_end":29},"name":"uninterpreted_option","qualname":"::FieldOptions::uninterpreted_option","value":"std::vec::Vec<UninterpretedOption>","parent":{"krate":0,"index":1310},"children":[],"decl_id":null,"docs":" The parser stores options it doesn't recognize here. See above.\n","sig":null,"attributes":[{"value":"/ The parser stores options it doesn't recognize here. See above.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6418461,"byte_end":6418528,"line_start":562,"line_end":562,"column_start":5,"column_end":72}},{"value":"prost(message, repeated, tag = \"999\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6418533,"byte_end":6418571,"line_start":563,"line_end":563,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1408},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6414682,"byte_end":6414687,"line_start":502,"line_end":502,"column_start":9,"column_end":14},"name":"ctype","qualname":"<FieldOptions>::ctype","value":"pub fn ctype(&Self) -> field_options::CType","parent":null,"children":[],"decl_id":null,"docs":"Returns the enum value of `ctype`, or the default if the field is unset or set to an invalid enum value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1410},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6415129,"byte_end":6415135,"line_start":509,"line_end":509,"column_start":9,"column_end":15},"name":"packed","qualname":"<FieldOptions>::packed","value":"pub fn packed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `packed`, or the default value if `packed` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1411},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6418261,"byte_end":6418271,"line_start":558,"line_end":558,"column_start":9,"column_end":19},"name":"deprecated","qualname":"<FieldOptions>::deprecated","value":"pub fn deprecated(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `deprecated`, or the default value if `deprecated` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1412},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6417918,"byte_end":6417922,"line_start":552,"line_end":552,"column_start":9,"column_end":13},"name":"lazy","qualname":"<FieldOptions>::lazy","value":"pub fn lazy(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `lazy`, or the default value if `lazy` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1413},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6415991,"byte_end":6415997,"line_start":522,"line_end":522,"column_start":9,"column_end":15},"name":"jstype","qualname":"<FieldOptions>::jstype","value":"pub fn jstype(&Self) -> field_options::JsType","parent":null,"children":[],"decl_id":null,"docs":"Returns the enum value of `jstype`, or the default if the field is unset or set to an invalid enum value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1415},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6418422,"byte_end":6418426,"line_start":561,"line_end":561,"column_start":9,"column_end":13},"name":"weak","qualname":"<FieldOptions>::weak","value":"pub fn weak(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `weak`, or the default value if `weak` is unset.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":27},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6418650,"byte_end":6418663,"line_start":566,"line_end":566,"column_start":9,"column_end":22},"name":"field_options","qualname":"::field_options","value":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","parent":null,"children":[{"krate":0,"index":1422},{"krate":0,"index":1455},{"krate":0,"index":1454},{"krate":0,"index":1452},{"krate":0,"index":1449},{"krate":0,"index":1450},{"krate":0,"index":1446},{"krate":0,"index":1447},{"krate":0,"index":1443},{"krate":0,"index":1441},{"krate":0,"index":1439},{"krate":0,"index":1432},{"krate":0,"index":1435},{"krate":0,"index":1437},{"krate":0,"index":1457},{"krate":0,"index":1490},{"krate":0,"index":1489},{"krate":0,"index":1487},{"krate":0,"index":1484},{"krate":0,"index":1485},{"krate":0,"index":1481},{"krate":0,"index":1482},{"krate":0,"index":1478},{"krate":0,"index":1476},{"krate":0,"index":1474},{"krate":0,"index":1467},{"krate":0,"index":1470},{"krate":0,"index":1472}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1423},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6418832,"byte_end":6418838,"line_start":571,"line_end":571,"column_start":9,"column_end":15},"name":"String","qualname":"::field_options::CType::String","value":"CType::String","parent":{"krate":0,"index":1422},"children":[],"decl_id":null,"docs":" Default mode.\n","sig":null,"attributes":[{"value":"/ Default mode.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6418806,"byte_end":6418823,"line_start":570,"line_end":570,"column_start":9,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1426},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6418852,"byte_end":6418856,"line_start":572,"line_end":572,"column_start":9,"column_end":13},"name":"Cord","qualname":"::field_options::CType::Cord","value":"CType::Cord","parent":{"krate":0,"index":1422},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1429},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6418870,"byte_end":6418881,"line_start":573,"line_end":573,"column_start":9,"column_end":20},"name":"StringPiece","qualname":"::field_options::CType::StringPiece","value":"CType::StringPiece","parent":{"krate":0,"index":1422},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1422},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6418790,"byte_end":6418795,"line_start":569,"line_end":569,"column_start":14,"column_end":19},"name":"CType","qualname":"::field_options::CType","value":"pub enum CType {\n\n    /// Default mode.\n    String = ,\n    Cord = ,\n    StringPiece = ,\n}","parent":null,"children":[{"krate":0,"index":1423},{"krate":0,"index":1426},{"krate":0,"index":1429}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(i32)","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6418764,"byte_end":6418776,"line_start":568,"line_end":568,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1458},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6419068,"byte_end":6419076,"line_start":579,"line_end":579,"column_start":9,"column_end":17},"name":"JsNormal","qualname":"::field_options::JsType::JsNormal","value":"JsType::JsNormal","parent":{"krate":0,"index":1457},"children":[],"decl_id":null,"docs":" Use the default type.\n","sig":null,"attributes":[{"value":"/ Use the default type.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6419034,"byte_end":6419059,"line_start":578,"line_end":578,"column_start":9,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1461},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6419126,"byte_end":6419134,"line_start":581,"line_end":581,"column_start":9,"column_end":17},"name":"JsString","qualname":"::field_options::JsType::JsString","value":"JsType::JsString","parent":{"krate":0,"index":1457},"children":[],"decl_id":null,"docs":" Use JavaScript strings.\n","sig":null,"attributes":[{"value":"/ Use JavaScript strings.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6419090,"byte_end":6419117,"line_start":580,"line_end":580,"column_start":9,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1464},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6419184,"byte_end":6419192,"line_start":583,"line_end":583,"column_start":9,"column_end":17},"name":"JsNumber","qualname":"::field_options::JsType::JsNumber","value":"JsType::JsNumber","parent":{"krate":0,"index":1457},"children":[],"decl_id":null,"docs":" Use JavaScript numbers.\n","sig":null,"attributes":[{"value":"/ Use JavaScript numbers.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6419148,"byte_end":6419175,"line_start":582,"line_end":582,"column_start":9,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":1457},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6419017,"byte_end":6419023,"line_start":577,"line_end":577,"column_start":14,"column_end":20},"name":"JsType","qualname":"::field_options::JsType","value":"pub enum JsType {\n\n    /// Use the default type.\n    JsNormal = ,\n\n    /// Use JavaScript strings.\n    JsString = ,\n\n    /// Use JavaScript numbers.\n    JsNumber = ,\n}","parent":null,"children":[{"krate":0,"index":1458},{"krate":0,"index":1461},{"krate":0,"index":1464}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(i32)","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6418991,"byte_end":6419003,"line_start":576,"line_end":576,"column_start":5,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":1492},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6419263,"byte_end":6419275,"line_start":587,"line_end":587,"column_start":12,"column_end":24},"name":"OneofOptions","qualname":"::OneofOptions","value":"OneofOptions { uninterpreted_option }","parent":null,"children":[{"krate":0,"index":1493}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1493},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6419401,"byte_end":6419421,"line_start":590,"line_end":590,"column_start":9,"column_end":29},"name":"uninterpreted_option","qualname":"::OneofOptions::uninterpreted_option","value":"std::vec::Vec<UninterpretedOption>","parent":{"krate":0,"index":1492},"children":[],"decl_id":null,"docs":" The parser stores options it doesn't recognize here. See above.\n","sig":null,"attributes":[{"value":"/ The parser stores options it doesn't recognize here. See above.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6419282,"byte_end":6419349,"line_start":588,"line_end":588,"column_start":5,"column_end":72}},{"value":"prost(message, repeated, tag = \"999\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6419354,"byte_end":6419392,"line_start":589,"line_end":589,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":1513},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6419520,"byte_end":6419531,"line_start":593,"line_end":593,"column_start":12,"column_end":23},"name":"EnumOptions","qualname":"::EnumOptions","value":"EnumOptions { allow_alias, deprecated, uninterpreted_option }","parent":null,"children":[{"krate":0,"index":1514},{"krate":0,"index":1515},{"krate":0,"index":1516}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1514},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6419676,"byte_end":6419687,"line_start":597,"line_end":597,"column_start":9,"column_end":20},"name":"allow_alias","qualname":"::EnumOptions::allow_alias","value":"std::option::Option<bool>","parent":{"krate":0,"index":1513},"children":[],"decl_id":null,"docs":" Set this option to true to allow mapping different tag names to the same\n value.\n","sig":null,"attributes":[{"value":"/ Set this option to true to allow mapping different tag names to the same","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6419538,"byte_end":6419614,"line_start":594,"line_end":594,"column_start":5,"column_end":81}},{"value":"/ value.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6419619,"byte_end":6419629,"line_start":595,"line_end":595,"column_start":5,"column_end":15}},{"value":"prost(bool, optional, tag = \"2\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6419634,"byte_end":6419667,"line_start":596,"line_end":596,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":1515},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6420023,"byte_end":6420033,"line_start":603,"line_end":603,"column_start":9,"column_end":19},"name":"deprecated","qualname":"::EnumOptions::deprecated","value":"std::option::Option<bool>","parent":{"krate":0,"index":1513},"children":[],"decl_id":null,"docs":" Is this enum deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for the enum, or it will be completely ignored; in the very least, this\n is a formalization for deprecating enums.\n","sig":null,"attributes":[{"value":"/ Is this enum deprecated?","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6419722,"byte_end":6419750,"line_start":598,"line_end":598,"column_start":5,"column_end":33}},{"value":"/ Depending on the target platform, this can emit Deprecated annotations","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6419755,"byte_end":6419829,"line_start":599,"line_end":599,"column_start":5,"column_end":79}},{"value":"/ for the enum, or it will be completely ignored; in the very least, this","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6419834,"byte_end":6419909,"line_start":600,"line_end":600,"column_start":5,"column_end":80}},{"value":"/ is a formalization for deprecating enums.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6419914,"byte_end":6419959,"line_start":601,"line_end":601,"column_start":5,"column_end":50}},{"value":"prost(bool, optional, tag = \"3\", default = \"false\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6419964,"byte_end":6420014,"line_start":602,"line_end":602,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1516},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6420187,"byte_end":6420207,"line_start":606,"line_end":606,"column_start":9,"column_end":29},"name":"uninterpreted_option","qualname":"::EnumOptions::uninterpreted_option","value":"std::vec::Vec<UninterpretedOption>","parent":{"krate":0,"index":1513},"children":[],"decl_id":null,"docs":" The parser stores options it doesn't recognize here. See above.\n","sig":null,"attributes":[{"value":"/ The parser stores options it doesn't recognize here. See above.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6420068,"byte_end":6420135,"line_start":604,"line_end":604,"column_start":5,"column_end":72}},{"value":"prost(message, repeated, tag = \"999\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6420140,"byte_end":6420178,"line_start":605,"line_end":605,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1553},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6419676,"byte_end":6419687,"line_start":597,"line_end":597,"column_start":9,"column_end":20},"name":"allow_alias","qualname":"<EnumOptions>::allow_alias","value":"pub fn allow_alias(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `allow_alias`, or the default value if `allow_alias` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1554},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6420023,"byte_end":6420033,"line_start":603,"line_end":603,"column_start":9,"column_end":19},"name":"deprecated","qualname":"<EnumOptions>::deprecated","value":"pub fn deprecated(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `deprecated`, or the default value if `deprecated` is unset.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1561},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6420306,"byte_end":6420322,"line_start":609,"line_end":609,"column_start":12,"column_end":28},"name":"EnumValueOptions","qualname":"::EnumValueOptions","value":"EnumValueOptions { deprecated, uninterpreted_option }","parent":null,"children":[{"krate":0,"index":1562},{"krate":0,"index":1563}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1562},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6420648,"byte_end":6420658,"line_start":615,"line_end":615,"column_start":9,"column_end":19},"name":"deprecated","qualname":"::EnumValueOptions::deprecated","value":"std::option::Option<bool>","parent":{"krate":0,"index":1561},"children":[],"decl_id":null,"docs":" Is this enum value deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for the enum value, or it will be completely ignored; in the very least,\n this is a formalization for deprecating enum values.\n","sig":null,"attributes":[{"value":"/ Is this enum value deprecated?","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6420329,"byte_end":6420363,"line_start":610,"line_end":610,"column_start":5,"column_end":39}},{"value":"/ Depending on the target platform, this can emit Deprecated annotations","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6420368,"byte_end":6420442,"line_start":611,"line_end":611,"column_start":5,"column_end":79}},{"value":"/ for the enum value, or it will be completely ignored; in the very least,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6420447,"byte_end":6420523,"line_start":612,"line_end":612,"column_start":5,"column_end":81}},{"value":"/ this is a formalization for deprecating enum values.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6420528,"byte_end":6420584,"line_start":613,"line_end":613,"column_start":5,"column_end":61}},{"value":"prost(bool, optional, tag = \"1\", default = \"false\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6420589,"byte_end":6420639,"line_start":614,"line_end":614,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1563},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6420812,"byte_end":6420832,"line_start":618,"line_end":618,"column_start":9,"column_end":29},"name":"uninterpreted_option","qualname":"::EnumValueOptions::uninterpreted_option","value":"std::vec::Vec<UninterpretedOption>","parent":{"krate":0,"index":1561},"children":[],"decl_id":null,"docs":" The parser stores options it doesn't recognize here. See above.\n","sig":null,"attributes":[{"value":"/ The parser stores options it doesn't recognize here. See above.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6420693,"byte_end":6420760,"line_start":616,"line_end":616,"column_start":5,"column_end":72}},{"value":"prost(message, repeated, tag = \"999\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6420765,"byte_end":6420803,"line_start":617,"line_end":617,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1589},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6420648,"byte_end":6420658,"line_start":615,"line_end":615,"column_start":9,"column_end":19},"name":"deprecated","qualname":"<EnumValueOptions>::deprecated","value":"pub fn deprecated(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `deprecated`, or the default value if `deprecated` is unset.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1596},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6420931,"byte_end":6420945,"line_start":621,"line_end":621,"column_start":12,"column_end":26},"name":"ServiceOptions","qualname":"::ServiceOptions","value":"ServiceOptions { deprecated, uninterpreted_option }","parent":null,"children":[{"krate":0,"index":1597},{"krate":0,"index":1598}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1597},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6421520,"byte_end":6421530,"line_start":632,"line_end":632,"column_start":9,"column_end":19},"name":"deprecated","qualname":"::ServiceOptions::deprecated","value":"std::option::Option<bool>","parent":{"krate":0,"index":1596},"children":[],"decl_id":null,"docs":" Is this service deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for the service, or it will be completely ignored; in the very least,\n this is a formalization for deprecating services.\n","sig":null,"attributes":[{"value":"/ Is this service deprecated?","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6421209,"byte_end":6421240,"line_start":627,"line_end":627,"column_start":5,"column_end":36}},{"value":"/ Depending on the target platform, this can emit Deprecated annotations","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6421245,"byte_end":6421319,"line_start":628,"line_end":628,"column_start":5,"column_end":79}},{"value":"/ for the service, or it will be completely ignored; in the very least,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6421324,"byte_end":6421397,"line_start":629,"line_end":629,"column_start":5,"column_end":78}},{"value":"/ this is a formalization for deprecating services.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6421402,"byte_end":6421455,"line_start":630,"line_end":630,"column_start":5,"column_end":58}},{"value":"prost(bool, optional, tag = \"33\", default = \"false\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6421460,"byte_end":6421511,"line_start":631,"line_end":631,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1598},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6421684,"byte_end":6421704,"line_start":635,"line_end":635,"column_start":9,"column_end":29},"name":"uninterpreted_option","qualname":"::ServiceOptions::uninterpreted_option","value":"std::vec::Vec<UninterpretedOption>","parent":{"krate":0,"index":1596},"children":[],"decl_id":null,"docs":" The parser stores options it doesn't recognize here. See above.\n","sig":null,"attributes":[{"value":"/ The parser stores options it doesn't recognize here. See above.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6421565,"byte_end":6421632,"line_start":633,"line_end":633,"column_start":5,"column_end":72}},{"value":"prost(message, repeated, tag = \"999\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6421637,"byte_end":6421675,"line_start":634,"line_end":634,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1624},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6421520,"byte_end":6421530,"line_start":632,"line_end":632,"column_start":9,"column_end":19},"name":"deprecated","qualname":"<ServiceOptions>::deprecated","value":"pub fn deprecated(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `deprecated`, or the default value if `deprecated` is unset.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1631},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6421803,"byte_end":6421816,"line_start":638,"line_end":638,"column_start":12,"column_end":25},"name":"MethodOptions","qualname":"::MethodOptions","value":"MethodOptions { deprecated, idempotency_level, uninterpreted_option }","parent":null,"children":[{"krate":0,"index":1632},{"krate":0,"index":1633},{"krate":0,"index":1634}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1632},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6422388,"byte_end":6422398,"line_start":649,"line_end":649,"column_start":9,"column_end":19},"name":"deprecated","qualname":"::MethodOptions::deprecated","value":"std::option::Option<bool>","parent":{"krate":0,"index":1631},"children":[],"decl_id":null,"docs":" Is this method deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for the method, or it will be completely ignored; in the very least,\n this is a formalization for deprecating methods.\n","sig":null,"attributes":[{"value":"/ Is this method deprecated?","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6422080,"byte_end":6422110,"line_start":644,"line_end":644,"column_start":5,"column_end":35}},{"value":"/ Depending on the target platform, this can emit Deprecated annotations","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6422115,"byte_end":6422189,"line_start":645,"line_end":645,"column_start":5,"column_end":79}},{"value":"/ for the method, or it will be completely ignored; in the very least,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6422194,"byte_end":6422266,"line_start":646,"line_end":646,"column_start":5,"column_end":77}},{"value":"/ this is a formalization for deprecating methods.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6422271,"byte_end":6422323,"line_start":647,"line_end":647,"column_start":5,"column_end":57}},{"value":"prost(bool, optional, tag = \"33\", default = \"false\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6422328,"byte_end":6422379,"line_start":648,"line_end":648,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1633},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6422548,"byte_end":6422565,"line_start":651,"line_end":651,"column_start":9,"column_end":26},"name":"idempotency_level","qualname":"::MethodOptions::idempotency_level","value":"std::option::Option<i32>","parent":{"krate":0,"index":1631},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(enumeration = \"method_options::IdempotencyLevel\", optional, tag =\n        \"34\", default = \"IdempotencyUnknown\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6422433,"byte_end":6422539,"line_start":650,"line_end":650,"column_start":5,"column_end":111}}]},{"kind":"Field","id":{"krate":0,"index":1634},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6422718,"byte_end":6422738,"line_start":654,"line_end":654,"column_start":9,"column_end":29},"name":"uninterpreted_option","qualname":"::MethodOptions::uninterpreted_option","value":"std::vec::Vec<UninterpretedOption>","parent":{"krate":0,"index":1631},"children":[],"decl_id":null,"docs":" The parser stores options it doesn't recognize here. See above.\n","sig":null,"attributes":[{"value":"/ The parser stores options it doesn't recognize here. See above.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6422599,"byte_end":6422666,"line_start":652,"line_end":652,"column_start":5,"column_end":72}},{"value":"prost(message, repeated, tag = \"999\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6422671,"byte_end":6422709,"line_start":653,"line_end":653,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1676},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6422388,"byte_end":6422398,"line_start":649,"line_end":649,"column_start":9,"column_end":19},"name":"deprecated","qualname":"<MethodOptions>::deprecated","value":"pub fn deprecated(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `deprecated`, or the default value if `deprecated` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1677},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6422548,"byte_end":6422565,"line_start":651,"line_end":651,"column_start":9,"column_end":26},"name":"idempotency_level","qualname":"<MethodOptions>::idempotency_level","value":"pub fn idempotency_level(&Self) -> method_options::IdempotencyLevel","parent":null,"children":[],"decl_id":null,"docs":"Returns the enum value of `idempotency_level`, or the default if the field is unset or set to an invalid enum value.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":28},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6422788,"byte_end":6422802,"line_start":656,"line_end":656,"column_start":9,"column_end":23},"name":"method_options","qualname":"::method_options","value":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","parent":null,"children":[{"krate":0,"index":1685},{"krate":0,"index":1718},{"krate":0,"index":1717},{"krate":0,"index":1715},{"krate":0,"index":1712},{"krate":0,"index":1713},{"krate":0,"index":1709},{"krate":0,"index":1710},{"krate":0,"index":1706},{"krate":0,"index":1704},{"krate":0,"index":1702},{"krate":0,"index":1695},{"krate":0,"index":1698},{"krate":0,"index":1700}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1686},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6423200,"byte_end":6423218,"line_start":663,"line_end":663,"column_start":9,"column_end":27},"name":"IdempotencyUnknown","qualname":"::method_options::IdempotencyLevel::IdempotencyUnknown","value":"IdempotencyLevel::IdempotencyUnknown","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1689},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6423263,"byte_end":6423276,"line_start":665,"line_end":665,"column_start":9,"column_end":22},"name":"NoSideEffects","qualname":"::method_options::IdempotencyLevel::NoSideEffects","value":"IdempotencyLevel::NoSideEffects","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":" implies idempotent\n","sig":null,"attributes":[{"value":"/ implies idempotent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6423232,"byte_end":6423254,"line_start":664,"line_end":664,"column_start":9,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1692},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6423340,"byte_end":6423350,"line_start":667,"line_end":667,"column_start":9,"column_end":19},"name":"Idempotent","qualname":"::method_options::IdempotencyLevel::Idempotent","value":"IdempotencyLevel::Idempotent","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":" idempotent, but may have side effects\n","sig":null,"attributes":[{"value":"/ idempotent, but may have side effects","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6423290,"byte_end":6423331,"line_start":666,"line_end":666,"column_start":9,"column_end":50}}]},{"kind":"Enum","id":{"krate":0,"index":1685},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6423173,"byte_end":6423189,"line_start":662,"line_end":662,"column_start":14,"column_end":30},"name":"IdempotencyLevel","qualname":"::method_options::IdempotencyLevel","value":"pub enum IdempotencyLevel {\n    IdempotencyUnknown = ,\n\n    /// implies idempotent\n    NoSideEffects = ,\n\n    /// idempotent, but may have side effects\n    Idempotent = ,\n}","parent":null,"children":[{"krate":0,"index":1686},{"krate":0,"index":1689},{"krate":0,"index":1692}],"decl_id":null,"docs":" Is this method side-effect-free (or safe in HTTP parlance), or idempotent,\n or neither? HTTP based RPC implementation may choose GET verb for safe\n methods, and PUT verb for idempotent methods instead of the default POST.\n","sig":null,"attributes":[{"value":"/ Is this method side-effect-free (or safe in HTTP parlance), or idempotent,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6422809,"byte_end":6422887,"line_start":657,"line_end":657,"column_start":5,"column_end":83}},{"value":"/ or neither? HTTP based RPC implementation may choose GET verb for safe","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6422892,"byte_end":6422966,"line_start":658,"line_end":658,"column_start":5,"column_end":79}},{"value":"/ methods, and PUT verb for idempotent methods instead of the default POST.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6422971,"byte_end":6423048,"line_start":659,"line_end":659,"column_start":5,"column_end":82}},{"value":"repr(i32)","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6423147,"byte_end":6423159,"line_start":661,"line_end":661,"column_start":5,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":1720},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6423819,"byte_end":6423838,"line_start":677,"line_end":677,"column_start":12,"column_end":31},"name":"UninterpretedOption","qualname":"::UninterpretedOption","value":"UninterpretedOption { name, identifier_value, positive_int_value, negative_int_value, double_value, string_value, aggregate_value }","parent":null,"children":[{"krate":0,"index":1721},{"krate":0,"index":1722},{"krate":0,"index":1723},{"krate":0,"index":1724},{"krate":0,"index":1725},{"krate":0,"index":1726},{"krate":0,"index":1727}],"decl_id":null,"docs":" A message representing a option the parser does not recognize. This only\n appears in options protos created by the compiler::Parser class.\n DescriptorPool resolves these when building Descriptor objects. Therefore,\n options protos in descriptor objects (e.g. returned by Descriptor::options(),\n or produced by Descriptor::CopyTo()) will never have UninterpretedOptions\n in them.\n","sig":null,"attributes":[{"value":"/ A message representing a option the parser does not recognize. This only","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6423364,"byte_end":6423440,"line_start":670,"line_end":670,"column_start":1,"column_end":77}},{"value":"/ appears in options protos created by the compiler::Parser class.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6423441,"byte_end":6423509,"line_start":671,"line_end":671,"column_start":1,"column_end":69}},{"value":"/ DescriptorPool resolves these when building Descriptor objects. Therefore,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6423510,"byte_end":6423588,"line_start":672,"line_end":672,"column_start":1,"column_end":79}},{"value":"/ options protos in descriptor objects (e.g. returned by Descriptor::options(),","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6423589,"byte_end":6423670,"line_start":673,"line_end":673,"column_start":1,"column_end":82}},{"value":"/ or produced by Descriptor::CopyTo()) will never have UninterpretedOptions","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6423671,"byte_end":6423748,"line_start":674,"line_end":674,"column_start":1,"column_end":78}},{"value":"/ in them.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6423749,"byte_end":6423761,"line_start":675,"line_end":675,"column_start":1,"column_end":13}}]},{"kind":"Field","id":{"krate":0,"index":1721},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6423890,"byte_end":6423894,"line_start":679,"line_end":679,"column_start":9,"column_end":13},"name":"name","qualname":"::UninterpretedOption::name","value":"std::vec::Vec<uninterpreted_option::NamePart>","parent":{"krate":0,"index":1720},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"2\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6423845,"byte_end":6423881,"line_start":678,"line_end":678,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":1722},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6424148,"byte_end":6424164,"line_start":683,"line_end":683,"column_start":9,"column_end":25},"name":"identifier_value","qualname":"::UninterpretedOption::identifier_value","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1720},"children":[],"decl_id":null,"docs":" The value of the uninterpreted option, in whatever type the tokenizer\n identified it as during parsing. Exactly one of these should be set.\n","sig":null,"attributes":[{"value":"/ The value of the uninterpreted option, in whatever type the tokenizer","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6423949,"byte_end":6424022,"line_start":680,"line_end":680,"column_start":5,"column_end":78}},{"value":"/ identified it as during parsing. Exactly one of these should be set.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6424027,"byte_end":6424099,"line_start":681,"line_end":681,"column_start":5,"column_end":77}},{"value":"prost(string, optional, tag = \"3\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6424104,"byte_end":6424139,"line_start":682,"line_end":682,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1723},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6424258,"byte_end":6424276,"line_start":685,"line_end":685,"column_start":9,"column_end":27},"name":"positive_int_value","qualname":"::UninterpretedOption::positive_int_value","value":"std::option::Option<u64>","parent":{"krate":0,"index":1720},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(uint64, optional, tag = \"4\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6424214,"byte_end":6424249,"line_start":684,"line_end":684,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1724},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6424353,"byte_end":6424371,"line_start":687,"line_end":687,"column_start":9,"column_end":27},"name":"negative_int_value","qualname":"::UninterpretedOption::negative_int_value","value":"std::option::Option<i64>","parent":{"krate":0,"index":1720},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(int64, optional, tag = \"5\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6424310,"byte_end":6424344,"line_start":686,"line_end":686,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":1725},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6424449,"byte_end":6424461,"line_start":689,"line_end":689,"column_start":9,"column_end":21},"name":"double_value","qualname":"::UninterpretedOption::double_value","value":"std::option::Option<f64>","parent":{"krate":0,"index":1720},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(double, optional, tag = \"6\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6424405,"byte_end":6424440,"line_start":688,"line_end":688,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1726},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6424538,"byte_end":6424550,"line_start":691,"line_end":691,"column_start":9,"column_end":21},"name":"string_value","qualname":"::UninterpretedOption::string_value","value":"std::option::Option<std::vec::Vec<u8>>","parent":{"krate":0,"index":1720},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(bytes, optional, tag = \"7\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6424495,"byte_end":6424529,"line_start":690,"line_end":690,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":1727},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6424642,"byte_end":6424657,"line_start":693,"line_end":693,"column_start":9,"column_end":24},"name":"aggregate_value","qualname":"::UninterpretedOption::aggregate_value","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1720},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(string, optional, tag = \"8\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6424598,"byte_end":6424633,"line_start":692,"line_end":692,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1808},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6424148,"byte_end":6424164,"line_start":683,"line_end":683,"column_start":9,"column_end":25},"name":"identifier_value","qualname":"<UninterpretedOption>::identifier_value","value":"pub fn identifier_value(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `identifier_value`, or the default value if `identifier_value` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1809},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6424258,"byte_end":6424276,"line_start":685,"line_end":685,"column_start":9,"column_end":27},"name":"positive_int_value","qualname":"<UninterpretedOption>::positive_int_value","value":"pub fn positive_int_value(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `positive_int_value`, or the default value if `positive_int_value` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1810},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6424353,"byte_end":6424371,"line_start":687,"line_end":687,"column_start":9,"column_end":27},"name":"negative_int_value","qualname":"<UninterpretedOption>::negative_int_value","value":"pub fn negative_int_value(&Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `negative_int_value`, or the default value if `negative_int_value` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1811},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6424449,"byte_end":6424461,"line_start":689,"line_end":689,"column_start":9,"column_end":21},"name":"double_value","qualname":"<UninterpretedOption>::double_value","value":"pub fn double_value(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `double_value`, or the default value if `double_value` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1812},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6424538,"byte_end":6424550,"line_start":691,"line_end":691,"column_start":9,"column_end":21},"name":"string_value","qualname":"<UninterpretedOption>::string_value","value":"pub fn string_value(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `string_value`, or the default value if `string_value` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1813},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6424642,"byte_end":6424657,"line_start":693,"line_end":693,"column_start":9,"column_end":24},"name":"aggregate_value","qualname":"<UninterpretedOption>::aggregate_value","value":"pub fn aggregate_value(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `aggregate_value`, or the default value if `aggregate_value` is unset.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6424713,"byte_end":6424733,"line_start":695,"line_end":695,"column_start":9,"column_end":29},"name":"uninterpreted_option","qualname":"::uninterpreted_option","value":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","parent":null,"children":[{"krate":0,"index":1820},{"krate":0,"index":1845},{"krate":0,"index":1841},{"krate":0,"index":1842},{"krate":0,"index":1823},{"krate":0,"index":1833},{"krate":0,"index":1835}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1820},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6425150,"byte_end":6425158,"line_start":702,"line_end":702,"column_start":16,"column_end":24},"name":"NamePart","qualname":"::uninterpreted_option::NamePart","value":"NamePart { name_part, is_extension }","parent":null,"children":[{"krate":0,"index":1821},{"krate":0,"index":1822}],"decl_id":null,"docs":" The name of the uninterpreted option.  Each string represents a segment in\n a dot-separated name.  is_extension is true iff a segment represents an\n extension (denoted with parentheses in options specs in .proto files).\n E.g.,{ [\"foo\", false], [\"bar.baz\", true], [\"qux\", false] } represents\n \"foo.(bar.baz).qux\".\n","sig":null,"attributes":[{"value":"/ The name of the uninterpreted option.  Each string represents a segment in","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6424740,"byte_end":6424818,"line_start":696,"line_end":696,"column_start":5,"column_end":83}},{"value":"/ a dot-separated name.  is_extension is true iff a segment represents an","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6424823,"byte_end":6424898,"line_start":697,"line_end":697,"column_start":5,"column_end":80}},{"value":"/ extension (denoted with parentheses in options specs in .proto files).","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6424903,"byte_end":6424977,"line_start":698,"line_end":698,"column_start":5,"column_end":79}},{"value":"/ E.g.,{ [\"foo\", false], [\"bar.baz\", true], [\"qux\", false] } represents","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6424982,"byte_end":6425055,"line_start":699,"line_end":699,"column_start":5,"column_end":78}},{"value":"/ \"foo.(bar.baz).qux\".","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6425060,"byte_end":6425084,"line_start":700,"line_end":700,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":1821},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6425217,"byte_end":6425226,"line_start":704,"line_end":704,"column_start":13,"column_end":22},"name":"name_part","qualname":"::uninterpreted_option::NamePart::name_part","value":"std::string::String","parent":{"krate":0,"index":1820},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(string, required, tag = \"1\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6425169,"byte_end":6425204,"line_start":703,"line_end":703,"column_start":9,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1822},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6425303,"byte_end":6425315,"line_start":706,"line_end":706,"column_start":13,"column_end":25},"name":"is_extension","qualname":"::uninterpreted_option::NamePart::is_extension","value":"bool","parent":{"krate":0,"index":1820},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(bool, required, tag = \"2\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6425257,"byte_end":6425290,"line_start":705,"line_end":705,"column_start":9,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1847},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6425601,"byte_end":6425615,"line_start":715,"line_end":715,"column_start":12,"column_end":26},"name":"SourceCodeInfo","qualname":"::SourceCodeInfo","value":"SourceCodeInfo { location }","parent":null,"children":[{"krate":0,"index":1848}],"decl_id":null,"docs":" Encapsulates information about the original source file from which a\n FileDescriptorProto was generated.\n","sig":null,"attributes":[{"value":"/ Encapsulates information about the original source file from which a","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6425432,"byte_end":6425504,"line_start":712,"line_end":712,"column_start":1,"column_end":73}},{"value":"/ FileDescriptorProto was generated.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6425505,"byte_end":6425543,"line_start":713,"line_end":713,"column_start":1,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":1848},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6428131,"byte_end":6428139,"line_start":760,"line_end":760,"column_start":9,"column_end":17},"name":"location","qualname":"::SourceCodeInfo::location","value":"std::vec::Vec<source_code_info::Location>","parent":{"krate":0,"index":1847},"children":[],"decl_id":null,"docs":" A Location identifies a piece of source code in a .proto file which\n corresponds to a particular definition.  This information is intended\n to be useful to IDEs, code indexers, documentation generators, and similar\n tools.","sig":null,"attributes":[{"value":"/ A Location identifies a piece of source code in a .proto file which","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6425622,"byte_end":6425693,"line_start":716,"line_end":716,"column_start":5,"column_end":76}},{"value":"/ corresponds to a particular definition.  This information is intended","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6425698,"byte_end":6425771,"line_start":717,"line_end":717,"column_start":5,"column_end":78}},{"value":"/ to be useful to IDEs, code indexers, documentation generators, and similar","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6425776,"byte_end":6425854,"line_start":718,"line_end":718,"column_start":5,"column_end":83}},{"value":"/ tools.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6425859,"byte_end":6425869,"line_start":719,"line_end":719,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6425874,"byte_end":6425877,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ For example, say we have a file like:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6425882,"byte_end":6425923,"line_start":721,"line_end":721,"column_start":5,"column_end":46}},{"value":"/   message Foo {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6425928,"byte_end":6425947,"line_start":722,"line_end":722,"column_start":5,"column_end":24}},{"value":"/     optional string foo = 1;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6425952,"byte_end":6425984,"line_start":723,"line_end":723,"column_start":5,"column_end":37}},{"value":"/   }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6425989,"byte_end":6425996,"line_start":724,"line_end":724,"column_start":5,"column_end":12}},{"value":"/ Let's look at just the field definition:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6426001,"byte_end":6426045,"line_start":725,"line_end":725,"column_start":5,"column_end":49}},{"value":"/   optional string foo = 1;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6426050,"byte_end":6426080,"line_start":726,"line_end":726,"column_start":5,"column_end":35}},{"value":"/   ^       ^^     ^^  ^  ^^^","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6426085,"byte_end":6426116,"line_start":727,"line_end":727,"column_start":5,"column_end":36}},{"value":"/   a       bc     de  f  ghi","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6426121,"byte_end":6426152,"line_start":728,"line_end":728,"column_start":5,"column_end":36}},{"value":"/ We have the following locations:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6426157,"byte_end":6426193,"line_start":729,"line_end":729,"column_start":5,"column_end":41}},{"value":"/   span   path               represents","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6426198,"byte_end":6426240,"line_start":730,"line_end":730,"column_start":5,"column_end":47}},{"value":"/   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6426245,"byte_end":6426304,"line_start":731,"line_end":731,"column_start":5,"column_end":64}},{"value":"/   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6426309,"byte_end":6426362,"line_start":732,"line_end":732,"column_start":5,"column_end":58}},{"value":"/   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6426367,"byte_end":6426417,"line_start":733,"line_end":733,"column_start":5,"column_end":55}},{"value":"/   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6426422,"byte_end":6426469,"line_start":734,"line_end":734,"column_start":5,"column_end":52}},{"value":"/   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6426474,"byte_end":6426521,"line_start":735,"line_end":735,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6426526,"byte_end":6426529,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ Notes:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6426534,"byte_end":6426544,"line_start":737,"line_end":737,"column_start":5,"column_end":15}},{"value":"/ - A location may refer to a repeated field itself (i.e. not to any","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6426549,"byte_end":6426619,"line_start":738,"line_end":738,"column_start":5,"column_end":75}},{"value":"/   particular index within it).  This is used whenever a set of elements are","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6426624,"byte_end":6426703,"line_start":739,"line_end":739,"column_start":5,"column_end":84}},{"value":"/   logically enclosed in a single code segment.  For example, an entire","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6426708,"byte_end":6426782,"line_start":740,"line_end":740,"column_start":5,"column_end":79}},{"value":"/   extend block (possibly containing multiple extension definitions) will","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6426787,"byte_end":6426863,"line_start":741,"line_end":741,"column_start":5,"column_end":81}},{"value":"/   have an outer location whose path refers to the \"extensions\" repeated","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6426868,"byte_end":6426943,"line_start":742,"line_end":742,"column_start":5,"column_end":80}},{"value":"/   field without an index.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6426948,"byte_end":6426977,"line_start":743,"line_end":743,"column_start":5,"column_end":34}},{"value":"/ - Multiple locations may have the same path.  This happens when a single","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6426982,"byte_end":6427058,"line_start":744,"line_end":744,"column_start":5,"column_end":81}},{"value":"/   logical declaration is spread out across multiple places.  The most","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6427063,"byte_end":6427136,"line_start":745,"line_end":745,"column_start":5,"column_end":78}},{"value":"/   obvious example is the \"extend\" block again -- there may be multiple","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6427141,"byte_end":6427215,"line_start":746,"line_end":746,"column_start":5,"column_end":79}},{"value":"/   extend blocks in the same scope, each of which will have the same path.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6427220,"byte_end":6427297,"line_start":747,"line_end":747,"column_start":5,"column_end":82}},{"value":"/ - A location's span is not always a subset of its parent's span.  For","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6427302,"byte_end":6427375,"line_start":748,"line_end":748,"column_start":5,"column_end":78}},{"value":"/   example, the \"extendee\" of an extension declaration appears at the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6427380,"byte_end":6427452,"line_start":749,"line_end":749,"column_start":5,"column_end":77}},{"value":"/   beginning of the \"extend\" block and is shared by all extensions within","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6427457,"byte_end":6427533,"line_start":750,"line_end":750,"column_start":5,"column_end":81}},{"value":"/   the block.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6427538,"byte_end":6427554,"line_start":751,"line_end":751,"column_start":5,"column_end":21}},{"value":"/ - Just because a location's span is a subset of some other location's span","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6427559,"byte_end":6427637,"line_start":752,"line_end":752,"column_start":5,"column_end":83}},{"value":"/   does not mean that it is a descendant.  For example, a \"group\" defines","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6427642,"byte_end":6427718,"line_start":753,"line_end":753,"column_start":5,"column_end":81}},{"value":"/   both a type and a field in a single declaration.  Thus, the locations","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6427723,"byte_end":6427798,"line_start":754,"line_end":754,"column_start":5,"column_end":80}},{"value":"/   corresponding to the type and field and their components will overlap.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6427803,"byte_end":6427879,"line_start":755,"line_end":755,"column_start":5,"column_end":81}},{"value":"/ - Code which tries to interpret locations should probably be designed to","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6427884,"byte_end":6427960,"line_start":756,"line_end":756,"column_start":5,"column_end":81}},{"value":"/   ignore those that it doesn't understand, as more types of locations could","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6427965,"byte_end":6428044,"line_start":757,"line_end":757,"column_start":5,"column_end":84}},{"value":"/   be recorded in the future.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6428049,"byte_end":6428081,"line_start":758,"line_end":758,"column_start":5,"column_end":37}},{"value":"prost(message, repeated, tag = \"1\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6428086,"byte_end":6428122,"line_start":759,"line_end":759,"column_start":5,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6428196,"byte_end":6428212,"line_start":762,"line_end":762,"column_start":9,"column_end":25},"name":"source_code_info","qualname":"::source_code_info","value":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","parent":null,"children":[{"krate":0,"index":1868},{"krate":0,"index":1945},{"krate":0,"index":1941},{"krate":0,"index":1942},{"krate":0,"index":1874},{"krate":0,"index":1889},{"krate":0,"index":1891},{"krate":0,"index":1938}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1868},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6428280,"byte_end":6428288,"line_start":764,"line_end":764,"column_start":16,"column_end":24},"name":"Location","qualname":"::source_code_info::Location","value":"Location { path, span, leading_comments, trailing_comments, leading_detached_comments }","parent":null,"children":[{"krate":0,"index":1869},{"krate":0,"index":1870},{"krate":0,"index":1871},{"krate":0,"index":1872},{"krate":0,"index":1873}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1869},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6429481,"byte_end":6429485,"line_start":789,"line_end":789,"column_start":13,"column_end":17},"name":"path","qualname":"::source_code_info::Location::path","value":"std::vec::Vec<i32>","parent":{"krate":0,"index":1868},"children":[],"decl_id":null,"docs":" Identifies which part of the FileDescriptorProto was defined at this\n location.","sig":null,"attributes":[{"value":"/ Identifies which part of the FileDescriptorProto was defined at this","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6428299,"byte_end":6428371,"line_start":765,"line_end":765,"column_start":9,"column_end":81}},{"value":"/ location.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6428380,"byte_end":6428393,"line_start":766,"line_end":766,"column_start":9,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6428402,"byte_end":6428405,"line_start":767,"line_end":767,"column_start":9,"column_end":12}},{"value":"/ Each element is a field number or an index.  They form a path from","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6428414,"byte_end":6428484,"line_start":768,"line_end":768,"column_start":9,"column_end":79}},{"value":"/ the root FileDescriptorProto to the place where the definition.  For","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6428493,"byte_end":6428565,"line_start":769,"line_end":769,"column_start":9,"column_end":81}},{"value":"/ example, this path:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6428574,"byte_end":6428597,"line_start":770,"line_end":770,"column_start":9,"column_end":32}},{"value":"/   [ 4, 3, 2, 7, 1 ]","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6428606,"byte_end":6428629,"line_start":771,"line_end":771,"column_start":9,"column_end":32}},{"value":"/ refers to:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6428638,"byte_end":6428652,"line_start":772,"line_end":772,"column_start":9,"column_end":23}},{"value":"/   file.message_type(3)  // 4, 3","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6428661,"byte_end":6428696,"line_start":773,"line_end":773,"column_start":9,"column_end":44}},{"value":"/       .field(7)         // 2, 7","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6428705,"byte_end":6428740,"line_start":774,"line_end":774,"column_start":9,"column_end":44}},{"value":"/       .name()           // 1","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6428749,"byte_end":6428781,"line_start":775,"line_end":775,"column_start":9,"column_end":41}},{"value":"/ This is because FileDescriptorProto.message_type has field number 4:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6428790,"byte_end":6428862,"line_start":776,"line_end":776,"column_start":9,"column_end":81}},{"value":"/   repeated DescriptorProto message_type = 4;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6428871,"byte_end":6428919,"line_start":777,"line_end":777,"column_start":9,"column_end":57}},{"value":"/ and DescriptorProto.field has field number 2:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6428928,"byte_end":6428977,"line_start":778,"line_end":778,"column_start":9,"column_end":58}},{"value":"/   repeated FieldDescriptorProto field = 2;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6428986,"byte_end":6429032,"line_start":779,"line_end":779,"column_start":9,"column_end":55}},{"value":"/ and FieldDescriptorProto.name has field number 1:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6429041,"byte_end":6429094,"line_start":780,"line_end":780,"column_start":9,"column_end":62}},{"value":"/   optional string name = 1;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6429103,"byte_end":6429134,"line_start":781,"line_end":781,"column_start":9,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6429143,"byte_end":6429146,"line_start":782,"line_end":782,"column_start":9,"column_end":12}},{"value":"/ Thus, the above path gives the location of a field name.  If we removed","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6429155,"byte_end":6429230,"line_start":783,"line_end":783,"column_start":9,"column_end":84}},{"value":"/ the last element:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6429239,"byte_end":6429260,"line_start":784,"line_end":784,"column_start":9,"column_end":30}},{"value":"/   [ 4, 3, 2, 7 ]","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6429269,"byte_end":6429289,"line_start":785,"line_end":785,"column_start":9,"column_end":29}},{"value":"/ this path refers to the whole field declaration (from the beginning","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6429298,"byte_end":6429369,"line_start":786,"line_end":786,"column_start":9,"column_end":80}},{"value":"/ of the label to the terminating semicolon).","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6429378,"byte_end":6429425,"line_start":787,"line_end":787,"column_start":9,"column_end":56}},{"value":"prost(int32, repeated, tag = \"1\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6429434,"byte_end":6429468,"line_start":788,"line_end":788,"column_start":9,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":1870},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6429940,"byte_end":6429944,"line_start":796,"line_end":796,"column_start":13,"column_end":17},"name":"span","qualname":"::source_code_info::Location::span","value":"std::vec::Vec<i32>","parent":{"krate":0,"index":1868},"children":[],"decl_id":null,"docs":" Always has exactly three or four elements: start line, start column,\n end line (optional, otherwise assumed same as start line), end column.\n These are packed into a single field for efficiency.  Note that line\n and column numbers are zero-based -- typically you will want to add\n 1 to each before displaying to a user.\n","sig":null,"attributes":[{"value":"/ Always has exactly three or four elements: start line, start column,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6429517,"byte_end":6429589,"line_start":790,"line_end":790,"column_start":9,"column_end":81}},{"value":"/ end line (optional, otherwise assumed same as start line), end column.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6429598,"byte_end":6429672,"line_start":791,"line_end":791,"column_start":9,"column_end":83}},{"value":"/ These are packed into a single field for efficiency.  Note that line","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6429681,"byte_end":6429753,"line_start":792,"line_end":792,"column_start":9,"column_end":81}},{"value":"/ and column numbers are zero-based -- typically you will want to add","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6429762,"byte_end":6429833,"line_start":793,"line_end":793,"column_start":9,"column_end":80}},{"value":"/ 1 to each before displaying to a user.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6429842,"byte_end":6429884,"line_start":794,"line_end":794,"column_start":9,"column_end":51}},{"value":"prost(int32, repeated, tag = \"2\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6429893,"byte_end":6429927,"line_start":795,"line_end":795,"column_start":9,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":1871},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6432097,"byte_end":6432113,"line_start":845,"line_end":845,"column_start":13,"column_end":29},"name":"leading_comments","qualname":"::source_code_info::Location::leading_comments","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1868},"children":[],"decl_id":null,"docs":" If this SourceCodeInfo represents a complete declaration, these are any\n comments appearing before and after the declaration which appear to be\n attached to the declaration.","sig":null,"attributes":[{"value":"/ If this SourceCodeInfo represents a complete declaration, these are any","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6429976,"byte_end":6430051,"line_start":797,"line_end":797,"column_start":9,"column_end":84}},{"value":"/ comments appearing before and after the declaration which appear to be","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6430060,"byte_end":6430134,"line_start":798,"line_end":798,"column_start":9,"column_end":83}},{"value":"/ attached to the declaration.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6430143,"byte_end":6430175,"line_start":799,"line_end":799,"column_start":9,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6430184,"byte_end":6430187,"line_start":800,"line_end":800,"column_start":9,"column_end":12}},{"value":"/ A series of line comments appearing on consecutive lines, with no other","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6430196,"byte_end":6430271,"line_start":801,"line_end":801,"column_start":9,"column_end":84}},{"value":"/ tokens appearing on those lines, will be treated as a single comment.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6430280,"byte_end":6430353,"line_start":802,"line_end":802,"column_start":9,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6430362,"byte_end":6430365,"line_start":803,"line_end":803,"column_start":9,"column_end":12}},{"value":"/ leading_detached_comments will keep paragraphs of comments that appear","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6430374,"byte_end":6430448,"line_start":804,"line_end":804,"column_start":9,"column_end":83}},{"value":"/ before (but not connected to) the current element. Each paragraph,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6430457,"byte_end":6430527,"line_start":805,"line_end":805,"column_start":9,"column_end":79}},{"value":"/ separated by empty lines, will be one comment element in the repeated","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6430536,"byte_end":6430609,"line_start":806,"line_end":806,"column_start":9,"column_end":82}},{"value":"/ field.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6430618,"byte_end":6430628,"line_start":807,"line_end":807,"column_start":9,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6430637,"byte_end":6430640,"line_start":808,"line_end":808,"column_start":9,"column_end":12}},{"value":"/ Only the comment content is provided; comment markers (e.g. //) are","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6430649,"byte_end":6430720,"line_start":809,"line_end":809,"column_start":9,"column_end":80}},{"value":"/ stripped out.  For block comments, leading whitespace and an asterisk","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6430729,"byte_end":6430802,"line_start":810,"line_end":810,"column_start":9,"column_end":82}},{"value":"/ will be stripped from the beginning of each line other than the first.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6430811,"byte_end":6430885,"line_start":811,"line_end":811,"column_start":9,"column_end":83}},{"value":"/ Newlines are included in the output.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6430894,"byte_end":6430934,"line_start":812,"line_end":812,"column_start":9,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6430943,"byte_end":6430946,"line_start":813,"line_end":813,"column_start":9,"column_end":12}},{"value":"/ Examples:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6430955,"byte_end":6430968,"line_start":814,"line_end":814,"column_start":9,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6430977,"byte_end":6430980,"line_start":815,"line_end":815,"column_start":9,"column_end":12}},{"value":"/   optional int32 foo = 1;  // Comment attached to foo.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6430989,"byte_end":6431047,"line_start":816,"line_end":816,"column_start":9,"column_end":67}},{"value":"/   // Comment attached to bar.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6431056,"byte_end":6431089,"line_start":817,"line_end":817,"column_start":9,"column_end":42}},{"value":"/   optional int32 bar = 2;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6431098,"byte_end":6431127,"line_start":818,"line_end":818,"column_start":9,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6431136,"byte_end":6431139,"line_start":819,"line_end":819,"column_start":9,"column_end":12}},{"value":"/   optional string baz = 3;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6431148,"byte_end":6431178,"line_start":820,"line_end":820,"column_start":9,"column_end":39}},{"value":"/   // Comment attached to baz.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6431187,"byte_end":6431220,"line_start":821,"line_end":821,"column_start":9,"column_end":42}},{"value":"/   // Another line attached to baz.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6431229,"byte_end":6431267,"line_start":822,"line_end":822,"column_start":9,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6431276,"byte_end":6431279,"line_start":823,"line_end":823,"column_start":9,"column_end":12}},{"value":"/   // Comment attached to qux.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6431288,"byte_end":6431321,"line_start":824,"line_end":824,"column_start":9,"column_end":42}},{"value":"/   //","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6431330,"byte_end":6431338,"line_start":825,"line_end":825,"column_start":9,"column_end":17}},{"value":"/   // Another line attached to qux.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6431347,"byte_end":6431385,"line_start":826,"line_end":826,"column_start":9,"column_end":47}},{"value":"/   optional double qux = 4;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6431394,"byte_end":6431424,"line_start":827,"line_end":827,"column_start":9,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6431433,"byte_end":6431436,"line_start":828,"line_end":828,"column_start":9,"column_end":12}},{"value":"/   // Detached comment for corge. This is not leading or trailing comments","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6431445,"byte_end":6431522,"line_start":829,"line_end":829,"column_start":9,"column_end":86}},{"value":"/   // to qux or corge because there are blank lines separating it from","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6431531,"byte_end":6431604,"line_start":830,"line_end":830,"column_start":9,"column_end":82}},{"value":"/   // both.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6431613,"byte_end":6431627,"line_start":831,"line_end":831,"column_start":9,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6431636,"byte_end":6431639,"line_start":832,"line_end":832,"column_start":9,"column_end":12}},{"value":"/   // Detached comment for corge paragraph 2.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6431648,"byte_end":6431696,"line_start":833,"line_end":833,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6431705,"byte_end":6431708,"line_start":834,"line_end":834,"column_start":9,"column_end":12}},{"value":"/   optional string corge = 5;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6431717,"byte_end":6431749,"line_start":835,"line_end":835,"column_start":9,"column_end":41}},{"value":"/   /* Block comment attached","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6431758,"byte_end":6431789,"line_start":836,"line_end":836,"column_start":9,"column_end":40}},{"value":"/    * to corge.  Leading asterisks","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6431798,"byte_end":6431835,"line_start":837,"line_end":837,"column_start":9,"column_end":46}},{"value":"/    * will be removed. */","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6431844,"byte_end":6431872,"line_start":838,"line_end":838,"column_start":9,"column_end":37}},{"value":"/   /* Block comment attached to","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6431881,"byte_end":6431915,"line_start":839,"line_end":839,"column_start":9,"column_end":43}},{"value":"/    * grault. */","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6431924,"byte_end":6431943,"line_start":840,"line_end":840,"column_start":9,"column_end":28}},{"value":"/   optional int32 grault = 6;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6431952,"byte_end":6431984,"line_start":841,"line_end":841,"column_start":9,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6431993,"byte_end":6431996,"line_start":842,"line_end":842,"column_start":9,"column_end":12}},{"value":"/   // ignored detached comments.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6432005,"byte_end":6432040,"line_start":843,"line_end":843,"column_start":9,"column_end":44}},{"value":"prost(string, optional, tag = \"3\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6432049,"byte_end":6432084,"line_start":844,"line_end":844,"column_start":9,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1872},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6432215,"byte_end":6432232,"line_start":847,"line_end":847,"column_start":13,"column_end":30},"name":"trailing_comments","qualname":"::source_code_info::Location::trailing_comments","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1868},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(string, optional, tag = \"4\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6432167,"byte_end":6432202,"line_start":846,"line_end":846,"column_start":9,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1873},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6432334,"byte_end":6432359,"line_start":849,"line_end":849,"column_start":13,"column_end":38},"name":"leading_detached_comments","qualname":"::source_code_info::Location::leading_detached_comments","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":1868},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(string, repeated, tag = \"6\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6432286,"byte_end":6432321,"line_start":848,"line_end":848,"column_start":9,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1939},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6432097,"byte_end":6432113,"line_start":845,"line_end":845,"column_start":13,"column_end":29},"name":"leading_comments","qualname":"<Location>::leading_comments","value":"pub fn leading_comments(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `leading_comments`, or the default value if `leading_comments` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1940},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6432215,"byte_end":6432232,"line_start":847,"line_end":847,"column_start":13,"column_end":30},"name":"trailing_comments","qualname":"<Location>::trailing_comments","value":"pub fn trailing_comments(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `trailing_comments`, or the default value if `trailing_comments` is unset.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1947},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6432696,"byte_end":6432713,"line_start":856,"line_end":856,"column_start":12,"column_end":29},"name":"GeneratedCodeInfo","qualname":"::GeneratedCodeInfo","value":"GeneratedCodeInfo { annotation }","parent":null,"children":[{"krate":0,"index":1948}],"decl_id":null,"docs":" Describes the relationship between generated code and its original source\n file. A GeneratedCodeInfo message is associated with only one generated\n source file, but may contain references to different source .proto files.\n","sig":null,"attributes":[{"value":"/ Describes the relationship between generated code and its original source","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6432407,"byte_end":6432484,"line_start":852,"line_end":852,"column_start":1,"column_end":78}},{"value":"/ file. A GeneratedCodeInfo message is associated with only one generated","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6432485,"byte_end":6432560,"line_start":853,"line_end":853,"column_start":1,"column_end":76}},{"value":"/ source file, but may contain references to different source .proto files.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6432561,"byte_end":6432638,"line_start":854,"line_end":854,"column_start":1,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":1948},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6432885,"byte_end":6432895,"line_start":860,"line_end":860,"column_start":9,"column_end":19},"name":"annotation","qualname":"::GeneratedCodeInfo::annotation","value":"std::vec::Vec<generated_code_info::Annotation>","parent":{"krate":0,"index":1947},"children":[],"decl_id":null,"docs":" An Annotation connects some span of text in generated code to an element\n of its generating .proto file.\n","sig":null,"attributes":[{"value":"/ An Annotation connects some span of text in generated code to an element","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6432720,"byte_end":6432796,"line_start":857,"line_end":857,"column_start":5,"column_end":81}},{"value":"/ of its generating .proto file.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6432801,"byte_end":6432835,"line_start":858,"line_end":858,"column_start":5,"column_end":39}},{"value":"prost(message, repeated, tag = \"1\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6432840,"byte_end":6432876,"line_start":859,"line_end":859,"column_start":5,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":31},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6432957,"byte_end":6432976,"line_start":862,"line_end":862,"column_start":9,"column_end":28},"name":"generated_code_info","qualname":"::generated_code_info","value":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","parent":null,"children":[{"krate":0,"index":1968},{"krate":0,"index":2036},{"krate":0,"index":2032},{"krate":0,"index":2033},{"krate":0,"index":1973},{"krate":0,"index":1988},{"krate":0,"index":1990},{"krate":0,"index":2028}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1968},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6433044,"byte_end":6433054,"line_start":864,"line_end":864,"column_start":16,"column_end":26},"name":"Annotation","qualname":"::generated_code_info::Annotation","value":"Annotation { path, source_file, begin, end }","parent":null,"children":[{"krate":0,"index":1969},{"krate":0,"index":1970},{"krate":0,"index":1971},{"krate":0,"index":1972}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1969},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6433261,"byte_end":6433265,"line_start":868,"line_end":868,"column_start":13,"column_end":17},"name":"path","qualname":"::generated_code_info::Annotation::path","value":"std::vec::Vec<i32>","parent":{"krate":0,"index":1968},"children":[],"decl_id":null,"docs":" Identifies the element in the original source .proto file. This field\n is formatted the same as SourceCodeInfo.Location.path.\n","sig":null,"attributes":[{"value":"/ Identifies the element in the original source .proto file. This field","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6433065,"byte_end":6433138,"line_start":865,"line_end":865,"column_start":9,"column_end":82}},{"value":"/ is formatted the same as SourceCodeInfo.Location.path.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6433147,"byte_end":6433205,"line_start":866,"line_end":866,"column_start":9,"column_end":67}},{"value":"prost(int32, repeated, tag = \"1\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6433214,"byte_end":6433248,"line_start":867,"line_end":867,"column_start":9,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":1970},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6433419,"byte_end":6433430,"line_start":871,"line_end":871,"column_start":13,"column_end":24},"name":"source_file","qualname":"::generated_code_info::Annotation::source_file","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1968},"children":[],"decl_id":null,"docs":" Identifies the filesystem path to the original source .proto.\n","sig":null,"attributes":[{"value":"/ Identifies the filesystem path to the original source .proto.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6433297,"byte_end":6433362,"line_start":869,"line_end":869,"column_start":9,"column_end":74}},{"value":"prost(string, optional, tag = \"2\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6433371,"byte_end":6433406,"line_start":870,"line_end":870,"column_start":9,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1971},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6433656,"byte_end":6433661,"line_start":875,"line_end":875,"column_start":13,"column_end":18},"name":"begin","qualname":"::generated_code_info::Annotation::begin","value":"std::option::Option<i32>","parent":{"krate":0,"index":1968},"children":[],"decl_id":null,"docs":" Identifies the starting offset in bytes in the generated code\n that relates to the identified object.\n","sig":null,"attributes":[{"value":"/ Identifies the starting offset in bytes in the generated code","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6433484,"byte_end":6433549,"line_start":872,"line_end":872,"column_start":9,"column_end":74}},{"value":"/ that relates to the identified object.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6433558,"byte_end":6433600,"line_start":873,"line_end":873,"column_start":9,"column_end":51}},{"value":"prost(int32, optional, tag = \"3\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6433609,"byte_end":6433643,"line_start":874,"line_end":874,"column_start":9,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":1972},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6433981,"byte_end":6433984,"line_start":880,"line_end":880,"column_start":13,"column_end":16},"name":"end","qualname":"::generated_code_info::Annotation::end","value":"std::option::Option<i32>","parent":{"krate":0,"index":1968},"children":[],"decl_id":null,"docs":" Identifies the ending offset in bytes in the generated code that\n relates to the identified offset. The end offset should be one past\n the last relevant byte (so the length of the text = end - begin).\n","sig":null,"attributes":[{"value":"/ Identifies the ending offset in bytes in the generated code that","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6433699,"byte_end":6433767,"line_start":876,"line_end":876,"column_start":9,"column_end":77}},{"value":"/ relates to the identified offset. The end offset should be one past","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6433776,"byte_end":6433847,"line_start":877,"line_end":877,"column_start":9,"column_end":80}},{"value":"/ the last relevant byte (so the length of the text = end - begin).","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6433856,"byte_end":6433925,"line_start":878,"line_end":878,"column_start":9,"column_end":78}},{"value":"prost(int32, optional, tag = \"4\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6433934,"byte_end":6433968,"line_start":879,"line_end":879,"column_start":9,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2029},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6433419,"byte_end":6433430,"line_start":871,"line_end":871,"column_start":13,"column_end":24},"name":"source_file","qualname":"<Annotation>::source_file","value":"pub fn source_file(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `source_file`, or the default value if `source_file` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2030},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6433656,"byte_end":6433661,"line_start":875,"line_end":875,"column_start":13,"column_end":18},"name":"begin","qualname":"<Annotation>::begin","value":"pub fn begin(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `begin`, or the default value if `begin` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2031},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6433981,"byte_end":6433984,"line_start":880,"line_end":880,"column_start":13,"column_end":16},"name":"end","qualname":"<Annotation>::end","value":"pub fn end(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `end`, or the default value if `end` is unset.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2038},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6436453,"byte_end":6436456,"line_start":964,"line_end":964,"column_start":12,"column_end":15},"name":"Any","qualname":"::Any","value":"Any { type_url, value }","parent":null,"children":[{"krate":0,"index":2039},{"krate":0,"index":2040}],"decl_id":null,"docs":" `Any` contains an arbitrary serialized protocol buffer message along with a\n URL that describes the type of the serialized message.","sig":null,"attributes":[{"value":"/ `Any` contains an arbitrary serialized protocol buffer message along with a","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6434022,"byte_end":6434101,"line_start":883,"line_end":883,"column_start":1,"column_end":80}},{"value":"/ URL that describes the type of the serialized message.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6434102,"byte_end":6434160,"line_start":884,"line_end":884,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6434161,"byte_end":6434164,"line_start":885,"line_end":885,"column_start":1,"column_end":4}},{"value":"/ Protobuf library provides support to pack/unpack Any values in the form","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6434165,"byte_end":6434240,"line_start":886,"line_end":886,"column_start":1,"column_end":76}},{"value":"/ of utility functions or additional generated methods of the Any type.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6434241,"byte_end":6434314,"line_start":887,"line_end":887,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6434315,"byte_end":6434318,"line_start":888,"line_end":888,"column_start":1,"column_end":4}},{"value":"/ Example 1: Pack and unpack a message in C++.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6434319,"byte_end":6434367,"line_start":889,"line_end":889,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6434368,"byte_end":6434371,"line_start":890,"line_end":890,"column_start":1,"column_end":4}},{"value":"/     Foo foo = ...;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6434372,"byte_end":6434394,"line_start":891,"line_end":891,"column_start":1,"column_end":23}},{"value":"/     Any any;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6434395,"byte_end":6434411,"line_start":892,"line_end":892,"column_start":1,"column_end":17}},{"value":"/     any.PackFrom(foo);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6434412,"byte_end":6434438,"line_start":893,"line_end":893,"column_start":1,"column_end":27}},{"value":"/     ...","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6434439,"byte_end":6434450,"line_start":894,"line_end":894,"column_start":1,"column_end":12}},{"value":"/     if (any.UnpackTo(&foo)) {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6434451,"byte_end":6434484,"line_start":895,"line_end":895,"column_start":1,"column_end":34}},{"value":"/       ...","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6434485,"byte_end":6434498,"line_start":896,"line_end":896,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6434499,"byte_end":6434508,"line_start":897,"line_end":897,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6434509,"byte_end":6434512,"line_start":898,"line_end":898,"column_start":1,"column_end":4}},{"value":"/ Example 2: Pack and unpack a message in Java.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6434513,"byte_end":6434562,"line_start":899,"line_end":899,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6434563,"byte_end":6434566,"line_start":900,"line_end":900,"column_start":1,"column_end":4}},{"value":"/     Foo foo = ...;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6434567,"byte_end":6434589,"line_start":901,"line_end":901,"column_start":1,"column_end":23}},{"value":"/     Any any = Any.pack(foo);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6434590,"byte_end":6434622,"line_start":902,"line_end":902,"column_start":1,"column_end":33}},{"value":"/     ...","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6434623,"byte_end":6434634,"line_start":903,"line_end":903,"column_start":1,"column_end":12}},{"value":"/     if (any.is(Foo.class)) {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6434635,"byte_end":6434667,"line_start":904,"line_end":904,"column_start":1,"column_end":33}},{"value":"/       foo = any.unpack(Foo.class);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6434668,"byte_end":6434706,"line_start":905,"line_end":905,"column_start":1,"column_end":39}},{"value":"/     }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6434707,"byte_end":6434716,"line_start":906,"line_end":906,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6434717,"byte_end":6434720,"line_start":907,"line_end":907,"column_start":1,"column_end":4}},{"value":"/  Example 3: Pack and unpack a message in Python.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6434721,"byte_end":6434773,"line_start":908,"line_end":908,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6434774,"byte_end":6434777,"line_start":909,"line_end":909,"column_start":1,"column_end":4}},{"value":"/     foo = Foo(...)","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6434778,"byte_end":6434800,"line_start":910,"line_end":910,"column_start":1,"column_end":23}},{"value":"/     any = Any()","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6434801,"byte_end":6434820,"line_start":911,"line_end":911,"column_start":1,"column_end":20}},{"value":"/     any.Pack(foo)","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6434821,"byte_end":6434842,"line_start":912,"line_end":912,"column_start":1,"column_end":22}},{"value":"/     ...","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6434843,"byte_end":6434854,"line_start":913,"line_end":913,"column_start":1,"column_end":12}},{"value":"/     if any.Is(Foo.DESCRIPTOR):","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6434855,"byte_end":6434889,"line_start":914,"line_end":914,"column_start":1,"column_end":35}},{"value":"/       any.Unpack(foo)","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6434890,"byte_end":6434915,"line_start":915,"line_end":915,"column_start":1,"column_end":26}},{"value":"/       ...","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6434916,"byte_end":6434929,"line_start":916,"line_end":916,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6434930,"byte_end":6434933,"line_start":917,"line_end":917,"column_start":1,"column_end":4}},{"value":"/  Example 4: Pack and unpack a message in Go","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6434934,"byte_end":6434981,"line_start":918,"line_end":918,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6434982,"byte_end":6434985,"line_start":919,"line_end":919,"column_start":1,"column_end":4}},{"value":"/      foo := &pb.Foo{...}","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6434986,"byte_end":6435014,"line_start":920,"line_end":920,"column_start":1,"column_end":29}},{"value":"/      any, err := ptypes.MarshalAny(foo)","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6435015,"byte_end":6435058,"line_start":921,"line_end":921,"column_start":1,"column_end":44}},{"value":"/      ...","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6435059,"byte_end":6435071,"line_start":922,"line_end":922,"column_start":1,"column_end":13}},{"value":"/      foo := &pb.Foo{}","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6435072,"byte_end":6435097,"line_start":923,"line_end":923,"column_start":1,"column_end":26}},{"value":"/      if err := ptypes.UnmarshalAny(any, foo); err != nil {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6435098,"byte_end":6435160,"line_start":924,"line_end":924,"column_start":1,"column_end":63}},{"value":"/        ...","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6435161,"byte_end":6435175,"line_start":925,"line_end":925,"column_start":1,"column_end":15}},{"value":"/      }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6435176,"byte_end":6435186,"line_start":926,"line_end":926,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6435187,"byte_end":6435190,"line_start":927,"line_end":927,"column_start":1,"column_end":4}},{"value":"/ The pack methods provided by protobuf library will by default use","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6435191,"byte_end":6435260,"line_start":928,"line_end":928,"column_start":1,"column_end":70}},{"value":"/ 'type.googleapis.com/full.type.name' as the type URL and the unpack","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6435261,"byte_end":6435332,"line_start":929,"line_end":929,"column_start":1,"column_end":72}},{"value":"/ methods only use the fully qualified type name after the last '/'","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6435333,"byte_end":6435402,"line_start":930,"line_end":930,"column_start":1,"column_end":70}},{"value":"/ in the type URL, for example \"foo.bar.com/x/y.z\" will yield type","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6435403,"byte_end":6435471,"line_start":931,"line_end":931,"column_start":1,"column_end":69}},{"value":"/ name \"y.z\".","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6435472,"byte_end":6435487,"line_start":932,"line_end":932,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6435488,"byte_end":6435491,"line_start":933,"line_end":933,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6435492,"byte_end":6435495,"line_start":934,"line_end":934,"column_start":1,"column_end":4}},{"value":"/ JSON","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6435496,"byte_end":6435504,"line_start":935,"line_end":935,"column_start":1,"column_end":9}},{"value":"/ ====","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6435505,"byte_end":6435513,"line_start":936,"line_end":936,"column_start":1,"column_end":9}},{"value":"/ The JSON representation of an `Any` value uses the regular","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6435514,"byte_end":6435576,"line_start":937,"line_end":937,"column_start":1,"column_end":63}},{"value":"/ representation of the deserialized, embedded message, with an","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6435577,"byte_end":6435642,"line_start":938,"line_end":938,"column_start":1,"column_end":66}},{"value":"/ additional field `@type` which contains the type URL. Example:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6435643,"byte_end":6435709,"line_start":939,"line_end":939,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6435710,"byte_end":6435713,"line_start":940,"line_end":940,"column_start":1,"column_end":4}},{"value":"/     package google.profile;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6435714,"byte_end":6435745,"line_start":941,"line_end":941,"column_start":1,"column_end":32}},{"value":"/     message Person {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6435746,"byte_end":6435770,"line_start":942,"line_end":942,"column_start":1,"column_end":25}},{"value":"/       string first_name = 1;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6435771,"byte_end":6435803,"line_start":943,"line_end":943,"column_start":1,"column_end":33}},{"value":"/       string last_name = 2;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6435804,"byte_end":6435835,"line_start":944,"line_end":944,"column_start":1,"column_end":32}},{"value":"/     }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6435836,"byte_end":6435845,"line_start":945,"line_end":945,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6435846,"byte_end":6435849,"line_start":946,"line_end":946,"column_start":1,"column_end":4}},{"value":"/     {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6435850,"byte_end":6435859,"line_start":947,"line_end":947,"column_start":1,"column_end":10}},{"value":"/       \"@type\": \"type.googleapis.com/google.profile.Person\",","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6435860,"byte_end":6435923,"line_start":948,"line_end":948,"column_start":1,"column_end":64}},{"value":"/       \"firstName\": <string>,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6435924,"byte_end":6435956,"line_start":949,"line_end":949,"column_start":1,"column_end":33}},{"value":"/       \"lastName\": <string>","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6435957,"byte_end":6435987,"line_start":950,"line_end":950,"column_start":1,"column_end":31}},{"value":"/     }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6435988,"byte_end":6435997,"line_start":951,"line_end":951,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6435998,"byte_end":6436001,"line_start":952,"line_end":952,"column_start":1,"column_end":4}},{"value":"/ If the embedded message type is well-known and has a custom JSON","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6436002,"byte_end":6436070,"line_start":953,"line_end":953,"column_start":1,"column_end":69}},{"value":"/ representation, that representation will be embedded adding a field","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6436071,"byte_end":6436142,"line_start":954,"line_end":954,"column_start":1,"column_end":72}},{"value":"/ `value` which holds the custom JSON in addition to the `@type`","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6436143,"byte_end":6436209,"line_start":955,"line_end":955,"column_start":1,"column_end":67}},{"value":"/ field. Example (for message [google.protobuf.Duration][]):","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6436210,"byte_end":6436272,"line_start":956,"line_end":956,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6436273,"byte_end":6436276,"line_start":957,"line_end":957,"column_start":1,"column_end":4}},{"value":"/     {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6436277,"byte_end":6436286,"line_start":958,"line_end":958,"column_start":1,"column_end":10}},{"value":"/       \"@type\": \"type.googleapis.com/google.protobuf.Duration\",","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6436287,"byte_end":6436353,"line_start":959,"line_end":959,"column_start":1,"column_end":67}},{"value":"/       \"value\": \"1.212s\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6436354,"byte_end":6436381,"line_start":960,"line_end":960,"column_start":1,"column_end":28}},{"value":"/     }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6436382,"byte_end":6436391,"line_start":961,"line_end":961,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6436392,"byte_end":6436395,"line_start":962,"line_end":962,"column_start":1,"column_end":4}}]},{"kind":"Field","id":{"krate":0,"index":2039},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6438045,"byte_end":6438053,"line_start":994,"line_end":994,"column_start":9,"column_end":17},"name":"type_url","qualname":"::Any::type_url","value":"std::string::String","parent":{"krate":0,"index":2038},"children":[],"decl_id":null,"docs":" A URL/resource name that uniquely identifies the type of the serialized\n protocol buffer message. This string must contain at least\n one \"/\" character. The last segment of the URL's path must represent\n the fully qualified name of the type (as in\n `path/google.protobuf.Duration`). The name should be in a canonical form\n (e.g., leading \".\" is not accepted).","sig":null,"attributes":[{"value":"/ A URL/resource name that uniquely identifies the type of the serialized","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6436463,"byte_end":6436538,"line_start":965,"line_end":965,"column_start":5,"column_end":80}},{"value":"/ protocol buffer message. This string must contain at least","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6436543,"byte_end":6436605,"line_start":966,"line_end":966,"column_start":5,"column_end":67}},{"value":"/ one \"/\" character. The last segment of the URL's path must represent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6436610,"byte_end":6436682,"line_start":967,"line_end":967,"column_start":5,"column_end":77}},{"value":"/ the fully qualified name of the type (as in","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6436687,"byte_end":6436734,"line_start":968,"line_end":968,"column_start":5,"column_end":52}},{"value":"/ `path/google.protobuf.Duration`). The name should be in a canonical form","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6436739,"byte_end":6436815,"line_start":969,"line_end":969,"column_start":5,"column_end":81}},{"value":"/ (e.g., leading \".\" is not accepted).","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6436820,"byte_end":6436860,"line_start":970,"line_end":970,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6436865,"byte_end":6436868,"line_start":971,"line_end":971,"column_start":5,"column_end":8}},{"value":"/ In practice, teams usually precompile into the binary all types that they","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6436873,"byte_end":6436950,"line_start":972,"line_end":972,"column_start":5,"column_end":82}},{"value":"/ expect it to use in the context of Any. However, for URLs which use the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6436955,"byte_end":6437030,"line_start":973,"line_end":973,"column_start":5,"column_end":80}},{"value":"/ scheme `http`, `https`, or no scheme, one can optionally set up a type","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6437035,"byte_end":6437109,"line_start":974,"line_end":974,"column_start":5,"column_end":79}},{"value":"/ server that maps type URLs to message definitions as follows:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6437114,"byte_end":6437179,"line_start":975,"line_end":975,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6437184,"byte_end":6437187,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ * If no scheme is provided, `https` is assumed.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6437192,"byte_end":6437243,"line_start":977,"line_end":977,"column_start":5,"column_end":56}},{"value":"/ * An HTTP GET on the URL must yield a [google.protobuf.Type][]","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6437248,"byte_end":6437314,"line_start":978,"line_end":978,"column_start":5,"column_end":71}},{"value":"/   value in binary format, or produce an error.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6437319,"byte_end":6437369,"line_start":979,"line_end":979,"column_start":5,"column_end":55}},{"value":"/ * Applications are allowed to cache lookup results based on the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6437374,"byte_end":6437441,"line_start":980,"line_end":980,"column_start":5,"column_end":72}},{"value":"/   URL, or have them precompiled into a binary to avoid any","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6437446,"byte_end":6437508,"line_start":981,"line_end":981,"column_start":5,"column_end":67}},{"value":"/   lookup. Therefore, binary compatibility needs to be preserved","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6437513,"byte_end":6437580,"line_start":982,"line_end":982,"column_start":5,"column_end":72}},{"value":"/   on changes to types. (Use versioned type names to manage","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6437585,"byte_end":6437647,"line_start":983,"line_end":983,"column_start":5,"column_end":67}},{"value":"/   breaking changes.)","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6437652,"byte_end":6437676,"line_start":984,"line_end":984,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6437681,"byte_end":6437684,"line_start":985,"line_end":985,"column_start":5,"column_end":8}},{"value":"/ Note: this functionality is not currently available in the official","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6437689,"byte_end":6437760,"line_start":986,"line_end":986,"column_start":5,"column_end":76}},{"value":"/ protobuf release, and it is not used for type URLs beginning with","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6437765,"byte_end":6437834,"line_start":987,"line_end":987,"column_start":5,"column_end":74}},{"value":"/ type.googleapis.com.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6437839,"byte_end":6437863,"line_start":988,"line_end":988,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6437868,"byte_end":6437871,"line_start":989,"line_end":989,"column_start":5,"column_end":8}},{"value":"/ Schemes other than `http`, `https` (or the empty scheme) might be","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6437876,"byte_end":6437945,"line_start":990,"line_end":990,"column_start":5,"column_end":74}},{"value":"/ used with implementation specific semantics.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6437950,"byte_end":6437998,"line_start":991,"line_end":991,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6438003,"byte_end":6438006,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"prost(string, tag = \"1\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6438011,"byte_end":6438036,"line_start":993,"line_end":993,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2040},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6438193,"byte_end":6438198,"line_start":997,"line_end":997,"column_start":9,"column_end":14},"name":"value","qualname":"::Any::value","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":2038},"children":[],"decl_id":null,"docs":" Must be a valid serialized protocol buffer of the above specified type.\n","sig":null,"attributes":[{"value":"/ Must be a valid serialized protocol buffer of the above specified type.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6438080,"byte_end":6438155,"line_start":995,"line_end":995,"column_start":5,"column_end":80}},{"value":"prost(bytes, tag = \"2\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6438160,"byte_end":6438184,"line_start":996,"line_end":996,"column_start":5,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":2065},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6438403,"byte_end":6438416,"line_start":1002,"line_end":1002,"column_start":12,"column_end":25},"name":"SourceContext","qualname":"::SourceContext","value":"SourceContext { file_name }","parent":null,"children":[{"krate":0,"index":2066}],"decl_id":null,"docs":" `SourceContext` represents information about the source of a\n protobuf element, like the file in which it is defined.\n","sig":null,"attributes":[{"value":"/ `SourceContext` represents information about the source of a","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6438221,"byte_end":6438285,"line_start":999,"line_end":999,"column_start":1,"column_end":65}},{"value":"/ protobuf element, like the file in which it is defined.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6438286,"byte_end":6438345,"line_start":1000,"line_end":1000,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":2066},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6438620,"byte_end":6438629,"line_start":1006,"line_end":1006,"column_start":9,"column_end":18},"name":"file_name","qualname":"::SourceContext::file_name","value":"std::string::String","parent":{"krate":0,"index":2065},"children":[],"decl_id":null,"docs":" The path-qualified name of the .proto file that contained the associated\n protobuf element.  For example: `\"google/protobuf/source_context.proto\"`.\n","sig":null,"attributes":[{"value":"/ The path-qualified name of the .proto file that contained the associated","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6438423,"byte_end":6438499,"line_start":1003,"line_end":1003,"column_start":5,"column_end":81}},{"value":"/ protobuf element.  For example: `\"google/protobuf/source_context.proto\"`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6438504,"byte_end":6438581,"line_start":1004,"line_end":1004,"column_start":5,"column_end":82}},{"value":"prost(string, tag = \"1\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6438586,"byte_end":6438611,"line_start":1005,"line_end":1005,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":2088},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6438747,"byte_end":6438751,"line_start":1010,"line_end":1010,"column_start":12,"column_end":16},"name":"Type","qualname":"::Type","value":"Type { name, fields, oneofs, options, source_context, syntax }","parent":null,"children":[{"krate":0,"index":2089},{"krate":0,"index":2090},{"krate":0,"index":2091},{"krate":0,"index":2092},{"krate":0,"index":2093},{"krate":0,"index":2094}],"decl_id":null,"docs":" A protocol buffer message type.\n","sig":null,"attributes":[{"value":"/ A protocol buffer message type.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6438654,"byte_end":6438689,"line_start":1008,"line_end":1008,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":2089},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6438834,"byte_end":6438838,"line_start":1013,"line_end":1013,"column_start":9,"column_end":13},"name":"name","qualname":"::Type::name","value":"std::string::String","parent":{"krate":0,"index":2088},"children":[],"decl_id":null,"docs":" The fully qualified message name.\n","sig":null,"attributes":[{"value":"/ The fully qualified message name.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6438758,"byte_end":6438795,"line_start":1011,"line_end":1011,"column_start":5,"column_end":42}},{"value":"prost(string, tag = \"1\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6438800,"byte_end":6438825,"line_start":1012,"line_end":1012,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2090},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6438938,"byte_end":6438944,"line_start":1016,"line_end":1016,"column_start":9,"column_end":15},"name":"fields","qualname":"::Type::fields","value":"std::vec::Vec<Field>","parent":{"krate":0,"index":2088},"children":[],"decl_id":null,"docs":" The list of fields.\n","sig":null,"attributes":[{"value":"/ The list of fields.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6438865,"byte_end":6438888,"line_start":1014,"line_end":1014,"column_start":5,"column_end":28}},{"value":"prost(message, repeated, tag = \"2\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6438893,"byte_end":6438929,"line_start":1015,"line_end":1015,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":2091},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6439091,"byte_end":6439097,"line_start":1019,"line_end":1019,"column_start":9,"column_end":15},"name":"oneofs","qualname":"::Type::oneofs","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":2088},"children":[],"decl_id":null,"docs":" The list of types appearing in `oneof` definitions in this type.\n","sig":null,"attributes":[{"value":"/ The list of types appearing in `oneof` definitions in this type.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6438974,"byte_end":6439042,"line_start":1017,"line_end":1017,"column_start":5,"column_end":73}},{"value":"prost(string, repeated, tag = \"3\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6439047,"byte_end":6439082,"line_start":1018,"line_end":1018,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":2092},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6439223,"byte_end":6439230,"line_start":1022,"line_end":1022,"column_start":9,"column_end":16},"name":"options","qualname":"::Type::options","value":"std::vec::Vec<Option>","parent":{"krate":0,"index":2088},"children":[],"decl_id":null,"docs":" The protocol buffer options.\n","sig":null,"attributes":[{"value":"/ The protocol buffer options.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6439141,"byte_end":6439173,"line_start":1020,"line_end":1020,"column_start":5,"column_end":37}},{"value":"prost(message, repeated, tag = \"4\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6439178,"byte_end":6439214,"line_start":1021,"line_end":1021,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":2093},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6439334,"byte_end":6439348,"line_start":1025,"line_end":1025,"column_start":9,"column_end":23},"name":"source_context","qualname":"::Type::source_context","value":"std::option::Option<SourceContext>","parent":{"krate":0,"index":2088},"children":[],"decl_id":null,"docs":" The source context.\n","sig":null,"attributes":[{"value":"/ The source context.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6439261,"byte_end":6439284,"line_start":1023,"line_end":1023,"column_start":5,"column_end":28}},{"value":"prost(message, optional, tag = \"5\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6439289,"byte_end":6439325,"line_start":1024,"line_end":1024,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":2094},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6439467,"byte_end":6439473,"line_start":1028,"line_end":1028,"column_start":9,"column_end":15},"name":"syntax","qualname":"::Type::syntax","value":"i32","parent":{"krate":0,"index":2088},"children":[],"decl_id":null,"docs":" The source syntax.\n","sig":null,"attributes":[{"value":"/ The source syntax.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6439392,"byte_end":6439414,"line_start":1026,"line_end":1026,"column_start":5,"column_end":27}},{"value":"prost(enumeration = \"Syntax\", tag = \"6\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6439419,"byte_end":6439458,"line_start":1027,"line_end":1027,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2133},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6439467,"byte_end":6439473,"line_start":1028,"line_end":1028,"column_start":9,"column_end":15},"name":"syntax","qualname":"<Type>::syntax","value":"pub fn syntax(&Self) -> Syntax","parent":null,"children":[],"decl_id":null,"docs":"Returns the enum value of `syntax`, or the default if the field is set to an invalid enum value.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2141},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6439577,"byte_end":6439582,"line_start":1032,"line_end":1032,"column_start":12,"column_end":17},"name":"Field","qualname":"::Field","value":"Field { kind, cardinality, number, name, type_url, oneof_index, packed, options, json_name, default_value }","parent":null,"children":[{"krate":0,"index":2142},{"krate":0,"index":2143},{"krate":0,"index":2144},{"krate":0,"index":2145},{"krate":0,"index":2146},{"krate":0,"index":2147},{"krate":0,"index":2148},{"krate":0,"index":2149},{"krate":0,"index":2150},{"krate":0,"index":2151}],"decl_id":null,"docs":" A single field of a message type.\n","sig":null,"attributes":[{"value":"/ A single field of a message type.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6439482,"byte_end":6439519,"line_start":1030,"line_end":1030,"column_start":1,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":2142},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6439666,"byte_end":6439670,"line_start":1035,"line_end":1035,"column_start":9,"column_end":13},"name":"kind","qualname":"::Field::kind","value":"i32","parent":{"krate":0,"index":2141},"children":[],"decl_id":null,"docs":" The field type.\n","sig":null,"attributes":[{"value":"/ The field type.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6439589,"byte_end":6439608,"line_start":1033,"line_end":1033,"column_start":5,"column_end":24}},{"value":"prost(enumeration = \"field::Kind\", tag = \"1\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6439613,"byte_end":6439657,"line_start":1034,"line_end":1034,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":2143},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6439772,"byte_end":6439783,"line_start":1038,"line_end":1038,"column_start":9,"column_end":20},"name":"cardinality","qualname":"::Field::cardinality","value":"i32","parent":{"krate":0,"index":2141},"children":[],"decl_id":null,"docs":" The field cardinality.\n","sig":null,"attributes":[{"value":"/ The field cardinality.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6439681,"byte_end":6439707,"line_start":1036,"line_end":1036,"column_start":5,"column_end":31}},{"value":"prost(enumeration = \"field::Cardinality\", tag = \"2\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6439712,"byte_end":6439763,"line_start":1037,"line_end":1037,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":2144},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6439853,"byte_end":6439859,"line_start":1041,"line_end":1041,"column_start":9,"column_end":15},"name":"number","qualname":"::Field::number","value":"i32","parent":{"krate":0,"index":2141},"children":[],"decl_id":null,"docs":" The field number.\n","sig":null,"attributes":[{"value":"/ The field number.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6439794,"byte_end":6439815,"line_start":1039,"line_end":1039,"column_start":5,"column_end":26}},{"value":"prost(int32, tag = \"3\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6439820,"byte_end":6439844,"line_start":1040,"line_end":1040,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":2145},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6439928,"byte_end":6439932,"line_start":1044,"line_end":1044,"column_start":9,"column_end":13},"name":"name","qualname":"::Field::name","value":"std::string::String","parent":{"krate":0,"index":2141},"children":[],"decl_id":null,"docs":" The field name.\n","sig":null,"attributes":[{"value":"/ The field name.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6439870,"byte_end":6439889,"line_start":1042,"line_end":1042,"column_start":5,"column_end":24}},{"value":"prost(string, tag = \"4\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6439894,"byte_end":6439919,"line_start":1043,"line_end":1043,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2146},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6440143,"byte_end":6440151,"line_start":1048,"line_end":1048,"column_start":9,"column_end":17},"name":"type_url","qualname":"::Field::type_url","value":"std::string::String","parent":{"krate":0,"index":2141},"children":[],"decl_id":null,"docs":" The field type URL, without the scheme, for message or enumeration\n types. Example: `\"type.googleapis.com/google.protobuf.Timestamp\"`.\n","sig":null,"attributes":[{"value":"/ The field type URL, without the scheme, for message or enumeration","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6439959,"byte_end":6440029,"line_start":1045,"line_end":1045,"column_start":5,"column_end":75}},{"value":"/ types. Example: `\"type.googleapis.com/google.protobuf.Timestamp\"`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6440034,"byte_end":6440104,"line_start":1046,"line_end":1046,"column_start":5,"column_end":75}},{"value":"prost(string, tag = \"6\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6440109,"byte_end":6440134,"line_start":1047,"line_end":1047,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2147},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6440375,"byte_end":6440386,"line_start":1052,"line_end":1052,"column_start":9,"column_end":20},"name":"oneof_index","qualname":"::Field::oneof_index","value":"i32","parent":{"krate":0,"index":2141},"children":[],"decl_id":null,"docs":" The index of the field type in `Type.oneofs`, for message or enumeration\n types. The first type has index 1; zero means the type is not in the list.\n","sig":null,"attributes":[{"value":"/ The index of the field type in `Type.oneofs`, for message or enumeration","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6440178,"byte_end":6440254,"line_start":1049,"line_end":1049,"column_start":5,"column_end":81}},{"value":"/ types. The first type has index 1; zero means the type is not in the list.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6440259,"byte_end":6440337,"line_start":1050,"line_end":1050,"column_start":5,"column_end":83}},{"value":"prost(int32, tag = \"7\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6440342,"byte_end":6440366,"line_start":1051,"line_end":1051,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":2148},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6440492,"byte_end":6440498,"line_start":1055,"line_end":1055,"column_start":9,"column_end":15},"name":"packed","qualname":"::Field::packed","value":"bool","parent":{"krate":0,"index":2141},"children":[],"decl_id":null,"docs":" Whether to use alternative packed wire representation.\n","sig":null,"attributes":[{"value":"/ Whether to use alternative packed wire representation.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6440397,"byte_end":6440455,"line_start":1053,"line_end":1053,"column_start":5,"column_end":63}},{"value":"prost(bool, tag = \"8\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6440460,"byte_end":6440483,"line_start":1054,"line_end":1054,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":2149},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6440592,"byte_end":6440599,"line_start":1058,"line_end":1058,"column_start":9,"column_end":16},"name":"options","qualname":"::Field::options","value":"std::vec::Vec<Option>","parent":{"krate":0,"index":2141},"children":[],"decl_id":null,"docs":" The protocol buffer options.\n","sig":null,"attributes":[{"value":"/ The protocol buffer options.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6440510,"byte_end":6440542,"line_start":1056,"line_end":1056,"column_start":5,"column_end":37}},{"value":"prost(message, repeated, tag = \"9\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6440547,"byte_end":6440583,"line_start":1057,"line_end":1057,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":2150},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6440694,"byte_end":6440703,"line_start":1061,"line_end":1061,"column_start":9,"column_end":18},"name":"json_name","qualname":"::Field::json_name","value":"std::string::String","parent":{"krate":0,"index":2141},"children":[],"decl_id":null,"docs":" The field JSON name.\n","sig":null,"attributes":[{"value":"/ The field JSON name.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6440630,"byte_end":6440654,"line_start":1059,"line_end":1059,"column_start":5,"column_end":29}},{"value":"prost(string, tag = \"10\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6440659,"byte_end":6440685,"line_start":1060,"line_end":1060,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":2151},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6440846,"byte_end":6440859,"line_start":1064,"line_end":1064,"column_start":9,"column_end":22},"name":"default_value","qualname":"::Field::default_value","value":"std::string::String","parent":{"krate":0,"index":2141},"children":[],"decl_id":null,"docs":" The string value of the default value of this field. Proto2 syntax only.\n","sig":null,"attributes":[{"value":"/ The string value of the default value of this field. Proto2 syntax only.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6440730,"byte_end":6440806,"line_start":1062,"line_end":1062,"column_start":5,"column_end":81}},{"value":"prost(string, tag = \"11\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6440811,"byte_end":6440837,"line_start":1063,"line_end":1063,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2203},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6439666,"byte_end":6439670,"line_start":1035,"line_end":1035,"column_start":9,"column_end":13},"name":"kind","qualname":"<Field>::kind","value":"pub fn kind(&Self) -> field::Kind","parent":null,"children":[],"decl_id":null,"docs":"Returns the enum value of `kind`, or the default if the field is set to an invalid enum value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2205},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6439772,"byte_end":6439783,"line_start":1038,"line_end":1038,"column_start":9,"column_end":20},"name":"cardinality","qualname":"<Field>::cardinality","value":"pub fn cardinality(&Self) -> field::Cardinality","parent":null,"children":[],"decl_id":null,"docs":"Returns the enum value of `cardinality`, or the default if the field is set to an invalid enum value.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":32},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6440892,"byte_end":6440897,"line_start":1066,"line_end":1066,"column_start":9,"column_end":14},"name":"field","qualname":"::field","value":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","parent":null,"children":[{"krate":0,"index":2213},{"krate":0,"index":2294},{"krate":0,"index":2293},{"krate":0,"index":2291},{"krate":0,"index":2288},{"krate":0,"index":2289},{"krate":0,"index":2285},{"krate":0,"index":2286},{"krate":0,"index":2282},{"krate":0,"index":2280},{"krate":0,"index":2278},{"krate":0,"index":2271},{"krate":0,"index":2274},{"krate":0,"index":2276},{"krate":0,"index":2296},{"krate":0,"index":2332},{"krate":0,"index":2331},{"krate":0,"index":2329},{"krate":0,"index":2326},{"krate":0,"index":2327},{"krate":0,"index":2323},{"krate":0,"index":2324},{"krate":0,"index":2320},{"krate":0,"index":2318},{"krate":0,"index":2316},{"krate":0,"index":2309},{"krate":0,"index":2312},{"krate":0,"index":2314}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2214},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6441098,"byte_end":6441109,"line_start":1072,"line_end":1072,"column_start":9,"column_end":20},"name":"TypeUnknown","qualname":"::field::Kind::TypeUnknown","value":"Kind::TypeUnknown","parent":{"krate":0,"index":2213},"children":[],"decl_id":null,"docs":" Field type unknown.\n","sig":null,"attributes":[{"value":"/ Field type unknown.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6441066,"byte_end":6441089,"line_start":1071,"line_end":1071,"column_start":9,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2217},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6441154,"byte_end":6441164,"line_start":1074,"line_end":1074,"column_start":9,"column_end":19},"name":"TypeDouble","qualname":"::field::Kind::TypeDouble","value":"Kind::TypeDouble","parent":{"krate":0,"index":2213},"children":[],"decl_id":null,"docs":" Field type double.\n","sig":null,"attributes":[{"value":"/ Field type double.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6441123,"byte_end":6441145,"line_start":1073,"line_end":1073,"column_start":9,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2220},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6441208,"byte_end":6441217,"line_start":1076,"line_end":1076,"column_start":9,"column_end":18},"name":"TypeFloat","qualname":"::field::Kind::TypeFloat","value":"Kind::TypeFloat","parent":{"krate":0,"index":2213},"children":[],"decl_id":null,"docs":" Field type float.\n","sig":null,"attributes":[{"value":"/ Field type float.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6441178,"byte_end":6441199,"line_start":1075,"line_end":1075,"column_start":9,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2223},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6441261,"byte_end":6441270,"line_start":1078,"line_end":1078,"column_start":9,"column_end":18},"name":"TypeInt64","qualname":"::field::Kind::TypeInt64","value":"Kind::TypeInt64","parent":{"krate":0,"index":2213},"children":[],"decl_id":null,"docs":" Field type int64.\n","sig":null,"attributes":[{"value":"/ Field type int64.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6441231,"byte_end":6441252,"line_start":1077,"line_end":1077,"column_start":9,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2226},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6441315,"byte_end":6441325,"line_start":1080,"line_end":1080,"column_start":9,"column_end":19},"name":"TypeUint64","qualname":"::field::Kind::TypeUint64","value":"Kind::TypeUint64","parent":{"krate":0,"index":2213},"children":[],"decl_id":null,"docs":" Field type uint64.\n","sig":null,"attributes":[{"value":"/ Field type uint64.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6441284,"byte_end":6441306,"line_start":1079,"line_end":1079,"column_start":9,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2229},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6441369,"byte_end":6441378,"line_start":1082,"line_end":1082,"column_start":9,"column_end":18},"name":"TypeInt32","qualname":"::field::Kind::TypeInt32","value":"Kind::TypeInt32","parent":{"krate":0,"index":2213},"children":[],"decl_id":null,"docs":" Field type int32.\n","sig":null,"attributes":[{"value":"/ Field type int32.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6441339,"byte_end":6441360,"line_start":1081,"line_end":1081,"column_start":9,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2232},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6441424,"byte_end":6441435,"line_start":1084,"line_end":1084,"column_start":9,"column_end":20},"name":"TypeFixed64","qualname":"::field::Kind::TypeFixed64","value":"Kind::TypeFixed64","parent":{"krate":0,"index":2213},"children":[],"decl_id":null,"docs":" Field type fixed64.\n","sig":null,"attributes":[{"value":"/ Field type fixed64.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6441392,"byte_end":6441415,"line_start":1083,"line_end":1083,"column_start":9,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2235},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6441481,"byte_end":6441492,"line_start":1086,"line_end":1086,"column_start":9,"column_end":20},"name":"TypeFixed32","qualname":"::field::Kind::TypeFixed32","value":"Kind::TypeFixed32","parent":{"krate":0,"index":2213},"children":[],"decl_id":null,"docs":" Field type fixed32.\n","sig":null,"attributes":[{"value":"/ Field type fixed32.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6441449,"byte_end":6441472,"line_start":1085,"line_end":1085,"column_start":9,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2238},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6441535,"byte_end":6441543,"line_start":1088,"line_end":1088,"column_start":9,"column_end":17},"name":"TypeBool","qualname":"::field::Kind::TypeBool","value":"Kind::TypeBool","parent":{"krate":0,"index":2213},"children":[],"decl_id":null,"docs":" Field type bool.\n","sig":null,"attributes":[{"value":"/ Field type bool.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6441506,"byte_end":6441526,"line_start":1087,"line_end":1087,"column_start":9,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2241},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6441588,"byte_end":6441598,"line_start":1090,"line_end":1090,"column_start":9,"column_end":19},"name":"TypeString","qualname":"::field::Kind::TypeString","value":"Kind::TypeString","parent":{"krate":0,"index":2213},"children":[],"decl_id":null,"docs":" Field type string.\n","sig":null,"attributes":[{"value":"/ Field type string.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6441557,"byte_end":6441579,"line_start":1089,"line_end":1089,"column_start":9,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2244},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6441678,"byte_end":6441687,"line_start":1092,"line_end":1092,"column_start":9,"column_end":18},"name":"TypeGroup","qualname":"::field::Kind::TypeGroup","value":"Kind::TypeGroup","parent":{"krate":0,"index":2213},"children":[],"decl_id":null,"docs":" Field type group. Proto2 syntax only, and deprecated.\n","sig":null,"attributes":[{"value":"/ Field type group. Proto2 syntax only, and deprecated.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6441612,"byte_end":6441669,"line_start":1091,"line_end":1091,"column_start":9,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2247},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6441734,"byte_end":6441745,"line_start":1094,"line_end":1094,"column_start":9,"column_end":20},"name":"TypeMessage","qualname":"::field::Kind::TypeMessage","value":"Kind::TypeMessage","parent":{"krate":0,"index":2213},"children":[],"decl_id":null,"docs":" Field type message.\n","sig":null,"attributes":[{"value":"/ Field type message.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6441702,"byte_end":6441725,"line_start":1093,"line_end":1093,"column_start":9,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2250},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6441790,"byte_end":6441799,"line_start":1096,"line_end":1096,"column_start":9,"column_end":18},"name":"TypeBytes","qualname":"::field::Kind::TypeBytes","value":"Kind::TypeBytes","parent":{"krate":0,"index":2213},"children":[],"decl_id":null,"docs":" Field type bytes.\n","sig":null,"attributes":[{"value":"/ Field type bytes.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6441760,"byte_end":6441781,"line_start":1095,"line_end":1095,"column_start":9,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2253},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6441845,"byte_end":6441855,"line_start":1098,"line_end":1098,"column_start":9,"column_end":19},"name":"TypeUint32","qualname":"::field::Kind::TypeUint32","value":"Kind::TypeUint32","parent":{"krate":0,"index":2213},"children":[],"decl_id":null,"docs":" Field type uint32.\n","sig":null,"attributes":[{"value":"/ Field type uint32.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6441814,"byte_end":6441836,"line_start":1097,"line_end":1097,"column_start":9,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2256},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6441899,"byte_end":6441907,"line_start":1100,"line_end":1100,"column_start":9,"column_end":17},"name":"TypeEnum","qualname":"::field::Kind::TypeEnum","value":"Kind::TypeEnum","parent":{"krate":0,"index":2213},"children":[],"decl_id":null,"docs":" Field type enum.\n","sig":null,"attributes":[{"value":"/ Field type enum.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6441870,"byte_end":6441890,"line_start":1099,"line_end":1099,"column_start":9,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2259},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6441955,"byte_end":6441967,"line_start":1102,"line_end":1102,"column_start":9,"column_end":21},"name":"TypeSfixed32","qualname":"::field::Kind::TypeSfixed32","value":"Kind::TypeSfixed32","parent":{"krate":0,"index":2213},"children":[],"decl_id":null,"docs":" Field type sfixed32.\n","sig":null,"attributes":[{"value":"/ Field type sfixed32.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6441922,"byte_end":6441946,"line_start":1101,"line_end":1101,"column_start":9,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2262},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6442015,"byte_end":6442027,"line_start":1104,"line_end":1104,"column_start":9,"column_end":21},"name":"TypeSfixed64","qualname":"::field::Kind::TypeSfixed64","value":"Kind::TypeSfixed64","parent":{"krate":0,"index":2213},"children":[],"decl_id":null,"docs":" Field type sfixed64.\n","sig":null,"attributes":[{"value":"/ Field type sfixed64.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6441982,"byte_end":6442006,"line_start":1103,"line_end":1103,"column_start":9,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2265},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6442073,"byte_end":6442083,"line_start":1106,"line_end":1106,"column_start":9,"column_end":19},"name":"TypeSint32","qualname":"::field::Kind::TypeSint32","value":"Kind::TypeSint32","parent":{"krate":0,"index":2213},"children":[],"decl_id":null,"docs":" Field type sint32.\n","sig":null,"attributes":[{"value":"/ Field type sint32.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6442042,"byte_end":6442064,"line_start":1105,"line_end":1105,"column_start":9,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2268},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6442129,"byte_end":6442139,"line_start":1108,"line_end":1108,"column_start":9,"column_end":19},"name":"TypeSint64","qualname":"::field::Kind::TypeSint64","value":"Kind::TypeSint64","parent":{"krate":0,"index":2213},"children":[],"decl_id":null,"docs":" Field type sint64.\n","sig":null,"attributes":[{"value":"/ Field type sint64.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6442098,"byte_end":6442120,"line_start":1107,"line_end":1107,"column_start":9,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":2213},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6441051,"byte_end":6441055,"line_start":1070,"line_end":1070,"column_start":14,"column_end":18},"name":"Kind","qualname":"::field::Kind","value":"pub enum Kind {\n\n    /// Field type unknown.\n    TypeUnknown = ,\n\n    /// Field type double.\n    TypeDouble = ,\n\n    /// Field type float.\n    TypeFloat = ,\n\n    /// Field type int64.\n    TypeInt64 = ,\n\n    /// Field type uint64.\n    TypeUint64 = ,\n\n    /// Field type int32.\n    TypeInt32 = ,\n\n    /// Field type fixed64.\n    TypeFixed64 = ,\n\n    /// Field type fixed32.\n    TypeFixed32 = ,\n\n    /// Field type bool.\n    TypeBool = ,\n\n    /// Field type string.\n    TypeString = ,\n\n    /// Field type group. Proto2 syntax only, and deprecated.\n    TypeGroup = ,\n\n    /// Field type message.\n    TypeMessage = ,\n\n    /// Field type bytes.\n    TypeBytes = ,\n\n    /// Field type uint32.\n    TypeUint32 = ,\n\n    /// Field type enum.\n    TypeEnum = ,\n\n    /// Field type sfixed32.\n    TypeSfixed32 = ,\n\n    /// Field type sfixed64.\n    TypeSfixed64 = ,\n\n    /// Field type sint32.\n    TypeSint32 = ,\n\n    /// Field type sint64.\n    TypeSint64 = ,\n}","parent":null,"children":[{"krate":0,"index":2214},{"krate":0,"index":2217},{"krate":0,"index":2220},{"krate":0,"index":2223},{"krate":0,"index":2226},{"krate":0,"index":2229},{"krate":0,"index":2232},{"krate":0,"index":2235},{"krate":0,"index":2238},{"krate":0,"index":2241},{"krate":0,"index":2244},{"krate":0,"index":2247},{"krate":0,"index":2250},{"krate":0,"index":2253},{"krate":0,"index":2256},{"krate":0,"index":2259},{"krate":0,"index":2262},{"krate":0,"index":2265},{"krate":0,"index":2268}],"decl_id":null,"docs":" Basic field types.\n","sig":null,"attributes":[{"value":"/ Basic field types.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6440904,"byte_end":6440926,"line_start":1067,"line_end":1067,"column_start":5,"column_end":27}},{"value":"repr(i32)","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6441025,"byte_end":6441037,"line_start":1069,"line_end":1069,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2297},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6442407,"byte_end":6442414,"line_start":1115,"line_end":1115,"column_start":9,"column_end":16},"name":"Unknown","qualname":"::field::Cardinality::Unknown","value":"Cardinality::Unknown","parent":{"krate":0,"index":2296},"children":[],"decl_id":null,"docs":" For fields with unknown cardinality.\n","sig":null,"attributes":[{"value":"/ For fields with unknown cardinality.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6442358,"byte_end":6442398,"line_start":1114,"line_end":1114,"column_start":9,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2300},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6442461,"byte_end":6442469,"line_start":1117,"line_end":1117,"column_start":9,"column_end":17},"name":"Optional","qualname":"::field::Cardinality::Optional","value":"Cardinality::Optional","parent":{"krate":0,"index":2296},"children":[],"decl_id":null,"docs":" For optional fields.\n","sig":null,"attributes":[{"value":"/ For optional fields.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6442428,"byte_end":6442452,"line_start":1116,"line_end":1116,"column_start":9,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2303},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6442536,"byte_end":6442544,"line_start":1119,"line_end":1119,"column_start":9,"column_end":17},"name":"Required","qualname":"::field::Cardinality::Required","value":"Cardinality::Required","parent":{"krate":0,"index":2296},"children":[],"decl_id":null,"docs":" For required fields. Proto2 syntax only.\n","sig":null,"attributes":[{"value":"/ For required fields. Proto2 syntax only.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6442483,"byte_end":6442527,"line_start":1118,"line_end":1118,"column_start":9,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2306},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6442591,"byte_end":6442599,"line_start":1121,"line_end":1121,"column_start":9,"column_end":17},"name":"Repeated","qualname":"::field::Cardinality::Repeated","value":"Cardinality::Repeated","parent":{"krate":0,"index":2296},"children":[],"decl_id":null,"docs":" For repeated fields.\n","sig":null,"attributes":[{"value":"/ For repeated fields.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6442558,"byte_end":6442582,"line_start":1120,"line_end":1120,"column_start":9,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":2296},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6442336,"byte_end":6442347,"line_start":1113,"line_end":1113,"column_start":14,"column_end":25},"name":"Cardinality","qualname":"::field::Cardinality","value":"pub enum Cardinality {\n\n    /// For fields with unknown cardinality.\n    Unknown = ,\n\n    /// For optional fields.\n    Optional = ,\n\n    /// For required fields. Proto2 syntax only.\n    Required = ,\n\n    /// For repeated fields.\n    Repeated = ,\n}","parent":null,"children":[{"krate":0,"index":2297},{"krate":0,"index":2300},{"krate":0,"index":2303},{"krate":0,"index":2306}],"decl_id":null,"docs":" Whether a field is optional, required, or repeated.\n","sig":null,"attributes":[{"value":"/ Whether a field is optional, required, or repeated.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6442156,"byte_end":6442211,"line_start":1110,"line_end":1110,"column_start":5,"column_end":60}},{"value":"repr(i32)","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6442310,"byte_end":6442322,"line_start":1112,"line_end":1112,"column_start":5,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":2334},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6442696,"byte_end":6442700,"line_start":1126,"line_end":1126,"column_start":12,"column_end":16},"name":"Enum","qualname":"::Enum","value":"Enum { name, enumvalue, options, source_context, syntax }","parent":null,"children":[{"krate":0,"index":2335},{"krate":0,"index":2336},{"krate":0,"index":2337},{"krate":0,"index":2338},{"krate":0,"index":2339}],"decl_id":null,"docs":" Enum type definition.\n","sig":null,"attributes":[{"value":"/ Enum type definition.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6442613,"byte_end":6442638,"line_start":1124,"line_end":1124,"column_start":1,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":2335},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6442765,"byte_end":6442769,"line_start":1129,"line_end":1129,"column_start":9,"column_end":13},"name":"name","qualname":"::Enum::name","value":"std::string::String","parent":{"krate":0,"index":2334},"children":[],"decl_id":null,"docs":" Enum type name.\n","sig":null,"attributes":[{"value":"/ Enum type name.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6442707,"byte_end":6442726,"line_start":1127,"line_end":1127,"column_start":5,"column_end":24}},{"value":"prost(string, tag = \"1\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6442731,"byte_end":6442756,"line_start":1128,"line_end":1128,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2336},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6442873,"byte_end":6442882,"line_start":1132,"line_end":1132,"column_start":9,"column_end":18},"name":"enumvalue","qualname":"::Enum::enumvalue","value":"std::vec::Vec<EnumValue>","parent":{"krate":0,"index":2334},"children":[],"decl_id":null,"docs":" Enum value definitions.\n","sig":null,"attributes":[{"value":"/ Enum value definitions.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6442796,"byte_end":6442823,"line_start":1130,"line_end":1130,"column_start":5,"column_end":32}},{"value":"prost(message, repeated, tag = \"2\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6442828,"byte_end":6442864,"line_start":1131,"line_end":1131,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":2337},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6442994,"byte_end":6443001,"line_start":1135,"line_end":1135,"column_start":9,"column_end":16},"name":"options","qualname":"::Enum::options","value":"std::vec::Vec<Option>","parent":{"krate":0,"index":2334},"children":[],"decl_id":null,"docs":" Protocol buffer options.\n","sig":null,"attributes":[{"value":"/ Protocol buffer options.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6442916,"byte_end":6442944,"line_start":1133,"line_end":1133,"column_start":5,"column_end":33}},{"value":"prost(message, repeated, tag = \"3\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6442949,"byte_end":6442985,"line_start":1134,"line_end":1134,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":2338},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6443105,"byte_end":6443119,"line_start":1138,"line_end":1138,"column_start":9,"column_end":23},"name":"source_context","qualname":"::Enum::source_context","value":"std::option::Option<SourceContext>","parent":{"krate":0,"index":2334},"children":[],"decl_id":null,"docs":" The source context.\n","sig":null,"attributes":[{"value":"/ The source context.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6443032,"byte_end":6443055,"line_start":1136,"line_end":1136,"column_start":5,"column_end":28}},{"value":"prost(message, optional, tag = \"4\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6443060,"byte_end":6443096,"line_start":1137,"line_end":1137,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":2339},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6443238,"byte_end":6443244,"line_start":1141,"line_end":1141,"column_start":9,"column_end":15},"name":"syntax","qualname":"::Enum::syntax","value":"i32","parent":{"krate":0,"index":2334},"children":[],"decl_id":null,"docs":" The source syntax.\n","sig":null,"attributes":[{"value":"/ The source syntax.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6443163,"byte_end":6443185,"line_start":1139,"line_end":1139,"column_start":5,"column_end":27}},{"value":"prost(enumeration = \"Syntax\", tag = \"5\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6443190,"byte_end":6443229,"line_start":1140,"line_end":1140,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2368},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6443238,"byte_end":6443244,"line_start":1141,"line_end":1141,"column_start":9,"column_end":15},"name":"syntax","qualname":"<Enum>::syntax","value":"pub fn syntax(&Self) -> Syntax","parent":null,"children":[],"decl_id":null,"docs":"Returns the enum value of `syntax`, or the default if the field is set to an invalid enum value.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2376},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6443337,"byte_end":6443346,"line_start":1145,"line_end":1145,"column_start":12,"column_end":21},"name":"EnumValue","qualname":"::EnumValue","value":"EnumValue { name, number, options }","parent":null,"children":[{"krate":0,"index":2377},{"krate":0,"index":2378},{"krate":0,"index":2379}],"decl_id":null,"docs":" Enum value definition.\n","sig":null,"attributes":[{"value":"/ Enum value definition.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6443253,"byte_end":6443279,"line_start":1143,"line_end":1143,"column_start":1,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":2377},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6443412,"byte_end":6443416,"line_start":1148,"line_end":1148,"column_start":9,"column_end":13},"name":"name","qualname":"::EnumValue::name","value":"std::string::String","parent":{"krate":0,"index":2376},"children":[],"decl_id":null,"docs":" Enum value name.\n","sig":null,"attributes":[{"value":"/ Enum value name.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6443353,"byte_end":6443373,"line_start":1146,"line_end":1146,"column_start":5,"column_end":25}},{"value":"prost(string, tag = \"1\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6443378,"byte_end":6443403,"line_start":1147,"line_end":1147,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2378},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6443503,"byte_end":6443509,"line_start":1151,"line_end":1151,"column_start":9,"column_end":15},"name":"number","qualname":"::EnumValue::number","value":"i32","parent":{"krate":0,"index":2376},"children":[],"decl_id":null,"docs":" Enum value number.\n","sig":null,"attributes":[{"value":"/ Enum value number.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6443443,"byte_end":6443465,"line_start":1149,"line_end":1149,"column_start":5,"column_end":27}},{"value":"prost(int32, tag = \"2\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6443470,"byte_end":6443494,"line_start":1150,"line_end":1150,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":2379},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6443598,"byte_end":6443605,"line_start":1154,"line_end":1154,"column_start":9,"column_end":16},"name":"options","qualname":"::EnumValue::options","value":"std::vec::Vec<Option>","parent":{"krate":0,"index":2376},"children":[],"decl_id":null,"docs":" Protocol buffer options.\n","sig":null,"attributes":[{"value":"/ Protocol buffer options.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6443520,"byte_end":6443548,"line_start":1152,"line_end":1152,"column_start":5,"column_end":33}},{"value":"prost(message, repeated, tag = \"3\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6443553,"byte_end":6443589,"line_start":1153,"line_end":1153,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":2405},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6443786,"byte_end":6443792,"line_start":1159,"line_end":1159,"column_start":12,"column_end":18},"name":"Option","qualname":"::Option","value":"Option { name, value }","parent":null,"children":[{"krate":0,"index":2406},{"krate":0,"index":2407}],"decl_id":null,"docs":" A protocol buffer option, which can be attached to a message, field,\n enumeration, etc.\n","sig":null,"attributes":[{"value":"/ A protocol buffer option, which can be attached to a message, field,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6443634,"byte_end":6443706,"line_start":1156,"line_end":1156,"column_start":1,"column_end":73}},{"value":"/ enumeration, etc.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6443707,"byte_end":6443728,"line_start":1157,"line_end":1157,"column_start":1,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":2406},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6444098,"byte_end":6444102,"line_start":1165,"line_end":1165,"column_start":9,"column_end":13},"name":"name","qualname":"::Option::name","value":"std::string::String","parent":{"krate":0,"index":2405},"children":[],"decl_id":null,"docs":" The option's name. For protobuf built-in options (options defined in\n descriptor.proto), this is the short name. For example, `\"map_entry\"`.\n For custom options, it should be the fully-qualified name. For example,\n `\"google.api.http\"`.\n","sig":null,"attributes":[{"value":"/ The option's name. For protobuf built-in options (options defined in","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6443799,"byte_end":6443871,"line_start":1160,"line_end":1160,"column_start":5,"column_end":77}},{"value":"/ descriptor.proto), this is the short name. For example, `\"map_entry\"`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6443876,"byte_end":6443950,"line_start":1161,"line_end":1161,"column_start":5,"column_end":79}},{"value":"/ For custom options, it should be the fully-qualified name. For example,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6443955,"byte_end":6444030,"line_start":1162,"line_end":1162,"column_start":5,"column_end":80}},{"value":"/ `\"google.api.http\"`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6444035,"byte_end":6444059,"line_start":1163,"line_end":1163,"column_start":5,"column_end":29}},{"value":"prost(string, tag = \"1\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6444064,"byte_end":6444089,"line_start":1164,"line_end":1164,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2407},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6444475,"byte_end":6444480,"line_start":1171,"line_end":1171,"column_start":9,"column_end":14},"name":"value","qualname":"::Option::value","value":"std::option::Option<Any>","parent":{"krate":0,"index":2405},"children":[],"decl_id":null,"docs":" The option's value packed in an Any message. If the value is a primitive,\n the corresponding wrapper type defined in google/protobuf/wrappers.proto\n should be used. If the value is an enum, it should be stored as an int32\n value using the google.protobuf.Int32Value type.\n","sig":null,"attributes":[{"value":"/ The option's value packed in an Any message. If the value is a primitive,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6444129,"byte_end":6444206,"line_start":1166,"line_end":1166,"column_start":5,"column_end":82}},{"value":"/ the corresponding wrapper type defined in google/protobuf/wrappers.proto","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6444211,"byte_end":6444287,"line_start":1167,"line_end":1167,"column_start":5,"column_end":81}},{"value":"/ should be used. If the value is an enum, it should be stored as an int32","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6444292,"byte_end":6444368,"line_start":1168,"line_end":1168,"column_start":5,"column_end":81}},{"value":"/ value using the google.protobuf.Int32Value type.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6444373,"byte_end":6444425,"line_start":1169,"line_end":1169,"column_start":5,"column_end":57}},{"value":"prost(message, optional, tag = \"2\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6444430,"byte_end":6444466,"line_start":1170,"line_end":1170,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2432},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6444724,"byte_end":6444730,"line_start":1178,"line_end":1178,"column_start":5,"column_end":11},"name":"Proto2","qualname":"::Syntax::Proto2","value":"Syntax::Proto2","parent":{"krate":0,"index":2431},"children":[],"decl_id":null,"docs":" Syntax `proto2`.\n","sig":null,"attributes":[{"value":"/ Syntax `proto2`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6444699,"byte_end":6444719,"line_start":1177,"line_end":1177,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2435},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6444765,"byte_end":6444771,"line_start":1180,"line_end":1180,"column_start":5,"column_end":11},"name":"Proto3","qualname":"::Syntax::Proto3","value":"Syntax::Proto3","parent":{"krate":0,"index":2431},"children":[],"decl_id":null,"docs":" Syntax `proto3`.\n","sig":null,"attributes":[{"value":"/ Syntax `proto3`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6444740,"byte_end":6444760,"line_start":1179,"line_end":1179,"column_start":5,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":2431},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6444686,"byte_end":6444692,"line_start":1176,"line_end":1176,"column_start":10,"column_end":16},"name":"Syntax","qualname":"::Syntax","value":"pub enum Syntax {\n\n    /// Syntax `proto2`.\n    Proto2 = ,\n\n    /// Syntax `proto3`.\n    Proto3 = ,\n}","parent":null,"children":[{"krate":0,"index":2432},{"krate":0,"index":2435}],"decl_id":null,"docs":" The syntax in which a protocol buffer element is defined.\n","sig":null,"attributes":[{"value":"/ The syntax in which a protocol buffer element is defined.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6444512,"byte_end":6444573,"line_start":1173,"line_end":1173,"column_start":1,"column_end":62}},{"value":"repr(i32)","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6444664,"byte_end":6444676,"line_start":1175,"line_end":1175,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":2463},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6445405,"byte_end":6445408,"line_start":1192,"line_end":1192,"column_start":12,"column_end":15},"name":"Api","qualname":"::Api","value":"Api { name, methods, options, version, source_context, mixins, syntax }","parent":null,"children":[{"krate":0,"index":2464},{"krate":0,"index":2465},{"krate":0,"index":2466},{"krate":0,"index":2467},{"krate":0,"index":2468},{"krate":0,"index":2469},{"krate":0,"index":2470}],"decl_id":null,"docs":" Api is a light-weight descriptor for an API Interface.","sig":null,"attributes":[{"value":"/ Api is a light-weight descriptor for an API Interface.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6444779,"byte_end":6444837,"line_start":1182,"line_end":1182,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6444838,"byte_end":6444841,"line_start":1183,"line_end":1183,"column_start":1,"column_end":4}},{"value":"/ Interfaces are also described as \"protocol buffer services\" in some contexts,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6444842,"byte_end":6444923,"line_start":1184,"line_end":1184,"column_start":1,"column_end":82}},{"value":"/ such as by the \"service\" keyword in a .proto file, but they are different","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6444924,"byte_end":6445001,"line_start":1185,"line_end":1185,"column_start":1,"column_end":78}},{"value":"/ from API Services, which represent a concrete implementation of an interface","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6445002,"byte_end":6445082,"line_start":1186,"line_end":1186,"column_start":1,"column_end":81}},{"value":"/ as opposed to simply a description of methods and bindings. They are also","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6445083,"byte_end":6445160,"line_start":1187,"line_end":1187,"column_start":1,"column_end":78}},{"value":"/ sometimes simply referred to as \"APIs\" in other contexts, such as the name of","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6445161,"byte_end":6445242,"line_start":1188,"line_end":1188,"column_start":1,"column_end":82}},{"value":"/ this message itself. See https://cloud.google.com/apis/design/glossary for","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6445243,"byte_end":6445321,"line_start":1189,"line_end":1189,"column_start":1,"column_end":79}},{"value":"/ detailed terminology.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6445322,"byte_end":6445347,"line_start":1190,"line_end":1190,"column_start":1,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":2464},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6445573,"byte_end":6445577,"line_start":1196,"line_end":1196,"column_start":9,"column_end":13},"name":"name","qualname":"::Api::name","value":"std::string::String","parent":{"krate":0,"index":2463},"children":[],"decl_id":null,"docs":" The fully qualified name of this interface, including package name\n followed by the interface's simple name.\n","sig":null,"attributes":[{"value":"/ The fully qualified name of this interface, including package name","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6445415,"byte_end":6445485,"line_start":1193,"line_end":1193,"column_start":5,"column_end":75}},{"value":"/ followed by the interface's simple name.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6445490,"byte_end":6445534,"line_start":1194,"line_end":1194,"column_start":5,"column_end":49}},{"value":"prost(string, tag = \"1\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6445539,"byte_end":6445564,"line_start":1195,"line_end":1195,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2465},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6445710,"byte_end":6445717,"line_start":1199,"line_end":1199,"column_start":9,"column_end":16},"name":"methods","qualname":"::Api::methods","value":"std::vec::Vec<Method>","parent":{"krate":0,"index":2463},"children":[],"decl_id":null,"docs":" The methods of this interface, in unspecified order.\n","sig":null,"attributes":[{"value":"/ The methods of this interface, in unspecified order.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6445604,"byte_end":6445660,"line_start":1197,"line_end":1197,"column_start":5,"column_end":61}},{"value":"prost(message, repeated, tag = \"2\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6445665,"byte_end":6445701,"line_start":1198,"line_end":1198,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":2466},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6445841,"byte_end":6445848,"line_start":1202,"line_end":1202,"column_start":9,"column_end":16},"name":"options","qualname":"::Api::options","value":"std::vec::Vec<Option>","parent":{"krate":0,"index":2463},"children":[],"decl_id":null,"docs":" Any metadata attached to the interface.\n","sig":null,"attributes":[{"value":"/ Any metadata attached to the interface.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6445748,"byte_end":6445791,"line_start":1200,"line_end":1200,"column_start":5,"column_end":48}},{"value":"prost(message, repeated, tag = \"3\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6445796,"byte_end":6445832,"line_start":1201,"line_end":1201,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":2467},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6447072,"byte_end":6447079,"line_start":1225,"line_end":1225,"column_start":9,"column_end":16},"name":"version","qualname":"::Api::version","value":"std::string::String","parent":{"krate":0,"index":2463},"children":[],"decl_id":null,"docs":" A version string for this interface. If specified, must have the form\n `major-version.minor-version`, as in `1.10`. If the minor version is\n omitted, it defaults to zero. If the entire version field is empty, the\n major version is derived from the package name, as outlined below. If the\n field is not empty, the version in the package name will be verified to be\n consistent with what is provided here.","sig":null,"attributes":[{"value":"/ A version string for this interface. If specified, must have the form","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6445879,"byte_end":6445952,"line_start":1203,"line_end":1203,"column_start":5,"column_end":78}},{"value":"/ `major-version.minor-version`, as in `1.10`. If the minor version is","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6445957,"byte_end":6446029,"line_start":1204,"line_end":1204,"column_start":5,"column_end":77}},{"value":"/ omitted, it defaults to zero. If the entire version field is empty, the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6446034,"byte_end":6446109,"line_start":1205,"line_end":1205,"column_start":5,"column_end":80}},{"value":"/ major version is derived from the package name, as outlined below. If the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6446114,"byte_end":6446191,"line_start":1206,"line_end":1206,"column_start":5,"column_end":82}},{"value":"/ field is not empty, the version in the package name will be verified to be","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6446196,"byte_end":6446274,"line_start":1207,"line_end":1207,"column_start":5,"column_end":83}},{"value":"/ consistent with what is provided here.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6446279,"byte_end":6446321,"line_start":1208,"line_end":1208,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6446326,"byte_end":6446329,"line_start":1209,"line_end":1209,"column_start":5,"column_end":8}},{"value":"/ The versioning schema uses [semantic","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6446334,"byte_end":6446374,"line_start":1210,"line_end":1210,"column_start":5,"column_end":45}},{"value":"/ versioning](http://semver.org) where the major version number","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6446379,"byte_end":6446444,"line_start":1211,"line_end":1211,"column_start":5,"column_end":70}},{"value":"/ indicates a breaking change and the minor version an additive,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6446449,"byte_end":6446515,"line_start":1212,"line_end":1212,"column_start":5,"column_end":71}},{"value":"/ non-breaking change. Both version numbers are signals to users","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6446520,"byte_end":6446586,"line_start":1213,"line_end":1213,"column_start":5,"column_end":71}},{"value":"/ what to expect from different versions, and should be carefully","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6446591,"byte_end":6446658,"line_start":1214,"line_end":1214,"column_start":5,"column_end":72}},{"value":"/ chosen based on the product plan.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6446663,"byte_end":6446700,"line_start":1215,"line_end":1215,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6446705,"byte_end":6446708,"line_start":1216,"line_end":1216,"column_start":5,"column_end":8}},{"value":"/ The major version is also reflected in the package name of the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6446713,"byte_end":6446779,"line_start":1217,"line_end":1217,"column_start":5,"column_end":71}},{"value":"/ interface, which must end in `v<major-version>`, as in","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6446784,"byte_end":6446842,"line_start":1218,"line_end":1218,"column_start":5,"column_end":63}},{"value":"/ `google.feature.v1`. For major versions 0 and 1, the suffix can","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6446847,"byte_end":6446914,"line_start":1219,"line_end":1219,"column_start":5,"column_end":72}},{"value":"/ be omitted. Zero major versions must only be used for","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6446919,"byte_end":6446976,"line_start":1220,"line_end":1220,"column_start":5,"column_end":62}},{"value":"/ experimental, non-GA interfaces.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6446981,"byte_end":6447017,"line_start":1221,"line_end":1221,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6447022,"byte_end":6447025,"line_start":1222,"line_end":1222,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6447030,"byte_end":6447033,"line_start":1223,"line_end":1223,"column_start":5,"column_end":8}},{"value":"prost(string, tag = \"4\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6447038,"byte_end":6447063,"line_start":1224,"line_end":1224,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2468},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6447243,"byte_end":6447257,"line_start":1229,"line_end":1229,"column_start":9,"column_end":23},"name":"source_context","qualname":"::Api::source_context","value":"std::option::Option<SourceContext>","parent":{"krate":0,"index":2463},"children":[],"decl_id":null,"docs":" Source context for the protocol buffer service represented by this\n message.\n","sig":null,"attributes":[{"value":"/ Source context for the protocol buffer service represented by this","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6447106,"byte_end":6447176,"line_start":1226,"line_end":1226,"column_start":5,"column_end":75}},{"value":"/ message.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6447181,"byte_end":6447193,"line_start":1227,"line_end":1227,"column_start":5,"column_end":17}},{"value":"prost(message, optional, tag = \"5\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6447198,"byte_end":6447234,"line_start":1228,"line_end":1228,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":2469},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6447390,"byte_end":6447396,"line_start":1232,"line_end":1232,"column_start":9,"column_end":15},"name":"mixins","qualname":"::Api::mixins","value":"std::vec::Vec<Mixin>","parent":{"krate":0,"index":2463},"children":[],"decl_id":null,"docs":" Included interfaces. See [Mixin][].\n","sig":null,"attributes":[{"value":"/ Included interfaces. See [Mixin][].","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6447301,"byte_end":6447340,"line_start":1230,"line_end":1230,"column_start":5,"column_end":44}},{"value":"prost(message, repeated, tag = \"6\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6447345,"byte_end":6447381,"line_start":1231,"line_end":1231,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":2470},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6447516,"byte_end":6447522,"line_start":1235,"line_end":1235,"column_start":9,"column_end":15},"name":"syntax","qualname":"::Api::syntax","value":"i32","parent":{"krate":0,"index":2463},"children":[],"decl_id":null,"docs":" The source syntax of the service.\n","sig":null,"attributes":[{"value":"/ The source syntax of the service.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6447426,"byte_end":6447463,"line_start":1233,"line_end":1233,"column_start":5,"column_end":42}},{"value":"prost(enumeration = \"Syntax\", tag = \"7\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6447468,"byte_end":6447507,"line_start":1234,"line_end":1234,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2503},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6447516,"byte_end":6447522,"line_start":1235,"line_end":1235,"column_start":9,"column_end":15},"name":"syntax","qualname":"<Api>::syntax","value":"pub fn syntax(&Self) -> Syntax","parent":null,"children":[],"decl_id":null,"docs":"Returns the enum value of `syntax`, or the default if the field is set to an invalid enum value.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2511},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6447640,"byte_end":6447646,"line_start":1239,"line_end":1239,"column_start":12,"column_end":18},"name":"Method","qualname":"::Method","value":"Method { name, request_type_url, request_streaming, response_type_url, response_streaming, options, syntax }","parent":null,"children":[{"krate":0,"index":2512},{"krate":0,"index":2513},{"krate":0,"index":2514},{"krate":0,"index":2515},{"krate":0,"index":2516},{"krate":0,"index":2517},{"krate":0,"index":2518}],"decl_id":null,"docs":" Method represents a method of an API interface.\n","sig":null,"attributes":[{"value":"/ Method represents a method of an API interface.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6447531,"byte_end":6447582,"line_start":1237,"line_end":1237,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2512},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6447727,"byte_end":6447731,"line_start":1242,"line_end":1242,"column_start":9,"column_end":13},"name":"name","qualname":"::Method::name","value":"std::string::String","parent":{"krate":0,"index":2511},"children":[],"decl_id":null,"docs":" The simple name of this method.\n","sig":null,"attributes":[{"value":"/ The simple name of this method.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6447653,"byte_end":6447688,"line_start":1240,"line_end":1240,"column_start":5,"column_end":40}},{"value":"prost(string, tag = \"1\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6447693,"byte_end":6447718,"line_start":1241,"line_end":1241,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2513},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6447833,"byte_end":6447849,"line_start":1245,"line_end":1245,"column_start":9,"column_end":25},"name":"request_type_url","qualname":"::Method::request_type_url","value":"std::string::String","parent":{"krate":0,"index":2511},"children":[],"decl_id":null,"docs":" A URL of the input message type.\n","sig":null,"attributes":[{"value":"/ A URL of the input message type.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6447758,"byte_end":6447794,"line_start":1243,"line_end":1243,"column_start":5,"column_end":41}},{"value":"prost(string, tag = \"2\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6447799,"byte_end":6447824,"line_start":1244,"line_end":1244,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2514},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6447950,"byte_end":6447967,"line_start":1248,"line_end":1248,"column_start":9,"column_end":26},"name":"request_streaming","qualname":"::Method::request_streaming","value":"bool","parent":{"krate":0,"index":2511},"children":[],"decl_id":null,"docs":" If true, the request is streamed.\n","sig":null,"attributes":[{"value":"/ If true, the request is streamed.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6447876,"byte_end":6447913,"line_start":1246,"line_end":1246,"column_start":5,"column_end":42}},{"value":"prost(bool, tag = \"3\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6447918,"byte_end":6447941,"line_start":1247,"line_end":1247,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":2515},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6448057,"byte_end":6448074,"line_start":1251,"line_end":1251,"column_start":9,"column_end":26},"name":"response_type_url","qualname":"::Method::response_type_url","value":"std::string::String","parent":{"krate":0,"index":2511},"children":[],"decl_id":null,"docs":" The URL of the output message type.\n","sig":null,"attributes":[{"value":"/ The URL of the output message type.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6447979,"byte_end":6448018,"line_start":1249,"line_end":1249,"column_start":5,"column_end":44}},{"value":"prost(string, tag = \"4\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6448023,"byte_end":6448048,"line_start":1250,"line_end":1250,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2516},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6448176,"byte_end":6448194,"line_start":1254,"line_end":1254,"column_start":9,"column_end":27},"name":"response_streaming","qualname":"::Method::response_streaming","value":"bool","parent":{"krate":0,"index":2511},"children":[],"decl_id":null,"docs":" If true, the response is streamed.\n","sig":null,"attributes":[{"value":"/ If true, the response is streamed.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6448101,"byte_end":6448139,"line_start":1252,"line_end":1252,"column_start":5,"column_end":43}},{"value":"prost(bool, tag = \"5\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6448144,"byte_end":6448167,"line_start":1253,"line_end":1253,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":2517},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6448296,"byte_end":6448303,"line_start":1257,"line_end":1257,"column_start":9,"column_end":16},"name":"options","qualname":"::Method::options","value":"std::vec::Vec<Option>","parent":{"krate":0,"index":2511},"children":[],"decl_id":null,"docs":" Any metadata attached to the method.\n","sig":null,"attributes":[{"value":"/ Any metadata attached to the method.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6448206,"byte_end":6448246,"line_start":1255,"line_end":1255,"column_start":5,"column_end":45}},{"value":"prost(message, repeated, tag = \"6\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6448251,"byte_end":6448287,"line_start":1256,"line_end":1256,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":2518},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6448424,"byte_end":6448430,"line_start":1260,"line_end":1260,"column_start":9,"column_end":15},"name":"syntax","qualname":"::Method::syntax","value":"i32","parent":{"krate":0,"index":2511},"children":[],"decl_id":null,"docs":" The source syntax of this method.\n","sig":null,"attributes":[{"value":"/ The source syntax of this method.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6448334,"byte_end":6448371,"line_start":1258,"line_end":1258,"column_start":5,"column_end":42}},{"value":"prost(enumeration = \"Syntax\", tag = \"7\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6448376,"byte_end":6448415,"line_start":1259,"line_end":1259,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2556},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6448424,"byte_end":6448430,"line_start":1260,"line_end":1260,"column_start":9,"column_end":15},"name":"syntax","qualname":"<Method>::syntax","value":"pub fn syntax(&Self) -> Syntax","parent":null,"children":[],"decl_id":null,"docs":"Returns the enum value of `syntax`, or the default if the field is set to an invalid enum value.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2564},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6451220,"byte_end":6451225,"line_start":1341,"line_end":1341,"column_start":12,"column_end":17},"name":"Mixin","qualname":"::Mixin","value":"Mixin { name, root }","parent":null,"children":[{"krate":0,"index":2565},{"krate":0,"index":2566}],"decl_id":null,"docs":" Declares an API Interface to be included in this interface. The including\n interface must redeclare all the methods from the included interface, but\n documentation and options are inherited as follows:","sig":null,"attributes":[{"value":"/ Declares an API Interface to be included in this interface. The including","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6448439,"byte_end":6448516,"line_start":1262,"line_end":1262,"column_start":1,"column_end":78}},{"value":"/ interface must redeclare all the methods from the included interface, but","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6448517,"byte_end":6448594,"line_start":1263,"line_end":1263,"column_start":1,"column_end":78}},{"value":"/ documentation and options are inherited as follows:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6448595,"byte_end":6448650,"line_start":1264,"line_end":1264,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6448651,"byte_end":6448654,"line_start":1265,"line_end":1265,"column_start":1,"column_end":4}},{"value":"/ - If after comment and whitespace stripping, the documentation","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6448655,"byte_end":6448721,"line_start":1266,"line_end":1266,"column_start":1,"column_end":67}},{"value":"/   string of the redeclared method is empty, it will be inherited","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6448722,"byte_end":6448790,"line_start":1267,"line_end":1267,"column_start":1,"column_end":69}},{"value":"/   from the original method.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6448791,"byte_end":6448822,"line_start":1268,"line_end":1268,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6448823,"byte_end":6448826,"line_start":1269,"line_end":1269,"column_start":1,"column_end":4}},{"value":"/ - Each annotation belonging to the service config (http,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6448827,"byte_end":6448887,"line_start":1270,"line_end":1270,"column_start":1,"column_end":61}},{"value":"/   visibility) which is not set in the redeclared method will be","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6448888,"byte_end":6448955,"line_start":1271,"line_end":1271,"column_start":1,"column_end":68}},{"value":"/   inherited.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6448956,"byte_end":6448972,"line_start":1272,"line_end":1272,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6448973,"byte_end":6448976,"line_start":1273,"line_end":1273,"column_start":1,"column_end":4}},{"value":"/ - If an http annotation is inherited, the path pattern will be","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6448977,"byte_end":6449043,"line_start":1274,"line_end":1274,"column_start":1,"column_end":67}},{"value":"/   modified as follows. Any version prefix will be replaced by the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6449044,"byte_end":6449113,"line_start":1275,"line_end":1275,"column_start":1,"column_end":70}},{"value":"/   version of the including interface plus the [root][] path if","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6449114,"byte_end":6449180,"line_start":1276,"line_end":1276,"column_start":1,"column_end":67}},{"value":"/   specified.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6449181,"byte_end":6449197,"line_start":1277,"line_end":1277,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6449198,"byte_end":6449201,"line_start":1278,"line_end":1278,"column_start":1,"column_end":4}},{"value":"/ Example of a simple mixin:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6449202,"byte_end":6449232,"line_start":1279,"line_end":1279,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6449233,"byte_end":6449236,"line_start":1280,"line_end":1280,"column_start":1,"column_end":4}},{"value":"/     package google.acl.v1;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6449237,"byte_end":6449267,"line_start":1281,"line_end":1281,"column_start":1,"column_end":31}},{"value":"/     service AccessControl {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6449268,"byte_end":6449299,"line_start":1282,"line_end":1282,"column_start":1,"column_end":32}},{"value":"/       // Get the underlying ACL object.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6449300,"byte_end":6449343,"line_start":1283,"line_end":1283,"column_start":1,"column_end":44}},{"value":"/       rpc GetAcl(GetAclRequest) returns (Acl) {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6449344,"byte_end":6449395,"line_start":1284,"line_end":1284,"column_start":1,"column_end":52}},{"value":"/         option (google.api.http).get = \"/v1/{resource=**}:getAcl\";","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6449396,"byte_end":6449466,"line_start":1285,"line_end":1285,"column_start":1,"column_end":71}},{"value":"/       }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6449467,"byte_end":6449478,"line_start":1286,"line_end":1286,"column_start":1,"column_end":12}},{"value":"/     }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6449479,"byte_end":6449488,"line_start":1287,"line_end":1287,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6449489,"byte_end":6449492,"line_start":1288,"line_end":1288,"column_start":1,"column_end":4}},{"value":"/     package google.storage.v2;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6449493,"byte_end":6449527,"line_start":1289,"line_end":1289,"column_start":1,"column_end":35}},{"value":"/     service Storage {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6449528,"byte_end":6449553,"line_start":1290,"line_end":1290,"column_start":1,"column_end":26}},{"value":"/       rpc GetAcl(GetAclRequest) returns (Acl);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6449554,"byte_end":6449604,"line_start":1291,"line_end":1291,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6449605,"byte_end":6449608,"line_start":1292,"line_end":1292,"column_start":1,"column_end":4}},{"value":"/       // Get a data record.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6449609,"byte_end":6449640,"line_start":1293,"line_end":1293,"column_start":1,"column_end":32}},{"value":"/       rpc GetData(GetDataRequest) returns (Data) {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6449641,"byte_end":6449695,"line_start":1294,"line_end":1294,"column_start":1,"column_end":55}},{"value":"/         option (google.api.http).get = \"/v2/{resource=**}\";","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6449696,"byte_end":6449759,"line_start":1295,"line_end":1295,"column_start":1,"column_end":64}},{"value":"/       }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6449760,"byte_end":6449771,"line_start":1296,"line_end":1296,"column_start":1,"column_end":12}},{"value":"/     }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6449772,"byte_end":6449781,"line_start":1297,"line_end":1297,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6449782,"byte_end":6449785,"line_start":1298,"line_end":1298,"column_start":1,"column_end":4}},{"value":"/ Example of a mixin configuration:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6449786,"byte_end":6449823,"line_start":1299,"line_end":1299,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6449824,"byte_end":6449827,"line_start":1300,"line_end":1300,"column_start":1,"column_end":4}},{"value":"/     apis:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6449828,"byte_end":6449841,"line_start":1301,"line_end":1301,"column_start":1,"column_end":14}},{"value":"/     - name: google.storage.v2.Storage","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6449842,"byte_end":6449883,"line_start":1302,"line_end":1302,"column_start":1,"column_end":42}},{"value":"/       mixins:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6449884,"byte_end":6449901,"line_start":1303,"line_end":1303,"column_start":1,"column_end":18}},{"value":"/       - name: google.acl.v1.AccessControl","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6449902,"byte_end":6449947,"line_start":1304,"line_end":1304,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6449948,"byte_end":6449951,"line_start":1305,"line_end":1305,"column_start":1,"column_end":4}},{"value":"/ The mixin construct implies that all methods in `AccessControl` are","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6449952,"byte_end":6450023,"line_start":1306,"line_end":1306,"column_start":1,"column_end":72}},{"value":"/ also declared with same name and request/response types in","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6450024,"byte_end":6450086,"line_start":1307,"line_end":1307,"column_start":1,"column_end":63}},{"value":"/ `Storage`. A documentation generator or annotation processor will","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6450087,"byte_end":6450156,"line_start":1308,"line_end":1308,"column_start":1,"column_end":70}},{"value":"/ see the effective `Storage.GetAcl` method after inherting","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6450157,"byte_end":6450218,"line_start":1309,"line_end":1309,"column_start":1,"column_end":62}},{"value":"/ documentation and annotations as follows:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6450219,"byte_end":6450264,"line_start":1310,"line_end":1310,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6450265,"byte_end":6450268,"line_start":1311,"line_end":1311,"column_start":1,"column_end":4}},{"value":"/     service Storage {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6450269,"byte_end":6450294,"line_start":1312,"line_end":1312,"column_start":1,"column_end":26}},{"value":"/       // Get the underlying ACL object.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6450295,"byte_end":6450338,"line_start":1313,"line_end":1313,"column_start":1,"column_end":44}},{"value":"/       rpc GetAcl(GetAclRequest) returns (Acl) {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6450339,"byte_end":6450390,"line_start":1314,"line_end":1314,"column_start":1,"column_end":52}},{"value":"/         option (google.api.http).get = \"/v2/{resource=**}:getAcl\";","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6450391,"byte_end":6450461,"line_start":1315,"line_end":1315,"column_start":1,"column_end":71}},{"value":"/       }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6450462,"byte_end":6450473,"line_start":1316,"line_end":1316,"column_start":1,"column_end":12}},{"value":"/       ...","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6450474,"byte_end":6450487,"line_start":1317,"line_end":1317,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6450488,"byte_end":6450497,"line_start":1318,"line_end":1318,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6450498,"byte_end":6450501,"line_start":1319,"line_end":1319,"column_start":1,"column_end":4}},{"value":"/ Note how the version in the path pattern changed from `v1` to `v2`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6450502,"byte_end":6450573,"line_start":1320,"line_end":1320,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6450574,"byte_end":6450577,"line_start":1321,"line_end":1321,"column_start":1,"column_end":4}},{"value":"/ If the `root` field in the mixin is specified, it should be a","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6450578,"byte_end":6450643,"line_start":1322,"line_end":1322,"column_start":1,"column_end":66}},{"value":"/ relative path under which inherited HTTP paths are placed. Example:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6450644,"byte_end":6450715,"line_start":1323,"line_end":1323,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6450716,"byte_end":6450719,"line_start":1324,"line_end":1324,"column_start":1,"column_end":4}},{"value":"/     apis:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6450720,"byte_end":6450733,"line_start":1325,"line_end":1325,"column_start":1,"column_end":14}},{"value":"/     - name: google.storage.v2.Storage","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6450734,"byte_end":6450775,"line_start":1326,"line_end":1326,"column_start":1,"column_end":42}},{"value":"/       mixins:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6450776,"byte_end":6450793,"line_start":1327,"line_end":1327,"column_start":1,"column_end":18}},{"value":"/       - name: google.acl.v1.AccessControl","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6450794,"byte_end":6450839,"line_start":1328,"line_end":1328,"column_start":1,"column_end":46}},{"value":"/         root: acls","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6450840,"byte_end":6450862,"line_start":1329,"line_end":1329,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6450863,"byte_end":6450866,"line_start":1330,"line_end":1330,"column_start":1,"column_end":4}},{"value":"/ This implies the following inherited HTTP annotation:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6450867,"byte_end":6450924,"line_start":1331,"line_end":1331,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6450925,"byte_end":6450928,"line_start":1332,"line_end":1332,"column_start":1,"column_end":4}},{"value":"/     service Storage {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6450929,"byte_end":6450954,"line_start":1333,"line_end":1333,"column_start":1,"column_end":26}},{"value":"/       // Get the underlying ACL object.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6450955,"byte_end":6450998,"line_start":1334,"line_end":1334,"column_start":1,"column_end":44}},{"value":"/       rpc GetAcl(GetAclRequest) returns (Acl) {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6450999,"byte_end":6451050,"line_start":1335,"line_end":1335,"column_start":1,"column_end":52}},{"value":"/         option (google.api.http).get = \"/v2/acls/{resource=**}:getAcl\";","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6451051,"byte_end":6451126,"line_start":1336,"line_end":1336,"column_start":1,"column_end":76}},{"value":"/       }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6451127,"byte_end":6451138,"line_start":1337,"line_end":1337,"column_start":1,"column_end":12}},{"value":"/       ...","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6451139,"byte_end":6451152,"line_start":1338,"line_end":1338,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6451153,"byte_end":6451162,"line_start":1339,"line_end":1339,"column_start":1,"column_end":10}}]},{"kind":"Field","id":{"krate":0,"index":2565},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6451335,"byte_end":6451339,"line_start":1344,"line_end":1344,"column_start":9,"column_end":13},"name":"name","qualname":"::Mixin::name","value":"std::string::String","parent":{"krate":0,"index":2564},"children":[],"decl_id":null,"docs":" The fully qualified name of the interface which is included.\n","sig":null,"attributes":[{"value":"/ The fully qualified name of the interface which is included.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6451232,"byte_end":6451296,"line_start":1342,"line_end":1342,"column_start":5,"column_end":69}},{"value":"prost(string, tag = \"1\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6451301,"byte_end":6451326,"line_start":1343,"line_end":1343,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2566},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6451491,"byte_end":6451495,"line_start":1348,"line_end":1348,"column_start":9,"column_end":13},"name":"root","qualname":"::Mixin::root","value":"std::string::String","parent":{"krate":0,"index":2564},"children":[],"decl_id":null,"docs":" If non-empty specifies a path under which inherited HTTP paths\n are rooted.\n","sig":null,"attributes":[{"value":"/ If non-empty specifies a path under which inherited HTTP paths","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6451366,"byte_end":6451432,"line_start":1345,"line_end":1345,"column_start":5,"column_end":71}},{"value":"/ are rooted.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6451437,"byte_end":6451452,"line_start":1346,"line_end":1346,"column_start":5,"column_end":20}},{"value":"prost(string, tag = \"2\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6451457,"byte_end":6451482,"line_start":1347,"line_end":1347,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":2591},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6453822,"byte_end":6453830,"line_start":1411,"line_end":1411,"column_start":12,"column_end":20},"name":"Duration","qualname":"::Duration","value":"Duration { seconds, nanos }","parent":null,"children":[{"krate":0,"index":2592},{"krate":0,"index":2593}],"decl_id":null,"docs":" A Duration represents a signed, fixed-length span of time represented\n as a count of seconds and fractions of seconds at nanosecond\n resolution. It is independent of any calendar and concepts like \"day\"\n or \"month\". It is related to Timestamp in that the difference between\n two Timestamp values is a Duration and it can be added or subtracted\n from a Timestamp. Range is approximately +-10,000 years.","sig":null,"attributes":[{"value":"/ A Duration represents a signed, fixed-length span of time represented","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6451520,"byte_end":6451593,"line_start":1350,"line_end":1350,"column_start":1,"column_end":74}},{"value":"/ as a count of seconds and fractions of seconds at nanosecond","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6451594,"byte_end":6451658,"line_start":1351,"line_end":1351,"column_start":1,"column_end":65}},{"value":"/ resolution. It is independent of any calendar and concepts like \"day\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6451659,"byte_end":6451732,"line_start":1352,"line_end":1352,"column_start":1,"column_end":74}},{"value":"/ or \"month\". It is related to Timestamp in that the difference between","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6451733,"byte_end":6451806,"line_start":1353,"line_end":1353,"column_start":1,"column_end":74}},{"value":"/ two Timestamp values is a Duration and it can be added or subtracted","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6451807,"byte_end":6451879,"line_start":1354,"line_end":1354,"column_start":1,"column_end":73}},{"value":"/ from a Timestamp. Range is approximately +-10,000 years.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6451880,"byte_end":6451940,"line_start":1355,"line_end":1355,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6451941,"byte_end":6451944,"line_start":1356,"line_end":1356,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6451945,"byte_end":6451959,"line_start":1357,"line_end":1357,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6451960,"byte_end":6451963,"line_start":1358,"line_end":1358,"column_start":1,"column_end":4}},{"value":"/ Example 1: Compute Duration from two Timestamps in pseudo code.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6451964,"byte_end":6452031,"line_start":1359,"line_end":1359,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6452032,"byte_end":6452035,"line_start":1360,"line_end":1360,"column_start":1,"column_end":4}},{"value":"/     Timestamp start = ...;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6452036,"byte_end":6452066,"line_start":1361,"line_end":1361,"column_start":1,"column_end":31}},{"value":"/     Timestamp end = ...;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6452067,"byte_end":6452095,"line_start":1362,"line_end":1362,"column_start":1,"column_end":29}},{"value":"/     Duration duration = ...;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6452096,"byte_end":6452128,"line_start":1363,"line_end":1363,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6452129,"byte_end":6452132,"line_start":1364,"line_end":1364,"column_start":1,"column_end":4}},{"value":"/     duration.seconds = end.seconds - start.seconds;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6452133,"byte_end":6452188,"line_start":1365,"line_end":1365,"column_start":1,"column_end":56}},{"value":"/     duration.nanos = end.nanos - start.nanos;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6452189,"byte_end":6452238,"line_start":1366,"line_end":1366,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6452239,"byte_end":6452242,"line_start":1367,"line_end":1367,"column_start":1,"column_end":4}},{"value":"/     if (duration.seconds < 0 && duration.nanos > 0) {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6452243,"byte_end":6452300,"line_start":1368,"line_end":1368,"column_start":1,"column_end":58}},{"value":"/       duration.seconds += 1;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6452301,"byte_end":6452333,"line_start":1369,"line_end":1369,"column_start":1,"column_end":33}},{"value":"/       duration.nanos -= 1000000000;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6452334,"byte_end":6452373,"line_start":1370,"line_end":1370,"column_start":1,"column_end":40}},{"value":"/     } else if (duration.seconds > 0 && duration.nanos < 0) {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6452374,"byte_end":6452438,"line_start":1371,"line_end":1371,"column_start":1,"column_end":65}},{"value":"/       duration.seconds -= 1;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6452439,"byte_end":6452471,"line_start":1372,"line_end":1372,"column_start":1,"column_end":33}},{"value":"/       duration.nanos += 1000000000;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6452472,"byte_end":6452511,"line_start":1373,"line_end":1373,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6452512,"byte_end":6452521,"line_start":1374,"line_end":1374,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6452522,"byte_end":6452525,"line_start":1375,"line_end":1375,"column_start":1,"column_end":4}},{"value":"/ Example 2: Compute Timestamp from Timestamp + Duration in pseudo code.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6452526,"byte_end":6452600,"line_start":1376,"line_end":1376,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6452601,"byte_end":6452604,"line_start":1377,"line_end":1377,"column_start":1,"column_end":4}},{"value":"/     Timestamp start = ...;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6452605,"byte_end":6452635,"line_start":1378,"line_end":1378,"column_start":1,"column_end":31}},{"value":"/     Duration duration = ...;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6452636,"byte_end":6452668,"line_start":1379,"line_end":1379,"column_start":1,"column_end":33}},{"value":"/     Timestamp end = ...;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6452669,"byte_end":6452697,"line_start":1380,"line_end":1380,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6452698,"byte_end":6452701,"line_start":1381,"line_end":1381,"column_start":1,"column_end":4}},{"value":"/     end.seconds = start.seconds + duration.seconds;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6452702,"byte_end":6452757,"line_start":1382,"line_end":1382,"column_start":1,"column_end":56}},{"value":"/     end.nanos = start.nanos + duration.nanos;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6452758,"byte_end":6452807,"line_start":1383,"line_end":1383,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6452808,"byte_end":6452811,"line_start":1384,"line_end":1384,"column_start":1,"column_end":4}},{"value":"/     if (end.nanos < 0) {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6452812,"byte_end":6452840,"line_start":1385,"line_end":1385,"column_start":1,"column_end":29}},{"value":"/       end.seconds -= 1;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6452841,"byte_end":6452868,"line_start":1386,"line_end":1386,"column_start":1,"column_end":28}},{"value":"/       end.nanos += 1000000000;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6452869,"byte_end":6452903,"line_start":1387,"line_end":1387,"column_start":1,"column_end":35}},{"value":"/     } else if (end.nanos >= 1000000000) {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6452904,"byte_end":6452949,"line_start":1388,"line_end":1388,"column_start":1,"column_end":46}},{"value":"/       end.seconds += 1;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6452950,"byte_end":6452977,"line_start":1389,"line_end":1389,"column_start":1,"column_end":28}},{"value":"/       end.nanos -= 1000000000;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6452978,"byte_end":6453012,"line_start":1390,"line_end":1390,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6453013,"byte_end":6453022,"line_start":1391,"line_end":1391,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6453023,"byte_end":6453026,"line_start":1392,"line_end":1392,"column_start":1,"column_end":4}},{"value":"/ Example 3: Compute Duration from datetime.timedelta in Python.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6453027,"byte_end":6453093,"line_start":1393,"line_end":1393,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6453094,"byte_end":6453097,"line_start":1394,"line_end":1394,"column_start":1,"column_end":4}},{"value":"/     td = datetime.timedelta(days=3, minutes=10)","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6453098,"byte_end":6453149,"line_start":1395,"line_end":1395,"column_start":1,"column_end":52}},{"value":"/     duration = Duration()","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6453150,"byte_end":6453179,"line_start":1396,"line_end":1396,"column_start":1,"column_end":30}},{"value":"/     duration.FromTimedelta(td)","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6453180,"byte_end":6453214,"line_start":1397,"line_end":1397,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6453215,"byte_end":6453218,"line_start":1398,"line_end":1398,"column_start":1,"column_end":4}},{"value":"/ # JSON Mapping","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6453219,"byte_end":6453237,"line_start":1399,"line_end":1399,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6453238,"byte_end":6453241,"line_start":1400,"line_end":1400,"column_start":1,"column_end":4}},{"value":"/ In JSON format, the Duration type is encoded as a string rather than an","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6453242,"byte_end":6453317,"line_start":1401,"line_end":1401,"column_start":1,"column_end":76}},{"value":"/ object, where the string ends in the suffix \"s\" (indicating seconds) and","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6453318,"byte_end":6453394,"line_start":1402,"line_end":1402,"column_start":1,"column_end":77}},{"value":"/ is preceded by the number of seconds, with nanoseconds expressed as","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6453395,"byte_end":6453466,"line_start":1403,"line_end":1403,"column_start":1,"column_end":72}},{"value":"/ fractional seconds. For example, 3 seconds with 0 nanoseconds should be","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6453467,"byte_end":6453542,"line_start":1404,"line_end":1404,"column_start":1,"column_end":76}},{"value":"/ encoded in JSON format as \"3s\", while 3 seconds and 1 nanosecond should","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6453543,"byte_end":6453618,"line_start":1405,"line_end":1405,"column_start":1,"column_end":76}},{"value":"/ be expressed in JSON format as \"3.000000001s\", and 3 seconds and 1","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6453619,"byte_end":6453689,"line_start":1406,"line_end":1406,"column_start":1,"column_end":71}},{"value":"/ microsecond should be expressed in JSON format as \"3.000001s\".","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6453690,"byte_end":6453756,"line_start":1407,"line_end":1407,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6453757,"byte_end":6453760,"line_start":1408,"line_end":1408,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6453761,"byte_end":6453764,"line_start":1409,"line_end":1409,"column_start":1,"column_end":4}}]},{"kind":"Field","id":{"krate":0,"index":2592},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6454097,"byte_end":6454104,"line_start":1416,"line_end":1416,"column_start":9,"column_end":16},"name":"seconds","qualname":"::Duration::seconds","value":"i64","parent":{"krate":0,"index":2591},"children":[],"decl_id":null,"docs":" Signed seconds of the span of time. Must be from -315,576,000,000\n to +315,576,000,000 inclusive. Note: these bounds are computed from:\n 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years\n","sig":null,"attributes":[{"value":"/ Signed seconds of the span of time. Must be from -315,576,000,000","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6453837,"byte_end":6453906,"line_start":1412,"line_end":1412,"column_start":5,"column_end":74}},{"value":"/ to +315,576,000,000 inclusive. Note: these bounds are computed from:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6453911,"byte_end":6453983,"line_start":1413,"line_end":1413,"column_start":5,"column_end":77}},{"value":"/ 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6453988,"byte_end":6454059,"line_start":1414,"line_end":1414,"column_start":5,"column_end":76}},{"value":"prost(int64, tag = \"1\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6454064,"byte_end":6454088,"line_start":1415,"line_end":1415,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":2593},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6454563,"byte_end":6454568,"line_start":1424,"line_end":1424,"column_start":9,"column_end":14},"name":"nanos","qualname":"::Duration::nanos","value":"i32","parent":{"krate":0,"index":2591},"children":[],"decl_id":null,"docs":" Signed fractions of a second at nanosecond resolution of the span\n of time. Durations less than one second are represented with a 0\n `seconds` field and a positive or negative `nanos` field. For durations\n of one second or more, a non-zero value for the `nanos` field must be\n of the same sign as the `seconds` field. Must be from -999,999,999\n to +999,999,999 inclusive.\n","sig":null,"attributes":[{"value":"/ Signed fractions of a second at nanosecond resolution of the span","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6454115,"byte_end":6454184,"line_start":1417,"line_end":1417,"column_start":5,"column_end":74}},{"value":"/ of time. Durations less than one second are represented with a 0","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6454189,"byte_end":6454257,"line_start":1418,"line_end":1418,"column_start":5,"column_end":73}},{"value":"/ `seconds` field and a positive or negative `nanos` field. For durations","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6454262,"byte_end":6454337,"line_start":1419,"line_end":1419,"column_start":5,"column_end":80}},{"value":"/ of one second or more, a non-zero value for the `nanos` field must be","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6454342,"byte_end":6454415,"line_start":1420,"line_end":1420,"column_start":5,"column_end":78}},{"value":"/ of the same sign as the `seconds` field. Must be from -999,999,999","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6454420,"byte_end":6454490,"line_start":1421,"line_end":1421,"column_start":5,"column_end":75}},{"value":"/ to +999,999,999 inclusive.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6454495,"byte_end":6454525,"line_start":1422,"line_end":1422,"column_start":5,"column_end":35}},{"value":"prost(int32, tag = \"2\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6454530,"byte_end":6454554,"line_start":1423,"line_end":1423,"column_start":5,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":2618},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6460898,"byte_end":6460907,"line_start":1626,"line_end":1626,"column_start":12,"column_end":21},"name":"FieldMask","qualname":"::FieldMask","value":"FieldMask { paths }","parent":null,"children":[{"krate":0,"index":2619}],"decl_id":null,"docs":" `FieldMask` represents a set of symbolic field paths, for example:","sig":null,"attributes":[{"value":"/ `FieldMask` represents a set of symbolic field paths, for example:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6454577,"byte_end":6454647,"line_start":1426,"line_end":1426,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6454648,"byte_end":6454651,"line_start":1427,"line_end":1427,"column_start":1,"column_end":4}},{"value":"/     paths: \"f.a\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6454652,"byte_end":6454672,"line_start":1428,"line_end":1428,"column_start":1,"column_end":21}},{"value":"/     paths: \"f.b.d\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6454673,"byte_end":6454695,"line_start":1429,"line_end":1429,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6454696,"byte_end":6454699,"line_start":1430,"line_end":1430,"column_start":1,"column_end":4}},{"value":"/ Here `f` represents a field in some root message, `a` and `b`","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6454700,"byte_end":6454765,"line_start":1431,"line_end":1431,"column_start":1,"column_end":66}},{"value":"/ fields in the message found in `f`, and `d` a field found in the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6454766,"byte_end":6454834,"line_start":1432,"line_end":1432,"column_start":1,"column_end":69}},{"value":"/ message in `f.b`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6454835,"byte_end":6454856,"line_start":1433,"line_end":1433,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6454857,"byte_end":6454860,"line_start":1434,"line_end":1434,"column_start":1,"column_end":4}},{"value":"/ Field masks are used to specify a subset of fields that should be","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6454861,"byte_end":6454930,"line_start":1435,"line_end":1435,"column_start":1,"column_end":70}},{"value":"/ returned by a get operation or modified by an update operation.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6454931,"byte_end":6454998,"line_start":1436,"line_end":1436,"column_start":1,"column_end":68}},{"value":"/ Field masks also have a custom JSON encoding (see below).","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6454999,"byte_end":6455060,"line_start":1437,"line_end":1437,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6455061,"byte_end":6455064,"line_start":1438,"line_end":1438,"column_start":1,"column_end":4}},{"value":"/ # Field Masks in Projections","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6455065,"byte_end":6455097,"line_start":1439,"line_end":1439,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6455098,"byte_end":6455101,"line_start":1440,"line_end":1440,"column_start":1,"column_end":4}},{"value":"/ When used in the context of a projection, a response message or","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6455102,"byte_end":6455169,"line_start":1441,"line_end":1441,"column_start":1,"column_end":68}},{"value":"/ sub-message is filtered by the API to only contain those fields as","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6455170,"byte_end":6455240,"line_start":1442,"line_end":1442,"column_start":1,"column_end":71}},{"value":"/ specified in the mask. For example, if the mask in the previous","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6455241,"byte_end":6455308,"line_start":1443,"line_end":1443,"column_start":1,"column_end":68}},{"value":"/ example is applied to a response message as follows:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6455309,"byte_end":6455365,"line_start":1444,"line_end":1444,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6455366,"byte_end":6455369,"line_start":1445,"line_end":1445,"column_start":1,"column_end":4}},{"value":"/     f {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6455370,"byte_end":6455381,"line_start":1446,"line_end":1446,"column_start":1,"column_end":12}},{"value":"/       a : 22","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6455382,"byte_end":6455398,"line_start":1447,"line_end":1447,"column_start":1,"column_end":17}},{"value":"/       b {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6455399,"byte_end":6455412,"line_start":1448,"line_end":1448,"column_start":1,"column_end":14}},{"value":"/         d : 1","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6455413,"byte_end":6455430,"line_start":1449,"line_end":1449,"column_start":1,"column_end":18}},{"value":"/         x : 2","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6455431,"byte_end":6455448,"line_start":1450,"line_end":1450,"column_start":1,"column_end":18}},{"value":"/       }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6455449,"byte_end":6455460,"line_start":1451,"line_end":1451,"column_start":1,"column_end":12}},{"value":"/       y : 13","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6455461,"byte_end":6455477,"line_start":1452,"line_end":1452,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6455478,"byte_end":6455487,"line_start":1453,"line_end":1453,"column_start":1,"column_end":10}},{"value":"/     z: 8","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6455488,"byte_end":6455500,"line_start":1454,"line_end":1454,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6455501,"byte_end":6455504,"line_start":1455,"line_end":1455,"column_start":1,"column_end":4}},{"value":"/ The result will not contain specific values for fields x,y and z","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6455505,"byte_end":6455573,"line_start":1456,"line_end":1456,"column_start":1,"column_end":69}},{"value":"/ (their value will be set to the default, and omitted in proto text","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6455574,"byte_end":6455644,"line_start":1457,"line_end":1457,"column_start":1,"column_end":71}},{"value":"/ output):","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6455645,"byte_end":6455657,"line_start":1458,"line_end":1458,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6455658,"byte_end":6455661,"line_start":1459,"line_end":1459,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6455662,"byte_end":6455665,"line_start":1460,"line_end":1460,"column_start":1,"column_end":4}},{"value":"/     f {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6455666,"byte_end":6455677,"line_start":1461,"line_end":1461,"column_start":1,"column_end":12}},{"value":"/       a : 22","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6455678,"byte_end":6455694,"line_start":1462,"line_end":1462,"column_start":1,"column_end":17}},{"value":"/       b {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6455695,"byte_end":6455708,"line_start":1463,"line_end":1463,"column_start":1,"column_end":14}},{"value":"/         d : 1","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6455709,"byte_end":6455726,"line_start":1464,"line_end":1464,"column_start":1,"column_end":18}},{"value":"/       }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6455727,"byte_end":6455738,"line_start":1465,"line_end":1465,"column_start":1,"column_end":12}},{"value":"/     }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6455739,"byte_end":6455748,"line_start":1466,"line_end":1466,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6455749,"byte_end":6455752,"line_start":1467,"line_end":1467,"column_start":1,"column_end":4}},{"value":"/ A repeated field is not allowed except at the last position of a","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6455753,"byte_end":6455821,"line_start":1468,"line_end":1468,"column_start":1,"column_end":69}},{"value":"/ paths string.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6455822,"byte_end":6455839,"line_start":1469,"line_end":1469,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6455840,"byte_end":6455843,"line_start":1470,"line_end":1470,"column_start":1,"column_end":4}},{"value":"/ If a FieldMask object is not present in a get operation, the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6455844,"byte_end":6455908,"line_start":1471,"line_end":1471,"column_start":1,"column_end":65}},{"value":"/ operation applies to all fields (as if a FieldMask of all fields","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6455909,"byte_end":6455977,"line_start":1472,"line_end":1472,"column_start":1,"column_end":69}},{"value":"/ had been specified).","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6455978,"byte_end":6456002,"line_start":1473,"line_end":1473,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6456003,"byte_end":6456006,"line_start":1474,"line_end":1474,"column_start":1,"column_end":4}},{"value":"/ Note that a field mask does not necessarily apply to the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6456007,"byte_end":6456067,"line_start":1475,"line_end":1475,"column_start":1,"column_end":61}},{"value":"/ top-level response message. In case of a REST get operation, the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6456068,"byte_end":6456136,"line_start":1476,"line_end":1476,"column_start":1,"column_end":69}},{"value":"/ field mask applies directly to the response, but in case of a REST","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6456137,"byte_end":6456207,"line_start":1477,"line_end":1477,"column_start":1,"column_end":71}},{"value":"/ list operation, the mask instead applies to each individual message","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6456208,"byte_end":6456279,"line_start":1478,"line_end":1478,"column_start":1,"column_end":72}},{"value":"/ in the returned resource list. In case of a REST custom method,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6456280,"byte_end":6456347,"line_start":1479,"line_end":1479,"column_start":1,"column_end":68}},{"value":"/ other definitions may be used. Where the mask applies will be","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6456348,"byte_end":6456413,"line_start":1480,"line_end":1480,"column_start":1,"column_end":66}},{"value":"/ clearly documented together with its declaration in the API.  In","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6456414,"byte_end":6456482,"line_start":1481,"line_end":1481,"column_start":1,"column_end":69}},{"value":"/ any case, the effect on the returned resource/resources is required","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6456483,"byte_end":6456554,"line_start":1482,"line_end":1482,"column_start":1,"column_end":72}},{"value":"/ behavior for APIs.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6456555,"byte_end":6456577,"line_start":1483,"line_end":1483,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6456578,"byte_end":6456581,"line_start":1484,"line_end":1484,"column_start":1,"column_end":4}},{"value":"/ # Field Masks in Update Operations","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6456582,"byte_end":6456620,"line_start":1485,"line_end":1485,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6456621,"byte_end":6456624,"line_start":1486,"line_end":1486,"column_start":1,"column_end":4}},{"value":"/ A field mask in update operations specifies which fields of the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6456625,"byte_end":6456692,"line_start":1487,"line_end":1487,"column_start":1,"column_end":68}},{"value":"/ targeted resource are going to be updated. The API is required","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6456693,"byte_end":6456759,"line_start":1488,"line_end":1488,"column_start":1,"column_end":67}},{"value":"/ to only change the values of the fields as specified in the mask","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6456760,"byte_end":6456828,"line_start":1489,"line_end":1489,"column_start":1,"column_end":69}},{"value":"/ and leave the others untouched. If a resource is passed in to","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6456829,"byte_end":6456894,"line_start":1490,"line_end":1490,"column_start":1,"column_end":66}},{"value":"/ describe the updated values, the API ignores the values of all","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6456895,"byte_end":6456961,"line_start":1491,"line_end":1491,"column_start":1,"column_end":67}},{"value":"/ fields not covered by the mask.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6456962,"byte_end":6456997,"line_start":1492,"line_end":1492,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6456998,"byte_end":6457001,"line_start":1493,"line_end":1493,"column_start":1,"column_end":4}},{"value":"/ If a repeated field is specified for an update operation, new values will","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6457002,"byte_end":6457079,"line_start":1494,"line_end":1494,"column_start":1,"column_end":78}},{"value":"/ be appended to the existing repeated field in the target resource. Note that","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6457080,"byte_end":6457160,"line_start":1495,"line_end":1495,"column_start":1,"column_end":81}},{"value":"/ a repeated field is only allowed in the last position of a `paths` string.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6457161,"byte_end":6457239,"line_start":1496,"line_end":1496,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6457240,"byte_end":6457243,"line_start":1497,"line_end":1497,"column_start":1,"column_end":4}},{"value":"/ If a sub-message is specified in the last position of the field mask for an","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6457244,"byte_end":6457323,"line_start":1498,"line_end":1498,"column_start":1,"column_end":80}},{"value":"/ update operation, then new value will be merged into the existing sub-message","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6457324,"byte_end":6457405,"line_start":1499,"line_end":1499,"column_start":1,"column_end":82}},{"value":"/ in the target resource.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6457406,"byte_end":6457433,"line_start":1500,"line_end":1500,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6457434,"byte_end":6457437,"line_start":1501,"line_end":1501,"column_start":1,"column_end":4}},{"value":"/ For example, given the target message:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6457438,"byte_end":6457480,"line_start":1502,"line_end":1502,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6457481,"byte_end":6457484,"line_start":1503,"line_end":1503,"column_start":1,"column_end":4}},{"value":"/     f {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6457485,"byte_end":6457496,"line_start":1504,"line_end":1504,"column_start":1,"column_end":12}},{"value":"/       b {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6457497,"byte_end":6457510,"line_start":1505,"line_end":1505,"column_start":1,"column_end":14}},{"value":"/         d: 1","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6457511,"byte_end":6457527,"line_start":1506,"line_end":1506,"column_start":1,"column_end":17}},{"value":"/         x: 2","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6457528,"byte_end":6457544,"line_start":1507,"line_end":1507,"column_start":1,"column_end":17}},{"value":"/       }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6457545,"byte_end":6457556,"line_start":1508,"line_end":1508,"column_start":1,"column_end":12}},{"value":"/       c: [1]","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6457557,"byte_end":6457573,"line_start":1509,"line_end":1509,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6457574,"byte_end":6457583,"line_start":1510,"line_end":1510,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6457584,"byte_end":6457587,"line_start":1511,"line_end":1511,"column_start":1,"column_end":4}},{"value":"/ And an update message:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6457588,"byte_end":6457614,"line_start":1512,"line_end":1512,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6457615,"byte_end":6457618,"line_start":1513,"line_end":1513,"column_start":1,"column_end":4}},{"value":"/     f {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6457619,"byte_end":6457630,"line_start":1514,"line_end":1514,"column_start":1,"column_end":12}},{"value":"/       b {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6457631,"byte_end":6457644,"line_start":1515,"line_end":1515,"column_start":1,"column_end":14}},{"value":"/         d: 10","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6457645,"byte_end":6457662,"line_start":1516,"line_end":1516,"column_start":1,"column_end":18}},{"value":"/       }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6457663,"byte_end":6457674,"line_start":1517,"line_end":1517,"column_start":1,"column_end":12}},{"value":"/       c: [2]","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6457675,"byte_end":6457691,"line_start":1518,"line_end":1518,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6457692,"byte_end":6457701,"line_start":1519,"line_end":1519,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6457702,"byte_end":6457705,"line_start":1520,"line_end":1520,"column_start":1,"column_end":4}},{"value":"/ then if the field mask is:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6457706,"byte_end":6457736,"line_start":1521,"line_end":1521,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6457737,"byte_end":6457740,"line_start":1522,"line_end":1522,"column_start":1,"column_end":4}},{"value":"/  paths: [\"f.b\", \"f.c\"]","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6457741,"byte_end":6457767,"line_start":1523,"line_end":1523,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6457768,"byte_end":6457771,"line_start":1524,"line_end":1524,"column_start":1,"column_end":4}},{"value":"/ then the result will be:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6457772,"byte_end":6457800,"line_start":1525,"line_end":1525,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6457801,"byte_end":6457804,"line_start":1526,"line_end":1526,"column_start":1,"column_end":4}},{"value":"/     f {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6457805,"byte_end":6457816,"line_start":1527,"line_end":1527,"column_start":1,"column_end":12}},{"value":"/       b {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6457817,"byte_end":6457830,"line_start":1528,"line_end":1528,"column_start":1,"column_end":14}},{"value":"/         d: 10","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6457831,"byte_end":6457848,"line_start":1529,"line_end":1529,"column_start":1,"column_end":18}},{"value":"/         x: 2","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6457849,"byte_end":6457865,"line_start":1530,"line_end":1530,"column_start":1,"column_end":17}},{"value":"/       }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6457866,"byte_end":6457877,"line_start":1531,"line_end":1531,"column_start":1,"column_end":12}},{"value":"/       c: [1, 2]","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6457878,"byte_end":6457897,"line_start":1532,"line_end":1532,"column_start":1,"column_end":20}},{"value":"/     }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6457898,"byte_end":6457907,"line_start":1533,"line_end":1533,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6457908,"byte_end":6457911,"line_start":1534,"line_end":1534,"column_start":1,"column_end":4}},{"value":"/ An implementation may provide options to override this default behavior for","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6457912,"byte_end":6457991,"line_start":1535,"line_end":1535,"column_start":1,"column_end":80}},{"value":"/ repeated and message fields.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6457992,"byte_end":6458024,"line_start":1536,"line_end":1536,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6458025,"byte_end":6458028,"line_start":1537,"line_end":1537,"column_start":1,"column_end":4}},{"value":"/ In order to reset a field's value to the default, the field must","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6458029,"byte_end":6458097,"line_start":1538,"line_end":1538,"column_start":1,"column_end":69}},{"value":"/ be in the mask and set to the default value in the provided resource.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6458098,"byte_end":6458171,"line_start":1539,"line_end":1539,"column_start":1,"column_end":74}},{"value":"/ Hence, in order to reset all fields of a resource, provide a default","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6458172,"byte_end":6458244,"line_start":1540,"line_end":1540,"column_start":1,"column_end":73}},{"value":"/ instance of the resource and set all fields in the mask, or do","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6458245,"byte_end":6458311,"line_start":1541,"line_end":1541,"column_start":1,"column_end":67}},{"value":"/ not provide a mask as described below.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6458312,"byte_end":6458354,"line_start":1542,"line_end":1542,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6458355,"byte_end":6458358,"line_start":1543,"line_end":1543,"column_start":1,"column_end":4}},{"value":"/ If a field mask is not present on update, the operation applies to","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6458359,"byte_end":6458429,"line_start":1544,"line_end":1544,"column_start":1,"column_end":71}},{"value":"/ all fields (as if a field mask of all fields has been specified).","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6458430,"byte_end":6458499,"line_start":1545,"line_end":1545,"column_start":1,"column_end":70}},{"value":"/ Note that in the presence of schema evolution, this may mean that","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6458500,"byte_end":6458569,"line_start":1546,"line_end":1546,"column_start":1,"column_end":70}},{"value":"/ fields the client does not know and has therefore not filled into","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6458570,"byte_end":6458639,"line_start":1547,"line_end":1547,"column_start":1,"column_end":70}},{"value":"/ the request will be reset to their default. If this is unwanted","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6458640,"byte_end":6458707,"line_start":1548,"line_end":1548,"column_start":1,"column_end":68}},{"value":"/ behavior, a specific service may require a client to always specify","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6458708,"byte_end":6458779,"line_start":1549,"line_end":1549,"column_start":1,"column_end":72}},{"value":"/ a field mask, producing an error if not.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6458780,"byte_end":6458824,"line_start":1550,"line_end":1550,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6458825,"byte_end":6458828,"line_start":1551,"line_end":1551,"column_start":1,"column_end":4}},{"value":"/ As with get operations, the location of the resource which","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6458829,"byte_end":6458891,"line_start":1552,"line_end":1552,"column_start":1,"column_end":63}},{"value":"/ describes the updated values in the request message depends on the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6458892,"byte_end":6458962,"line_start":1553,"line_end":1553,"column_start":1,"column_end":71}},{"value":"/ operation kind. In any case, the effect of the field mask is","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6458963,"byte_end":6459027,"line_start":1554,"line_end":1554,"column_start":1,"column_end":65}},{"value":"/ required to be honored by the API.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6459028,"byte_end":6459066,"line_start":1555,"line_end":1555,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6459067,"byte_end":6459070,"line_start":1556,"line_end":1556,"column_start":1,"column_end":4}},{"value":"/ ## Considerations for HTTP REST","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6459071,"byte_end":6459106,"line_start":1557,"line_end":1557,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6459107,"byte_end":6459110,"line_start":1558,"line_end":1558,"column_start":1,"column_end":4}},{"value":"/ The HTTP kind of an update operation which uses a field mask must","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6459111,"byte_end":6459180,"line_start":1559,"line_end":1559,"column_start":1,"column_end":70}},{"value":"/ be set to PATCH instead of PUT in order to satisfy HTTP semantics","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6459181,"byte_end":6459250,"line_start":1560,"line_end":1560,"column_start":1,"column_end":70}},{"value":"/ (PUT must only be used for full updates).","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6459251,"byte_end":6459296,"line_start":1561,"line_end":1561,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6459297,"byte_end":6459300,"line_start":1562,"line_end":1562,"column_start":1,"column_end":4}},{"value":"/ # JSON Encoding of Field Masks","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6459301,"byte_end":6459335,"line_start":1563,"line_end":1563,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6459336,"byte_end":6459339,"line_start":1564,"line_end":1564,"column_start":1,"column_end":4}},{"value":"/ In JSON, a field mask is encoded as a single string where paths are","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6459340,"byte_end":6459411,"line_start":1565,"line_end":1565,"column_start":1,"column_end":72}},{"value":"/ separated by a comma. Fields name in each path are converted","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6459412,"byte_end":6459476,"line_start":1566,"line_end":1566,"column_start":1,"column_end":65}},{"value":"/ to/from lower-camel naming conventions.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6459477,"byte_end":6459520,"line_start":1567,"line_end":1567,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6459521,"byte_end":6459524,"line_start":1568,"line_end":1568,"column_start":1,"column_end":4}},{"value":"/ As an example, consider the following message declarations:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6459525,"byte_end":6459588,"line_start":1569,"line_end":1569,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6459589,"byte_end":6459592,"line_start":1570,"line_end":1570,"column_start":1,"column_end":4}},{"value":"/     message Profile {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6459593,"byte_end":6459618,"line_start":1571,"line_end":1571,"column_start":1,"column_end":26}},{"value":"/       User user = 1;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6459619,"byte_end":6459643,"line_start":1572,"line_end":1572,"column_start":1,"column_end":25}},{"value":"/       Photo photo = 2;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6459644,"byte_end":6459670,"line_start":1573,"line_end":1573,"column_start":1,"column_end":27}},{"value":"/     }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6459671,"byte_end":6459680,"line_start":1574,"line_end":1574,"column_start":1,"column_end":10}},{"value":"/     message User {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6459681,"byte_end":6459703,"line_start":1575,"line_end":1575,"column_start":1,"column_end":23}},{"value":"/       string display_name = 1;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6459704,"byte_end":6459738,"line_start":1576,"line_end":1576,"column_start":1,"column_end":35}},{"value":"/       string address = 2;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6459739,"byte_end":6459768,"line_start":1577,"line_end":1577,"column_start":1,"column_end":30}},{"value":"/     }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6459769,"byte_end":6459778,"line_start":1578,"line_end":1578,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6459779,"byte_end":6459782,"line_start":1579,"line_end":1579,"column_start":1,"column_end":4}},{"value":"/ In proto a field mask for `Profile` may look as such:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6459783,"byte_end":6459840,"line_start":1580,"line_end":1580,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6459841,"byte_end":6459844,"line_start":1581,"line_end":1581,"column_start":1,"column_end":4}},{"value":"/     mask {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6459845,"byte_end":6459859,"line_start":1582,"line_end":1582,"column_start":1,"column_end":15}},{"value":"/       paths: \"user.display_name\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6459860,"byte_end":6459896,"line_start":1583,"line_end":1583,"column_start":1,"column_end":37}},{"value":"/       paths: \"photo\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6459897,"byte_end":6459921,"line_start":1584,"line_end":1584,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6459922,"byte_end":6459931,"line_start":1585,"line_end":1585,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6459932,"byte_end":6459935,"line_start":1586,"line_end":1586,"column_start":1,"column_end":4}},{"value":"/ In JSON, the same mask is represented as below:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6459936,"byte_end":6459987,"line_start":1587,"line_end":1587,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6459988,"byte_end":6459991,"line_start":1588,"line_end":1588,"column_start":1,"column_end":4}},{"value":"/     {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6459992,"byte_end":6460001,"line_start":1589,"line_end":1589,"column_start":1,"column_end":10}},{"value":"/       mask: \"user.displayName,photo\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6460002,"byte_end":6460042,"line_start":1590,"line_end":1590,"column_start":1,"column_end":41}},{"value":"/     }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6460043,"byte_end":6460052,"line_start":1591,"line_end":1591,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6460053,"byte_end":6460056,"line_start":1592,"line_end":1592,"column_start":1,"column_end":4}},{"value":"/ # Field Masks and Oneof Fields","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6460057,"byte_end":6460091,"line_start":1593,"line_end":1593,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6460092,"byte_end":6460095,"line_start":1594,"line_end":1594,"column_start":1,"column_end":4}},{"value":"/ Field masks treat fields in oneofs just as regular fields. Consider the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6460096,"byte_end":6460171,"line_start":1595,"line_end":1595,"column_start":1,"column_end":76}},{"value":"/ following message:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6460172,"byte_end":6460194,"line_start":1596,"line_end":1596,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6460195,"byte_end":6460198,"line_start":1597,"line_end":1597,"column_start":1,"column_end":4}},{"value":"/     message SampleMessage {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6460199,"byte_end":6460230,"line_start":1598,"line_end":1598,"column_start":1,"column_end":32}},{"value":"/       oneof test_oneof {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6460231,"byte_end":6460259,"line_start":1599,"line_end":1599,"column_start":1,"column_end":29}},{"value":"/         string name = 4;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6460260,"byte_end":6460288,"line_start":1600,"line_end":1600,"column_start":1,"column_end":29}},{"value":"/         SubMessage sub_message = 9;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6460289,"byte_end":6460328,"line_start":1601,"line_end":1601,"column_start":1,"column_end":40}},{"value":"/       }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6460329,"byte_end":6460340,"line_start":1602,"line_end":1602,"column_start":1,"column_end":12}},{"value":"/     }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6460341,"byte_end":6460350,"line_start":1603,"line_end":1603,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6460351,"byte_end":6460354,"line_start":1604,"line_end":1604,"column_start":1,"column_end":4}},{"value":"/ The field mask can be:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6460355,"byte_end":6460381,"line_start":1605,"line_end":1605,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6460382,"byte_end":6460385,"line_start":1606,"line_end":1606,"column_start":1,"column_end":4}},{"value":"/     mask {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6460386,"byte_end":6460400,"line_start":1607,"line_end":1607,"column_start":1,"column_end":15}},{"value":"/       paths: \"name\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6460401,"byte_end":6460424,"line_start":1608,"line_end":1608,"column_start":1,"column_end":24}},{"value":"/     }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6460425,"byte_end":6460434,"line_start":1609,"line_end":1609,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6460435,"byte_end":6460438,"line_start":1610,"line_end":1610,"column_start":1,"column_end":4}},{"value":"/ Or:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6460439,"byte_end":6460446,"line_start":1611,"line_end":1611,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6460447,"byte_end":6460450,"line_start":1612,"line_end":1612,"column_start":1,"column_end":4}},{"value":"/     mask {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6460451,"byte_end":6460465,"line_start":1613,"line_end":1613,"column_start":1,"column_end":15}},{"value":"/       paths: \"sub_message\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6460466,"byte_end":6460496,"line_start":1614,"line_end":1614,"column_start":1,"column_end":31}},{"value":"/     }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6460497,"byte_end":6460506,"line_start":1615,"line_end":1615,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6460507,"byte_end":6460510,"line_start":1616,"line_end":1616,"column_start":1,"column_end":4}},{"value":"/ Note that oneof type names (\"test_oneof\" in this case) cannot be used in","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6460511,"byte_end":6460587,"line_start":1617,"line_end":1617,"column_start":1,"column_end":77}},{"value":"/ paths.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6460588,"byte_end":6460598,"line_start":1618,"line_end":1618,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6460599,"byte_end":6460602,"line_start":1619,"line_end":1619,"column_start":1,"column_end":4}},{"value":"/ ## Field Mask Verification","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6460603,"byte_end":6460633,"line_start":1620,"line_end":1620,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6460634,"byte_end":6460637,"line_start":1621,"line_end":1621,"column_start":1,"column_end":4}},{"value":"/ The implementation of any API method which has a FieldMask type field in the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6460638,"byte_end":6460718,"line_start":1622,"line_end":1622,"column_start":1,"column_end":81}},{"value":"/ request should verify the included field paths, and return an","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6460719,"byte_end":6460784,"line_start":1623,"line_end":1623,"column_start":1,"column_end":66}},{"value":"/ `INVALID_ARGUMENT` error if any path is unmappable.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6460785,"byte_end":6460840,"line_start":1624,"line_end":1624,"column_start":1,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":2619},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6460995,"byte_end":6461000,"line_start":1629,"line_end":1629,"column_start":9,"column_end":14},"name":"paths","qualname":"::FieldMask::paths","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":2618},"children":[],"decl_id":null,"docs":" The set of field mask paths.\n","sig":null,"attributes":[{"value":"/ The set of field mask paths.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6460914,"byte_end":6460946,"line_start":1627,"line_end":1627,"column_start":5,"column_end":37}},{"value":"prost(string, repeated, tag = \"1\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6460951,"byte_end":6460986,"line_start":1628,"line_end":1628,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2648},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6461545,"byte_end":6461551,"line_start":1640,"line_end":1640,"column_start":12,"column_end":18},"name":"Struct","qualname":"::Struct","value":"Struct { fields }","parent":null,"children":[{"krate":0,"index":2649}],"decl_id":null,"docs":" `Struct` represents a structured data value, consisting of fields\n which map to dynamically typed values. In some languages, `Struct`\n might be supported by a native representation. For example, in\n scripting languages like JS a struct is represented as an\n object. The details of that representation are described together\n with the proto support for the language.","sig":null,"attributes":[{"value":"/ `Struct` represents a structured data value, consisting of fields","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6461042,"byte_end":6461111,"line_start":1631,"line_end":1631,"column_start":1,"column_end":70}},{"value":"/ which map to dynamically typed values. In some languages, `Struct`","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6461112,"byte_end":6461182,"line_start":1632,"line_end":1632,"column_start":1,"column_end":71}},{"value":"/ might be supported by a native representation. For example, in","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6461183,"byte_end":6461249,"line_start":1633,"line_end":1633,"column_start":1,"column_end":67}},{"value":"/ scripting languages like JS a struct is represented as an","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6461250,"byte_end":6461311,"line_start":1634,"line_end":1634,"column_start":1,"column_end":62}},{"value":"/ object. The details of that representation are described together","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6461312,"byte_end":6461381,"line_start":1635,"line_end":1635,"column_start":1,"column_end":70}},{"value":"/ with the proto support for the language.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6461382,"byte_end":6461426,"line_start":1636,"line_end":1636,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6461427,"byte_end":6461430,"line_start":1637,"line_end":1637,"column_start":1,"column_end":4}},{"value":"/ The JSON representation for `Struct` is JSON object.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6461431,"byte_end":6461487,"line_start":1638,"line_end":1638,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":2649},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6461664,"byte_end":6461670,"line_start":1643,"line_end":1643,"column_start":9,"column_end":15},"name":"fields","qualname":"::Struct::fields","value":"std::collections::BTreeMap<std::string::String, Value>","parent":{"krate":0,"index":2648},"children":[],"decl_id":null,"docs":" Unordered map of dynamically typed values.\n","sig":null,"attributes":[{"value":"/ Unordered map of dynamically typed values.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6461558,"byte_end":6461604,"line_start":1641,"line_end":1641,"column_start":5,"column_end":51}},{"value":"prost(btree_map = \"string, message\", tag = \"1\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6461609,"byte_end":6461655,"line_start":1642,"line_end":1642,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":2682},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6462117,"byte_end":6462122,"line_start":1652,"line_end":1652,"column_start":12,"column_end":17},"name":"Value","qualname":"::Value","value":"Value { kind }","parent":null,"children":[{"krate":0,"index":2683}],"decl_id":null,"docs":" `Value` represents a dynamically typed value which can be either\n null, a number, a string, a boolean, a recursive struct value, or a\n list of values. A producer of value is expected to set one of that\n variants, absence of any variant indicates an error.","sig":null,"attributes":[{"value":"/ `Value` represents a dynamically typed value which can be either","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6461732,"byte_end":6461800,"line_start":1645,"line_end":1645,"column_start":1,"column_end":69}},{"value":"/ null, a number, a string, a boolean, a recursive struct value, or a","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6461801,"byte_end":6461872,"line_start":1646,"line_end":1646,"column_start":1,"column_end":72}},{"value":"/ list of values. A producer of value is expected to set one of that","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6461873,"byte_end":6461943,"line_start":1647,"line_end":1647,"column_start":1,"column_end":71}},{"value":"/ variants, absence of any variant indicates an error.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6461944,"byte_end":6462000,"line_start":1648,"line_end":1648,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6462001,"byte_end":6462004,"line_start":1649,"line_end":1649,"column_start":1,"column_end":4}},{"value":"/ The JSON representation for `Value` is JSON value.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6462005,"byte_end":6462059,"line_start":1650,"line_end":1650,"column_start":1,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":2683},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6462219,"byte_end":6462223,"line_start":1655,"line_end":1655,"column_start":9,"column_end":13},"name":"kind","qualname":"::Value::kind","value":"std::option::Option<value::Kind>","parent":{"krate":0,"index":2682},"children":[],"decl_id":null,"docs":" The kind of value.\n","sig":null,"attributes":[{"value":"/ The kind of value.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6462129,"byte_end":6462151,"line_start":1653,"line_end":1653,"column_start":5,"column_end":27}},{"value":"prost(oneof = \"value::Kind\", tags = \"1, 2, 3, 4, 5, 6\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6462156,"byte_end":6462210,"line_start":1654,"line_end":1654,"column_start":5,"column_end":59}}]},{"kind":"Mod","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6462271,"byte_end":6462276,"line_start":1657,"line_end":1657,"column_start":9,"column_end":14},"name":"value","qualname":"::value","value":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","parent":null,"children":[{"krate":0,"index":2703},{"krate":0,"index":2753},{"krate":0,"index":2749},{"krate":0,"index":2750},{"krate":0,"index":2722},{"krate":0,"index":2734}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2704},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6462477,"byte_end":6462486,"line_start":1663,"line_end":1663,"column_start":9,"column_end":18},"name":"NullValue","qualname":"::value::Kind::NullValue","value":"Kind::NullValue(i32)","parent":{"krate":0,"index":2703},"children":[],"decl_id":null,"docs":" Represents a null value.\n","sig":null,"attributes":[{"value":"/ Represents a null value.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6462382,"byte_end":6462410,"line_start":1661,"line_end":1661,"column_start":9,"column_end":37}},{"value":"prost(enumeration = \"super::NullValue\", tag = \"1\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6462419,"byte_end":6462468,"line_start":1662,"line_end":1662,"column_start":9,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2707},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6462574,"byte_end":6462585,"line_start":1666,"line_end":1666,"column_start":9,"column_end":20},"name":"NumberValue","qualname":"::value::Kind::NumberValue","value":"Kind::NumberValue(f64)","parent":{"krate":0,"index":2703},"children":[],"decl_id":null,"docs":" Represents a double value.\n","sig":null,"attributes":[{"value":"/ Represents a double value.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6462501,"byte_end":6462531,"line_start":1664,"line_end":1664,"column_start":9,"column_end":39}},{"value":"prost(double, tag = \"2\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6462540,"byte_end":6462565,"line_start":1665,"line_end":1665,"column_start":9,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2710},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6462673,"byte_end":6462684,"line_start":1669,"line_end":1669,"column_start":9,"column_end":20},"name":"StringValue","qualname":"::value::Kind::StringValue","value":"Kind::StringValue(std::string::String)","parent":{"krate":0,"index":2703},"children":[],"decl_id":null,"docs":" Represents a string value.\n","sig":null,"attributes":[{"value":"/ Represents a string value.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6462600,"byte_end":6462630,"line_start":1667,"line_end":1667,"column_start":9,"column_end":39}},{"value":"prost(string, tag = \"3\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6462639,"byte_end":6462664,"line_start":1668,"line_end":1668,"column_start":9,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2713},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6462787,"byte_end":6462796,"line_start":1672,"line_end":1672,"column_start":9,"column_end":18},"name":"BoolValue","qualname":"::value::Kind::BoolValue","value":"Kind::BoolValue(bool)","parent":{"krate":0,"index":2703},"children":[],"decl_id":null,"docs":" Represents a boolean value.\n","sig":null,"attributes":[{"value":"/ Represents a boolean value.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6462715,"byte_end":6462746,"line_start":1670,"line_end":1670,"column_start":9,"column_end":40}},{"value":"prost(bool, tag = \"4\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6462755,"byte_end":6462778,"line_start":1671,"line_end":1671,"column_start":9,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2716},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6462890,"byte_end":6462901,"line_start":1675,"line_end":1675,"column_start":9,"column_end":20},"name":"StructValue","qualname":"::value::Kind::StructValue","value":"Kind::StructValue(super::Struct)","parent":{"krate":0,"index":2703},"children":[],"decl_id":null,"docs":" Represents a structured value.\n","sig":null,"attributes":[{"value":"/ Represents a structured value.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6462812,"byte_end":6462846,"line_start":1673,"line_end":1673,"column_start":9,"column_end":43}},{"value":"prost(message, tag = \"5\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6462855,"byte_end":6462881,"line_start":1674,"line_end":1674,"column_start":9,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2719},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6463004,"byte_end":6463013,"line_start":1678,"line_end":1678,"column_start":9,"column_end":18},"name":"ListValue","qualname":"::value::Kind::ListValue","value":"Kind::ListValue(super::ListValue)","parent":{"krate":0,"index":2703},"children":[],"decl_id":null,"docs":" Represents a repeated `Value`.\n","sig":null,"attributes":[{"value":"/ Represents a repeated `Value`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6462926,"byte_end":6462960,"line_start":1676,"line_end":1676,"column_start":9,"column_end":43}},{"value":"prost(message, tag = \"6\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6462969,"byte_end":6462995,"line_start":1677,"line_end":1677,"column_start":9,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":2703},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6462367,"byte_end":6462371,"line_start":1660,"line_end":1660,"column_start":14,"column_end":18},"name":"Kind","qualname":"::value::Kind","value":"pub enum Kind {\n\n    /// Represents a null value.\n    #[prost(enumeration = \"super::NullValue\", tag = \"1\")]\n    NullValue(i32),\n\n    /// Represents a double value.\n    #[prost(double, tag = \"2\")]\n    NumberValue(f64),\n\n    /// Represents a string value.\n    #[prost(string, tag = \"3\")]\n    StringValue(std::string::String),\n\n    /// Represents a boolean value.\n    #[prost(bool, tag = \"4\")]\n    BoolValue(bool),\n\n    /// Represents a structured value.\n    #[prost(message, tag = \"5\")]\n    StructValue(super::Struct),\n\n    /// Represents a repeated `Value`.\n    #[prost(message, tag = \"6\")]\n    ListValue(super::ListValue),\n}","parent":null,"children":[{"krate":0,"index":2704},{"krate":0,"index":2707},{"krate":0,"index":2710},{"krate":0,"index":2713},{"krate":0,"index":2716},{"krate":0,"index":2719}],"decl_id":null,"docs":" The kind of value.\n","sig":null,"attributes":[{"value":"/ The kind of value.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6462283,"byte_end":6462305,"line_start":1658,"line_end":1658,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":2755},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6463225,"byte_end":6463234,"line_start":1685,"line_end":1685,"column_start":12,"column_end":21},"name":"ListValue","qualname":"::ListValue","value":"ListValue { values }","parent":null,"children":[{"krate":0,"index":2756}],"decl_id":null,"docs":" `ListValue` is a wrapper around a repeated field of values.","sig":null,"attributes":[{"value":"/ `ListValue` is a wrapper around a repeated field of values.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6463041,"byte_end":6463104,"line_start":1681,"line_end":1681,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6463105,"byte_end":6463108,"line_start":1682,"line_end":1682,"column_start":1,"column_end":4}},{"value":"/ The JSON representation for `ListValue` is JSON array.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6463109,"byte_end":6463167,"line_start":1683,"line_end":1683,"column_start":1,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":2756},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6463338,"byte_end":6463344,"line_start":1688,"line_end":1688,"column_start":9,"column_end":15},"name":"values","qualname":"::ListValue::values","value":"std::vec::Vec<Value>","parent":{"krate":0,"index":2755},"children":[],"decl_id":null,"docs":" Repeated field of dynamically typed values.\n","sig":null,"attributes":[{"value":"/ Repeated field of dynamically typed values.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6463241,"byte_end":6463288,"line_start":1686,"line_end":1686,"column_start":5,"column_end":52}},{"value":"prost(message, repeated, tag = \"1\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6463293,"byte_end":6463329,"line_start":1687,"line_end":1687,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2777},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6463688,"byte_end":6463697,"line_start":1698,"line_end":1698,"column_start":5,"column_end":14},"name":"NullValue","qualname":"::NullValue::NullValue","value":"NullValue::NullValue","parent":{"krate":0,"index":2776},"children":[],"decl_id":null,"docs":" Null value.\n","sig":null,"attributes":[{"value":"/ Null value.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6463668,"byte_end":6463683,"line_start":1697,"line_end":1697,"column_start":5,"column_end":20}}]},{"kind":"Enum","id":{"krate":0,"index":2776},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6463652,"byte_end":6463661,"line_start":1696,"line_end":1696,"column_start":10,"column_end":19},"name":"NullValue","qualname":"::NullValue","value":"pub enum NullValue {\n\n    /// Null value.\n    NullValue = ,\n}","parent":null,"children":[{"krate":0,"index":2777}],"decl_id":null,"docs":" `NullValue` is a singleton enumeration to represent the null value for the\n `Value` type union.","sig":null,"attributes":[{"value":"/ `NullValue` is a singleton enumeration to represent the null value for the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6463372,"byte_end":6463450,"line_start":1690,"line_end":1690,"column_start":1,"column_end":79}},{"value":"/ `Value` type union.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6463451,"byte_end":6463474,"line_start":1691,"line_end":1691,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6463475,"byte_end":6463478,"line_start":1692,"line_end":1692,"column_start":1,"column_end":4}},{"value":"/  The JSON representation for `NullValue` is JSON `null`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6463479,"byte_end":6463539,"line_start":1693,"line_end":1693,"column_start":1,"column_end":61}},{"value":"repr(i32)","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6463630,"byte_end":6463642,"line_start":1695,"line_end":1695,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":2805},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6467571,"byte_end":6467580,"line_start":1785,"line_end":1785,"column_start":12,"column_end":21},"name":"Timestamp","qualname":"::Timestamp","value":"Timestamp { seconds, nanos }","parent":null,"children":[{"krate":0,"index":2806},{"krate":0,"index":2807}],"decl_id":null,"docs":" A Timestamp represents a point in time independent of any time zone or local\n calendar, encoded as a count of seconds and fractions of seconds at\n nanosecond resolution. The count is relative to an epoch at UTC midnight on\n January 1, 1970, in the proleptic Gregorian calendar which extends the\n Gregorian calendar backwards to year one.","sig":null,"attributes":[{"value":"/ A Timestamp represents a point in time independent of any time zone or local","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6463705,"byte_end":6463785,"line_start":1700,"line_end":1700,"column_start":1,"column_end":81}},{"value":"/ calendar, encoded as a count of seconds and fractions of seconds at","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6463786,"byte_end":6463857,"line_start":1701,"line_end":1701,"column_start":1,"column_end":72}},{"value":"/ nanosecond resolution. The count is relative to an epoch at UTC midnight on","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6463858,"byte_end":6463937,"line_start":1702,"line_end":1702,"column_start":1,"column_end":80}},{"value":"/ January 1, 1970, in the proleptic Gregorian calendar which extends the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6463938,"byte_end":6464012,"line_start":1703,"line_end":1703,"column_start":1,"column_end":75}},{"value":"/ Gregorian calendar backwards to year one.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6464013,"byte_end":6464058,"line_start":1704,"line_end":1704,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6464059,"byte_end":6464062,"line_start":1705,"line_end":1705,"column_start":1,"column_end":4}},{"value":"/ All minutes are 60 seconds long. Leap seconds are \"smeared\" so that no leap","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6464063,"byte_end":6464142,"line_start":1706,"line_end":1706,"column_start":1,"column_end":80}},{"value":"/ second table is needed for interpretation, using a [24-hour linear","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6464143,"byte_end":6464213,"line_start":1707,"line_end":1707,"column_start":1,"column_end":71}},{"value":"/ smear](https://developers.google.com/time/smear).","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6464214,"byte_end":6464267,"line_start":1708,"line_end":1708,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6464268,"byte_end":6464271,"line_start":1709,"line_end":1709,"column_start":1,"column_end":4}},{"value":"/ The range is from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z. By","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6464272,"byte_end":6464352,"line_start":1710,"line_end":1710,"column_start":1,"column_end":81}},{"value":"/ restricting to that range, we ensure that we can convert to and from [RFC","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6464353,"byte_end":6464430,"line_start":1711,"line_end":1711,"column_start":1,"column_end":78}},{"value":"/ 3339](https://www.ietf.org/rfc/rfc3339.txt) date strings.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6464431,"byte_end":6464492,"line_start":1712,"line_end":1712,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6464493,"byte_end":6464496,"line_start":1713,"line_end":1713,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6464497,"byte_end":6464511,"line_start":1714,"line_end":1714,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6464512,"byte_end":6464515,"line_start":1715,"line_end":1715,"column_start":1,"column_end":4}},{"value":"/ Example 1: Compute Timestamp from POSIX `time()`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6464516,"byte_end":6464569,"line_start":1716,"line_end":1716,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6464570,"byte_end":6464573,"line_start":1717,"line_end":1717,"column_start":1,"column_end":4}},{"value":"/     Timestamp timestamp;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6464574,"byte_end":6464602,"line_start":1718,"line_end":1718,"column_start":1,"column_end":29}},{"value":"/     timestamp.set_seconds(time(NULL));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6464603,"byte_end":6464645,"line_start":1719,"line_end":1719,"column_start":1,"column_end":43}},{"value":"/     timestamp.set_nanos(0);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6464646,"byte_end":6464677,"line_start":1720,"line_end":1720,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6464678,"byte_end":6464681,"line_start":1721,"line_end":1721,"column_start":1,"column_end":4}},{"value":"/ Example 2: Compute Timestamp from POSIX `gettimeofday()`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6464682,"byte_end":6464743,"line_start":1722,"line_end":1722,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6464744,"byte_end":6464747,"line_start":1723,"line_end":1723,"column_start":1,"column_end":4}},{"value":"/     struct timeval tv;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6464748,"byte_end":6464774,"line_start":1724,"line_end":1724,"column_start":1,"column_end":27}},{"value":"/     gettimeofday(&tv, NULL);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6464775,"byte_end":6464807,"line_start":1725,"line_end":1725,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6464808,"byte_end":6464811,"line_start":1726,"line_end":1726,"column_start":1,"column_end":4}},{"value":"/     Timestamp timestamp;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6464812,"byte_end":6464840,"line_start":1727,"line_end":1727,"column_start":1,"column_end":29}},{"value":"/     timestamp.set_seconds(tv.tv_sec);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6464841,"byte_end":6464882,"line_start":1728,"line_end":1728,"column_start":1,"column_end":42}},{"value":"/     timestamp.set_nanos(tv.tv_usec * 1000);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6464883,"byte_end":6464930,"line_start":1729,"line_end":1729,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6464931,"byte_end":6464934,"line_start":1730,"line_end":1730,"column_start":1,"column_end":4}},{"value":"/ Example 3: Compute Timestamp from Win32 `GetSystemTimeAsFileTime()`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6464935,"byte_end":6465007,"line_start":1731,"line_end":1731,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6465008,"byte_end":6465011,"line_start":1732,"line_end":1732,"column_start":1,"column_end":4}},{"value":"/     FILETIME ft;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6465012,"byte_end":6465032,"line_start":1733,"line_end":1733,"column_start":1,"column_end":21}},{"value":"/     GetSystemTimeAsFileTime(&ft);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6465033,"byte_end":6465070,"line_start":1734,"line_end":1734,"column_start":1,"column_end":38}},{"value":"/     UINT64 ticks = (((UINT64)ft.dwHighDateTime) << 32) | ft.dwLowDateTime;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6465071,"byte_end":6465149,"line_start":1735,"line_end":1735,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6465150,"byte_end":6465153,"line_start":1736,"line_end":1736,"column_start":1,"column_end":4}},{"value":"/     // A Windows tick is 100 nanoseconds. Windows epoch 1601-01-01T00:00:00Z","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6465154,"byte_end":6465234,"line_start":1737,"line_end":1737,"column_start":1,"column_end":81}},{"value":"/     // is 11644473600 seconds before Unix epoch 1970-01-01T00:00:00Z.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6465235,"byte_end":6465308,"line_start":1738,"line_end":1738,"column_start":1,"column_end":74}},{"value":"/     Timestamp timestamp;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6465309,"byte_end":6465337,"line_start":1739,"line_end":1739,"column_start":1,"column_end":29}},{"value":"/     timestamp.set_seconds((INT64) ((ticks / 10000000) - 11644473600LL));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6465338,"byte_end":6465414,"line_start":1740,"line_end":1740,"column_start":1,"column_end":77}},{"value":"/     timestamp.set_nanos((INT32) ((ticks % 10000000) * 100));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6465415,"byte_end":6465479,"line_start":1741,"line_end":1741,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6465480,"byte_end":6465483,"line_start":1742,"line_end":1742,"column_start":1,"column_end":4}},{"value":"/ Example 4: Compute Timestamp from Java `System.currentTimeMillis()`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6465484,"byte_end":6465556,"line_start":1743,"line_end":1743,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6465557,"byte_end":6465560,"line_start":1744,"line_end":1744,"column_start":1,"column_end":4}},{"value":"/     long millis = System.currentTimeMillis();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6465561,"byte_end":6465610,"line_start":1745,"line_end":1745,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6465611,"byte_end":6465614,"line_start":1746,"line_end":1746,"column_start":1,"column_end":4}},{"value":"/     Timestamp timestamp = Timestamp.newBuilder().setSeconds(millis / 1000)","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6465615,"byte_end":6465693,"line_start":1747,"line_end":1747,"column_start":1,"column_end":79}},{"value":"/         .setNanos((int) ((millis % 1000) * 1000000)).build();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6465694,"byte_end":6465759,"line_start":1748,"line_end":1748,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6465760,"byte_end":6465763,"line_start":1749,"line_end":1749,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6465764,"byte_end":6465767,"line_start":1750,"line_end":1750,"column_start":1,"column_end":4}},{"value":"/ Example 5: Compute Timestamp from current time in Python.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6465768,"byte_end":6465829,"line_start":1751,"line_end":1751,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6465830,"byte_end":6465833,"line_start":1752,"line_end":1752,"column_start":1,"column_end":4}},{"value":"/     timestamp = Timestamp()","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6465834,"byte_end":6465865,"line_start":1753,"line_end":1753,"column_start":1,"column_end":32}},{"value":"/     timestamp.GetCurrentTime()","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6465866,"byte_end":6465900,"line_start":1754,"line_end":1754,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6465901,"byte_end":6465904,"line_start":1755,"line_end":1755,"column_start":1,"column_end":4}},{"value":"/ # JSON Mapping","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6465905,"byte_end":6465923,"line_start":1756,"line_end":1756,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6465924,"byte_end":6465927,"line_start":1757,"line_end":1757,"column_start":1,"column_end":4}},{"value":"/ In JSON format, the Timestamp type is encoded as a string in the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6465928,"byte_end":6465996,"line_start":1758,"line_end":1758,"column_start":1,"column_end":69}},{"value":"/ [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format. That is, the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6465997,"byte_end":6466070,"line_start":1759,"line_end":1759,"column_start":1,"column_end":74}},{"value":"/ format is \"{year}-{month}-{day}T{hour}:{min}:{sec}[.{frac_sec}]Z\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6466071,"byte_end":6466140,"line_start":1760,"line_end":1760,"column_start":1,"column_end":70}},{"value":"/ where {year} is always expressed using four digits while {month}, {day},","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6466141,"byte_end":6466217,"line_start":1761,"line_end":1761,"column_start":1,"column_end":77}},{"value":"/ {hour}, {min}, and {sec} are zero-padded to two digits each. The fractional","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6466218,"byte_end":6466297,"line_start":1762,"line_end":1762,"column_start":1,"column_end":80}},{"value":"/ seconds, which can go up to 9 digits (i.e. up to 1 nanosecond resolution),","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6466298,"byte_end":6466376,"line_start":1763,"line_end":1763,"column_start":1,"column_end":79}},{"value":"/ are optional. The \"Z\" suffix indicates the timezone (\"UTC\"); the timezone","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6466377,"byte_end":6466454,"line_start":1764,"line_end":1764,"column_start":1,"column_end":78}},{"value":"/ is required. A proto3 JSON serializer should always use UTC (as indicated by","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6466455,"byte_end":6466535,"line_start":1765,"line_end":1765,"column_start":1,"column_end":81}},{"value":"/ \"Z\") when printing the Timestamp type and a proto3 JSON parser should be","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6466536,"byte_end":6466612,"line_start":1766,"line_end":1766,"column_start":1,"column_end":77}},{"value":"/ able to accept both UTC and other timezones (as indicated by an offset).","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6466613,"byte_end":6466689,"line_start":1767,"line_end":1767,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6466690,"byte_end":6466693,"line_start":1768,"line_end":1768,"column_start":1,"column_end":4}},{"value":"/ For example, \"2017-01-15T01:30:15.01Z\" encodes 15.01 seconds past","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6466694,"byte_end":6466763,"line_start":1769,"line_end":1769,"column_start":1,"column_end":70}},{"value":"/ 01:30 UTC on January 15, 2017.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6466764,"byte_end":6466798,"line_start":1770,"line_end":1770,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6466799,"byte_end":6466802,"line_start":1771,"line_end":1771,"column_start":1,"column_end":4}},{"value":"/ In JavaScript, one can convert a Date object to this format using the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6466803,"byte_end":6466876,"line_start":1772,"line_end":1772,"column_start":1,"column_end":74}},{"value":"/ standard","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6466877,"byte_end":6466889,"line_start":1773,"line_end":1773,"column_start":1,"column_end":13}},{"value":"/ [toISOString()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString)","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6466890,"byte_end":6467008,"line_start":1774,"line_end":1774,"column_start":1,"column_end":119}},{"value":"/ method. In Python, a standard `datetime.datetime` object can be converted","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6467009,"byte_end":6467086,"line_start":1775,"line_end":1775,"column_start":1,"column_end":78}},{"value":"/ to this format using","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6467087,"byte_end":6467111,"line_start":1776,"line_end":1776,"column_start":1,"column_end":25}},{"value":"/ [`strftime`](https://docs.python.org/2/library/time.html#time.strftime) with","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6467112,"byte_end":6467192,"line_start":1777,"line_end":1777,"column_start":1,"column_end":81}},{"value":"/ the time format spec '%Y-%m-%dT%H:%M:%S.%fZ'. Likewise, in Java, one can use","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6467193,"byte_end":6467273,"line_start":1778,"line_end":1778,"column_start":1,"column_end":81}},{"value":"/ the Joda Time's [`ISODateTimeFormat.dateTime()`](","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6467274,"byte_end":6467327,"line_start":1779,"line_end":1779,"column_start":1,"column_end":54}},{"value":"/ http://www.joda.org/joda-time/apidocs/org/joda/time/format/ISODateTimeFormat.html#dateTime%2D%2D","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6467328,"byte_end":6467428,"line_start":1780,"line_end":1780,"column_start":1,"column_end":101}},{"value":"/ ) to obtain a formatter capable of generating timestamps in this format.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6467429,"byte_end":6467505,"line_start":1781,"line_end":1781,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6467506,"byte_end":6467509,"line_start":1782,"line_end":1782,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6467510,"byte_end":6467513,"line_start":1783,"line_end":1783,"column_start":1,"column_end":4}}]},{"kind":"Field","id":{"krate":0,"index":2806},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6467783,"byte_end":6467790,"line_start":1790,"line_end":1790,"column_start":9,"column_end":16},"name":"seconds","qualname":"::Timestamp::seconds","value":"i64","parent":{"krate":0,"index":2805},"children":[],"decl_id":null,"docs":" Represents seconds of UTC time since Unix epoch\n 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n 9999-12-31T23:59:59Z inclusive.\n","sig":null,"attributes":[{"value":"/ Represents seconds of UTC time since Unix epoch","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6467587,"byte_end":6467638,"line_start":1786,"line_end":1786,"column_start":5,"column_end":56}},{"value":"/ 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6467643,"byte_end":6467705,"line_start":1787,"line_end":1787,"column_start":5,"column_end":67}},{"value":"/ 9999-12-31T23:59:59Z inclusive.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6467710,"byte_end":6467745,"line_start":1788,"line_end":1788,"column_start":5,"column_end":40}},{"value":"prost(int64, tag = \"1\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6467750,"byte_end":6467774,"line_start":1789,"line_end":1789,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":2807},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6468076,"byte_end":6468081,"line_start":1796,"line_end":1796,"column_start":9,"column_end":14},"name":"nanos","qualname":"::Timestamp::nanos","value":"i32","parent":{"krate":0,"index":2805},"children":[],"decl_id":null,"docs":" Non-negative fractions of a second at nanosecond resolution. Negative\n second values with fractions must still have non-negative nanos values\n that count forward in time. Must be from 0 to 999,999,999\n inclusive.\n","sig":null,"attributes":[{"value":"/ Non-negative fractions of a second at nanosecond resolution. Negative","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6467801,"byte_end":6467874,"line_start":1791,"line_end":1791,"column_start":5,"column_end":78}},{"value":"/ second values with fractions must still have non-negative nanos values","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6467879,"byte_end":6467953,"line_start":1792,"line_end":1792,"column_start":5,"column_end":79}},{"value":"/ that count forward in time. Must be from 0 to 999,999,999","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6467958,"byte_end":6468019,"line_start":1793,"line_end":1793,"column_start":5,"column_end":66}},{"value":"/ inclusive.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6468024,"byte_end":6468038,"line_start":1794,"line_end":1794,"column_start":5,"column_end":19}},{"value":"prost(int32, tag = \"2\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\protobuf.rs","byte_start":6468043,"byte_end":6468067,"line_start":1795,"line_end":1795,"column_start":5,"column_end":29}}]},{"kind":"Mod","id":{"krate":0,"index":7},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\lib.rs","byte_start":537,"byte_end":545,"line_start":18,"line_end":18,"column_start":9,"column_end":17},"name":"compiler","qualname":"::compiler","value":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":2833},{"krate":0,"index":2903},{"krate":0,"index":2899},{"krate":0,"index":2900},{"krate":0,"index":2838},{"krate":0,"index":2854},{"krate":0,"index":2856},{"krate":0,"index":2894},{"krate":0,"index":2905},{"krate":0,"index":2952},{"krate":0,"index":2948},{"krate":0,"index":2949},{"krate":0,"index":2910},{"krate":0,"index":2924},{"krate":0,"index":2926},{"krate":0,"index":2946},{"krate":0,"index":2954},{"krate":0,"index":2987},{"krate":0,"index":2983},{"krate":0,"index":2984},{"krate":0,"index":2957},{"krate":0,"index":2968},{"krate":0,"index":2970},{"krate":0,"index":2981},{"krate":0,"index":2832}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2833},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7693287,"byte_end":7693294,"line_start":3,"line_end":3,"column_start":12,"column_end":19},"name":"Version","qualname":"::compiler::Version","value":"Version { major, minor, patch, suffix }","parent":null,"children":[{"krate":0,"index":2834},{"krate":0,"index":2835},{"krate":0,"index":2836},{"krate":0,"index":2837}],"decl_id":null,"docs":" The version number of protocol compiler.\n","sig":null,"attributes":[{"value":"/ The version number of protocol compiler.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7693185,"byte_end":7693229,"line_start":1,"line_end":1,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":2834},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7693344,"byte_end":7693349,"line_start":5,"line_end":5,"column_start":9,"column_end":14},"name":"major","qualname":"::compiler::Version::major","value":"std::option::Option<i32>","parent":{"krate":0,"index":2833},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(int32, optional, tag = \"1\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7693301,"byte_end":7693335,"line_start":4,"line_end":4,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":2835},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7693426,"byte_end":7693431,"line_start":7,"line_end":7,"column_start":9,"column_end":14},"name":"minor","qualname":"::compiler::Version::minor","value":"std::option::Option<i32>","parent":{"krate":0,"index":2833},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(int32, optional, tag = \"2\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7693383,"byte_end":7693417,"line_start":6,"line_end":6,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":2836},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7693508,"byte_end":7693513,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"name":"patch","qualname":"::compiler::Version::patch","value":"std::option::Option<i32>","parent":{"krate":0,"index":2833},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(int32, optional, tag = \"3\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7693465,"byte_end":7693499,"line_start":8,"line_end":8,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":2837},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7693720,"byte_end":7693726,"line_start":13,"line_end":13,"column_start":9,"column_end":15},"name":"suffix","qualname":"::compiler::Version::suffix","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":2833},"children":[],"decl_id":null,"docs":" A suffix for alpha, beta or rc release, e.g., \"alpha-1\", \"rc2\". It should\n be empty for mainline stable releases.\n","sig":null,"attributes":[{"value":"/ A suffix for alpha, beta or rc release, e.g., \"alpha-1\", \"rc2\". It should","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7693547,"byte_end":7693624,"line_start":10,"line_end":10,"column_start":5,"column_end":82}},{"value":"/ be empty for mainline stable releases.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7693629,"byte_end":7693671,"line_start":11,"line_end":11,"column_start":5,"column_end":47}},{"value":"prost(string, optional, tag = \"4\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7693676,"byte_end":7693711,"line_start":12,"line_end":12,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2895},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7693344,"byte_end":7693349,"line_start":5,"line_end":5,"column_start":9,"column_end":14},"name":"major","qualname":"<Version>::major","value":"pub fn major(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `major`, or the default value if `major` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2896},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7693426,"byte_end":7693431,"line_start":7,"line_end":7,"column_start":9,"column_end":14},"name":"minor","qualname":"<Version>::minor","value":"pub fn minor(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `minor`, or the default value if `minor` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2897},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7693508,"byte_end":7693513,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"name":"patch","qualname":"<Version>::patch","value":"pub fn patch(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `patch`, or the default value if `patch` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2898},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7693720,"byte_end":7693726,"line_start":13,"line_end":13,"column_start":9,"column_end":15},"name":"suffix","qualname":"<Version>::suffix","value":"pub fn suffix(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `suffix`, or the default value if `suffix` is unset.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2905},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7693901,"byte_end":7693921,"line_start":17,"line_end":17,"column_start":12,"column_end":32},"name":"CodeGeneratorRequest","qualname":"::compiler::CodeGeneratorRequest","value":"CodeGeneratorRequest { file_to_generate, parameter, proto_file, compiler_version }","parent":null,"children":[{"krate":0,"index":2906},{"krate":0,"index":2907},{"krate":0,"index":2908},{"krate":0,"index":2909}],"decl_id":null,"docs":" An encoded CodeGeneratorRequest is written to the plugin's stdin.\n","sig":null,"attributes":[{"value":"/ An encoded CodeGeneratorRequest is written to the plugin's stdin.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7693774,"byte_end":7693843,"line_start":15,"line_end":15,"column_start":1,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":2906},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7694188,"byte_end":7694204,"line_start":22,"line_end":22,"column_start":9,"column_end":25},"name":"file_to_generate","qualname":"::compiler::CodeGeneratorRequest::file_to_generate","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":2905},"children":[],"decl_id":null,"docs":" The .proto files that were explicitly listed on the command-line.  The\n code generator should generate code only for these files.  Each file's\n descriptor will be included in proto_file, below.\n","sig":null,"attributes":[{"value":"/ The .proto files that were explicitly listed on the command-line.  The","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7693928,"byte_end":7694002,"line_start":18,"line_end":18,"column_start":5,"column_end":79}},{"value":"/ code generator should generate code only for these files.  Each file's","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7694007,"byte_end":7694081,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ descriptor will be included in proto_file, below.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7694086,"byte_end":7694139,"line_start":20,"line_end":20,"column_start":5,"column_end":58}},{"value":"prost(string, repeated, tag = \"1\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7694144,"byte_end":7694179,"line_start":21,"line_end":21,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":2907},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7694352,"byte_end":7694361,"line_start":25,"line_end":25,"column_start":9,"column_end":18},"name":"parameter","qualname":"::compiler::CodeGeneratorRequest::parameter","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":2905},"children":[],"decl_id":null,"docs":" The generator parameter passed on the command-line.\n","sig":null,"attributes":[{"value":"/ The generator parameter passed on the command-line.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7694248,"byte_end":7694303,"line_start":23,"line_end":23,"column_start":5,"column_end":60}},{"value":"prost(string, optional, tag = \"2\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7694308,"byte_end":7694343,"line_start":24,"line_end":24,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":2908},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7695316,"byte_end":7695326,"line_start":41,"line_end":41,"column_start":9,"column_end":19},"name":"proto_file","qualname":"::compiler::CodeGeneratorRequest::proto_file","value":"std::vec::Vec<FileDescriptorProto>","parent":{"krate":0,"index":2905},"children":[],"decl_id":null,"docs":" FileDescriptorProtos for all files in files_to_generate and everything\n they import.  The files will appear in topological order, so each file\n appears before any file that imports it.","sig":null,"attributes":[{"value":"/ FileDescriptorProtos for all files in files_to_generate and everything","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7694411,"byte_end":7694485,"line_start":26,"line_end":26,"column_start":5,"column_end":79}},{"value":"/ they import.  The files will appear in topological order, so each file","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7694490,"byte_end":7694564,"line_start":27,"line_end":27,"column_start":5,"column_end":79}},{"value":"/ appears before any file that imports it.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7694569,"byte_end":7694613,"line_start":28,"line_end":28,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7694618,"byte_end":7694621,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ protoc guarantees that all proto_files will be written after","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7694626,"byte_end":7694690,"line_start":30,"line_end":30,"column_start":5,"column_end":69}},{"value":"/ the fields above, even though this is not technically guaranteed by the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7694695,"byte_end":7694770,"line_start":31,"line_end":31,"column_start":5,"column_end":80}},{"value":"/ protobuf wire format.  This theoretically could allow a plugin to stream","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7694775,"byte_end":7694851,"line_start":32,"line_end":32,"column_start":5,"column_end":81}},{"value":"/ in the FileDescriptorProtos and handle them one by one rather than read","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7694856,"byte_end":7694931,"line_start":33,"line_end":33,"column_start":5,"column_end":80}},{"value":"/ the entire set into memory at once.  However, as of this writing, this","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7694936,"byte_end":7695010,"line_start":34,"line_end":34,"column_start":5,"column_end":79}},{"value":"/ is not similarly optimized on protoc's end -- it will store all fields in","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7695015,"byte_end":7695092,"line_start":35,"line_end":35,"column_start":5,"column_end":82}},{"value":"/ memory at once before sending them to the plugin.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7695097,"byte_end":7695150,"line_start":36,"line_end":36,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7695155,"byte_end":7695158,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ Type names of fields and extensions in the FileDescriptorProto are always","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7695163,"byte_end":7695240,"line_start":38,"line_end":38,"column_start":5,"column_end":82}},{"value":"/ fully qualified.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7695245,"byte_end":7695265,"line_start":39,"line_end":39,"column_start":5,"column_end":25}},{"value":"prost(message, repeated, tag = \"15\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7695270,"byte_end":7695307,"line_start":40,"line_end":40,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":2909},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7695471,"byte_end":7695487,"line_start":44,"line_end":44,"column_start":9,"column_end":25},"name":"compiler_version","qualname":"::compiler::CodeGeneratorRequest::compiler_version","value":"std::option::Option<compiler::Version>","parent":{"krate":0,"index":2905},"children":[],"decl_id":null,"docs":" The version number of protocol compiler.\n","sig":null,"attributes":[{"value":"/ The version number of protocol compiler.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7695377,"byte_end":7695421,"line_start":42,"line_end":42,"column_start":5,"column_end":49}},{"value":"prost(message, optional, tag = \"3\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7695426,"byte_end":7695462,"line_start":43,"line_end":43,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2947},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7694352,"byte_end":7694361,"line_start":25,"line_end":25,"column_start":9,"column_end":18},"name":"parameter","qualname":"<CodeGeneratorRequest>::parameter","value":"pub fn parameter(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `parameter`, or the default value if `parameter` is unset.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2954},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7695646,"byte_end":7695667,"line_start":48,"line_end":48,"column_start":12,"column_end":33},"name":"CodeGeneratorResponse","qualname":"::compiler::CodeGeneratorResponse","value":"CodeGeneratorResponse { error, file }","parent":null,"children":[{"krate":0,"index":2955},{"krate":0,"index":2956}],"decl_id":null,"docs":" The plugin writes an encoded CodeGeneratorResponse to stdout.\n","sig":null,"attributes":[{"value":"/ The plugin writes an encoded CodeGeneratorResponse to stdout.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7695523,"byte_end":7695588,"line_start":46,"line_end":46,"column_start":1,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":2955},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7696253,"byte_end":7696258,"line_start":58,"line_end":58,"column_start":9,"column_end":14},"name":"error","qualname":"::compiler::CodeGeneratorResponse::error","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":2954},"children":[],"decl_id":null,"docs":" Error message.  If non-empty, code generation failed.  The plugin process\n should exit with status code zero even if it reports an error in this way.","sig":null,"attributes":[{"value":"/ Error message.  If non-empty, code generation failed.  The plugin process","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7695674,"byte_end":7695751,"line_start":49,"line_end":49,"column_start":5,"column_end":82}},{"value":"/ should exit with status code zero even if it reports an error in this way.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7695756,"byte_end":7695834,"line_start":50,"line_end":50,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7695839,"byte_end":7695842,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ This should be used to indicate errors in .proto files which prevent the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7695847,"byte_end":7695923,"line_start":52,"line_end":52,"column_start":5,"column_end":81}},{"value":"/ code generator from generating correct code.  Errors which indicate a","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7695928,"byte_end":7696001,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ problem in protoc itself -- such as the input CodeGeneratorRequest being","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7696006,"byte_end":7696082,"line_start":54,"line_end":54,"column_start":5,"column_end":81}},{"value":"/ unparseable -- should be reported by writing a message to stderr and","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7696087,"byte_end":7696159,"line_start":55,"line_end":55,"column_start":5,"column_end":77}},{"value":"/ exiting with a non-zero status code.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7696164,"byte_end":7696204,"line_start":56,"line_end":56,"column_start":5,"column_end":45}},{"value":"prost(string, optional, tag = \"1\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7696209,"byte_end":7696244,"line_start":57,"line_end":57,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":2956},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7696354,"byte_end":7696358,"line_start":60,"line_end":60,"column_start":9,"column_end":13},"name":"file","qualname":"::compiler::CodeGeneratorResponse::file","value":"std::vec::Vec<compiler::code_generator_response::File>","parent":{"krate":0,"index":2954},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"15\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7696308,"byte_end":7696345,"line_start":59,"line_end":59,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2982},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7696253,"byte_end":7696258,"line_start":58,"line_end":58,"column_start":9,"column_end":14},"name":"error","qualname":"<CodeGeneratorResponse>::error","value":"pub fn error(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `error`, or the default value if `error` is unset.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2832},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7696418,"byte_end":7696441,"line_start":62,"line_end":62,"column_start":9,"column_end":32},"name":"code_generator_response","qualname":"::compiler::code_generator_response","value":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","parent":null,"children":[{"krate":0,"index":2989},{"krate":0,"index":3046},{"krate":0,"index":3042},{"krate":0,"index":3043},{"krate":0,"index":2993},{"krate":0,"index":3007},{"krate":0,"index":3009},{"krate":0,"index":3038}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2989},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7696553,"byte_end":7696557,"line_start":65,"line_end":65,"column_start":16,"column_end":20},"name":"File","qualname":"::compiler::code_generator_response::File","value":"File { name, insertion_point, content }","parent":null,"children":[{"krate":0,"index":2990},{"krate":0,"index":2991},{"krate":0,"index":2992}],"decl_id":null,"docs":" Represents a single generated file.\n","sig":null,"attributes":[{"value":"/ Represents a single generated file.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7696448,"byte_end":7696487,"line_start":63,"line_end":63,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":2990},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7697406,"byte_end":7697410,"line_start":78,"line_end":78,"column_start":13,"column_end":17},"name":"name","qualname":"::compiler::code_generator_response::File::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":2989},"children":[],"decl_id":null,"docs":" The file name, relative to the output directory.  The name must not\n contain \".\" or \"..\" components and must be relative, not be absolute (so,\n the file cannot lie outside the output directory).  \"/\" must be used as\n the path separator, not \"\\\".","sig":null,"attributes":[{"value":"/ The file name, relative to the output directory.  The name must not","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7696568,"byte_end":7696639,"line_start":66,"line_end":66,"column_start":9,"column_end":80}},{"value":"/ contain \".\" or \"..\" components and must be relative, not be absolute (so,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7696648,"byte_end":7696725,"line_start":67,"line_end":67,"column_start":9,"column_end":86}},{"value":"/ the file cannot lie outside the output directory).  \"/\" must be used as","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7696734,"byte_end":7696809,"line_start":68,"line_end":68,"column_start":9,"column_end":84}},{"value":"/ the path separator, not \"\\\".","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7696818,"byte_end":7696850,"line_start":69,"line_end":69,"column_start":9,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7696859,"byte_end":7696862,"line_start":70,"line_end":70,"column_start":9,"column_end":12}},{"value":"/ If the name is omitted, the content will be appended to the previous","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7696871,"byte_end":7696943,"line_start":71,"line_end":71,"column_start":9,"column_end":81}},{"value":"/ file.  This allows the generator to break large files into small chunks,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7696952,"byte_end":7697028,"line_start":72,"line_end":72,"column_start":9,"column_end":85}},{"value":"/ and allows the generated text to be streamed back to protoc so that large","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7697037,"byte_end":7697114,"line_start":73,"line_end":73,"column_start":9,"column_end":86}},{"value":"/ files need not reside completely in memory at one time.  Note that as of","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7697123,"byte_end":7697199,"line_start":74,"line_end":74,"column_start":9,"column_end":85}},{"value":"/ this writing protoc does not optimize for this -- it will read the entire","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7697208,"byte_end":7697285,"line_start":75,"line_end":75,"column_start":9,"column_end":86}},{"value":"/ CodeGeneratorResponse before writing files to disk.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7697294,"byte_end":7697349,"line_start":76,"line_end":76,"column_start":9,"column_end":64}},{"value":"prost(string, optional, tag = \"1\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7697358,"byte_end":7697393,"line_start":77,"line_end":77,"column_start":9,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":2991},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7699996,"byte_end":7700011,"line_start":117,"line_end":117,"column_start":13,"column_end":28},"name":"insertion_point","qualname":"::compiler::code_generator_response::File::insertion_point","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":2989},"children":[],"decl_id":null,"docs":" If non-empty, indicates that the named file should already exist, and the\n content here is to be inserted into that file at a defined insertion\n point.  This feature allows a code generator to extend the output\n produced by another code generator.  The original generator may provide\n insertion points by placing special annotations in the file that look\n like:\n   @@protoc_insertion_point(NAME)\n The annotation can have arbitrary text before and after it on the line,\n which allows it to be placed in a comment.  NAME should be replaced with\n an identifier naming the point -- this is what other generators will use\n as the insertion_point.  Code inserted at this point will be placed\n immediately above the line containing the insertion point (thus multiple\n insertions to the same point will come out in the order they were added).\n The double-@ is intended to make it unlikely that the generated code\n could contain things that look like insertion points by accident.","sig":null,"attributes":[{"value":"/ If non-empty, indicates that the named file should already exist, and the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7697464,"byte_end":7697541,"line_start":79,"line_end":79,"column_start":9,"column_end":86}},{"value":"/ content here is to be inserted into that file at a defined insertion","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7697550,"byte_end":7697622,"line_start":80,"line_end":80,"column_start":9,"column_end":81}},{"value":"/ point.  This feature allows a code generator to extend the output","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7697631,"byte_end":7697700,"line_start":81,"line_end":81,"column_start":9,"column_end":78}},{"value":"/ produced by another code generator.  The original generator may provide","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7697709,"byte_end":7697784,"line_start":82,"line_end":82,"column_start":9,"column_end":84}},{"value":"/ insertion points by placing special annotations in the file that look","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7697793,"byte_end":7697866,"line_start":83,"line_end":83,"column_start":9,"column_end":82}},{"value":"/ like:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7697875,"byte_end":7697884,"line_start":84,"line_end":84,"column_start":9,"column_end":18}},{"value":"/   @@protoc_insertion_point(NAME)","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7697893,"byte_end":7697929,"line_start":85,"line_end":85,"column_start":9,"column_end":45}},{"value":"/ The annotation can have arbitrary text before and after it on the line,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7697938,"byte_end":7698013,"line_start":86,"line_end":86,"column_start":9,"column_end":84}},{"value":"/ which allows it to be placed in a comment.  NAME should be replaced with","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7698022,"byte_end":7698098,"line_start":87,"line_end":87,"column_start":9,"column_end":85}},{"value":"/ an identifier naming the point -- this is what other generators will use","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7698107,"byte_end":7698183,"line_start":88,"line_end":88,"column_start":9,"column_end":85}},{"value":"/ as the insertion_point.  Code inserted at this point will be placed","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7698192,"byte_end":7698263,"line_start":89,"line_end":89,"column_start":9,"column_end":80}},{"value":"/ immediately above the line containing the insertion point (thus multiple","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7698272,"byte_end":7698348,"line_start":90,"line_end":90,"column_start":9,"column_end":85}},{"value":"/ insertions to the same point will come out in the order they were added).","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7698357,"byte_end":7698434,"line_start":91,"line_end":91,"column_start":9,"column_end":86}},{"value":"/ The double-@ is intended to make it unlikely that the generated code","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7698443,"byte_end":7698515,"line_start":92,"line_end":92,"column_start":9,"column_end":81}},{"value":"/ could contain things that look like insertion points by accident.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7698524,"byte_end":7698593,"line_start":93,"line_end":93,"column_start":9,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7698602,"byte_end":7698605,"line_start":94,"line_end":94,"column_start":9,"column_end":12}},{"value":"/ For example, the C++ code generator places the following line in the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7698614,"byte_end":7698686,"line_start":95,"line_end":95,"column_start":9,"column_end":81}},{"value":"/ .pb.h files that it generates:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7698695,"byte_end":7698729,"line_start":96,"line_end":96,"column_start":9,"column_end":43}},{"value":"/   // @@protoc_insertion_point(namespace_scope)","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7698738,"byte_end":7698788,"line_start":97,"line_end":97,"column_start":9,"column_end":59}},{"value":"/ This line appears within the scope of the file's package namespace, but","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7698797,"byte_end":7698872,"line_start":98,"line_end":98,"column_start":9,"column_end":84}},{"value":"/ outside of any particular class.  Another plugin can then specify the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7698881,"byte_end":7698954,"line_start":99,"line_end":99,"column_start":9,"column_end":82}},{"value":"/ insertion_point \"namespace_scope\" to generate additional classes or","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7698963,"byte_end":7699034,"line_start":100,"line_end":100,"column_start":9,"column_end":80}},{"value":"/ other declarations that should be placed in this scope.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7699043,"byte_end":7699102,"line_start":101,"line_end":101,"column_start":9,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7699111,"byte_end":7699114,"line_start":102,"line_end":102,"column_start":9,"column_end":12}},{"value":"/ Note that if the line containing the insertion point begins with","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7699123,"byte_end":7699191,"line_start":103,"line_end":103,"column_start":9,"column_end":77}},{"value":"/ whitespace, the same whitespace will be added to every line of the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7699200,"byte_end":7699270,"line_start":104,"line_end":104,"column_start":9,"column_end":79}},{"value":"/ inserted text.  This is useful for languages like Python, where","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7699279,"byte_end":7699346,"line_start":105,"line_end":105,"column_start":9,"column_end":76}},{"value":"/ indentation matters.  In these languages, the insertion point comment","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7699355,"byte_end":7699428,"line_start":106,"line_end":106,"column_start":9,"column_end":82}},{"value":"/ should be indented the same amount as any inserted code will need to be","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7699437,"byte_end":7699512,"line_start":107,"line_end":107,"column_start":9,"column_end":84}},{"value":"/ in order to work correctly in that context.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7699521,"byte_end":7699568,"line_start":108,"line_end":108,"column_start":9,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7699577,"byte_end":7699580,"line_start":109,"line_end":109,"column_start":9,"column_end":12}},{"value":"/ The code generator that generates the initial file and the one which","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7699589,"byte_end":7699661,"line_start":110,"line_end":110,"column_start":9,"column_end":81}},{"value":"/ inserts into it must both run as part of a single invocation of protoc.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7699670,"byte_end":7699745,"line_start":111,"line_end":111,"column_start":9,"column_end":84}},{"value":"/ Code generators are executed in the order in which they appear on the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7699754,"byte_end":7699827,"line_start":112,"line_end":112,"column_start":9,"column_end":82}},{"value":"/ command line.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7699836,"byte_end":7699853,"line_start":113,"line_end":113,"column_start":9,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7699862,"byte_end":7699865,"line_start":114,"line_end":114,"column_start":9,"column_end":12}},{"value":"/ If |insertion_point| is present, |name| must also be present.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7699874,"byte_end":7699939,"line_start":115,"line_end":115,"column_start":9,"column_end":74}},{"value":"prost(string, optional, tag = \"2\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7699948,"byte_end":7699983,"line_start":116,"line_end":116,"column_start":9,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":2992},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7700145,"byte_end":7700152,"line_start":120,"line_end":120,"column_start":13,"column_end":20},"name":"content","qualname":"::compiler::code_generator_response::File::content","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":2989},"children":[],"decl_id":null,"docs":" The file contents.\n","sig":null,"attributes":[{"value":"/ The file contents.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7700065,"byte_end":7700087,"line_start":118,"line_end":118,"column_start":9,"column_end":31}},{"value":"prost(string, optional, tag = \"15\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7700096,"byte_end":7700132,"line_start":119,"line_end":119,"column_start":9,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3039},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7697406,"byte_end":7697410,"line_start":78,"line_end":78,"column_start":13,"column_end":17},"name":"name","qualname":"<File>::name","value":"pub fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `name`, or the default value if `name` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3040},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7699996,"byte_end":7700011,"line_start":117,"line_end":117,"column_start":13,"column_end":28},"name":"insertion_point","qualname":"<File>::insertion_point","value":"pub fn insertion_point(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `insertion_point`, or the default value if `insertion_point` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3041},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\compiler.rs","byte_start":7700145,"byte_end":7700152,"line_start":120,"line_end":120,"column_start":13,"column_end":20},"name":"content","qualname":"<File>::content","value":"pub fn content(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `content`, or the default value if `content` is unset.\n","sig":null,"attributes":[]}],"impls":[{"id":193,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\lib.rs","byte_start":865,"byte_end":873,"line_start":28,"line_end":28,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":10}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\lib.rs","byte_start":1992,"byte_end":2000,"line_start":55,"line_end":55,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":12}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\lib.rs","byte_start":2539,"byte_end":2547,"line_start":75,"line_end":75,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":14},{"krate":0,"index":15}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\lib.rs","byte_start":3165,"byte_end":3174,"line_start":96,"line_end":96,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":17}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\lib.rs","byte_start":4164,"byte_end":4173,"line_start":121,"line_end":121,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":19}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\lib.rs","byte_start":4461,"byte_end":4471,"line_start":131,"line_end":131,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":21},{"krate":0,"index":22}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\lib.rs","byte_start":865,"byte_end":873,"line_start":28,"line_end":28,"column_start":6,"column_end":14},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":2591},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\lib.rs","byte_start":1992,"byte_end":2000,"line_start":55,"line_end":55,"column_start":31,"column_end":39},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":2591},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\lib.rs","byte_start":2539,"byte_end":2547,"line_start":75,"line_end":75,"column_start":34,"column_end":42},"kind":{"Impl":{"id":195}},"from":{"krate":2,"index":32404},"to":{"krate":2,"index":1852}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\lib.rs","byte_start":3165,"byte_end":3174,"line_start":96,"line_end":96,"column_start":6,"column_end":15},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":2805},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\lib.rs","byte_start":4164,"byte_end":4173,"line_start":121,"line_end":121,"column_start":33,"column_end":42},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":2805},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prost-types-0.6.1\\src\\lib.rs","byte_start":4461,"byte_end":4471,"line_start":131,"line_end":131,"column_start":35,"column_end":45},"kind":{"Impl":{"id":198}},"from":{"krate":1,"index":7626},"to":{"krate":2,"index":1852}}]}