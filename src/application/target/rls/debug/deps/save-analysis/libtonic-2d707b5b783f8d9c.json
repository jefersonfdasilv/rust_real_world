{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1","program":"C:\\Users\\renat\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","tonic","--edition=2018","C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"async-trait\"","--cfg","feature=\"codegen\"","--cfg","feature=\"default\"","--cfg","feature=\"hyper\"","--cfg","feature=\"prost\"","--cfg","feature=\"prost-derive\"","--cfg","feature=\"prost1\"","--cfg","feature=\"tls\"","--cfg","feature=\"tokio\"","--cfg","feature=\"tokio-rustls\"","--cfg","feature=\"tower\"","--cfg","feature=\"tower-balance\"","--cfg","feature=\"tower-load\"","--cfg","feature=\"tracing-futures\"","--cfg","feature=\"transport\"","-C","metadata=2d707b5b783f8d9c","-C","extra-filename=-2d707b5b783f8d9c","--out-dir","c:\\rustProjects\\example_real_word\\example_real_word\\src\\application\\target\\rls\\debug\\deps","-L","dependency=c:\\rustProjects\\example_real_word\\example_real_word\\src\\application\\target\\rls\\debug\\deps","--extern","async_stream=c:\\rustProjects\\example_real_word\\example_real_word\\src\\application\\target\\rls\\debug\\deps\\libasync_stream-6c2dcbb3891cd0c1.rmeta","--extern","async_trait=c:\\rustProjects\\example_real_word\\example_real_word\\src\\application\\target\\rls\\debug\\deps\\async_trait-8887b3852c6d0831.dll","--extern","base64=c:\\rustProjects\\example_real_word\\example_real_word\\src\\application\\target\\rls\\debug\\deps\\libbase64-b1e37efcc3f4145e.rmeta","--extern","bytes=c:\\rustProjects\\example_real_word\\example_real_word\\src\\application\\target\\rls\\debug\\deps\\libbytes-b6272f349639dca9.rmeta","--extern","futures_core=c:\\rustProjects\\example_real_word\\example_real_word\\src\\application\\target\\rls\\debug\\deps\\libfutures_core-473269095126e29f.rmeta","--extern","futures_util=c:\\rustProjects\\example_real_word\\example_real_word\\src\\application\\target\\rls\\debug\\deps\\libfutures_util-c89f59ebe4f87c7c.rmeta","--extern","http=c:\\rustProjects\\example_real_word\\example_real_word\\src\\application\\target\\rls\\debug\\deps\\libhttp-5014738bb2adaaf3.rmeta","--extern","http_body=c:\\rustProjects\\example_real_word\\example_real_word\\src\\application\\target\\rls\\debug\\deps\\libhttp_body-1991eee64abd21a5.rmeta","--extern","hyper=c:\\rustProjects\\example_real_word\\example_real_word\\src\\application\\target\\rls\\debug\\deps\\libhyper-0bbb9494f087565a.rmeta","--extern","percent_encoding=c:\\rustProjects\\example_real_word\\example_real_word\\src\\application\\target\\rls\\debug\\deps\\libpercent_encoding-d89d21e8fcad9368.rmeta","--extern","pin_project=c:\\rustProjects\\example_real_word\\example_real_word\\src\\application\\target\\rls\\debug\\deps\\libpin_project-0963c676987ca2c9.rmeta","--extern","prost1=c:\\rustProjects\\example_real_word\\example_real_word\\src\\application\\target\\rls\\debug\\deps\\libprost-6f653f40b9319ada.rmeta","--extern","prost_derive=c:\\rustProjects\\example_real_word\\example_real_word\\src\\application\\target\\rls\\debug\\deps\\prost_derive-5502d98bae4becb1.dll","--extern","tokio=c:\\rustProjects\\example_real_word\\example_real_word\\src\\application\\target\\rls\\debug\\deps\\libtokio-d2a98b758de2c721.rmeta","--extern","tokio_rustls=c:\\rustProjects\\example_real_word\\example_real_word\\src\\application\\target\\rls\\debug\\deps\\libtokio_rustls-69f9cfa7470e6824.rmeta","--extern","tokio_util=c:\\rustProjects\\example_real_word\\example_real_word\\src\\application\\target\\rls\\debug\\deps\\libtokio_util-3b8de134a00fdd0e.rmeta","--extern","tower=c:\\rustProjects\\example_real_word\\example_real_word\\src\\application\\target\\rls\\debug\\deps\\libtower-eab2a809ee731168.rmeta","--extern","tower_balance=c:\\rustProjects\\example_real_word\\example_real_word\\src\\application\\target\\rls\\debug\\deps\\libtower_balance-10b4bf017895e789.rmeta","--extern","tower_load=c:\\rustProjects\\example_real_word\\example_real_word\\src\\application\\target\\rls\\debug\\deps\\libtower_load-2c432d2da8614008.rmeta","--extern","tower_make=c:\\rustProjects\\example_real_word\\example_real_word\\src\\application\\target\\rls\\debug\\deps\\libtower_make-8f28194c32ec06dd.rmeta","--extern","tower_service=c:\\rustProjects\\example_real_word\\example_real_word\\src\\application\\target\\rls\\debug\\deps\\libtower_service-3db1edff4e72827b.rmeta","--extern","tracing=c:\\rustProjects\\example_real_word\\example_real_word\\src\\application\\target\\rls\\debug\\deps\\libtracing-0cb59f6b1b97c5cb.rmeta","--extern","tracing_futures=c:\\rustProjects\\example_real_word\\example_real_word\\src\\application\\target\\rls\\debug\\deps\\libtracing_futures-505999ad312bf459.rmeta","--cap-lints","allow","-L","native=c:\\rustProjects\\example_real_word\\example_real_word\\src\\application\\target\\rls\\debug\\build\\ring-0062150e39c7f34c\\out","--error-format=json","--sysroot","C:\\Users\\renat\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\rustProjects\\example_real_word\\example_real_word\\src\\application\\target\\rls\\debug\\deps\\libtonic-2d707b5b783f8d9c.rmeta"},"prelude":{"crate_id":{"name":"tonic","disambiguator":[266784754619289007,6602192290290754551]},"crate_root":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src","external_crates":[{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[2951836381390344939,16649128255697415692]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[11710271729537087300,7936810236211621860]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[221620535861096092,14052674651022364528]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6754765288211962248,11319126938093173531]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12146955935630897969,9411134559866261862]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[14833668363639865695,5655522694650611187]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4272166054306925428,11429919485785531186]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12683507629027033058,3032465482526171902]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[3621516987667804763,14118985286121416357]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[3114763798488812350,3771385689256703239]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[12308387851717752688,1271721453298801945]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[41357415245366713,267475365531445088]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[14877867959531453948,6948897495248942720]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","num":14,"id":{"name":"bytes","disambiguator":[7135269789112322313,11078045287243048667]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","num":15,"id":{"name":"http_body","disambiguator":[4905196056143975408,5503064803359862959]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","num":16,"id":{"name":"http","disambiguator":[13689750313089527941,9398914745595270676]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","num":17,"id":{"name":"fnv","disambiguator":[2263003884098538549,10377970547828183879]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","num":18,"id":{"name":"bytes","disambiguator":[9419949222460843204,1125374523310505157]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","num":19,"id":{"name":"itoa","disambiguator":[1852226117106021919,15780092083632816279]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","num":20,"id":{"name":"futures_core","disambiguator":[10195818575127068416,2784049674970187270]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","num":21,"id":{"name":"futures_util","disambiguator":[6851417981988308166,9329189604893867292]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","num":22,"id":{"name":"pin_utils","disambiguator":[9649324178910884247,16817075994413001608]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","num":23,"id":{"name":"proc_macro_hack","disambiguator":[11479768902424398569,1445009592392093553]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","num":24,"id":{"name":"futures_task","disambiguator":[18287850662566460305,10756672741055458163]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","num":25,"id":{"name":"once_cell","disambiguator":[11410418001235588417,14186021605448545371]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","num":26,"id":{"name":"futures_sink","disambiguator":[7399045838886921999,13601516438022380679]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","num":27,"id":{"name":"pin_project_lite","disambiguator":[1191491414497640821,5863284106166447590]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","num":28,"id":{"name":"futures_channel","disambiguator":[4890968033619846778,11013565335618572779]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","num":29,"id":{"name":"slab","disambiguator":[5177127645849670698,14978272138371796421]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","num":30,"id":{"name":"futures_io","disambiguator":[4183242129147661590,11564679295210560259]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","num":31,"id":{"name":"futures_macro","disambiguator":[9318167268399616512,13938908367665398177]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","num":32,"id":{"name":"memchr","disambiguator":[8252552509556907553,2002173824503488947]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\service.rs","num":33,"id":{"name":"tower_service","disambiguator":[13489261889830718158,10359979421242134108]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","num":34,"id":{"name":"tracing","disambiguator":[846732011218799832,5551115821764993894]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","num":35,"id":{"name":"cfg_if","disambiguator":[10490533630110347277,1660893665774984996]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","num":36,"id":{"name":"log","disambiguator":[17231530240207290699,8673617800213610904]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","num":37,"id":{"name":"cfg_if","disambiguator":[3734860209140798689,14506924879911982731]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","num":38,"id":{"name":"tracing_core","disambiguator":[12019008876773337601,13690793278844835491]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","num":39,"id":{"name":"lazy_static","disambiguator":[4516623831510152009,17434107222073870648]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","num":40,"id":{"name":"tracing_attributes","disambiguator":[7535332483445448452,12246276483195293567]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\encode.rs","num":41,"id":{"name":"pin_project","disambiguator":[11563813802414935040,17106192840812037483]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\encode.rs","num":42,"id":{"name":"pin_project_internal","disambiguator":[857880348694423483,8815451251885880360]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\prost.rs","num":43,"id":{"name":"prost","disambiguator":[16595426035053638682,10650344773206581538]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\prost.rs","num":44,"id":{"name":"prost_derive","disambiguator":[2237986993125276680,18404888850274619507]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","num":45,"id":{"name":"tower_make","disambiguator":[5237375104302876219,9970272100447879271]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","num":46,"id":{"name":"tokio","disambiguator":[13978751743612363292,8754323351243360044]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","num":47,"id":{"name":"pin_project_lite","disambiguator":[5052053733193801171,18308281450208169853]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","num":48,"id":{"name":"mio","disambiguator":[5209814951478304169,3939431660410645460]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","num":49,"id":{"name":"net2","disambiguator":[1432561761112285593,13807339146611996949]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","num":50,"id":{"name":"winapi","disambiguator":[15618236796163967953,13174967574666962142]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","num":51,"id":{"name":"iovec","disambiguator":[10760462275380225494,14543731673056208042]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","num":52,"id":{"name":"miow","disambiguator":[13740218971569903477,8097452116667193597]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","num":53,"id":{"name":"kernel32","disambiguator":[17141300724075450123,16724126007151737776]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","num":54,"id":{"name":"winapi","disambiguator":[2960638698282914680,4967541454394922489]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","num":55,"id":{"name":"ws2_32","disambiguator":[15272389877049087959,4601086224162899295]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","num":56,"id":{"name":"mio_named_pipes","disambiguator":[18290437880030984215,13967042907961498678]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","num":57,"id":{"name":"miow","disambiguator":[15063042924881763138,3123441729418761850]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","num":58,"id":{"name":"socket2","disambiguator":[13785112794224223179,17686894230791974959]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","num":59,"id":{"name":"tokio_macros","disambiguator":[11300785189581837829,16302266360372696618]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","num":60,"id":{"name":"num_cpus","disambiguator":[308092593720190060,5271085585566588696]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","num":61,"id":{"name":"hyper","disambiguator":[14350461659214881812,13353255105994945801]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","num":62,"id":{"name":"pin_project","disambiguator":[15811339317000469341,4860643835130048466]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","num":63,"id":{"name":"pin_project_internal","disambiguator":[14163567954515905982,12384814009436480328]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","num":64,"id":{"name":"httpdate","disambiguator":[588280691608609305,879686237743134987]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","num":65,"id":{"name":"h2","disambiguator":[10875905546394633091,12477373332790303399]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","num":66,"id":{"name":"tokio_util","disambiguator":[14976820696629808737,1270625254461005544]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","num":67,"id":{"name":"indexmap","disambiguator":[14537148440316785406,5107830990360154962]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","num":68,"id":{"name":"hashbrown","disambiguator":[7795358411307919897,17226262493903553725]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","num":69,"id":{"name":"tracing_futures","disambiguator":[1718457890006899798,11574473612250281292]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","num":70,"id":{"name":"want","disambiguator":[5940894464969547063,7911698106268304177]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","num":71,"id":{"name":"try_lock","disambiguator":[16031939410868879907,10970100346801910940]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","num":72,"id":{"name":"httparse","disambiguator":[15919893391683228715,554586303501992272]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","num":73,"id":{"name":"tower","disambiguator":[7945486396608155797,17315183893070637531]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","num":74,"id":{"name":"tower_buffer","disambiguator":[6902441940586078266,16030932304659661199]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","num":75,"id":{"name":"tower_layer","disambiguator":[2012499539022296584,882211152215159307]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","num":76,"id":{"name":"tower_discover","disambiguator":[1610347684231463530,5673473726841035418]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","num":77,"id":{"name":"tower_limit","disambiguator":[4198798427984601313,14942534476102196322]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\connection.rs","num":78,"id":{"name":"tower_load","disambiguator":[9142252958296051878,18312221714561639304]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","num":79,"id":{"name":"tower_load_shed","disambiguator":[1990488566333902908,14319779611558808973]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","num":80,"id":{"name":"tower_retry","disambiguator":[2221422863430492571,9361416845075117691]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","num":81,"id":{"name":"tower_timeout","disambiguator":[5684049361625300267,10132214506437275047]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","num":82,"id":{"name":"tower_util","disambiguator":[6547260171932810639,12690948304538628783]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","num":83,"id":{"name":"tower_balance","disambiguator":[13134017854290927911,2245327122403529461]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","num":84,"id":{"name":"rand","disambiguator":[10936761489832960286,641917116810896301]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","num":85,"id":{"name":"rand_core","disambiguator":[13319102768167345163,6731569138473367923]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","num":86,"id":{"name":"getrandom","disambiguator":[4832194927029004645,9460990811696720357]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","num":87,"id":{"name":"rand_chacha","disambiguator":[16527557627459262901,946069985865320813]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","num":88,"id":{"name":"ppv_lite86","disambiguator":[4127254484549205065,2568515754691623755]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","num":89,"id":{"name":"rand_pcg","disambiguator":[2413052123221898094,1103536601483366764]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","num":90,"id":{"name":"tower_ready_cache","disambiguator":[14652606669503427336,16812796025394859822]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\conn.rs","num":91,"id":{"name":"tokio_rustls","disambiguator":[2054744320635170817,5706321176216455992]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\conn.rs","num":92,"id":{"name":"rustls","disambiguator":[12797779514053219611,1757258463728950767]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\conn.rs","num":93,"id":{"name":"webpki","disambiguator":[6659445596878104613,7977350025815571515]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\conn.rs","num":94,"id":{"name":"ring","disambiguator":[8631747174931174104,7395414534561795985]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\conn.rs","num":95,"id":{"name":"untrusted","disambiguator":[14898578687684834548,6350761932343241457]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\conn.rs","num":96,"id":{"name":"spin","disambiguator":[5542280847218728792,18251447406319318525]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\conn.rs","num":97,"id":{"name":"sct","disambiguator":[18414412189259954022,12330031393159535348]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\encoding.rs","num":98,"id":{"name":"base64","disambiguator":[10836252478924841109,12720482945655073979]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","num":99,"id":{"name":"percent_encoding","disambiguator":[7072516744275634080,971266019867219942]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","num":100,"id":{"name":"async_trait","disambiguator":[3753090332214779007,16536895012151340662]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\encode.rs","num":101,"id":{"name":"async_stream","disambiguator":[5454936988178023431,10594654113707510865]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\encode.rs","num":102,"id":{"name":"async_stream_impl","disambiguator":[17319855170370974642,16890006589443495437]}}],"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":0,"byte_end":4232,"line_start":1,"line_end":112,"column_start":1,"column_end":17}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":100},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\mod.rs","byte_start":10371,"byte_end":10375,"line_start":22,"line_end":22,"column_start":21,"column_end":25},"alias_span":null,"name":"Grpc","value":"","parent":{"krate":0,"index":68}},{"kind":"Use","ref_id":{"krate":0,"index":159},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\mod.rs","byte_start":10400,"byte_end":10411,"line_start":23,"line_end":23,"column_start":24,"column_end":35},"alias_span":null,"name":"GrpcService","value":"","parent":{"krate":0,"index":68}},{"kind":"Use","ref_id":{"krate":0,"index":229},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\mod.rs","byte_start":19584,"byte_end":19593,"line_start":14,"line_end":14,"column_start":23,"column_end":32},"alias_span":null,"name":"Streaming","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2475},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\mod.rs","byte_start":19752,"byte_end":19762,"line_start":18,"line_end":18,"column_start":22,"column_end":32},"alias_span":null,"name":"ProstCodec","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2324},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\mod.rs","byte_start":19800,"byte_end":19809,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"alias_span":null,"name":"DecodeBuf","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2331},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\mod.rs","byte_start":19811,"byte_end":19820,"line_start":20,"line_end":20,"column_start":29,"column_end":38},"alias_span":null,"name":"EncodeBuf","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2517},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\mod.rs","byte_start":44706,"byte_end":44711,"line_start":8,"line_end":8,"column_start":25,"column_end":30},"alias_span":null,"name":"Ascii","value":"","parent":{"krate":0,"index":384}},{"kind":"Use","ref_id":{"krate":0,"index":2531},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\mod.rs","byte_start":44737,"byte_end":44743,"line_start":9,"line_end":9,"column_start":25,"column_end":31},"alias_span":null,"name":"Binary","value":"","parent":{"krate":0,"index":384}},{"kind":"Use","ref_id":{"krate":0,"index":456},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\mod.rs","byte_start":44764,"byte_end":44780,"line_start":10,"line_end":10,"column_start":20,"column_end":36},"alias_span":null,"name":"AsciiMetadataKey","value":"","parent":{"krate":0,"index":384}},{"kind":"Use","ref_id":{"krate":0,"index":457},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\mod.rs","byte_start":44801,"byte_end":44818,"line_start":11,"line_end":11,"column_start":20,"column_end":37},"alias_span":null,"name":"BinaryMetadataKey","value":"","parent":{"krate":0,"index":384}},{"kind":"Use","ref_id":{"krate":0,"index":2550},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\mod.rs","byte_start":44839,"byte_end":44850,"line_start":12,"line_end":12,"column_start":20,"column_end":31},"alias_span":null,"name":"MetadataKey","value":"","parent":{"krate":0,"index":384}},{"kind":"Use","ref_id":{"krate":0,"index":2709},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\mod.rs","byte_start":44871,"byte_end":44876,"line_start":13,"line_end":13,"column_start":20,"column_end":25},"alias_span":null,"name":"Entry","value":"","parent":{"krate":0,"index":384}},{"kind":"Use","ref_id":{"krate":0,"index":2700},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\mod.rs","byte_start":44897,"byte_end":44903,"line_start":14,"line_end":14,"column_start":20,"column_end":26},"alias_span":null,"name":"GetAll","value":"","parent":{"krate":0,"index":384}},{"kind":"Use","ref_id":{"krate":0,"index":2584},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\mod.rs","byte_start":44924,"byte_end":44928,"line_start":15,"line_end":15,"column_start":20,"column_end":24},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":384}},{"kind":"Use","ref_id":{"krate":0,"index":2603},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\mod.rs","byte_start":44949,"byte_end":44966,"line_start":16,"line_end":16,"column_start":20,"column_end":37},"alias_span":null,"name":"KeyAndMutValueRef","value":"","parent":{"krate":0,"index":384}},{"kind":"Use","ref_id":{"krate":0,"index":2590},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\mod.rs","byte_start":44987,"byte_end":45001,"line_start":17,"line_end":17,"column_start":20,"column_end":34},"alias_span":null,"name":"KeyAndValueRef","value":"","parent":{"krate":0,"index":384}},{"kind":"Use","ref_id":{"krate":0,"index":2637},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\mod.rs","byte_start":45022,"byte_end":45028,"line_start":18,"line_end":18,"column_start":20,"column_end":26},"alias_span":null,"name":"KeyRef","value":"","parent":{"krate":0,"index":384}},{"kind":"Use","ref_id":{"krate":0,"index":2631},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\mod.rs","byte_start":45049,"byte_end":45053,"line_start":19,"line_end":19,"column_start":20,"column_end":24},"alias_span":null,"name":"Keys","value":"","parent":{"krate":0,"index":384}},{"kind":"Use","ref_id":{"krate":0,"index":2576},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\mod.rs","byte_start":45074,"byte_end":45085,"line_start":20,"line_end":20,"column_start":20,"column_end":31},"alias_span":null,"name":"MetadataMap","value":"","parent":{"krate":0,"index":384}},{"kind":"Use","ref_id":{"krate":0,"index":2731},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\mod.rs","byte_start":45106,"byte_end":45119,"line_start":21,"line_end":21,"column_start":20,"column_end":33},"alias_span":null,"name":"OccupiedEntry","value":"","parent":{"krate":0,"index":384}},{"kind":"Use","ref_id":{"krate":0,"index":2722},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\mod.rs","byte_start":45140,"byte_end":45151,"line_start":22,"line_end":22,"column_start":20,"column_end":31},"alias_span":null,"name":"VacantEntry","value":"","parent":{"krate":0,"index":384}},{"kind":"Use","ref_id":{"krate":0,"index":2622},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\mod.rs","byte_start":45172,"byte_end":45182,"line_start":23,"line_end":23,"column_start":20,"column_end":30},"alias_span":null,"name":"ValueDrain","value":"","parent":{"krate":0,"index":384}},{"kind":"Use","ref_id":{"krate":0,"index":2682},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\mod.rs","byte_start":45203,"byte_end":45212,"line_start":24,"line_end":24,"column_start":20,"column_end":29},"alias_span":null,"name":"ValueIter","value":"","parent":{"krate":0,"index":384}},{"kind":"Use","ref_id":{"krate":0,"index":2654},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\mod.rs","byte_start":45233,"byte_end":45241,"line_start":25,"line_end":25,"column_start":20,"column_end":28},"alias_span":null,"name":"ValueRef","value":"","parent":{"krate":0,"index":384}},{"kind":"Use","ref_id":{"krate":0,"index":2671},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\mod.rs","byte_start":45262,"byte_end":45273,"line_start":26,"line_end":26,"column_start":20,"column_end":31},"alias_span":null,"name":"ValueRefMut","value":"","parent":{"krate":0,"index":384}},{"kind":"Use","ref_id":{"krate":0,"index":2648},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\mod.rs","byte_start":45294,"byte_end":45300,"line_start":27,"line_end":27,"column_start":20,"column_end":26},"alias_span":null,"name":"Values","value":"","parent":{"krate":0,"index":384}},{"kind":"Use","ref_id":{"krate":0,"index":894},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\mod.rs","byte_start":45323,"byte_end":45341,"line_start":28,"line_end":28,"column_start":22,"column_end":40},"alias_span":null,"name":"AsciiMetadataValue","value":"","parent":{"krate":0,"index":384}},{"kind":"Use","ref_id":{"krate":0,"index":895},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\mod.rs","byte_start":45364,"byte_end":45383,"line_start":29,"line_end":29,"column_start":22,"column_end":41},"alias_span":null,"name":"BinaryMetadataValue","value":"","parent":{"krate":0,"index":384}},{"kind":"Use","ref_id":{"krate":0,"index":2740},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\mod.rs","byte_start":45406,"byte_end":45419,"line_start":30,"line_end":30,"column_start":22,"column_end":35},"alias_span":null,"name":"MetadataValue","value":"","parent":{"krate":0,"index":384}},{"kind":"Use","ref_id":{"krate":0,"index":2513},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\mod.rs","byte_start":45582,"byte_end":45602,"line_start":35,"line_end":35,"column_start":30,"column_end":50},"alias_span":null,"name":"InvalidMetadataValue","value":"","parent":{"krate":0,"index":1045}},{"kind":"Use","ref_id":{"krate":0,"index":2545},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\mod.rs","byte_start":45633,"byte_end":45658,"line_start":36,"line_end":36,"column_start":30,"column_end":55},"alias_span":null,"name":"InvalidMetadataValueBytes","value":"","parent":{"krate":0,"index":1045}},{"kind":"Use","ref_id":{"krate":0,"index":2572},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\mod.rs","byte_start":45684,"byte_end":45702,"line_start":37,"line_end":37,"column_start":25,"column_end":43},"alias_span":null,"name":"InvalidMetadataKey","value":"","parent":{"krate":0,"index":1045}},{"kind":"Use","ref_id":{"krate":0,"index":2751},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\mod.rs","byte_start":45730,"byte_end":45740,"line_start":38,"line_end":38,"column_start":27,"column_end":37},"alias_span":null,"name":"ToStrError","value":"","parent":{"krate":0,"index":1045}},{"kind":"Use","ref_id":{"krate":0,"index":1075},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\mod.rs","byte_start":172529,"byte_end":172533,"line_start":14,"line_end":14,"column_start":21,"column_end":25},"alias_span":null,"name":"Grpc","value":"","parent":{"krate":0,"index":1050}},{"kind":"Use","ref_id":{"krate":0,"index":1159},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\mod.rs","byte_start":172564,"byte_end":172586,"line_start":16,"line_end":16,"column_start":5,"column_end":27},"alias_span":null,"name":"ClientStreamingService","value":"","parent":{"krate":0,"index":1050}},{"kind":"Use","ref_id":{"krate":0,"index":1144},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\mod.rs","byte_start":172588,"byte_end":172610,"line_start":16,"line_end":16,"column_start":29,"column_end":51},"alias_span":null,"name":"ServerStreamingService","value":"","parent":{"krate":0,"index":1050}},{"kind":"Use","ref_id":{"krate":0,"index":1171},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\mod.rs","byte_start":172612,"byte_end":172628,"line_start":16,"line_end":16,"column_start":53,"column_end":69},"alias_span":null,"name":"StreamingService","value":"","parent":{"krate":0,"index":1050}},{"kind":"Use","ref_id":{"krate":0,"index":1132},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\mod.rs","byte_start":172630,"byte_end":172642,"line_start":16,"line_end":16,"column_start":71,"column_end":83},"alias_span":null,"name":"UnaryService","value":"","parent":{"krate":0,"index":1050}},{"kind":"Use","ref_id":{"krate":0,"index":2771},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":186766,"byte_end":186774,"line_start":8,"line_end":8,"column_start":19,"column_end":27},"alias_span":null,"name":"Endpoint","value":"","parent":{"krate":0,"index":1193}},{"kind":"Use","ref_id":{"krate":0,"index":2790},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":186813,"byte_end":186828,"line_start":10,"line_end":10,"column_start":14,"column_end":29},"alias_span":null,"name":"ClientTlsConfig","value":"","parent":{"krate":0,"index":1193}},{"kind":"Use","ref_id":{"krate":0,"index":1364},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":206388,"byte_end":206397,"line_start":9,"line_end":9,"column_start":15,"column_end":24},"alias_span":null,"name":"Connected","value":"","parent":{"krate":0,"index":1356}},{"kind":"Use","ref_id":{"krate":0,"index":2807},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":206436,"byte_end":206451,"line_start":11,"line_end":11,"column_start":14,"column_end":29},"alias_span":null,"name":"ServerTlsConfig","value":"","parent":{"krate":0,"index":1356}},{"kind":"Use","ref_id":{"krate":0,"index":2797},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":186209,"byte_end":186216,"line_start":97,"line_end":97,"column_start":25,"column_end":32},"alias_span":null,"name":"Channel","value":"","parent":{"krate":0,"index":1192}},{"kind":"Use","ref_id":{"krate":0,"index":2771},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":186218,"byte_end":186226,"line_start":97,"line_end":97,"column_start":34,"column_end":42},"alias_span":null,"name":"Endpoint","value":"","parent":{"krate":0,"index":1192}},{"kind":"Use","ref_id":{"krate":0,"index":1612},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":186250,"byte_end":186255,"line_start":98,"line_end":98,"column_start":22,"column_end":27},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":1192}},{"kind":"Use","ref_id":{"krate":0,"index":1501},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":186295,"byte_end":186307,"line_start":100,"line_end":100,"column_start":24,"column_end":36},"alias_span":null,"name":"NamedService","value":"","parent":{"krate":0,"index":1192}},{"kind":"Use","ref_id":{"krate":0,"index":2813},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":186309,"byte_end":186315,"line_start":100,"line_end":100,"column_start":38,"column_end":44},"alias_span":null,"name":"Server","value":"","parent":{"krate":0,"index":1192}},{"kind":"Use","ref_id":{"krate":0,"index":3154},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":186338,"byte_end":186349,"line_start":101,"line_end":101,"column_start":21,"column_end":32},"alias_span":null,"name":"Certificate","value":"","parent":{"krate":0,"index":1192}},{"kind":"Use","ref_id":{"krate":0,"index":3160},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":186351,"byte_end":186359,"line_start":101,"line_end":101,"column_start":34,"column_end":42},"alias_span":null,"name":"Identity","value":"","parent":{"krate":0,"index":1192}},{"kind":"Use","ref_id":{"krate":61,"index":319},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":186378,"byte_end":186382,"line_start":102,"line_end":102,"column_start":17,"column_end":21},"alias_span":null,"name":"Body","value":"","parent":{"krate":0,"index":1192}},{"kind":"Use","ref_id":{"krate":16,"index":2638},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":186384,"byte_end":186387,"line_start":102,"line_end":102,"column_start":23,"column_end":26},"alias_span":null,"name":"Uri","value":"","parent":{"krate":0,"index":1192}},{"kind":"Use","ref_id":{"krate":0,"index":2790},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":186485,"byte_end":186500,"line_start":106,"line_end":106,"column_start":24,"column_end":39},"alias_span":null,"name":"ClientTlsConfig","value":"","parent":{"krate":0,"index":1192}},{"kind":"Use","ref_id":{"krate":0,"index":2807},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":186595,"byte_end":186610,"line_start":109,"line_end":109,"column_start":23,"column_end":38},"alias_span":null,"name":"ServerTlsConfig","value":"","parent":{"krate":0,"index":1192}},{"kind":"Use","ref_id":{"krate":100,"index":227},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":3842,"byte_end":3853,"line_start":98,"line_end":98,"column_start":22,"column_end":33},"alias_span":null,"name":"async_trait","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":229},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":3886,"byte_end":3895,"line_start":101,"line_end":101,"column_start":16,"column_end":25},"alias_span":null,"name":"Streaming","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3167},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":3918,"byte_end":3929,"line_start":102,"line_end":102,"column_start":22,"column_end":33},"alias_span":null,"name":"Interceptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2108},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":3949,"byte_end":3960,"line_start":103,"line_end":103,"column_start":19,"column_end":30},"alias_span":null,"name":"IntoRequest","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2111},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":3962,"byte_end":3982,"line_start":103,"line_end":103,"column_start":32,"column_end":52},"alias_span":null,"name":"IntoStreamingRequest","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3171},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":3984,"byte_end":3991,"line_start":103,"line_end":103,"column_start":54,"column_end":61},"alias_span":null,"name":"Request","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3184},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":4012,"byte_end":4020,"line_start":104,"line_end":104,"column_start":19,"column_end":27},"alias_span":null,"name":"Response","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3198},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":4039,"byte_end":4043,"line_start":105,"line_end":105,"column_start":18,"column_end":22},"alias_span":null,"name":"Code","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3191},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":4045,"byte_end":4051,"line_start":105,"line_end":105,"column_start":24,"column_end":30},"alias_span":null,"name":"Status","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":100,"index":227},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codegen.rs","byte_start":312101,"byte_end":312112,"line_start":3,"line_end":3,"column_start":22,"column_end":33},"alias_span":null,"name":"async_trait","value":"","parent":{"krate":0,"index":2291}},{"kind":"Use","ref_id":{"krate":20,"index":68},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codegen.rs","byte_start":312136,"byte_end":312142,"line_start":4,"line_end":4,"column_start":23,"column_end":29},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":2291}},{"kind":"Use","ref_id":{"krate":21,"index":796},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codegen.rs","byte_start":312175,"byte_end":312177,"line_start":5,"line_end":5,"column_start":32,"column_end":34},"alias_span":null,"name":"ok","value":"","parent":{"krate":0,"index":2291}},{"kind":"Use","ref_id":{"krate":21,"index":760},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codegen.rs","byte_start":312179,"byte_end":312186,"line_start":5,"line_end":5,"column_start":36,"column_end":43},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":2291}},{"kind":"Use","ref_id":{"krate":21,"index":6679},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codegen.rs","byte_start":312188,"byte_end":312193,"line_start":5,"line_end":5,"column_start":45,"column_end":50},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":2291}},{"kind":"Use","ref_id":{"krate":15,"index":40},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codegen.rs","byte_start":312216,"byte_end":312220,"line_start":7,"line_end":7,"column_start":20,"column_end":24},"alias_span":null,"name":"HttpBody","value":"","parent":{"krate":0,"index":2291}},{"kind":"Use","ref_id":{"krate":2,"index":8336},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codegen.rs","byte_start":312255,"byte_end":312261,"line_start":8,"line_end":8,"column_start":22,"column_end":28},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":2291}},{"kind":"Use","ref_id":{"krate":2,"index":30107},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codegen.rs","byte_start":312281,"byte_end":312284,"line_start":9,"line_end":9,"column_start":19,"column_end":22},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":2291}},{"kind":"Use","ref_id":{"krate":5,"index":3905},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codegen.rs","byte_start":312305,"byte_end":312308,"line_start":10,"line_end":10,"column_start":20,"column_end":23},"alias_span":null,"name":"Arc","value":"","parent":{"krate":0,"index":2291}},{"kind":"Use","ref_id":{"krate":2,"index":8502},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codegen.rs","byte_start":312330,"byte_end":312337,"line_start":11,"line_end":11,"column_start":21,"column_end":28},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":2291}},{"kind":"Use","ref_id":{"krate":2,"index":32540},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codegen.rs","byte_start":312339,"byte_end":312343,"line_start":11,"line_end":11,"column_start":30,"column_end":34},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":2291}},{"kind":"Use","ref_id":{"krate":33,"index":7},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codegen.rs","byte_start":312369,"byte_end":312376,"line_start":12,"line_end":12,"column_start":24,"column_end":31},"alias_span":null,"name":"Service","value":"","parent":{"krate":0,"index":2291}},{"kind":"Use","ref_id":{"krate":0,"index":17},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codegen.rs","byte_start":312471,"byte_end":312475,"line_start":14,"line_end":14,"column_start":22,"column_end":26},"alias_span":null,"name":"Body","value":"","parent":{"krate":0,"index":2291}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codegen.rs","byte_start":312733,"byte_end":312734,"line_start":21,"line_end":21,"column_start":19,"column_end":20},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":2313}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":0,"byte_end":4232,"line_start":1,"line_end":112,"column_start":1,"column_end":17},"name":"","qualname":"::","value":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":68},{"krate":0,"index":177},{"krate":0,"index":384},{"krate":0,"index":1050},{"krate":0,"index":1192},{"krate":0,"index":2082},{"krate":0,"index":2099},{"krate":0,"index":2101},{"krate":0,"index":2155},{"krate":0,"index":2172},{"krate":0,"index":2279},{"krate":0,"index":2280},{"krate":0,"index":2281},{"krate":0,"index":2282},{"krate":0,"index":2283},{"krate":0,"index":2284},{"krate":0,"index":2285},{"krate":0,"index":2286},{"krate":0,"index":2287},{"krate":0,"index":2288},{"krate":0,"index":2289},{"krate":0,"index":2290},{"krate":0,"index":2291}],"decl_id":null,"docs":" A Rust implementation of [gRPC], a high performance, open source, general\n RPC framework that puts mobile and HTTP/2 first.","sig":null,"attributes":[{"value":"! A Rust implementation of [gRPC], a high performance, open source, general","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"! RPC framework that puts mobile and HTTP/2 first.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":78,"byte_end":130,"line_start":2,"line_end":2,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":131,"byte_end":134,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"! [`tonic`] is a gRPC over HTTP/2 implementation focused on **high","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":135,"byte_end":203,"line_start":4,"line_end":4,"column_start":1,"column_end":69}},{"value":"! performance**, **interoperability**, and **flexibility**. This library was","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":204,"byte_end":282,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"! created to have first class support of async/await and to act as a core building","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":283,"byte_end":367,"line_start":6,"line_end":6,"column_start":1,"column_end":85}},{"value":"! block for production systems written in Rust.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":368,"byte_end":417,"line_start":7,"line_end":7,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":418,"byte_end":421,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":422,"byte_end":436,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":437,"byte_end":440,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! Examples can be found in the [`tonic-examples`] crate.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":441,"byte_end":499,"line_start":11,"line_end":11,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":500,"byte_end":503,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! # Getting Started","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":504,"byte_end":525,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":526,"byte_end":529,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"! Follow the instructions in the [`tonic-build`] crate documentation.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":530,"byte_end":601,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":602,"byte_end":605,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! # Feature Flags","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":606,"byte_end":625,"line_start":17,"line_end":17,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":626,"byte_end":629,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! - `transport`: Enables the fully featured, batteries included client and server","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":630,"byte_end":713,"line_start":19,"line_end":19,"column_start":1,"column_end":84}},{"value":"! implementation based on [`hyper`], [`tower`] and [`tokio`]. Enabled by default.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":714,"byte_end":797,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"! - `codegen`: Enables all the required exports and optional dependencies required","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":798,"byte_end":882,"line_start":21,"line_end":21,"column_start":1,"column_end":85}},{"value":"! for [`tonic-build`]. Enabled by default.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":883,"byte_end":927,"line_start":22,"line_end":22,"column_start":1,"column_end":45}},{"value":"! - `tls`: Enables the `rustls` based TLS options for the `transport` feature`. Not","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":928,"byte_end":1013,"line_start":23,"line_end":23,"column_start":1,"column_end":86}},{"value":"! enabled by default.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":1014,"byte_end":1037,"line_start":24,"line_end":24,"column_start":1,"column_end":24}},{"value":"! - `tls-roots`: Adds system trust roots to `rustls`-based gRPC clients using the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":1038,"byte_end":1121,"line_start":25,"line_end":25,"column_start":1,"column_end":84}},{"value":"! `rustls-native-certs` crate. Not enabled by default. `tls` must be enabled to use","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":1122,"byte_end":1207,"line_start":26,"line_end":26,"column_start":1,"column_end":86}},{"value":"! `tls-roots`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":1208,"byte_end":1224,"line_start":27,"line_end":27,"column_start":1,"column_end":17}},{"value":"! - `prost`: Enables the [`prost`] based gRPC [`Codec`] implementation.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":1225,"byte_end":1298,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":1299,"byte_end":1302,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! # Structure","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":1303,"byte_end":1318,"line_start":30,"line_end":30,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":1319,"byte_end":1322,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"! ## Generic implementation","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":1323,"byte_end":1352,"line_start":32,"line_end":32,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":1353,"byte_end":1356,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"! The main goal of [`tonic`] is to provide a generic gRPC implementation over HTTP/2","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":1357,"byte_end":1443,"line_start":34,"line_end":34,"column_start":1,"column_end":87}},{"value":"! framing. This means at the lowest level this library provides the ability to use","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":1444,"byte_end":1528,"line_start":35,"line_end":35,"column_start":1,"column_end":85}},{"value":"! a generic HTTP/2 implementation with different types of gRPC encodings formats. Generally,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":1529,"byte_end":1623,"line_start":36,"line_end":36,"column_start":1,"column_end":95}},{"value":"! some form of codegen should be used instead of interacting directly with the items in","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":1624,"byte_end":1713,"line_start":37,"line_end":37,"column_start":1,"column_end":90}},{"value":"! [`client`] and [`server`].","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":1714,"byte_end":1744,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":1745,"byte_end":1748,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"! ## Transport","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":1749,"byte_end":1765,"line_start":40,"line_end":40,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":1766,"byte_end":1769,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! The [`transport`] module contains a fully featured HTTP/2.0 [`Channel`] (gRPC terminology)","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":1770,"byte_end":1864,"line_start":42,"line_end":42,"column_start":1,"column_end":95}},{"value":"! and [`Server`]. These implementations are built on top of [`tokio`], [`hyper`] and [`tower`].","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":1865,"byte_end":1962,"line_start":43,"line_end":43,"column_start":1,"column_end":98}},{"value":"! It also provides many of the features that the core gRPC libraries provide such as load balancing,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":1963,"byte_end":2065,"line_start":44,"line_end":44,"column_start":1,"column_end":103}},{"value":"! tls, timeouts, and many more. This implementation can also be used as a reference implementation","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":2066,"byte_end":2166,"line_start":45,"line_end":45,"column_start":1,"column_end":101}},{"value":"! to build even more feature rich clients and servers. This module also provides the ability to","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":2167,"byte_end":2264,"line_start":46,"line_end":46,"column_start":1,"column_end":98}},{"value":"! enable TLS using [`rustls`], via the `tls` feature flag.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":2265,"byte_end":2325,"line_start":47,"line_end":47,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":2326,"byte_end":2329,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"! [gRPC]: https://grpc.io","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":2330,"byte_end":2357,"line_start":49,"line_end":49,"column_start":1,"column_end":28}},{"value":"! [`tonic`]: https://github.com/hyperium/tonic","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":2358,"byte_end":2406,"line_start":50,"line_end":50,"column_start":1,"column_end":49}},{"value":"! [`tokio`]: https://docs.rs/tokio","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":2407,"byte_end":2443,"line_start":51,"line_end":51,"column_start":1,"column_end":37}},{"value":"! [`prost`]: https://docs.rs/prost","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":2444,"byte_end":2480,"line_start":52,"line_end":52,"column_start":1,"column_end":37}},{"value":"! [`hyper`]: https://docs.rs/hyper","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":2481,"byte_end":2517,"line_start":53,"line_end":53,"column_start":1,"column_end":37}},{"value":"! [`tower`]: https://docs.rs/tower","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":2518,"byte_end":2554,"line_start":54,"line_end":54,"column_start":1,"column_end":37}},{"value":"! [`tonic-build`]: https://docs.rs/tonic-build","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":2555,"byte_end":2603,"line_start":55,"line_end":55,"column_start":1,"column_end":49}},{"value":"! [`tonic-examples`]: https://github.com/hyperium/tonic/tree/master/examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":2604,"byte_end":2682,"line_start":56,"line_end":56,"column_start":1,"column_end":79}},{"value":"! [`Codec`]: codec/trait.Codec.html","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":2683,"byte_end":2720,"line_start":57,"line_end":57,"column_start":1,"column_end":38}},{"value":"! [`Channel`]: transport/struct.Channel.html","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":2721,"byte_end":2767,"line_start":58,"line_end":58,"column_start":1,"column_end":47}},{"value":"! [`Server`]: transport/struct.Server.html","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":2768,"byte_end":2812,"line_start":59,"line_end":59,"column_start":1,"column_end":45}},{"value":"! [`rustls`]: https://docs.rs/rustls","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":2813,"byte_end":2851,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"! [`client`]: client/index.html","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":2852,"byte_end":2885,"line_start":61,"line_end":61,"column_start":1,"column_end":34}},{"value":"! [`transport`]: transport/index.html","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":2886,"byte_end":2925,"line_start":62,"line_end":62,"column_start":1,"column_end":40}},{"value":"recursion_limit = \"256\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":2927,"byte_end":2954,"line_start":64,"line_end":64,"column_start":1,"column_end":28}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":2955,"byte_end":3061,"line_start":65,"line_end":70,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"body","qualname":"::body","value":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":23},{"krate":0,"index":30},{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":40},{"krate":0,"index":46},{"krate":0,"index":52},{"krate":0,"index":60},{"krate":0,"index":2318},{"krate":0,"index":2322},{"krate":0,"index":2320},{"krate":0,"index":62}],"decl_id":null,"docs":" HTTP specific body utilities.","sig":null,"attributes":[{"value":"! HTTP specific body utilities.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","byte_start":4234,"byte_end":4267,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","byte_start":4268,"byte_end":4271,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains traits and helper types to work with http bodies. Most","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","byte_start":4272,"byte_end":4351,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"! of the types in this module are based around [`http_body::Body`].","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","byte_start":4352,"byte_end":4421,"line_start":4,"line_end":4,"column_start":1,"column_end":70}}]},{"kind":"Trait","id":{"krate":0,"index":17},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","byte_start":4627,"byte_end":4631,"line_start":16,"line_end":16,"column_start":11,"column_end":15},"name":"Body","qualname":"::body::Body","value":"Body: sealed::Sealed + Send + Sync","parent":null,"children":[{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22}],"decl_id":null,"docs":" A trait alias for [`http_body::Body`].\n","sig":null,"attributes":[{"value":"/ A trait alias for [`http_body::Body`].","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","byte_start":4574,"byte_end":4616,"line_start":15,"line_end":15,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":18},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","byte_start":4701,"byte_end":4705,"line_start":18,"line_end":18,"column_start":10,"column_end":14},"name":"Data","qualname":"::body::Body::Data","value":"type Data: Buf;","parent":{"krate":0,"index":17},"children":[],"decl_id":null,"docs":" The body data type.\n","sig":null,"attributes":[{"value":"/ The body data type.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","byte_start":4668,"byte_end":4691,"line_start":17,"line_end":17,"column_start":5,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":19},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","byte_start":4764,"byte_end":4769,"line_start":20,"line_end":20,"column_start":10,"column_end":15},"name":"Error","qualname":"::body::Body::Error","value":"type Error: Into<Error>;","parent":{"krate":0,"index":17},"children":[],"decl_id":null,"docs":" The errors produced from the body.\n","sig":null,"attributes":[{"value":"/ The errors produced from the body.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","byte_start":4716,"byte_end":4754,"line_start":19,"line_end":19,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","byte_start":4898,"byte_end":4911,"line_start":25,"line_end":25,"column_start":8,"column_end":21},"name":"is_end_stream","qualname":"::body::Body::is_end_stream","value":"pub fn is_end_stream(&Self) -> bool","parent":{"krate":0,"index":17},"children":[],"decl_id":null,"docs":" Check if the stream is over or not.","sig":null,"attributes":[{"value":"/ Check if the stream is over or not.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","byte_start":4789,"byte_end":4828,"line_start":22,"line_end":22,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","byte_start":4833,"byte_end":4836,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ Reference [`http_body::Body::is_end_stream`].","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","byte_start":4841,"byte_end":4890,"line_start":24,"line_end":24,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","byte_start":5036,"byte_end":5045,"line_start":30,"line_end":30,"column_start":8,"column_end":17},"name":"poll_data","qualname":"::body::Body::poll_data","value":"pub fn poll_data(Pin<&mut Self>, &mut Context)\n-> Poll<Option<Result<Self::Data, Self::Error>>>","parent":{"krate":0,"index":17},"children":[],"decl_id":null,"docs":" Poll for more data from the body.","sig":null,"attributes":[{"value":"/ Poll for more data from the body.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","byte_start":4933,"byte_end":4970,"line_start":27,"line_end":27,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","byte_start":4975,"byte_end":4978,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ Reference [`http_body::Body::poll_data`].","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","byte_start":4983,"byte_end":5028,"line_start":29,"line_end":29,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","byte_start":5272,"byte_end":5285,"line_start":38,"line_end":38,"column_start":8,"column_end":21},"name":"poll_trailers","qualname":"::body::Body::poll_trailers","value":"pub fn poll_trailers(Pin<&mut Self>, &mut Context)\n-> Poll<Result<Option<http::HeaderMap>, Self::Error>>","parent":{"krate":0,"index":17},"children":[],"decl_id":null,"docs":" Poll for the trailing headers.","sig":null,"attributes":[{"value":"/ Poll for the trailing headers.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","byte_start":5168,"byte_end":5202,"line_start":35,"line_end":35,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","byte_start":5207,"byte_end":5210,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ Reference [`http_body::Body::poll_trailers`].","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","byte_start":5215,"byte_end":5264,"line_start":37,"line_end":37,"column_start":5,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","byte_start":6128,"byte_end":6134,"line_start":79,"line_end":79,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::body::sealed::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","byte_start":6181,"byte_end":6188,"line_start":83,"line_end":83,"column_start":12,"column_end":19},"name":"BoxBody","qualname":"::body::BoxBody","value":"BoxBody {  }","parent":null,"children":[{"krate":0,"index":35}],"decl_id":null,"docs":" A type erased http body.\n","sig":null,"attributes":[{"value":"/ A type erased http body.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","byte_start":6141,"byte_end":6169,"line_start":82,"line_end":82,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","byte_start":6404,"byte_end":6407,"line_start":91,"line_end":91,"column_start":12,"column_end":15},"name":"new","qualname":"<BoxBody>::new","value":"pub fn new<B>(B) -> Self where B: Body<Data = Bytes, Error = Bytes> + Send +\nSync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Create a new `BoxBody` mapping item and error to the default types.\n","sig":null,"attributes":[{"value":"/ Create a new `BoxBody` mapping item and error to the default types.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","byte_start":6321,"byte_end":6392,"line_start":90,"line_end":90,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","byte_start":6674,"byte_end":6682,"line_start":101,"line_end":101,"column_start":12,"column_end":20},"name":"map_from","qualname":"<BoxBody>::map_from","value":"pub fn map_from<B>(B) -> Self where B: Body + Send + Sync + 'static,\nB::Error: Into<crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `BoxBody` mapping item and error to the default types.\n","sig":null,"attributes":[{"value":"/ Create a new `BoxBody` mapping item and error to the default types.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","byte_start":6591,"byte_end":6662,"line_start":100,"line_end":100,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","byte_start":6936,"byte_end":6941,"line_start":112,"line_end":112,"column_start":12,"column_end":17},"name":"empty","qualname":"<BoxBody>::empty","value":"pub fn empty() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `BoxBody` that is empty.\n","sig":null,"attributes":[{"value":"/ Create a new `BoxBody` that is empty.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","byte_start":6883,"byte_end":6924,"line_start":111,"line_end":111,"column_start":5,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":68},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"client","qualname":"::client","value":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\mod.rs","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":151},{"krate":0,"index":175},{"krate":0,"index":176}],"decl_id":null,"docs":" Generic client implementation.","sig":null,"attributes":[{"value":"! Generic client implementation.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\mod.rs","byte_start":9497,"byte_end":9531,"line_start":1,"line_end":1,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\mod.rs","byte_start":9532,"byte_end":9535,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains the low level components to build a gRPC client. It","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\mod.rs","byte_start":9536,"byte_end":9612,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"! provides a codec agnostic gRPC client dispatcher and a decorated tower","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\mod.rs","byte_start":9613,"byte_end":9687,"line_start":4,"line_end":4,"column_start":1,"column_end":75}},{"value":"! service trait.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\mod.rs","byte_start":9688,"byte_end":9706,"line_start":5,"line_end":5,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\mod.rs","byte_start":9707,"byte_end":9710,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! This client is generally used by some code generation tool to provide stubs","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\mod.rs","byte_start":9711,"byte_end":9790,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"! for the gRPC service. Thusly, they are a bit cumbersome to use by hand.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\mod.rs","byte_start":9791,"byte_end":9866,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\mod.rs","byte_start":9867,"byte_end":9870,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! ## Concurrent usage","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\mod.rs","byte_start":9871,"byte_end":9894,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\mod.rs","byte_start":9895,"byte_end":9898,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! Upon using the your generated client, you will discover all the functions","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\mod.rs","byte_start":9899,"byte_end":9976,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"! corresponding to your rpc methods take `&mut self`, making concurrent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\mod.rs","byte_start":9977,"byte_end":10050,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"! usage of the client difficult. The answer is simply to clone the client,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\mod.rs","byte_start":10051,"byte_end":10127,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"! which is cheap as all client instances will share the same channel for","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\mod.rs","byte_start":10128,"byte_end":10202,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"! communication. For more details, see","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\mod.rs","byte_start":10203,"byte_end":10243,"line_start":16,"line_end":16,"column_start":1,"column_end":41}},{"value":"! [transport::Channel](../transport/struct.Channel.html#multiplexing-requests).","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\mod.rs","byte_start":10244,"byte_end":10325,"line_start":17,"line_end":17,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":100},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","byte_start":11504,"byte_end":11508,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Grpc","qualname":"::client::grpc::Grpc","value":"Grpc {  }","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":103}],"decl_id":null,"docs":" A gRPC client dispatcher.","sig":null,"attributes":[{"value":"/ A gRPC client dispatcher.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","byte_start":10816,"byte_end":10845,"line_start":17,"line_end":17,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","byte_start":10846,"byte_end":10849,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This will wrap some inner [`GrpcService`] and will encode/decode","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","byte_start":10850,"byte_end":10918,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/ messages via the provided codec.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","byte_start":10919,"byte_end":10955,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","byte_start":10956,"byte_end":10959,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Each request method takes a [`Request`], a [`PathAndQuery`], and a","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","byte_start":10960,"byte_end":11030,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ [`Codec`]. The request contains the message to send via the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","byte_start":11031,"byte_end":11094,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/ [`Codec::encoder`]. The path determines the fully qualified path","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","byte_start":11095,"byte_end":11163,"line_start":24,"line_end":24,"column_start":1,"column_end":69}},{"value":"/ that will be append to the outgoing uri. The path must follow","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","byte_start":11164,"byte_end":11229,"line_start":25,"line_end":25,"column_start":1,"column_end":66}},{"value":"/ the conventions explained in the [gRPC protocol definition] under `Path →`. An","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","byte_start":11230,"byte_end":11314,"line_start":26,"line_end":26,"column_start":1,"column_end":83}},{"value":"/ example of this path could look like `/greeter.Greeter/SayHello`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","byte_start":11315,"byte_end":11384,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","byte_start":11385,"byte_end":11388,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ [gRPC protocol definition]: https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md#requests","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","byte_start":11389,"byte_end":11492,"line_start":29,"line_end":29,"column_start":1,"column_end":104}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","byte_start":11667,"byte_end":11670,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"new","qualname":"<Grpc<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new gRPC client with the provided [`GrpcService`].\n","sig":null,"attributes":[{"value":"/ Creates a new gRPC client with the provided [`GrpcService`].","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","byte_start":11591,"byte_end":11655,"line_start":36,"line_end":36,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","byte_start":11917,"byte_end":11933,"line_start":46,"line_end":46,"column_start":12,"column_end":28},"name":"with_interceptor","qualname":"<Grpc<T>>::with_interceptor","value":"pub fn with_interceptor<impl Into<Interceptor>: Into<Interceptor>>(T,\n                                                                   impl Into<Interceptor>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new gRPC client with the provided [`GrpcService`] and will apply\n the provided interceptor on each request.\n","sig":null,"attributes":[{"value":"/ Creates a new gRPC client with the provided [`GrpcService`] and will apply","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","byte_start":11777,"byte_end":11855,"line_start":44,"line_end":44,"column_start":5,"column_end":83}},{"value":"/ the provided interceptor on each request.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","byte_start":11860,"byte_end":11905,"line_start":45,"line_end":45,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","byte_start":12383,"byte_end":12388,"line_start":58,"line_end":58,"column_start":18,"column_end":23},"name":"ready","qualname":"<Grpc<T>>::ready","value":"pub async fn ready<'_>(&'_ mut Self) -> /*impl Trait*/ where\nT: GrpcService<BoxBody>","parent":null,"children":[],"decl_id":null,"docs":" Check if the inner [`GrpcService`] is able to accept a  new request.","sig":null,"attributes":[{"value":"/ Check if the inner [`GrpcService`] is able to accept a  new request.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","byte_start":12097,"byte_end":12169,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","byte_start":12174,"byte_end":12177,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ This will call [`GrpcService::poll_ready`] until it returns ready or","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","byte_start":12182,"byte_end":12254,"line_start":55,"line_end":55,"column_start":5,"column_end":77}},{"value":"/ an error. If this returns ready the inner [`GrpcService`] is ready to","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","byte_start":12259,"byte_end":12332,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ accept one more request.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","byte_start":12337,"byte_end":12365,"line_start":57,"line_end":57,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","byte_start":12601,"byte_end":12606,"line_start":66,"line_end":66,"column_start":18,"column_end":23},"name":"unary","qualname":"<Grpc<T>>::unary","value":"pub async fn unary<'_, M1, M2, C>(&'_ mut Self, Request<M1>, PathAndQuery, C)\n-> /*impl Trait*/ where T: GrpcService<BoxBody>, T::ResponseBody: Body +\nHttpBody + Send + 'static,\n<T::ResponseBody as HttpBody>::Error: Into<crate::Error>, C: Codec<Encode =\nM1, Decode = M1>, M1: Send + Sync + 'static, M2: Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Send a single unary gRPC request.\n","sig":null,"attributes":[{"value":"/ Send a single unary gRPC request.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","byte_start":12546,"byte_end":12583,"line_start":65,"line_end":65,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","byte_start":13244,"byte_end":13260,"line_start":85,"line_end":85,"column_start":18,"column_end":34},"name":"client_streaming","qualname":"<Grpc<T>>::client_streaming","value":"pub async fn client_streaming<'_, S, M1, M2,\n                              C>(&'_ mut Self, Request<S>, PathAndQuery, C)\n-> /*impl Trait*/ where T: GrpcService<BoxBody>, T::ResponseBody: Body +\nHttpBody + Send + 'static,\n<T::ResponseBody as HttpBody>::Error: Into<crate::Error>, S: Stream<Item =\nM1> + Send + Sync + 'static, C: Codec<Encode = M1, Decode = M1>, M1: Send +\nSync + 'static, M2: Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Send a client side streaming gRPC request.\n","sig":null,"attributes":[{"value":"/ Send a client side streaming gRPC request.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","byte_start":13180,"byte_end":13226,"line_start":84,"line_end":84,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","byte_start":14266,"byte_end":14282,"line_start":117,"line_end":117,"column_start":18,"column_end":34},"name":"server_streaming","qualname":"<Grpc<T>>::server_streaming","value":"pub async fn server_streaming<'_, M1, M2,\n                              C>(&'_ mut Self, Request<M1>, PathAndQuery, C)\n-> /*impl Trait*/ where T: GrpcService<BoxBody>, T::ResponseBody: Body +\nHttpBody + Send + 'static,\n<T::ResponseBody as HttpBody>::Error: Into<crate::Error>, C: Codec<Encode =\nM1, Decode = M1>, M1: Send + Sync + 'static, M2: Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Send a server side streaming gRPC request.\n","sig":null,"attributes":[{"value":"/ Send a server side streaming gRPC request.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","byte_start":14202,"byte_end":14248,"line_start":116,"line_end":116,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","byte_start":14927,"byte_end":14936,"line_start":136,"line_end":136,"column_start":18,"column_end":27},"name":"streaming","qualname":"<Grpc<T>>::streaming","value":"pub async fn streaming<'_, S, M1, M2,\n                       C>(&'_ mut Self, Request<S>, PathAndQuery, C)\n-> /*impl Trait*/ where T: GrpcService<BoxBody>, T::ResponseBody: Body +\nHttpBody + Send + 'static,\n<T::ResponseBody as HttpBody>::Error: Into<crate::Error>, S: Stream<Item =\nM1> + Send + Sync + 'static, C: Codec<Encode = M1, Decode = M1>, M1: Send +\nSync + 'static, M2: Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Send a bi-directional streaming gRPC request.\n","sig":null,"attributes":[{"value":"/ Send a bi-directional streaming gRPC request.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","byte_start":14860,"byte_end":14909,"line_start":135,"line_end":135,"column_start":5,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":159},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\service.rs","byte_start":18013,"byte_end":18024,"line_start":14,"line_end":14,"column_start":11,"column_end":22},"name":"GrpcService","qualname":"::client::service::GrpcService","value":"GrpcService<ReqBody>","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165}],"decl_id":null,"docs":" Definition of the gRPC trait alias for [`tower_service`].","sig":null,"attributes":[{"value":"/ Definition of the gRPC trait alias for [`tower_service`].","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\service.rs","byte_start":17735,"byte_end":17796,"line_start":7,"line_end":7,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\service.rs","byte_start":17797,"byte_end":17800,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This trait enforces that all tower services provided to [`Grpc`] implements","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\service.rs","byte_start":17801,"byte_end":17880,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ the correct traits.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\service.rs","byte_start":17881,"byte_end":17904,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\service.rs","byte_start":17905,"byte_end":17908,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Grpc`]: ../client/struct.Grpc.html","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\service.rs","byte_start":17909,"byte_end":17949,"line_start":12,"line_end":12,"column_start":1,"column_end":41}},{"value":"/ [`tower_service`]: https://docs.rs/tower-service","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\service.rs","byte_start":17950,"byte_end":18002,"line_start":13,"line_end":13,"column_start":1,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":161},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\service.rs","byte_start":18090,"byte_end":18102,"line_start":16,"line_end":16,"column_start":10,"column_end":22},"name":"ResponseBody","qualname":"::client::service::GrpcService::ResponseBody","value":"type ResponseBody: Body + HttpBody;","parent":{"krate":0,"index":159},"children":[],"decl_id":null,"docs":" Responses body given by the service.\n","sig":null,"attributes":[{"value":"/ Responses body given by the service.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\service.rs","byte_start":18040,"byte_end":18080,"line_start":15,"line_end":15,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\service.rs","byte_start":18170,"byte_end":18175,"line_start":18,"line_end":18,"column_start":10,"column_end":15},"name":"Error","qualname":"::client::service::GrpcService::Error","value":"type Error: Into<crate::Error>;","parent":{"krate":0,"index":159},"children":[],"decl_id":null,"docs":" Errors produced by the service.\n","sig":null,"attributes":[{"value":"/ Errors produced by the service.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\service.rs","byte_start":18125,"byte_end":18160,"line_start":17,"line_end":17,"column_start":5,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\service.rs","byte_start":18241,"byte_end":18247,"line_start":20,"line_end":20,"column_start":10,"column_end":16},"name":"Future","qualname":"::client::service::GrpcService::Future","value":"type Future: Future<Output = Result<http::Response<Self::ResponseBody>, Self::Error>>;","parent":{"krate":0,"index":159},"children":[],"decl_id":null,"docs":" The future response value.\n","sig":null,"attributes":[{"value":"/ The future response value.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\service.rs","byte_start":18201,"byte_end":18231,"line_start":19,"line_end":19,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\service.rs","byte_start":18452,"byte_end":18462,"line_start":25,"line_end":25,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"::client::service::GrpcService::poll_ready","value":"pub fn poll_ready(&mut Self, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":0,"index":159},"children":[],"decl_id":null,"docs":" Returns `Ready` when the service is able to process requests.","sig":null,"attributes":[{"value":"/ Returns `Ready` when the service is able to process requests.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\service.rs","byte_start":18328,"byte_end":18393,"line_start":22,"line_end":22,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\service.rs","byte_start":18398,"byte_end":18401,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ Reference [`Service::poll_ready`].","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\service.rs","byte_start":18406,"byte_end":18444,"line_start":24,"line_end":24,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\service.rs","byte_start":18651,"byte_end":18655,"line_start":30,"line_end":30,"column_start":8,"column_end":12},"name":"call","qualname":"::client::service::GrpcService::call","value":"pub fn call(&mut Self, http::Request<ReqBody>) -> Self::Future","parent":{"krate":0,"index":159},"children":[],"decl_id":null,"docs":" Process the request and return the response asynchronously.","sig":null,"attributes":[{"value":"/ Process the request and return the response asynchronously.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\service.rs","byte_start":18535,"byte_end":18598,"line_start":27,"line_end":27,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\service.rs","byte_start":18603,"byte_end":18606,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ Reference [`Service::call`].","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\service.rs","byte_start":18611,"byte_end":18643,"line_start":29,"line_end":29,"column_start":5,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\mod.rs","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":200},{"krate":0,"index":272},{"krate":0,"index":323},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":376},{"krate":0,"index":380}],"decl_id":null,"docs":" Generic encoding and decoding.","sig":null,"attributes":[{"value":"! Generic encoding and decoding.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\mod.rs","byte_start":19316,"byte_end":19350,"line_start":1,"line_end":1,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\mod.rs","byte_start":19351,"byte_end":19354,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains the generic `Codec`, `Encoder` and `Decoder` traits","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\mod.rs","byte_start":19355,"byte_end":19431,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"! and a protobuf codec based on prost.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\mod.rs","byte_start":19432,"byte_end":19472,"line_start":4,"line_end":4,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":2324},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\buffer.rs","byte_start":21500,"byte_end":21509,"line_start":6,"line_end":6,"column_start":12,"column_end":21},"name":"DecodeBuf","qualname":"::codec::buffer::DecodeBuf","value":"DecodeBuf {  }","parent":null,"children":[{"krate":0,"index":2326},{"krate":0,"index":2327}],"decl_id":null,"docs":" A specialized buffer to decode gRPC messages from.\n","sig":null,"attributes":[{"value":"/ A specialized buffer to decode gRPC messages from.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\buffer.rs","byte_start":21417,"byte_end":21471,"line_start":4,"line_end":4,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":2331},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\buffer.rs","byte_start":21645,"byte_end":21654,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"EncodeBuf","qualname":"::codec::buffer::EncodeBuf","value":"EncodeBuf {  }","parent":null,"children":[{"krate":0,"index":2333}],"decl_id":null,"docs":" A specialized buffer to encode gRPC messages into.\n","sig":null,"attributes":[{"value":"/ A specialized buffer to encode gRPC messages into.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\buffer.rs","byte_start":21562,"byte_end":21616,"line_start":11,"line_end":11,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\buffer.rs","byte_start":22697,"byte_end":22704,"line_start":61,"line_end":61,"column_start":12,"column_end":19},"name":"reserve","qualname":"<EncodeBuf>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more bytes to be inserted\n into the buffer.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more bytes to be inserted","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\buffer.rs","byte_start":22413,"byte_end":22486,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ into the buffer.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\buffer.rs","byte_start":22491,"byte_end":22511,"line_start":56,"line_end":56,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\buffer.rs","byte_start":22516,"byte_end":22519,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ More than `additional` bytes may be reserved in order to avoid frequent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\buffer.rs","byte_start":22524,"byte_end":22599,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ reallocations. A call to `reserve` may result in an allocation.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\buffer.rs","byte_start":22604,"byte_end":22671,"line_start":59,"line_end":59,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\buffer.rs","byte_start":22676,"byte_end":22685,"line_start":60,"line_end":60,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":229},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","byte_start":24710,"byte_end":24719,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"Streaming","qualname":"::codec::decode::Streaming","value":"Streaming {  }","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236}],"decl_id":null,"docs":" Streaming requests and responses.","sig":null,"attributes":[{"value":"/ Streaming requests and responses.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","byte_start":24523,"byte_end":24560,"line_start":17,"line_end":17,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","byte_start":24561,"byte_end":24564,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This will wrap some inner [`Body`] and [`Decoder`] and provide an interface","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","byte_start":24565,"byte_end":24644,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ to fetch the message stream and trailing metadata","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","byte_start":24645,"byte_end":24698,"line_start":20,"line_end":20,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","byte_start":25830,"byte_end":25841,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"new_request","qualname":"<Streaming<T>>::new_request","value":"pub fn new_request<B, D>(D, B) -> Self where B: Body + Send + Sync + 'static,\nB::Error: Into<crate::Error>, D: Decoder<Item = T, Error = T> + Send + Sync +\n'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","byte_start":27148,"byte_end":27155,"line_start":106,"line_end":106,"column_start":18,"column_end":25},"name":"message","qualname":"<Streaming<T>>::message","value":"pub async fn message<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Fetch the next message from this stream.\n ```rust\n # use tonic::{Streaming, Status, codec::Decoder};\n # use std::fmt::Debug;\n # async fn next_message_ex<T, D>(mut request: Streaming<T>) -> Result<(), Status>\n # where T: Debug,\n # D: Decoder<Item = T, Error = Status> + Send + Sync + 'static,\n # {\n if let Some(next_message) = request.message().await? {\n     println!(\"{:?}\", next_message);\n }\n # Ok(())\n # }\n ```\n","sig":null,"attributes":[{"value":"/ Fetch the next message from this stream.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","byte_start":26623,"byte_end":26667,"line_start":92,"line_end":92,"column_start":5,"column_end":49}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","byte_start":26672,"byte_end":26683,"line_start":93,"line_end":93,"column_start":5,"column_end":16}},{"value":"/ # use tonic::{Streaming, Status, codec::Decoder};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","byte_start":26688,"byte_end":26741,"line_start":94,"line_end":94,"column_start":5,"column_end":58}},{"value":"/ # use std::fmt::Debug;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","byte_start":26746,"byte_end":26772,"line_start":95,"line_end":95,"column_start":5,"column_end":31}},{"value":"/ # async fn next_message_ex<T, D>(mut request: Streaming<T>) -> Result<(), Status>","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","byte_start":26777,"byte_end":26862,"line_start":96,"line_end":96,"column_start":5,"column_end":90}},{"value":"/ # where T: Debug,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","byte_start":26867,"byte_end":26888,"line_start":97,"line_end":97,"column_start":5,"column_end":26}},{"value":"/ # D: Decoder<Item = T, Error = Status> + Send + Sync + 'static,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","byte_start":26893,"byte_end":26960,"line_start":98,"line_end":98,"column_start":5,"column_end":72}},{"value":"/ # {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","byte_start":26965,"byte_end":26972,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ if let Some(next_message) = request.message().await? {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","byte_start":26977,"byte_end":27035,"line_start":100,"line_end":100,"column_start":5,"column_end":63}},{"value":"/     println!(\"{:?}\", next_message);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","byte_start":27040,"byte_end":27079,"line_start":101,"line_end":101,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","byte_start":27084,"byte_end":27089,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","byte_start":27094,"byte_end":27106,"line_start":103,"line_end":103,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","byte_start":27111,"byte_end":27118,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","byte_start":27123,"byte_end":27130,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","byte_start":28001,"byte_end":28009,"line_start":129,"line_end":129,"column_start":18,"column_end":26},"name":"trailers","qualname":"<Streaming<T>>::trailers","value":"pub async fn trailers<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Fetch the trailing metadata.","sig":null,"attributes":[{"value":"/ Fetch the trailing metadata.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","byte_start":27404,"byte_end":27436,"line_start":114,"line_end":114,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","byte_start":27441,"byte_end":27444,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ This will drain the stream of all its messages to receive the trailing","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","byte_start":27449,"byte_end":27523,"line_start":116,"line_end":116,"column_start":5,"column_end":79}},{"value":"/ metadata. If [`Streaming::message`] returns `None` then this function","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","byte_start":27528,"byte_end":27601,"line_start":117,"line_end":117,"column_start":5,"column_end":78}},{"value":"/ will not need to poll for trailers since the body was totally consumed.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","byte_start":27606,"byte_end":27681,"line_start":118,"line_end":118,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","byte_start":27686,"byte_end":27689,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","byte_start":27694,"byte_end":27705,"line_start":120,"line_end":120,"column_start":5,"column_end":16}},{"value":"/ # use tonic::{Streaming, Status};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","byte_start":27710,"byte_end":27747,"line_start":121,"line_end":121,"column_start":5,"column_end":42}},{"value":"/ # async fn trailers_ex<T>(mut request: Streaming<T>) -> Result<(), Status> {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","byte_start":27752,"byte_end":27832,"line_start":122,"line_end":122,"column_start":5,"column_end":85}},{"value":"/ if let Some(metadata) = request.trailers().await? {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","byte_start":27837,"byte_end":27892,"line_start":123,"line_end":123,"column_start":5,"column_end":60}},{"value":"/     println!(\"{:?}\", metadata);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","byte_start":27897,"byte_end":27932,"line_start":124,"line_end":124,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","byte_start":27937,"byte_end":27942,"line_start":125,"line_end":125,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","byte_start":27947,"byte_end":27959,"line_start":126,"line_end":126,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","byte_start":27964,"byte_end":27971,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","byte_start":27976,"byte_end":27983,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2475},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\prost.rs","byte_start":38572,"byte_end":38582,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"ProstCodec","qualname":"::codec::prost::ProstCodec","value":"ProstCodec {  }","parent":null,"children":[{"krate":0,"index":2478}],"decl_id":null,"docs":" A [`Codec`] that implements `application/grpc+proto` via the prost library..\n","sig":null,"attributes":[{"value":"/ A [`Codec`] that implements `application/grpc+proto` via the prost library..","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\prost.rs","byte_start":38456,"byte_end":38536,"line_start":7,"line_end":7,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":2487},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\prost.rs","byte_start":39240,"byte_end":39252,"line_start":41,"line_end":41,"column_start":12,"column_end":24},"name":"ProstEncoder","qualname":"::codec::prost::ProstEncoder","value":"","parent":null,"children":[],"decl_id":null,"docs":" A [`Encoder`] that knows how to encode `T`.\n","sig":null,"attributes":[{"value":"/ A [`Encoder`] that knows how to encode `T`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\prost.rs","byte_start":39148,"byte_end":39195,"line_start":39,"line_end":39,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":2500},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\prost.rs","byte_start":39669,"byte_end":39681,"line_start":57,"line_end":57,"column_start":12,"column_end":24},"name":"ProstDecoder","qualname":"::codec::prost::ProstDecoder","value":"","parent":null,"children":[],"decl_id":null,"docs":" A [`Decoder`] that knows how to decode `U`.\n","sig":null,"attributes":[{"value":"/ A [`Decoder`] that knows how to decode `U`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\prost.rs","byte_start":39577,"byte_end":39624,"line_start":55,"line_end":55,"column_start":1,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":369},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\mod.rs","byte_start":19895,"byte_end":19900,"line_start":23,"line_end":23,"column_start":11,"column_end":16},"name":"Codec","qualname":"::codec::Codec","value":"Codec: Default","parent":null,"children":[{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375}],"decl_id":null,"docs":" Trait that knows how to encode and decode gRPC messages.\n","sig":null,"attributes":[{"value":"/ Trait that knows how to encode and decode gRPC messages.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\mod.rs","byte_start":19824,"byte_end":19884,"line_start":22,"line_end":22,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":370},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\mod.rs","byte_start":19952,"byte_end":19958,"line_start":25,"line_end":25,"column_start":10,"column_end":16},"name":"Encode","qualname":"::codec::Codec::Encode","value":"type Encode: Send + 'static;","parent":{"krate":0,"index":369},"children":[],"decl_id":null,"docs":" The encodable message.\n","sig":null,"attributes":[{"value":"/ The encodable message.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\mod.rs","byte_start":19916,"byte_end":19942,"line_start":24,"line_end":24,"column_start":5,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":371},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\mod.rs","byte_start":20016,"byte_end":20022,"line_start":27,"line_end":27,"column_start":10,"column_end":16},"name":"Decode","qualname":"::codec::Codec::Decode","value":"type Decode: Send + 'static;","parent":{"krate":0,"index":369},"children":[],"decl_id":null,"docs":" The decodable message.\n","sig":null,"attributes":[{"value":"/ The decodable message.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\mod.rs","byte_start":19980,"byte_end":20006,"line_start":26,"line_end":26,"column_start":5,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":372},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\mod.rs","byte_start":20097,"byte_end":20104,"line_start":30,"line_end":30,"column_start":10,"column_end":17},"name":"Encoder","qualname":"::codec::Codec::Encoder","value":"type Encoder: Encoder<Item = Self::Encode, Error = Status> + Send + Sync + 'static;","parent":{"krate":0,"index":369},"children":[],"decl_id":null,"docs":" The encoder that can encode a message.\n","sig":null,"attributes":[{"value":"/ The encoder that can encode a message.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\mod.rs","byte_start":20045,"byte_end":20087,"line_start":29,"line_end":29,"column_start":5,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":373},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\mod.rs","byte_start":20232,"byte_end":20239,"line_start":32,"line_end":32,"column_start":10,"column_end":17},"name":"Decoder","qualname":"::codec::Codec::Decoder","value":"type Decoder: Decoder<Item = Self::Decode, Error = Status> + Send + Sync + 'static;","parent":{"krate":0,"index":369},"children":[],"decl_id":null,"docs":" The encoder that can decode a message.\n","sig":null,"attributes":[{"value":"/ The encoder that can decode a message.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\mod.rs","byte_start":20180,"byte_end":20222,"line_start":31,"line_end":31,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\mod.rs","byte_start":20346,"byte_end":20353,"line_start":35,"line_end":35,"column_start":8,"column_end":15},"name":"encoder","qualname":"::codec::Codec::encoder","value":"pub fn encoder(&mut Self) -> Self::Encoder","parent":{"krate":0,"index":369},"children":[],"decl_id":null,"docs":" Fetch the encoder.\n","sig":null,"attributes":[{"value":"/ Fetch the encoder.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\mod.rs","byte_start":20316,"byte_end":20338,"line_start":34,"line_end":34,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\mod.rs","byte_start":20417,"byte_end":20424,"line_start":37,"line_end":37,"column_start":8,"column_end":15},"name":"decoder","qualname":"::codec::Codec::decoder","value":"pub fn decoder(&mut Self) -> Self::Decoder","parent":{"krate":0,"index":369},"children":[],"decl_id":null,"docs":" Fetch the decoder.\n","sig":null,"attributes":[{"value":"/ Fetch the decoder.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\mod.rs","byte_start":20387,"byte_end":20409,"line_start":36,"line_end":36,"column_start":5,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":376},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\mod.rs","byte_start":20498,"byte_end":20505,"line_start":41,"line_end":41,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::Encoder","value":"Encoder","parent":null,"children":[{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379}],"decl_id":null,"docs":" Encodes gRPC message types\n","sig":null,"attributes":[{"value":"/ Encodes gRPC message types","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\mod.rs","byte_start":20457,"byte_end":20487,"line_start":40,"line_end":40,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":377},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\mod.rs","byte_start":20551,"byte_end":20555,"line_start":43,"line_end":43,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::Encoder::Item","value":"type Item;","parent":{"krate":0,"index":376},"children":[],"decl_id":null,"docs":" The type that is encoded.\n","sig":null,"attributes":[{"value":"/ The type that is encoded.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\mod.rs","byte_start":20512,"byte_end":20541,"line_start":42,"line_end":42,"column_start":5,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":378},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\mod.rs","byte_start":20669,"byte_end":20674,"line_start":48,"line_end":48,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":376},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\mod.rs","byte_start":20562,"byte_end":20594,"line_start":45,"line_end":45,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\mod.rs","byte_start":20599,"byte_end":20602,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ The type of unrecoverable frame encoding errors.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\mod.rs","byte_start":20607,"byte_end":20659,"line_start":47,"line_end":47,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\mod.rs","byte_start":20753,"byte_end":20759,"line_start":51,"line_end":51,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::Encoder::encode","value":"pub fn encode(&mut Self, Self::Item, &mut EncodeBuf)\n-> Result<(), Self::Error>","parent":{"krate":0,"index":376},"children":[],"decl_id":null,"docs":" Encodes a message into the provided buffer.\n","sig":null,"attributes":[{"value":"/ Encodes a message into the provided buffer.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\mod.rs","byte_start":20698,"byte_end":20745,"line_start":50,"line_end":50,"column_start":5,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":380},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\mod.rs","byte_start":20886,"byte_end":20893,"line_start":55,"line_end":55,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383}],"decl_id":null,"docs":" Decodes gRPC message types\n","sig":null,"attributes":[{"value":"/ Decodes gRPC message types","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\mod.rs","byte_start":20845,"byte_end":20875,"line_start":54,"line_end":54,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":381},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\mod.rs","byte_start":20939,"byte_end":20943,"line_start":57,"line_end":57,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":380},"children":[],"decl_id":null,"docs":" The type that is decoded.\n","sig":null,"attributes":[{"value":"/ The type that is decoded.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\mod.rs","byte_start":20900,"byte_end":20929,"line_start":56,"line_end":56,"column_start":5,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":382},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\mod.rs","byte_start":21012,"byte_end":21017,"line_start":60,"line_end":60,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":380},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.\n","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\mod.rs","byte_start":20950,"byte_end":21002,"line_start":59,"line_end":59,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\mod.rs","byte_start":21263,"byte_end":21269,"line_start":67,"line_end":67,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::Decoder::decode","value":"pub fn decode(&mut Self, &mut DecodeBuf)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":380},"children":[],"decl_id":null,"docs":" Decode a message from the buffer.","sig":null,"attributes":[{"value":"/ Decode a message from the buffer.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\mod.rs","byte_start":21041,"byte_end":21078,"line_start":62,"line_end":62,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\mod.rs","byte_start":21083,"byte_end":21086,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ The buffer will contain exactly the bytes of a full message. There","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\mod.rs","byte_start":21091,"byte_end":21161,"line_start":64,"line_end":64,"column_start":5,"column_end":75}},{"value":"/ is no need to get the length from the bytes, gRPC framing is handled","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\mod.rs","byte_start":21166,"byte_end":21238,"line_start":65,"line_end":65,"column_start":5,"column_end":77}},{"value":"/ for you.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\mod.rs","byte_start":21243,"byte_end":21255,"line_start":66,"line_end":66,"column_start":5,"column_end":17}}]},{"kind":"Mod","id":{"krate":0,"index":384},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"metadata","qualname":"::metadata","value":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\mod.rs","parent":null,"children":[{"krate":0,"index":385},{"krate":0,"index":444},{"krate":0,"index":519},{"krate":0,"index":878},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1026},{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1045}],"decl_id":null,"docs":" Contains data structures and utilities for handling gRPC custom metadata.\n","sig":null,"attributes":[{"value":"! Contains data structures and utilities for handling gRPC custom metadata.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\mod.rs","byte_start":44559,"byte_end":44636,"line_start":1,"line_end":1,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":2513},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\encoding.rs","byte_start":45969,"byte_end":45989,"line_start":10,"line_end":10,"column_start":12,"column_end":32},"name":"InvalidMetadataValue","qualname":"::metadata::encoding::InvalidMetadataValue","value":"InvalidMetadataValue {  }","parent":null,"children":[{"krate":0,"index":2514}],"decl_id":null,"docs":" A possible error when converting a `MetadataValue` from a string or byte\n slice.\n","sig":null,"attributes":[{"value":"/ A possible error when converting a `MetadataValue` from a string or byte","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\encoding.rs","byte_start":45853,"byte_end":45929,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ slice.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\encoding.rs","byte_start":45930,"byte_end":45940,"line_start":8,"line_end":8,"column_start":1,"column_end":11}}]},{"kind":"Trait","id":{"krate":0,"index":396},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\encoding.rs","byte_start":46163,"byte_end":46169,"line_start":20,"line_end":20,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::metadata::encoding::value_encoding::Sealed","value":"Sealed","parent":null,"children":[{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\encoding.rs","byte_start":46206,"byte_end":46214,"line_start":22,"line_end":22,"column_start":12,"column_end":20},"name":"is_empty","qualname":"::metadata::encoding::value_encoding::Sealed::is_empty","value":"pub fn is_empty(&[u8]) -> bool","parent":{"krate":0,"index":396},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\encoding.rs","byte_start":46273,"byte_end":46283,"line_start":25,"line_end":25,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"::metadata::encoding::value_encoding::Sealed::from_bytes","value":"pub fn from_bytes(&[u8]) -> Result<HeaderValue, InvalidMetadataValueBytes>","parent":{"krate":0,"index":396},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\encoding.rs","byte_start":46384,"byte_end":46395,"line_start":28,"line_end":28,"column_start":12,"column_end":23},"name":"from_shared","qualname":"::metadata::encoding::value_encoding::Sealed::from_shared","value":"pub fn from_shared(Bytes) -> Result<HeaderValue, InvalidMetadataValueBytes>","parent":{"krate":0,"index":396},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\encoding.rs","byte_start":46496,"byte_end":46507,"line_start":31,"line_end":31,"column_start":12,"column_end":23},"name":"from_static","qualname":"::metadata::encoding::value_encoding::Sealed::from_static","value":"pub fn from_static(&'static str) -> HeaderValue","parent":{"krate":0,"index":396},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\encoding.rs","byte_start":46580,"byte_end":46586,"line_start":34,"line_end":34,"column_start":12,"column_end":18},"name":"decode","qualname":"::metadata::encoding::value_encoding::Sealed::decode","value":"pub fn decode(&[u8]) -> Result<Bytes, InvalidMetadataValueBytes>","parent":{"krate":0,"index":396},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\encoding.rs","byte_start":46681,"byte_end":46687,"line_start":37,"line_end":37,"column_start":12,"column_end":18},"name":"equals","qualname":"::metadata::encoding::value_encoding::Sealed::equals","value":"pub fn equals(&HeaderValue, &[u8]) -> bool","parent":{"krate":0,"index":396},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\encoding.rs","byte_start":46759,"byte_end":46771,"line_start":40,"line_end":40,"column_start":12,"column_end":24},"name":"values_equal","qualname":"::metadata::encoding::value_encoding::Sealed::values_equal","value":"pub fn values_equal(&HeaderValue, &HeaderValue) -> bool","parent":{"krate":0,"index":396},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\encoding.rs","byte_start":46850,"byte_end":46853,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"fmt","qualname":"::metadata::encoding::value_encoding::Sealed::fmt","value":"pub fn fmt(&HeaderValue, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":0,"index":396},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":405},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\encoding.rs","byte_start":46938,"byte_end":46951,"line_start":47,"line_end":47,"column_start":11,"column_end":24},"name":"ValueEncoding","qualname":"::metadata::encoding::ValueEncoding","value":"ValueEncoding: Clone + Eq + PartialEq + Hash + self::value_encoding::Sealed","parent":null,"children":[{"krate":0,"index":406}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\encoding.rs","byte_start":47208,"byte_end":47220,"line_start":51,"line_end":51,"column_start":8,"column_end":20},"name":"is_valid_key","qualname":"::metadata::encoding::ValueEncoding::is_valid_key","value":"pub fn is_valid_key(&str) -> bool","parent":{"krate":0,"index":405},"children":[],"decl_id":null,"docs":" Returns true if the provided key is valid for this ValueEncoding type.\n For example, `Ascii::is_valid_key(\"a\") == true`,\n `Ascii::is_valid_key(\"a-bin\") == false`.\n","sig":null,"attributes":[{"value":"/ Returns true if the provided key is valid for this ValueEncoding type.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\encoding.rs","byte_start":47020,"byte_end":47094,"line_start":48,"line_end":48,"column_start":5,"column_end":79}},{"value":"/ For example, `Ascii::is_valid_key(\"a\") == true`,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\encoding.rs","byte_start":47099,"byte_end":47151,"line_start":49,"line_end":49,"column_start":5,"column_end":57}},{"value":"/ `Ascii::is_valid_key(\"a-bin\") == false`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\encoding.rs","byte_start":47156,"byte_end":47200,"line_start":50,"line_end":50,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":2517},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\encoding.rs","byte_start":47313,"byte_end":47318,"line_start":56,"line_end":56,"column_start":10,"column_end":15},"name":"Ascii","qualname":"::metadata::encoding::Ascii","value":"pub enum Ascii { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2531},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\encoding.rs","byte_start":47391,"byte_end":47397,"line_start":59,"line_end":59,"column_start":10,"column_end":16},"name":"Binary","qualname":"::metadata::encoding::Binary","value":"pub enum Binary { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2545},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\encoding.rs","byte_start":51287,"byte_end":51312,"line_start":192,"line_end":192,"column_start":12,"column_end":37},"name":"InvalidMetadataValueBytes","qualname":"::metadata::encoding::InvalidMetadataValueBytes","value":"","parent":null,"children":[],"decl_id":null,"docs":" A possible error when converting a `MetadataValue` from a string or byte\n slice.\n","sig":null,"attributes":[{"value":"/ A possible error when converting a `MetadataValue` from a string or byte","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\encoding.rs","byte_start":51171,"byte_end":51247,"line_start":189,"line_end":189,"column_start":1,"column_end":77}},{"value":"/ slice.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\encoding.rs","byte_start":51248,"byte_end":51258,"line_start":190,"line_end":190,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":2550},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":52193,"byte_end":52204,"line_start":19,"line_end":19,"column_start":12,"column_end":23},"name":"MetadataKey","qualname":"::metadata::key::MetadataKey","value":"MetadataKey {  }","parent":null,"children":[{"krate":0,"index":2552},{"krate":0,"index":2553}],"decl_id":null,"docs":" Represents a custom metadata field name.","sig":null,"attributes":[{"value":"/ Represents a custom metadata field name.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":51930,"byte_end":51974,"line_start":11,"line_end":11,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":51975,"byte_end":51978,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ `MetadataKey` is used as the [`MetadataMap`] key.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":51979,"byte_end":52032,"line_start":13,"line_end":13,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":52033,"byte_end":52036,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`HeaderMap`]: struct.HeaderMap.html","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":52037,"byte_end":52077,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/ [`MetadataMap`]: struct.MetadataMap.html","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":52078,"byte_end":52122,"line_start":16,"line_end":16,"column_start":1,"column_end":45}},{"value":"repr(transparent)","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":52161,"byte_end":52181,"line_start":18,"line_end":18,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":2572},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":52534,"byte_end":52552,"line_start":28,"line_end":28,"column_start":12,"column_end":30},"name":"InvalidMetadataKey","qualname":"::metadata::key::InvalidMetadataKey","value":"InvalidMetadataKey {  }","parent":null,"children":[{"krate":0,"index":2573}],"decl_id":null,"docs":" A possible error when converting a `MetadataKey` from another type.\n","sig":null,"attributes":[{"value":"/ A possible error when converting a `MetadataKey` from another type.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":52434,"byte_end":52505,"line_start":26,"line_end":26,"column_start":1,"column_end":72}}]},{"kind":"Type","id":{"krate":0,"index":456},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":52609,"byte_end":52625,"line_start":33,"line_end":33,"column_start":10,"column_end":26},"name":"AsciiMetadataKey","qualname":"::metadata::key::AsciiMetadataKey","value":"MetadataKey<Ascii>","parent":null,"children":[],"decl_id":null,"docs":" An ascii metadata key.\n","sig":null,"attributes":[{"value":"/ An ascii metadata key.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":52573,"byte_end":52599,"line_start":32,"line_end":32,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":457},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":52684,"byte_end":52701,"line_start":35,"line_end":35,"column_start":10,"column_end":27},"name":"BinaryMetadataKey","qualname":"::metadata::key::BinaryMetadataKey","value":"MetadataKey<Binary>","parent":null,"children":[],"decl_id":null,"docs":" A binary metadata key.\n","sig":null,"attributes":[{"value":"/ A binary metadata key.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":52648,"byte_end":52674,"line_start":34,"line_end":34,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":52885,"byte_end":52895,"line_start":41,"line_end":41,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<MetadataKey<VE>>::from_bytes","value":"pub fn from_bytes(&[u8]) -> Result<Self, InvalidMetadataKey>","parent":null,"children":[],"decl_id":null,"docs":" Converts a slice of bytes to a `MetadataKey`.","sig":null,"attributes":[{"value":"/ Converts a slice of bytes to a `MetadataKey`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":52772,"byte_end":52821,"line_start":38,"line_end":38,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":52826,"byte_end":52829,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ This function normalizes the input.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":52834,"byte_end":52873,"line_start":40,"line_end":40,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":55032,"byte_end":55043,"line_start":102,"line_end":102,"column_start":12,"column_end":23},"name":"from_static","qualname":"<MetadataKey<VE>>::from_static","value":"pub fn from_static(&'static str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Converts a static string to a `MetadataKey`.","sig":null,"attributes":[{"value":"/ Converts a static string to a `MetadataKey`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":53356,"byte_end":53404,"line_start":57,"line_end":57,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":53409,"byte_end":53412,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ This function panics when the static string is a invalid metadata key.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":53417,"byte_end":53491,"line_start":59,"line_end":59,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":53496,"byte_end":53499,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ This function requires the static string to only contain lowercase","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":53504,"byte_end":53574,"line_start":61,"line_end":61,"column_start":5,"column_end":75}},{"value":"/ characters, numerals and symbols, as per the HTTP/2.0 specification","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":53579,"byte_end":53650,"line_start":62,"line_end":62,"column_start":5,"column_end":76}},{"value":"/ and header names internal representation within this library.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":53655,"byte_end":53720,"line_start":63,"line_end":63,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":53725,"byte_end":53728,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":53733,"byte_end":53736,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":53741,"byte_end":53755,"line_start":66,"line_end":66,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":53760,"byte_end":53763,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":53768,"byte_end":53775,"line_start":68,"line_end":68,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":53780,"byte_end":53809,"line_start":69,"line_end":69,"column_start":5,"column_end":34}},{"value":"/ // Parsing a metadata key","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":53814,"byte_end":53843,"line_start":70,"line_end":70,"column_start":5,"column_end":34}},{"value":"/ let CUSTOM_KEY: &'static str = \"custom-key\";","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":53848,"byte_end":53896,"line_start":71,"line_end":71,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":53901,"byte_end":53904,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ let a = AsciiMetadataKey::from_bytes(b\"custom-key\").unwrap();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":53909,"byte_end":53974,"line_start":73,"line_end":73,"column_start":5,"column_end":70}},{"value":"/ let b = AsciiMetadataKey::from_static(CUSTOM_KEY);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":53979,"byte_end":54033,"line_start":74,"line_end":74,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(a, b);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":54038,"byte_end":54059,"line_start":75,"line_end":75,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":54064,"byte_end":54071,"line_start":76,"line_end":76,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":54076,"byte_end":54079,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":54084,"byte_end":54103,"line_start":78,"line_end":78,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":54108,"byte_end":54137,"line_start":79,"line_end":79,"column_start":5,"column_end":34}},{"value":"/ // Parsing a metadata key that contains invalid symbols(s):","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":54142,"byte_end":54205,"line_start":80,"line_end":80,"column_start":5,"column_end":68}},{"value":"/ AsciiMetadataKey::from_static(\"content{}{}length\"); // This line panics!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":54210,"byte_end":54286,"line_start":81,"line_end":81,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":54291,"byte_end":54298,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":54303,"byte_end":54306,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":54311,"byte_end":54330,"line_start":84,"line_end":84,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":54335,"byte_end":54364,"line_start":85,"line_end":85,"column_start":5,"column_end":34}},{"value":"/ // Parsing a metadata key that contains invalid uppercase characters.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":54369,"byte_end":54442,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ let a = AsciiMetadataKey::from_static(\"foobar\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":54447,"byte_end":54499,"line_start":87,"line_end":87,"column_start":5,"column_end":57}},{"value":"/ let b = AsciiMetadataKey::from_static(\"FOOBAR\"); // This line panics!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":54504,"byte_end":54577,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":54582,"byte_end":54589,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":54594,"byte_end":54597,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":54602,"byte_end":54621,"line_start":91,"line_end":91,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":54626,"byte_end":54655,"line_start":92,"line_end":92,"column_start":5,"column_end":34}},{"value":"/ // Parsing a -bin metadata key as an Ascii key.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":54660,"byte_end":54711,"line_start":93,"line_end":93,"column_start":5,"column_end":56}},{"value":"/ let b = AsciiMetadataKey::from_static(\"hello-bin\"); // This line panics!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":54716,"byte_end":54792,"line_start":94,"line_end":94,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":54797,"byte_end":54804,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":54809,"byte_end":54812,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":54817,"byte_end":54836,"line_start":97,"line_end":97,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":54841,"byte_end":54870,"line_start":98,"line_end":98,"column_start":5,"column_end":34}},{"value":"/ // Parsing a non-bin metadata key as an Binary key.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":54875,"byte_end":54930,"line_start":99,"line_end":99,"column_start":5,"column_end":60}},{"value":"/ let b = BinaryMetadataKey::from_static(\"hello\"); // This line panics!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":54935,"byte_end":55008,"line_start":100,"line_end":100,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":55013,"byte_end":55020,"line_start":101,"line_end":101,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":55468,"byte_end":55474,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"name":"as_str","qualname":"<MetadataKey<VE>>::as_str","value":"pub fn as_str(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns a `str` representation of the metadata key.","sig":null,"attributes":[{"value":"/ Returns a `str` representation of the metadata key.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":55324,"byte_end":55379,"line_start":114,"line_end":114,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":55384,"byte_end":55387,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ The returned string will always be lower case.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":55392,"byte_end":55442,"line_start":116,"line_end":116,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":55447,"byte_end":55456,"line_start":117,"line_end":117,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":57364,"byte_end":57367,"line_start":182,"line_end":182,"column_start":12,"column_end":15},"name":"new","qualname":"<InvalidMetadataKey>::new","value":"pub fn new() -> InvalidMetadataKey","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2576},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":61072,"byte_end":61083,"line_start":35,"line_end":35,"column_start":12,"column_end":23},"name":"MetadataMap","qualname":"::metadata::map::MetadataMap","value":"MetadataMap {  }","parent":null,"children":[{"krate":0,"index":2577}],"decl_id":null,"docs":" A set of gRPC custom metadata entries.","sig":null,"attributes":[{"value":"/ A set of gRPC custom metadata entries.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":60430,"byte_end":60472,"line_start":11,"line_end":11,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":60473,"byte_end":60476,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":60477,"byte_end":60491,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":60492,"byte_end":60495,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":60496,"byte_end":60511,"line_start":15,"line_end":15,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":60512,"byte_end":60515,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":60516,"byte_end":60523,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":60524,"byte_end":60553,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":60554,"byte_end":60591,"line_start":19,"line_end":19,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":60592,"byte_end":60595,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ map.insert(\"x-host\", \"example.com\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":60596,"byte_end":60653,"line_start":21,"line_end":21,"column_start":1,"column_end":58}},{"value":"/ map.insert(\"x-number\", \"123\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":60654,"byte_end":60705,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/ map.insert_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"[binary data]\"));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":60706,"byte_end":60789,"line_start":23,"line_end":23,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":60790,"byte_end":60793,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ assert!(map.contains_key(\"x-host\"));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":60794,"byte_end":60834,"line_start":25,"line_end":25,"column_start":1,"column_end":41}},{"value":"/ assert!(!map.contains_key(\"x-location\"));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":60835,"byte_end":60880,"line_start":26,"line_end":26,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":60881,"byte_end":60884,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(map.get(\"x-host\").unwrap(), \"example.com\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":60885,"byte_end":60943,"line_start":28,"line_end":28,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":60944,"byte_end":60947,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ map.remove(\"x-host\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":60948,"byte_end":60973,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":60974,"byte_end":60977,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ assert!(!map.contains_key(\"x-host\"));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":60978,"byte_end":61019,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":61020,"byte_end":61027,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2584},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":61318,"byte_end":61322,"line_start":44,"line_end":44,"column_start":12,"column_end":16},"name":"Iter","qualname":"::metadata::map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":2586}],"decl_id":null,"docs":" `MetadataMap` entry iterator.","sig":null,"attributes":[{"value":"/ `MetadataMap` entry iterator.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":61119,"byte_end":61152,"line_start":39,"line_end":39,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":61153,"byte_end":61156,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Yields `KeyAndValueRef` values. The same header name may be yielded","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":61157,"byte_end":61228,"line_start":41,"line_end":41,"column_start":1,"column_end":72}},{"value":"/ more than once if it has more than one associated value.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":61229,"byte_end":61289,"line_start":42,"line_end":42,"column_start":1,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2592},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":61616,"byte_end":61621,"line_start":53,"line_end":53,"column_start":5,"column_end":10},"name":"Ascii","qualname":"::metadata::map::KeyAndValueRef::Ascii","value":"KeyAndValueRef::Ascii(&'a MetadataKey<Ascii>, &'a MetadataValue<Ascii>)","parent":{"krate":0,"index":2590},"children":[],"decl_id":null,"docs":" An ascii metadata key and value.\n","sig":null,"attributes":[{"value":"/ An ascii metadata key and value.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":61575,"byte_end":61611,"line_start":52,"line_end":52,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2596},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":61718,"byte_end":61724,"line_start":55,"line_end":55,"column_start":5,"column_end":11},"name":"Binary","qualname":"::metadata::map::KeyAndValueRef::Binary","value":"KeyAndValueRef::Binary(&'a MetadataKey<Binary>, &'a MetadataValue<Binary>)","parent":{"krate":0,"index":2590},"children":[],"decl_id":null,"docs":" A binary metadata key and value.\n","sig":null,"attributes":[{"value":"/ A binary metadata key and value.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":61677,"byte_end":61713,"line_start":54,"line_end":54,"column_start":5,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":2590},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":61550,"byte_end":61564,"line_start":51,"line_end":51,"column_start":10,"column_end":24},"name":"KeyAndValueRef","qualname":"::metadata::map::KeyAndValueRef","value":"pub enum KeyAndValueRef<'a> {\n\n    /// An ascii metadata key and value.\n    Ascii(&'a MetadataKey<Ascii>, &'a MetadataValue<Ascii>),\n\n    /// A binary metadata key and value.\n    Binary(&'a MetadataKey<Binary>, &'a MetadataValue<Binary>),\n}","parent":null,"children":[{"krate":0,"index":2592},{"krate":0,"index":2596}],"decl_id":null,"docs":" Reference to a key and an associated value in a `MetadataMap`. It can point\n to either an ascii or a binary (\"*-bin\") key.\n","sig":null,"attributes":[{"value":"/ Reference to a key and an associated value in a `MetadataMap`. It can point","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":61394,"byte_end":61473,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/ to either an ascii or a binary (\"*-bin\") key.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":61474,"byte_end":61523,"line_start":49,"line_end":49,"column_start":1,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2605},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":62006,"byte_end":62011,"line_start":63,"line_end":63,"column_start":5,"column_end":10},"name":"Ascii","qualname":"::metadata::map::KeyAndMutValueRef::Ascii","value":"KeyAndMutValueRef::Ascii(&'a MetadataKey<Ascii>, &'a mut MetadataValue<Ascii>)","parent":{"krate":0,"index":2603},"children":[],"decl_id":null,"docs":" An ascii metadata key and value.\n","sig":null,"attributes":[{"value":"/ An ascii metadata key and value.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":61965,"byte_end":62001,"line_start":62,"line_end":62,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2609},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":62112,"byte_end":62118,"line_start":65,"line_end":65,"column_start":5,"column_end":11},"name":"Binary","qualname":"::metadata::map::KeyAndMutValueRef::Binary","value":"KeyAndMutValueRef::Binary(&'a MetadataKey<Binary>, &'a mut MetadataValue<Binary>)","parent":{"krate":0,"index":2603},"children":[],"decl_id":null,"docs":" A binary metadata key and value.\n","sig":null,"attributes":[{"value":"/ A binary metadata key and value.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":62071,"byte_end":62107,"line_start":64,"line_end":64,"column_start":5,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":2603},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":61937,"byte_end":61954,"line_start":61,"line_end":61,"column_start":10,"column_end":27},"name":"KeyAndMutValueRef","qualname":"::metadata::map::KeyAndMutValueRef","value":"pub enum KeyAndMutValueRef<'a> {\n\n    /// An ascii metadata key and value.\n    Ascii(&'a MetadataKey<Ascii>, &'a mut MetadataValue<Ascii>),\n\n    /// A binary metadata key and value.\n    Binary(&'a MetadataKey<Binary>, &'a mut MetadataValue<Binary>),\n}","parent":null,"children":[{"krate":0,"index":2605},{"krate":0,"index":2609}],"decl_id":null,"docs":" Reference to a key and an associated value in a `MetadataMap`. It can point\n to either an ascii or a binary (\"*-bin\") key.\n","sig":null,"attributes":[{"value":"/ Reference to a key and an associated value in a `MetadataMap`. It can point","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":61781,"byte_end":61860,"line_start":58,"line_end":58,"column_start":1,"column_end":80}},{"value":"/ to either an ascii or a binary (\"*-bin\") key.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":61861,"byte_end":61910,"line_start":59,"line_end":59,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":2616},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":62390,"byte_end":62397,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::metadata::map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":2618}],"decl_id":null,"docs":" `MetadataMap` entry iterator.","sig":null,"attributes":[{"value":"/ `MetadataMap` entry iterator.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":62179,"byte_end":62212,"line_start":68,"line_end":68,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":62213,"byte_end":62216,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ Yields `(&MetadataKey, &mut value)` tuples. The same header name may be yielded","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":62217,"byte_end":62300,"line_start":70,"line_end":70,"column_start":1,"column_end":84}},{"value":"/ more than once if it has more than one associated value.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":62301,"byte_end":62361,"line_start":71,"line_end":71,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":2622},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":62574,"byte_end":62584,"line_start":79,"line_end":79,"column_start":12,"column_end":22},"name":"ValueDrain","qualname":"::metadata::map::ValueDrain","value":"ValueDrain {  }","parent":null,"children":[{"krate":0,"index":2625},{"krate":0,"index":2626}],"decl_id":null,"docs":" A drain iterator of all values associated with a single metadata key.\n","sig":null,"attributes":[{"value":"/ A drain iterator of all values associated with a single metadata key.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":62472,"byte_end":62545,"line_start":77,"line_end":77,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":2631},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":62902,"byte_end":62906,"line_start":89,"line_end":89,"column_start":12,"column_end":16},"name":"Keys","qualname":"::metadata::map::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":2633}],"decl_id":null,"docs":" An iterator over `MetadataMap` keys.","sig":null,"attributes":[{"value":"/ An iterator over `MetadataMap` keys.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":62711,"byte_end":62751,"line_start":84,"line_end":84,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":62752,"byte_end":62755,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ Yields `KeyRef` values. Each header name is yielded only once, even if it","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":62756,"byte_end":62833,"line_start":86,"line_end":86,"column_start":1,"column_end":78}},{"value":"/ has more than one associated value.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":62834,"byte_end":62873,"line_start":87,"line_end":87,"column_start":1,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2639},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":63168,"byte_end":63173,"line_start":98,"line_end":98,"column_start":5,"column_end":10},"name":"Ascii","qualname":"::metadata::map::KeyRef::Ascii","value":"KeyRef::Ascii(&'a MetadataKey<Ascii>)","parent":{"krate":0,"index":2637},"children":[],"decl_id":null,"docs":" An ascii metadata key and value.\n","sig":null,"attributes":[{"value":"/ An ascii metadata key and value.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":63127,"byte_end":63163,"line_start":97,"line_end":97,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2642},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":63244,"byte_end":63250,"line_start":100,"line_end":100,"column_start":5,"column_end":11},"name":"Binary","qualname":"::metadata::map::KeyRef::Binary","value":"KeyRef::Binary(&'a MetadataKey<Binary>)","parent":{"krate":0,"index":2637},"children":[],"decl_id":null,"docs":" A binary metadata key and value.\n","sig":null,"attributes":[{"value":"/ A binary metadata key and value.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":63203,"byte_end":63239,"line_start":99,"line_end":99,"column_start":5,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":2637},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":63110,"byte_end":63116,"line_start":96,"line_end":96,"column_start":10,"column_end":16},"name":"KeyRef","qualname":"::metadata::map::KeyRef","value":"pub enum KeyRef<'a> {\n\n    /// An ascii metadata key and value.\n    Ascii(&'a MetadataKey<Ascii>),\n\n    /// A binary metadata key and value.\n    Binary(&'a MetadataKey<Binary>),\n}","parent":null,"children":[{"krate":0,"index":2639},{"krate":0,"index":2642}],"decl_id":null,"docs":" Reference to a key in a `MetadataMap`. It can point\n to either an ascii or a binary (\"*-bin\") key.\n","sig":null,"attributes":[{"value":"/ Reference to a key in a `MetadataMap`. It can point","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":62978,"byte_end":63033,"line_start":93,"line_end":93,"column_start":1,"column_end":56}},{"value":"/ to either an ascii or a binary (\"*-bin\") key.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":63034,"byte_end":63083,"line_start":94,"line_end":94,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":2648},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":63439,"byte_end":63445,"line_start":108,"line_end":108,"column_start":12,"column_end":18},"name":"Values","qualname":"::metadata::map::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":2650}],"decl_id":null,"docs":" `MetadataMap` value iterator.","sig":null,"attributes":[{"value":"/ `MetadataMap` value iterator.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":63280,"byte_end":63313,"line_start":103,"line_end":103,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":63314,"byte_end":63317,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ Yields `ValueRef` values. Each value contained in the `MetadataMap` will be","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":63318,"byte_end":63397,"line_start":105,"line_end":105,"column_start":1,"column_end":80}},{"value":"/ yielded.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":63398,"byte_end":63410,"line_start":106,"line_end":106,"column_start":1,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2656},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":63839,"byte_end":63844,"line_start":119,"line_end":119,"column_start":5,"column_end":10},"name":"Ascii","qualname":"::metadata::map::ValueRef::Ascii","value":"ValueRef::Ascii(&'a MetadataValue<Ascii>)","parent":{"krate":0,"index":2654},"children":[],"decl_id":null,"docs":" An ascii metadata key and value.\n","sig":null,"attributes":[{"value":"/ An ascii metadata key and value.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":63798,"byte_end":63834,"line_start":118,"line_end":118,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2659},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":63917,"byte_end":63923,"line_start":121,"line_end":121,"column_start":5,"column_end":11},"name":"Binary","qualname":"::metadata::map::ValueRef::Binary","value":"ValueRef::Binary(&'a MetadataValue<Binary>)","parent":{"krate":0,"index":2654},"children":[],"decl_id":null,"docs":" A binary metadata key and value.\n","sig":null,"attributes":[{"value":"/ A binary metadata key and value.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":63876,"byte_end":63912,"line_start":120,"line_end":120,"column_start":5,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":2654},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":63779,"byte_end":63787,"line_start":117,"line_end":117,"column_start":10,"column_end":18},"name":"ValueRef","qualname":"::metadata::map::ValueRef","value":"pub enum ValueRef<'a> {\n\n    /// An ascii metadata key and value.\n    Ascii(&'a MetadataValue<Ascii>),\n\n    /// A binary metadata key and value.\n    Binary(&'a MetadataValue<Binary>),\n}","parent":null,"children":[{"krate":0,"index":2656},{"krate":0,"index":2659}],"decl_id":null,"docs":" Reference to a value in a `MetadataMap`. It can point\n to either an ascii or a binary (\"*-bin\" key) value.\n","sig":null,"attributes":[{"value":"/ Reference to a value in a `MetadataMap`. It can point","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":63639,"byte_end":63696,"line_start":114,"line_end":114,"column_start":1,"column_end":58}},{"value":"/ to either an ascii or a binary (\"*-bin\" key) value.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":63697,"byte_end":63752,"line_start":115,"line_end":115,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":2665},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":64084,"byte_end":64093,"line_start":128,"line_end":128,"column_start":12,"column_end":21},"name":"ValuesMut","qualname":"::metadata::map::ValuesMut","value":"ValuesMut {  }","parent":null,"children":[{"krate":0,"index":2667}],"decl_id":null,"docs":" `MetadataMap` value iterator.","sig":null,"attributes":[{"value":"/ `MetadataMap` value iterator.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":63955,"byte_end":63988,"line_start":124,"line_end":124,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":63989,"byte_end":63992,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ Each value contained in the `MetadataMap` will be yielded.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":63993,"byte_end":64055,"line_start":126,"line_end":126,"column_start":1,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2673},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":64499,"byte_end":64504,"line_start":139,"line_end":139,"column_start":5,"column_end":10},"name":"Ascii","qualname":"::metadata::map::ValueRefMut::Ascii","value":"ValueRefMut::Ascii(&'a mut MetadataValue<Ascii>)","parent":{"krate":0,"index":2671},"children":[],"decl_id":null,"docs":" An ascii metadata key and value.\n","sig":null,"attributes":[{"value":"/ An ascii metadata key and value.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":64458,"byte_end":64494,"line_start":138,"line_end":138,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2676},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":64581,"byte_end":64587,"line_start":141,"line_end":141,"column_start":5,"column_end":11},"name":"Binary","qualname":"::metadata::map::ValueRefMut::Binary","value":"ValueRefMut::Binary(&'a mut MetadataValue<Binary>)","parent":{"krate":0,"index":2671},"children":[],"decl_id":null,"docs":" A binary metadata key and value.\n","sig":null,"attributes":[{"value":"/ A binary metadata key and value.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":64540,"byte_end":64576,"line_start":140,"line_end":140,"column_start":5,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":2671},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":64436,"byte_end":64447,"line_start":137,"line_end":137,"column_start":10,"column_end":21},"name":"ValueRefMut","qualname":"::metadata::map::ValueRefMut","value":"pub enum ValueRefMut<'a> {\n\n    /// An ascii metadata key and value.\n    Ascii(&'a mut MetadataValue<Ascii>),\n\n    /// A binary metadata key and value.\n    Binary(&'a mut MetadataValue<Binary>),\n}","parent":null,"children":[{"krate":0,"index":2673},{"krate":0,"index":2676}],"decl_id":null,"docs":" Reference to a value in a `MetadataMap`. It can point\n to either an ascii or a binary (\"*-bin\" key) value.\n","sig":null,"attributes":[{"value":"/ Reference to a value in a `MetadataMap`. It can point","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":64296,"byte_end":64353,"line_start":134,"line_end":134,"column_start":1,"column_end":58}},{"value":"/ to either an ascii or a binary (\"*-bin\" key) value.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":64354,"byte_end":64409,"line_start":135,"line_end":135,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":2682},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":64720,"byte_end":64729,"line_start":146,"line_end":146,"column_start":12,"column_end":21},"name":"ValueIter","qualname":"::metadata::map::ValueIter","value":"ValueIter {  }","parent":null,"children":[{"krate":0,"index":2685},{"krate":0,"index":2686}],"decl_id":null,"docs":" An iterator of all values associated with a single metadata key.\n","sig":null,"attributes":[{"value":"/ An iterator of all values associated with a single metadata key.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":64623,"byte_end":64691,"line_start":144,"line_end":144,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":2691},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":64960,"byte_end":64972,"line_start":153,"line_end":153,"column_start":12,"column_end":24},"name":"ValueIterMut","qualname":"::metadata::map::ValueIterMut","value":"ValueIterMut {  }","parent":null,"children":[{"krate":0,"index":2694},{"krate":0,"index":2695}],"decl_id":null,"docs":" An iterator of all values associated with a single metadata key.\n","sig":null,"attributes":[{"value":"/ An iterator of all values associated with a single metadata key.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":64863,"byte_end":64931,"line_start":151,"line_end":151,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":2700},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":65274,"byte_end":65280,"line_start":163,"line_end":163,"column_start":12,"column_end":18},"name":"GetAll","qualname":"::metadata::map::GetAll","value":"GetAll {  }","parent":null,"children":[{"krate":0,"index":2703},{"krate":0,"index":2704}],"decl_id":null,"docs":" A view to all values stored in a single entry.","sig":null,"attributes":[{"value":"/ A view to all values stored in a single entry.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":65101,"byte_end":65151,"line_start":158,"line_end":158,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":65152,"byte_end":65155,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ This struct is returned by `MetadataMap::get_all` and","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":65156,"byte_end":65213,"line_start":160,"line_end":160,"column_start":1,"column_end":58}},{"value":"/ `MetadataMap::get_all_bin`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":65214,"byte_end":65245,"line_start":161,"line_end":161,"column_start":1,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2712},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":65589,"byte_end":65597,"line_start":173,"line_end":173,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::metadata::map::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry)","parent":{"krate":0,"index":2709},"children":[],"decl_id":null,"docs":" An occupied entry\n","sig":null,"attributes":[{"value":"/ An occupied entry","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":65563,"byte_end":65584,"line_start":172,"line_end":172,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2715},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":65650,"byte_end":65656,"line_start":176,"line_end":176,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::metadata::map::Entry::Vacant","value":"Entry::Vacant(VacantEntry)","parent":{"krate":0,"index":2709},"children":[],"decl_id":null,"docs":" A vacant entry\n","sig":null,"attributes":[{"value":"/ A vacant entry","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":65627,"byte_end":65645,"line_start":175,"line_end":175,"column_start":5,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":2709},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":65528,"byte_end":65533,"line_start":171,"line_end":171,"column_start":10,"column_end":15},"name":"Entry","qualname":"::metadata::map::Entry","value":"pub enum Entry<'a, VE: ValueEncoding> {\n\n    /// An occupied entry\n    Occupied(OccupiedEntry),\n\n    /// A vacant entry\n    Vacant(VacantEntry),\n}","parent":null,"children":[{"krate":0,"index":2712},{"krate":0,"index":2715}],"decl_id":null,"docs":" A view into a single location in a `MetadataMap`, which may be vacant or\n occupied.\n","sig":null,"attributes":[{"value":"/ A view into a single location in a `MetadataMap`, which may be vacant or","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":65411,"byte_end":65487,"line_start":168,"line_end":168,"column_start":1,"column_end":77}},{"value":"/ occupied.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":65488,"byte_end":65501,"line_start":169,"line_end":169,"column_start":1,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2722},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":65831,"byte_end":65842,"line_start":183,"line_end":183,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::metadata::map::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":2725},{"krate":0,"index":2726}],"decl_id":null,"docs":" A view into a single empty location in a `MetadataMap`.","sig":null,"attributes":[{"value":"/ A view into a single empty location in a `MetadataMap`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":65682,"byte_end":65741,"line_start":179,"line_end":179,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":65742,"byte_end":65745,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ This struct is returned as part of the `Entry` enum.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":65746,"byte_end":65802,"line_start":181,"line_end":181,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":2731},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":66122,"byte_end":66135,"line_start":192,"line_end":192,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::metadata::map::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":2734},{"krate":0,"index":2735}],"decl_id":null,"docs":" A view into a single occupied location in a `MetadataMap`.","sig":null,"attributes":[{"value":"/ A view into a single occupied location in a `MetadataMap`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":65970,"byte_end":66032,"line_start":188,"line_end":188,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":66033,"byte_end":66036,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ This struct is returned as part of the `Entry` enum.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":66037,"byte_end":66093,"line_start":190,"line_end":190,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":535},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":66986,"byte_end":66989,"line_start":226,"line_end":226,"column_start":12,"column_end":15},"name":"new","qualname":"<MetadataMap>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an empty `MetadataMap`.","sig":null,"attributes":[{"value":"/ Create an empty `MetadataMap`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":66626,"byte_end":66660,"line_start":212,"line_end":212,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":66665,"byte_end":66668,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ The map will be created without any capacity. This function will not","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":66673,"byte_end":66745,"line_start":214,"line_end":214,"column_start":5,"column_end":77}},{"value":"/ allocate.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":66750,"byte_end":66763,"line_start":215,"line_end":215,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":66768,"byte_end":66771,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":66776,"byte_end":66790,"line_start":217,"line_end":217,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":66795,"byte_end":66798,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":66803,"byte_end":66810,"line_start":219,"line_end":219,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":66815,"byte_end":66844,"line_start":220,"line_end":220,"column_start":5,"column_end":34}},{"value":"/ let map = MetadataMap::new();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":66849,"byte_end":66882,"line_start":221,"line_end":221,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":66887,"byte_end":66890,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ assert!(map.is_empty());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":66895,"byte_end":66923,"line_start":223,"line_end":223,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(0, map.capacity());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":66928,"byte_end":66962,"line_start":224,"line_end":224,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":66967,"byte_end":66974,"line_start":225,"line_end":225,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":67109,"byte_end":67121,"line_start":231,"line_end":231,"column_start":12,"column_end":24},"name":"from_headers","qualname":"<MetadataMap>::from_headers","value":"pub fn from_headers(http::HeaderMap) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert an HTTP HeaderMap to a MetadataMap\n","sig":null,"attributes":[{"value":"/ Convert an HTTP HeaderMap to a MetadataMap","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":67051,"byte_end":67097,"line_start":230,"line_end":230,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":537},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":67584,"byte_end":67596,"line_start":248,"line_end":248,"column_start":12,"column_end":24},"name":"into_headers","qualname":"<MetadataMap>::into_headers","value":"pub fn into_headers(Self) -> http::HeaderMap","parent":null,"children":[],"decl_id":null,"docs":" Convert a MetadataMap into a HTTP HeaderMap","sig":null,"attributes":[{"value":"/ Convert a MetadataMap into a HTTP HeaderMap","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":67201,"byte_end":67248,"line_start":235,"line_end":235,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":67253,"byte_end":67256,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":67261,"byte_end":67275,"line_start":237,"line_end":237,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":67280,"byte_end":67283,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":67288,"byte_end":67295,"line_start":239,"line_end":239,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":67300,"byte_end":67329,"line_start":240,"line_end":240,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":67334,"byte_end":67371,"line_start":241,"line_end":241,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"x-host\", \"example.com\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":67376,"byte_end":67433,"line_start":242,"line_end":242,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":67438,"byte_end":67441,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ let http_map = map.into_headers();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":67446,"byte_end":67484,"line_start":244,"line_end":244,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":67489,"byte_end":67492,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(http_map.get(\"x-host\").unwrap(), \"example.com\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":67497,"byte_end":67560,"line_start":246,"line_end":246,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":67565,"byte_end":67572,"line_start":247,"line_end":247,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":68536,"byte_end":68549,"line_start":277,"line_end":277,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<MetadataMap>::with_capacity","value":"pub fn with_capacity(usize) -> MetadataMap","parent":null,"children":[],"decl_id":null,"docs":" Create an empty `MetadataMap` with the specified capacity.","sig":null,"attributes":[{"value":"/ Create an empty `MetadataMap` with the specified capacity.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":67851,"byte_end":67913,"line_start":259,"line_end":259,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":67918,"byte_end":67921,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ The returned map will allocate internal storage in order to hold about","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":67926,"byte_end":68000,"line_start":261,"line_end":261,"column_start":5,"column_end":79}},{"value":"/ `capacity` elements without reallocating. However, this is a \"best","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":68005,"byte_end":68075,"line_start":262,"line_end":262,"column_start":5,"column_end":75}},{"value":"/ effort\" as there are usage patterns that could cause additional","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":68080,"byte_end":68147,"line_start":263,"line_end":263,"column_start":5,"column_end":72}},{"value":"/ allocations before `capacity` metadata entries are stored in the map.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":68152,"byte_end":68225,"line_start":264,"line_end":264,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":68230,"byte_end":68233,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ More capacity than requested may be allocated.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":68238,"byte_end":68288,"line_start":266,"line_end":266,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":68293,"byte_end":68296,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":68301,"byte_end":68315,"line_start":268,"line_end":268,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":68320,"byte_end":68323,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":68328,"byte_end":68335,"line_start":270,"line_end":270,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":68340,"byte_end":68369,"line_start":271,"line_end":271,"column_start":5,"column_end":34}},{"value":"/ let map: MetadataMap = MetadataMap::with_capacity(10);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":68374,"byte_end":68432,"line_start":272,"line_end":272,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":68437,"byte_end":68440,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ assert!(map.is_empty());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":68445,"byte_end":68473,"line_start":274,"line_end":274,"column_start":5,"column_end":33}},{"value":"/ assert!(map.capacity() >= 10);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":68478,"byte_end":68512,"line_start":275,"line_end":275,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":68517,"byte_end":68524,"line_start":276,"line_end":276,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":69521,"byte_end":69524,"line_start":307,"line_end":307,"column_start":12,"column_end":15},"name":"len","qualname":"<MetadataMap>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of metadata entries (ascii and binary) stored in the\n map.","sig":null,"attributes":[{"value":"/ Returns the number of metadata entries (ascii and binary) stored in the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":68690,"byte_end":68765,"line_start":283,"line_end":283,"column_start":5,"column_end":80}},{"value":"/ map.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":68770,"byte_end":68778,"line_start":284,"line_end":284,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":68783,"byte_end":68786,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ This number represents the total number of **values** stored in the map.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":68791,"byte_end":68867,"line_start":286,"line_end":286,"column_start":5,"column_end":81}},{"value":"/ This number can be greater than or equal to the number of **keys**","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":68872,"byte_end":68942,"line_start":287,"line_end":287,"column_start":5,"column_end":75}},{"value":"/ stored given that a single key may have more than one associated value.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":68947,"byte_end":69022,"line_start":288,"line_end":288,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":69027,"byte_end":69030,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":69035,"byte_end":69049,"line_start":290,"line_end":290,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":69054,"byte_end":69057,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":69062,"byte_end":69069,"line_start":292,"line_end":292,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":69074,"byte_end":69103,"line_start":293,"line_end":293,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":69108,"byte_end":69145,"line_start":294,"line_end":294,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":69150,"byte_end":69153,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(0, map.len());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":69158,"byte_end":69187,"line_start":296,"line_end":296,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":69192,"byte_end":69195,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-host-ip\", \"127.0.0.1\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":69200,"byte_end":69258,"line_start":298,"line_end":298,"column_start":5,"column_end":63}},{"value":"/ map.insert_bin(\"x-host-name-bin\", MetadataValue::from_bytes(b\"localhost\"));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":69263,"byte_end":69342,"line_start":299,"line_end":299,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":69347,"byte_end":69350,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(2, map.len());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":69355,"byte_end":69384,"line_start":301,"line_end":301,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":69389,"byte_end":69392,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ map.append(\"x-host-ip\", \"text/html\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":69397,"byte_end":69455,"line_start":303,"line_end":303,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":69460,"byte_end":69463,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(3, map.len());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":69468,"byte_end":69497,"line_start":305,"line_end":305,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":69502,"byte_end":69509,"line_start":306,"line_end":306,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":541},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":70290,"byte_end":70298,"line_start":333,"line_end":333,"column_start":12,"column_end":20},"name":"keys_len","qualname":"<MetadataMap>::keys_len","value":"pub fn keys_len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of keys (ascii and binary) stored in the map.","sig":null,"attributes":[{"value":"/ Returns the number of keys (ascii and binary) stored in the map.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":69581,"byte_end":69649,"line_start":311,"line_end":311,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":69654,"byte_end":69657,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ This number will be less than or equal to `len()` as each key may have","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":69662,"byte_end":69736,"line_start":313,"line_end":313,"column_start":5,"column_end":79}},{"value":"/ more than one associated value.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":69741,"byte_end":69776,"line_start":314,"line_end":314,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":69781,"byte_end":69784,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":69789,"byte_end":69803,"line_start":316,"line_end":316,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":69808,"byte_end":69811,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":69816,"byte_end":69823,"line_start":318,"line_end":318,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":69828,"byte_end":69857,"line_start":319,"line_end":319,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":69862,"byte_end":69899,"line_start":320,"line_end":320,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":69904,"byte_end":69907,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(0, map.keys_len());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":69912,"byte_end":69946,"line_start":322,"line_end":322,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":69951,"byte_end":69954,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-host-ip\", \"127.0.0.1\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":69959,"byte_end":70017,"line_start":324,"line_end":324,"column_start":5,"column_end":63}},{"value":"/ map.insert_bin(\"x-host-name-bin\", MetadataValue::from_bytes(b\"localhost\"));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":70022,"byte_end":70101,"line_start":325,"line_end":325,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":70106,"byte_end":70109,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(2, map.keys_len());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":70114,"byte_end":70148,"line_start":327,"line_end":327,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":70153,"byte_end":70156,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ map.append(\"x-host-ip\", \"text/html\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":70161,"byte_end":70219,"line_start":329,"line_end":329,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":70224,"byte_end":70227,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(2, map.keys_len());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":70232,"byte_end":70266,"line_start":331,"line_end":331,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":70271,"byte_end":70278,"line_start":332,"line_end":332,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":70709,"byte_end":70717,"line_start":351,"line_end":351,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<MetadataMap>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains no elements.","sig":null,"attributes":[{"value":"/ Returns true if the map contains no elements.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":70360,"byte_end":70409,"line_start":337,"line_end":337,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":70414,"byte_end":70417,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":70422,"byte_end":70436,"line_start":339,"line_end":339,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":70441,"byte_end":70444,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":70449,"byte_end":70456,"line_start":341,"line_end":341,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":70461,"byte_end":70490,"line_start":342,"line_end":342,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":70495,"byte_end":70532,"line_start":343,"line_end":343,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":70537,"byte_end":70540,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ assert!(map.is_empty());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":70545,"byte_end":70573,"line_start":345,"line_end":345,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":70578,"byte_end":70581,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-host\", \"hello.world\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":70586,"byte_end":70643,"line_start":347,"line_end":347,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":70648,"byte_end":70651,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ assert!(!map.is_empty());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":70656,"byte_end":70685,"line_start":349,"line_end":349,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":70690,"byte_end":70697,"line_start":350,"line_end":350,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":543},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":71181,"byte_end":71186,"line_start":369,"line_end":369,"column_start":12,"column_end":17},"name":"clear","qualname":"<MetadataMap>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, removing all key-value pairs. Keeps the allocated memory\n for reuse.","sig":null,"attributes":[{"value":"/ Clears the map, removing all key-value pairs. Keeps the allocated memory","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":70778,"byte_end":70854,"line_start":355,"line_end":355,"column_start":5,"column_end":81}},{"value":"/ for reuse.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":70859,"byte_end":70873,"line_start":356,"line_end":356,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":70878,"byte_end":70881,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":70886,"byte_end":70900,"line_start":358,"line_end":358,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":70905,"byte_end":70908,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":70913,"byte_end":70920,"line_start":360,"line_end":360,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":70925,"byte_end":70954,"line_start":361,"line_end":361,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":70959,"byte_end":70996,"line_start":362,"line_end":362,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"x-host\", \"hello.world\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":71001,"byte_end":71058,"line_start":363,"line_end":363,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":71063,"byte_end":71066,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ map.clear();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":71071,"byte_end":71087,"line_start":365,"line_end":365,"column_start":5,"column_end":21}},{"value":"/ assert!(map.is_empty());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":71092,"byte_end":71120,"line_start":366,"line_end":366,"column_start":5,"column_end":33}},{"value":"/ assert!(map.capacity() > 0);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":71125,"byte_end":71157,"line_start":367,"line_end":367,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":71162,"byte_end":71169,"line_start":368,"line_end":368,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":71797,"byte_end":71805,"line_start":390,"line_end":390,"column_start":12,"column_end":20},"name":"capacity","qualname":"<MetadataMap>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of custom metadata entries the map can hold without\n reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of custom metadata entries the map can hold without","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":71241,"byte_end":71315,"line_start":373,"line_end":373,"column_start":5,"column_end":79}},{"value":"/ reallocating.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":71320,"byte_end":71337,"line_start":374,"line_end":374,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":71342,"byte_end":71345,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ This number is an approximation as certain usage patterns could cause","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":71350,"byte_end":71423,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ additional allocations before the returned capacity is filled.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":71428,"byte_end":71494,"line_start":377,"line_end":377,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":71499,"byte_end":71502,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":71507,"byte_end":71521,"line_start":379,"line_end":379,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":71526,"byte_end":71529,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":71534,"byte_end":71541,"line_start":381,"line_end":381,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":71546,"byte_end":71575,"line_start":382,"line_end":382,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":71580,"byte_end":71617,"line_start":383,"line_end":383,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":71622,"byte_end":71625,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(0, map.capacity());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":71630,"byte_end":71664,"line_start":385,"line_end":385,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":71669,"byte_end":71672,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-host\", \"hello.world\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":71677,"byte_end":71734,"line_start":387,"line_end":387,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(6, map.capacity());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":71739,"byte_end":71773,"line_start":388,"line_end":388,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":71778,"byte_end":71785,"line_start":389,"line_end":389,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":72643,"byte_end":72650,"line_start":415,"line_end":415,"column_start":12,"column_end":19},"name":"reserve","qualname":"<MetadataMap>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more custom metadata to be\n inserted into the `MetadataMap`.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more custom metadata to be","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":71867,"byte_end":71941,"line_start":394,"line_end":394,"column_start":5,"column_end":79}},{"value":"/ inserted into the `MetadataMap`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":71946,"byte_end":71982,"line_start":395,"line_end":395,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":71987,"byte_end":71990,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ The metadata map may reserve more space to avoid frequent reallocations.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":71995,"byte_end":72071,"line_start":397,"line_end":397,"column_start":5,"column_end":81}},{"value":"/ Like with `with_capacity`, this will be a \"best effort\" to avoid","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":72076,"byte_end":72144,"line_start":398,"line_end":398,"column_start":5,"column_end":73}},{"value":"/ allocations until `additional` more custom metadata is inserted. Certain","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":72149,"byte_end":72225,"line_start":399,"line_end":399,"column_start":5,"column_end":81}},{"value":"/ usage patterns could cause additional allocations before the number is","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":72230,"byte_end":72304,"line_start":400,"line_end":400,"column_start":5,"column_end":79}},{"value":"/ reached.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":72309,"byte_end":72321,"line_start":401,"line_end":401,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":72326,"byte_end":72329,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":72334,"byte_end":72346,"line_start":403,"line_end":403,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":72351,"byte_end":72354,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ Panics if the new allocation size overflows `usize`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":72359,"byte_end":72415,"line_start":405,"line_end":405,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":72420,"byte_end":72423,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":72428,"byte_end":72442,"line_start":407,"line_end":407,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":72447,"byte_end":72450,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":72455,"byte_end":72462,"line_start":409,"line_end":409,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":72467,"byte_end":72496,"line_start":410,"line_end":410,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":72501,"byte_end":72538,"line_start":411,"line_end":411,"column_start":5,"column_end":42}},{"value":"/ map.reserve(10);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":72543,"byte_end":72563,"line_start":412,"line_end":412,"column_start":5,"column_end":25}},{"value":"/ # map.insert(\"x-host\", \"bar\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":72568,"byte_end":72619,"line_start":413,"line_end":413,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":72624,"byte_end":72631,"line_start":414,"line_end":414,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":74292,"byte_end":74295,"line_start":454,"line_end":454,"column_start":12,"column_end":15},"name":"get","qualname":"<MetadataMap>::get","value":"pub fn get<K>(&Self, K) -> Option<&MetadataValue<Ascii>> where\nK: AsMetadataKey<Ascii>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value associated with the key. This method\n is for ascii metadata entries (those whose names don't end with\n \"-bin\"). For binary entries, use get_bin.","sig":null,"attributes":[{"value":"/ Returns a reference to the value associated with the key. This method","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":72736,"byte_end":72809,"line_start":419,"line_end":419,"column_start":5,"column_end":78}},{"value":"/ is for ascii metadata entries (those whose names don't end with","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":72814,"byte_end":72881,"line_start":420,"line_end":420,"column_start":5,"column_end":72}},{"value":"/ \"-bin\"). For binary entries, use get_bin.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":72886,"byte_end":72931,"line_start":421,"line_end":421,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":72936,"byte_end":72939,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ If there are multiple values associated with the key, then the first one","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":72944,"byte_end":73020,"line_start":423,"line_end":423,"column_start":5,"column_end":81}},{"value":"/ is returned. Use `get_all` to get all values associated with a given","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":73025,"byte_end":73097,"line_start":424,"line_end":424,"column_start":5,"column_end":77}},{"value":"/ key. Returns `None` if there are no values associated with the key.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":73102,"byte_end":73173,"line_start":425,"line_end":425,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":73178,"byte_end":73181,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":73186,"byte_end":73200,"line_start":427,"line_end":427,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":73205,"byte_end":73208,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":73213,"byte_end":73220,"line_start":429,"line_end":429,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":73225,"byte_end":73254,"line_start":430,"line_end":430,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":73259,"byte_end":73296,"line_start":431,"line_end":431,"column_start":5,"column_end":42}},{"value":"/ assert!(map.get(\"x-host\").is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":73301,"byte_end":73342,"line_start":432,"line_end":432,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":73347,"byte_end":73350,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-host\", \"hello\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":73355,"byte_end":73406,"line_start":434,"line_end":434,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(map.get(\"x-host\").unwrap(), &\"hello\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":73411,"byte_end":73464,"line_start":435,"line_end":435,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(map.get(\"x-host\").unwrap(), &\"hello\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":73469,"byte_end":73522,"line_start":436,"line_end":436,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":73527,"byte_end":73530,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ map.append(\"x-host\", \"world\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":73535,"byte_end":73586,"line_start":438,"line_end":438,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(map.get(\"x-host\").unwrap(), &\"hello\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":73591,"byte_end":73644,"line_start":439,"line_end":439,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":73649,"byte_end":73652,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read a key of the wrong type fails by not","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":73657,"byte_end":73719,"line_start":441,"line_end":441,"column_start":5,"column_end":67}},{"value":"/ // finding anything.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":73724,"byte_end":73748,"line_start":442,"line_end":442,"column_start":5,"column_end":29}},{"value":"/ map.append_bin(\"host-bin\", MetadataValue::from_bytes(b\"world\"));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":73753,"byte_end":73821,"line_start":443,"line_end":443,"column_start":5,"column_end":73}},{"value":"/ assert!(map.get(\"host-bin\").is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":73826,"byte_end":73869,"line_start":444,"line_end":444,"column_start":5,"column_end":48}},{"value":"/ assert!(map.get(\"host-bin\".to_string()).is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":73874,"byte_end":73929,"line_start":445,"line_end":445,"column_start":5,"column_end":60}},{"value":"/ assert!(map.get(&(\"host-bin\".to_string())).is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":73934,"byte_end":73992,"line_start":446,"line_end":446,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":73997,"byte_end":74000,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read an invalid key string fails by not","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":74005,"byte_end":74065,"line_start":448,"line_end":448,"column_start":5,"column_end":65}},{"value":"/ // finding anything.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":74070,"byte_end":74094,"line_start":449,"line_end":449,"column_start":5,"column_end":29}},{"value":"/ assert!(map.get(\"host{}bin\").is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":74099,"byte_end":74143,"line_start":450,"line_end":450,"column_start":5,"column_end":49}},{"value":"/ assert!(map.get(\"host{}bin\".to_string()).is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":74148,"byte_end":74204,"line_start":451,"line_end":451,"column_start":5,"column_end":61}},{"value":"/ assert!(map.get(&(\"host{}bin\".to_string())).is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":74209,"byte_end":74268,"line_start":452,"line_end":452,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":74273,"byte_end":74280,"line_start":453,"line_end":453,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":75710,"byte_end":75717,"line_start":490,"line_end":490,"column_start":12,"column_end":19},"name":"get_bin","qualname":"<MetadataMap>::get_bin","value":"pub fn get_bin<K>(&Self, K) -> Option<&MetadataValue<Binary>> where\nK: AsMetadataKey<Binary>","parent":null,"children":[],"decl_id":null,"docs":" Like get, but for Binary keys (for example \"trace-proto-bin\").","sig":null,"attributes":[{"value":"/ Like get, but for Binary keys (for example \"trace-proto-bin\").","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":74429,"byte_end":74495,"line_start":461,"line_end":461,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":74500,"byte_end":74503,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":74508,"byte_end":74522,"line_start":463,"line_end":463,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":74527,"byte_end":74530,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":74535,"byte_end":74542,"line_start":465,"line_end":465,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":74547,"byte_end":74576,"line_start":466,"line_end":466,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":74581,"byte_end":74618,"line_start":467,"line_end":467,"column_start":5,"column_end":42}},{"value":"/ assert!(map.get_bin(\"trace-proto-bin\").is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":74623,"byte_end":74677,"line_start":468,"line_end":468,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":74682,"byte_end":74685,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ map.insert_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"hello\"));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":74690,"byte_end":74765,"line_start":470,"line_end":470,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(map.get_bin(\"trace-proto-bin\").unwrap(), &\"hello\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":74770,"byte_end":74836,"line_start":471,"line_end":471,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(map.get_bin(\"trace-proto-bin\").unwrap(), &\"hello\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":74841,"byte_end":74907,"line_start":472,"line_end":472,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":74912,"byte_end":74915,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ map.append_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"world\"));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":74920,"byte_end":74995,"line_start":474,"line_end":474,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(map.get_bin(\"trace-proto-bin\").unwrap(), &\"hello\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":75000,"byte_end":75066,"line_start":475,"line_end":475,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":75071,"byte_end":75074,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read a key of the wrong type fails by not","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":75079,"byte_end":75141,"line_start":477,"line_end":477,"column_start":5,"column_end":67}},{"value":"/ // finding anything.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":75146,"byte_end":75170,"line_start":478,"line_end":478,"column_start":5,"column_end":29}},{"value":"/ map.append(\"host\", \"world\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":75175,"byte_end":75224,"line_start":479,"line_end":479,"column_start":5,"column_end":54}},{"value":"/ assert!(map.get_bin(\"host\").is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":75229,"byte_end":75272,"line_start":480,"line_end":480,"column_start":5,"column_end":48}},{"value":"/ assert!(map.get_bin(\"host\".to_string()).is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":75277,"byte_end":75332,"line_start":481,"line_end":481,"column_start":5,"column_end":60}},{"value":"/ assert!(map.get_bin(&(\"host\".to_string())).is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":75337,"byte_end":75395,"line_start":482,"line_end":482,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":75400,"byte_end":75403,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read an invalid key string fails by not","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":75408,"byte_end":75468,"line_start":484,"line_end":484,"column_start":5,"column_end":65}},{"value":"/ // finding anything.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":75473,"byte_end":75497,"line_start":485,"line_end":485,"column_start":5,"column_end":29}},{"value":"/ assert!(map.get_bin(\"host{}-bin\").is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":75502,"byte_end":75551,"line_start":486,"line_end":486,"column_start":5,"column_end":54}},{"value":"/ assert!(map.get_bin(\"host{}-bin\".to_string()).is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":75556,"byte_end":75617,"line_start":487,"line_end":487,"column_start":5,"column_end":66}},{"value":"/ assert!(map.get_bin(&(\"host{}-bin\".to_string())).is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":75622,"byte_end":75686,"line_start":488,"line_end":488,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":75691,"byte_end":75698,"line_start":489,"line_end":489,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":77274,"byte_end":77281,"line_start":528,"line_end":528,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<MetadataMap>::get_mut","value":"pub fn get_mut<K>(&mut Self, K) -> Option<&mut MetadataValue<Ascii>> where\nK: AsMetadataKey<Ascii>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the value associated with the key. This\n method is for ascii metadata entries (those whose names don't end with\n \"-bin\"). For binary entries, use get_mut_bin.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the value associated with the key. This","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":75853,"byte_end":75927,"line_start":497,"line_end":497,"column_start":5,"column_end":79}},{"value":"/ method is for ascii metadata entries (those whose names don't end with","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":75932,"byte_end":76006,"line_start":498,"line_end":498,"column_start":5,"column_end":79}},{"value":"/ \"-bin\"). For binary entries, use get_mut_bin.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":76011,"byte_end":76060,"line_start":499,"line_end":499,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":76065,"byte_end":76068,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ If there are multiple values associated with the key, then the first one","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":76073,"byte_end":76149,"line_start":501,"line_end":501,"column_start":5,"column_end":81}},{"value":"/ is returned. Use `entry` to get all values associated with a given","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":76154,"byte_end":76224,"line_start":502,"line_end":502,"column_start":5,"column_end":75}},{"value":"/ key. Returns `None` if there are no values associated with the key.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":76229,"byte_end":76300,"line_start":503,"line_end":503,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":76305,"byte_end":76308,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":76313,"byte_end":76327,"line_start":505,"line_end":505,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":76332,"byte_end":76335,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":76340,"byte_end":76347,"line_start":507,"line_end":507,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":76352,"byte_end":76381,"line_start":508,"line_end":508,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::default();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":76386,"byte_end":76427,"line_start":509,"line_end":509,"column_start":5,"column_end":46}},{"value":"/ map.insert(\"x-host\", \"hello\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":76432,"byte_end":76483,"line_start":510,"line_end":510,"column_start":5,"column_end":56}},{"value":"/ map.get_mut(\"x-host\").unwrap().set_sensitive(true);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":76488,"byte_end":76543,"line_start":511,"line_end":511,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":76548,"byte_end":76551,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ assert!(map.get(\"x-host\").unwrap().is_sensitive());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":76556,"byte_end":76611,"line_start":513,"line_end":513,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":76616,"byte_end":76619,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read a key of the wrong type fails by not","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":76624,"byte_end":76686,"line_start":515,"line_end":515,"column_start":5,"column_end":67}},{"value":"/ // finding anything.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":76691,"byte_end":76715,"line_start":516,"line_end":516,"column_start":5,"column_end":29}},{"value":"/ map.append_bin(\"host-bin\", MetadataValue::from_bytes(b\"world\"));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":76720,"byte_end":76788,"line_start":517,"line_end":517,"column_start":5,"column_end":73}},{"value":"/ assert!(map.get_mut(\"host-bin\").is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":76793,"byte_end":76840,"line_start":518,"line_end":518,"column_start":5,"column_end":52}},{"value":"/ assert!(map.get_mut(\"host-bin\".to_string()).is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":76845,"byte_end":76904,"line_start":519,"line_end":519,"column_start":5,"column_end":64}},{"value":"/ assert!(map.get_mut(&(\"host-bin\".to_string())).is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":76909,"byte_end":76971,"line_start":520,"line_end":520,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":76976,"byte_end":76979,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read an invalid key string fails by not","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":76984,"byte_end":77044,"line_start":522,"line_end":522,"column_start":5,"column_end":65}},{"value":"/ // finding anything.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":77049,"byte_end":77073,"line_start":523,"line_end":523,"column_start":5,"column_end":29}},{"value":"/ assert!(map.get_mut(\"host{}\").is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":77078,"byte_end":77123,"line_start":524,"line_end":524,"column_start":5,"column_end":50}},{"value":"/ assert!(map.get_mut(\"host{}\".to_string()).is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":77128,"byte_end":77185,"line_start":525,"line_end":525,"column_start":5,"column_end":62}},{"value":"/ assert!(map.get_mut(&(\"host{}\".to_string())).is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":77190,"byte_end":77250,"line_start":526,"line_end":526,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":77255,"byte_end":77262,"line_start":527,"line_end":527,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":78526,"byte_end":78537,"line_start":560,"line_end":560,"column_start":12,"column_end":23},"name":"get_bin_mut","qualname":"<MetadataMap>::get_bin_mut","value":"pub fn get_bin_mut<K>(&mut Self, K) -> Option<&mut MetadataValue<Binary>>\nwhere K: AsMetadataKey<Binary>","parent":null,"children":[],"decl_id":null,"docs":" Like get_mut, but for Binary keys (for example \"trace-proto-bin\").","sig":null,"attributes":[{"value":"/ Like get_mut, but for Binary keys (for example \"trace-proto-bin\").","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":77427,"byte_end":77497,"line_start":535,"line_end":535,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":77502,"byte_end":77505,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":77510,"byte_end":77524,"line_start":537,"line_end":537,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":77529,"byte_end":77532,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":77537,"byte_end":77544,"line_start":539,"line_end":539,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":77549,"byte_end":77578,"line_start":540,"line_end":540,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::default();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":77583,"byte_end":77624,"line_start":541,"line_end":541,"column_start":5,"column_end":46}},{"value":"/ map.insert_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"hello\"));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":77629,"byte_end":77704,"line_start":542,"line_end":542,"column_start":5,"column_end":80}},{"value":"/ map.get_bin_mut(\"trace-proto-bin\").unwrap().set_sensitive(true);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":77709,"byte_end":77777,"line_start":543,"line_end":543,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":77782,"byte_end":77785,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ assert!(map.get_bin(\"trace-proto-bin\").unwrap().is_sensitive());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":77790,"byte_end":77858,"line_start":545,"line_end":545,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":77863,"byte_end":77866,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read a key of the wrong type fails by not","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":77871,"byte_end":77933,"line_start":547,"line_end":547,"column_start":5,"column_end":67}},{"value":"/ // finding anything.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":77938,"byte_end":77962,"line_start":548,"line_end":548,"column_start":5,"column_end":29}},{"value":"/ map.append(\"host\", \"world\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":77967,"byte_end":78016,"line_start":549,"line_end":549,"column_start":5,"column_end":54}},{"value":"/ assert!(map.get_bin_mut(\"host\").is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":78021,"byte_end":78068,"line_start":550,"line_end":550,"column_start":5,"column_end":52}},{"value":"/ assert!(map.get_bin_mut(\"host\".to_string()).is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":78073,"byte_end":78132,"line_start":551,"line_end":551,"column_start":5,"column_end":64}},{"value":"/ assert!(map.get_bin_mut(&(\"host\".to_string())).is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":78137,"byte_end":78199,"line_start":552,"line_end":552,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":78204,"byte_end":78207,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read an invalid key string fails by not","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":78212,"byte_end":78272,"line_start":554,"line_end":554,"column_start":5,"column_end":65}},{"value":"/ // finding anything.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":78277,"byte_end":78301,"line_start":555,"line_end":555,"column_start":5,"column_end":29}},{"value":"/ assert!(map.get_bin_mut(\"host{}-bin\").is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":78306,"byte_end":78359,"line_start":556,"line_end":556,"column_start":5,"column_end":58}},{"value":"/ assert!(map.get_bin_mut(\"host{}-bin\".to_string()).is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":78364,"byte_end":78429,"line_start":557,"line_end":557,"column_start":5,"column_end":70}},{"value":"/ assert!(map.get_bin_mut(&(\"host{}-bin\".to_string())).is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":78434,"byte_end":78502,"line_start":558,"line_end":558,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":78507,"byte_end":78514,"line_start":559,"line_end":559,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":80432,"byte_end":80439,"line_start":608,"line_end":608,"column_start":12,"column_end":19},"name":"get_all","qualname":"<MetadataMap>::get_all","value":"pub fn get_all<K>(&Self, K) -> GetAll<, Ascii> where K: AsMetadataKey<Ascii>","parent":null,"children":[],"decl_id":null,"docs":" Returns a view of all values associated with a key. This method is for\n ascii metadata entries (those whose names don't end with \"-bin\"). For\n binary entries, use get_all_bin.","sig":null,"attributes":[{"value":"/ Returns a view of all values associated with a key. This method is for","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":78685,"byte_end":78759,"line_start":567,"line_end":567,"column_start":5,"column_end":79}},{"value":"/ ascii metadata entries (those whose names don't end with \"-bin\"). For","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":78764,"byte_end":78837,"line_start":568,"line_end":568,"column_start":5,"column_end":78}},{"value":"/ binary entries, use get_all_bin.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":78842,"byte_end":78878,"line_start":569,"line_end":569,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":78883,"byte_end":78886,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ The returned view does not incur any allocations and allows iterating","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":78891,"byte_end":78964,"line_start":571,"line_end":571,"column_start":5,"column_end":78}},{"value":"/ the values associated with the key.  See [`GetAll`] for more details.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":78969,"byte_end":79042,"line_start":572,"line_end":572,"column_start":5,"column_end":78}},{"value":"/ Returns `None` if there are no values associated with the key.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":79047,"byte_end":79113,"line_start":573,"line_end":573,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":79118,"byte_end":79121,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ [`GetAll`]: struct.GetAll.html","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":79126,"byte_end":79160,"line_start":575,"line_end":575,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":79165,"byte_end":79168,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":79173,"byte_end":79187,"line_start":577,"line_end":577,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":79192,"byte_end":79195,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":79200,"byte_end":79207,"line_start":579,"line_end":579,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":79212,"byte_end":79241,"line_start":580,"line_end":580,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":79246,"byte_end":79283,"line_start":581,"line_end":581,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":79288,"byte_end":79291,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-host\", \"hello\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":79296,"byte_end":79347,"line_start":583,"line_end":583,"column_start":5,"column_end":56}},{"value":"/ map.append(\"x-host\", \"goodbye\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":79352,"byte_end":79405,"line_start":584,"line_end":584,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":79410,"byte_end":79413,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":79418,"byte_end":79423,"line_start":586,"line_end":586,"column_start":5,"column_end":10}},{"value":"/     let view = map.get_all(\"x-host\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":79428,"byte_end":79469,"line_start":587,"line_end":587,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":79474,"byte_end":79477,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/     let mut iter = view.iter();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":79482,"byte_end":79517,"line_start":589,"line_end":589,"column_start":5,"column_end":40}},{"value":"/     assert_eq!(&\"hello\", iter.next().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":79522,"byte_end":79573,"line_start":590,"line_end":590,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(&\"goodbye\", iter.next().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":79578,"byte_end":79631,"line_start":591,"line_end":591,"column_start":5,"column_end":58}},{"value":"/     assert!(iter.next().is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":79636,"byte_end":79675,"line_start":592,"line_end":592,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":79680,"byte_end":79685,"line_start":593,"line_end":593,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":79690,"byte_end":79693,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read a key of the wrong type fails by not","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":79698,"byte_end":79760,"line_start":595,"line_end":595,"column_start":5,"column_end":67}},{"value":"/ // finding anything.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":79765,"byte_end":79789,"line_start":596,"line_end":596,"column_start":5,"column_end":29}},{"value":"/ map.append_bin(\"host-bin\", MetadataValue::from_bytes(b\"world\"));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":79794,"byte_end":79862,"line_start":597,"line_end":597,"column_start":5,"column_end":73}},{"value":"/ assert!(map.get_all(\"host-bin\").iter().next().is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":79867,"byte_end":79928,"line_start":598,"line_end":598,"column_start":5,"column_end":66}},{"value":"/ assert!(map.get_all(\"host-bin\".to_string()).iter().next().is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":79933,"byte_end":80006,"line_start":599,"line_end":599,"column_start":5,"column_end":78}},{"value":"/ assert!(map.get_all(&(\"host-bin\".to_string())).iter().next().is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":80011,"byte_end":80087,"line_start":600,"line_end":600,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":80092,"byte_end":80095,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read an invalid key string fails by not","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":80100,"byte_end":80160,"line_start":602,"line_end":602,"column_start":5,"column_end":65}},{"value":"/ // finding anything.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":80165,"byte_end":80189,"line_start":603,"line_end":603,"column_start":5,"column_end":29}},{"value":"/ assert!(map.get_all(\"host{}\").iter().next().is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":80194,"byte_end":80253,"line_start":604,"line_end":604,"column_start":5,"column_end":64}},{"value":"/ assert!(map.get_all(\"host{}\".to_string()).iter().next().is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":80258,"byte_end":80329,"line_start":605,"line_end":605,"column_start":5,"column_end":76}},{"value":"/ assert!(map.get_all(&(\"host{}\".to_string())).iter().next().is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":80334,"byte_end":80408,"line_start":606,"line_end":606,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":80413,"byte_end":80420,"line_start":607,"line_end":607,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":82046,"byte_end":82057,"line_start":651,"line_end":651,"column_start":12,"column_end":23},"name":"get_all_bin","qualname":"<MetadataMap>::get_all_bin","value":"pub fn get_all_bin<K>(&Self, K) -> GetAll<, Binary> where\nK: AsMetadataKey<Binary>","parent":null,"children":[],"decl_id":null,"docs":" Like get_all, but for Binary keys (for example \"trace-proto-bin\").","sig":null,"attributes":[{"value":"/ Like get_all, but for Binary keys (for example \"trace-proto-bin\").","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":80638,"byte_end":80708,"line_start":618,"line_end":618,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":80713,"byte_end":80716,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":80721,"byte_end":80735,"line_start":620,"line_end":620,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":80740,"byte_end":80743,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":80748,"byte_end":80755,"line_start":622,"line_end":622,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":80760,"byte_end":80789,"line_start":623,"line_end":623,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":80794,"byte_end":80831,"line_start":624,"line_end":624,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":80836,"byte_end":80839,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ map.insert_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"hello\"));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":80844,"byte_end":80919,"line_start":626,"line_end":626,"column_start":5,"column_end":80}},{"value":"/ map.append_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"goodbye\"));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":80924,"byte_end":81001,"line_start":627,"line_end":627,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":81006,"byte_end":81009,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":81014,"byte_end":81019,"line_start":629,"line_end":629,"column_start":5,"column_end":10}},{"value":"/     let view = map.get_all_bin(\"trace-proto-bin\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":81024,"byte_end":81078,"line_start":630,"line_end":630,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":81083,"byte_end":81086,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/     let mut iter = view.iter();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":81091,"byte_end":81126,"line_start":632,"line_end":632,"column_start":5,"column_end":40}},{"value":"/     assert_eq!(&\"hello\", iter.next().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":81131,"byte_end":81182,"line_start":633,"line_end":633,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(&\"goodbye\", iter.next().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":81187,"byte_end":81240,"line_start":634,"line_end":634,"column_start":5,"column_end":58}},{"value":"/     assert!(iter.next().is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":81245,"byte_end":81284,"line_start":635,"line_end":635,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":81289,"byte_end":81294,"line_start":636,"line_end":636,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":81299,"byte_end":81302,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read a key of the wrong type fails by not","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":81307,"byte_end":81369,"line_start":638,"line_end":638,"column_start":5,"column_end":67}},{"value":"/ // finding anything.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":81374,"byte_end":81398,"line_start":639,"line_end":639,"column_start":5,"column_end":29}},{"value":"/ map.append(\"host\", \"world\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":81403,"byte_end":81452,"line_start":640,"line_end":640,"column_start":5,"column_end":54}},{"value":"/ assert!(map.get_all_bin(\"host\").iter().next().is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":81457,"byte_end":81518,"line_start":641,"line_end":641,"column_start":5,"column_end":66}},{"value":"/ assert!(map.get_all_bin(\"host\".to_string()).iter().next().is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":81523,"byte_end":81596,"line_start":642,"line_end":642,"column_start":5,"column_end":78}},{"value":"/ assert!(map.get_all_bin(&(\"host\".to_string())).iter().next().is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":81601,"byte_end":81677,"line_start":643,"line_end":643,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":81682,"byte_end":81685,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read an invalid key string fails by not","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":81690,"byte_end":81750,"line_start":645,"line_end":645,"column_start":5,"column_end":65}},{"value":"/ // finding anything.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":81755,"byte_end":81779,"line_start":646,"line_end":646,"column_start":5,"column_end":29}},{"value":"/ assert!(map.get_all_bin(\"host{}-bin\").iter().next().is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":81784,"byte_end":81851,"line_start":647,"line_end":647,"column_start":5,"column_end":72}},{"value":"/ assert!(map.get_all_bin(\"host{}-bin\".to_string()).iter().next().is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":81856,"byte_end":81935,"line_start":648,"line_end":648,"column_start":5,"column_end":84}},{"value":"/ assert!(map.get_all_bin(&(\"host{}-bin\".to_string())).iter().next().is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":81940,"byte_end":82022,"line_start":649,"line_end":649,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":82027,"byte_end":82034,"line_start":650,"line_end":650,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":82989,"byte_end":83001,"line_start":681,"line_end":681,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<MetadataMap>::contains_key","value":"pub fn contains_key<K>(&Self, K) -> bool where\nK: AsEncodingAgnosticMetadataKey","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains a value for the specified key. This\n method works for both ascii and binary entries.","sig":null,"attributes":[{"value":"/ Returns true if the map contains a value for the specified key. This","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":82258,"byte_end":82330,"line_start":661,"line_end":661,"column_start":5,"column_end":77}},{"value":"/ method works for both ascii and binary entries.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":82335,"byte_end":82386,"line_start":662,"line_end":662,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":82391,"byte_end":82394,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":82399,"byte_end":82413,"line_start":664,"line_end":664,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":82418,"byte_end":82421,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":82426,"byte_end":82433,"line_start":666,"line_end":666,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":82438,"byte_end":82467,"line_start":667,"line_end":667,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":82472,"byte_end":82509,"line_start":668,"line_end":668,"column_start":5,"column_end":42}},{"value":"/ assert!(!map.contains_key(\"x-host\"));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":82514,"byte_end":82555,"line_start":669,"line_end":669,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":82560,"byte_end":82563,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ map.append_bin(\"host-bin\", MetadataValue::from_bytes(b\"world\"));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":82568,"byte_end":82636,"line_start":671,"line_end":671,"column_start":5,"column_end":73}},{"value":"/ map.insert(\"x-host\", \"world\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":82641,"byte_end":82692,"line_start":672,"line_end":672,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":82697,"byte_end":82700,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ // contains_key works for both Binary and Ascii keys:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":82705,"byte_end":82762,"line_start":674,"line_end":674,"column_start":5,"column_end":62}},{"value":"/ assert!(map.contains_key(\"x-host\"));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":82767,"byte_end":82807,"line_start":675,"line_end":675,"column_start":5,"column_end":45}},{"value":"/ assert!(map.contains_key(\"host-bin\"));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":82812,"byte_end":82854,"line_start":676,"line_end":676,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":82859,"byte_end":82862,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ // contains_key returns false for invalid keys:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":82867,"byte_end":82918,"line_start":678,"line_end":678,"column_start":5,"column_end":56}},{"value":"/ assert!(!map.contains_key(\"x{}host\"));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":82923,"byte_end":82965,"line_start":679,"line_end":679,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":82970,"byte_end":82977,"line_start":680,"line_end":680,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":560},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":84124,"byte_end":84128,"line_start":713,"line_end":713,"column_start":12,"column_end":16},"name":"iter","qualname":"<MetadataMap>::iter","value":"pub fn iter(&Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all key-value pairs (both ascii and binary).","sig":null,"attributes":[{"value":"/ An iterator visiting all key-value pairs (both ascii and binary).","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":83128,"byte_end":83197,"line_start":688,"line_end":688,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":83202,"byte_end":83205,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ The iteration order is arbitrary, but consistent across platforms for","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":83210,"byte_end":83283,"line_start":690,"line_end":690,"column_start":5,"column_end":78}},{"value":"/ the same crate version. Each key will be yielded once per associated","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":83288,"byte_end":83360,"line_start":691,"line_end":691,"column_start":5,"column_end":77}},{"value":"/ value. So, if a key has 3 associated values, it will be yielded 3 times.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":83365,"byte_end":83441,"line_start":692,"line_end":692,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":83446,"byte_end":83449,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":83454,"byte_end":83468,"line_start":694,"line_end":694,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":83473,"byte_end":83476,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":83481,"byte_end":83488,"line_start":696,"line_end":696,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":83493,"byte_end":83522,"line_start":697,"line_end":697,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":83527,"byte_end":83564,"line_start":698,"line_end":698,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":83569,"byte_end":83572,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-word\", \"hello\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":83577,"byte_end":83628,"line_start":700,"line_end":700,"column_start":5,"column_end":56}},{"value":"/ map.append(\"x-word\", \"goodbye\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":83633,"byte_end":83686,"line_start":701,"line_end":701,"column_start":5,"column_end":58}},{"value":"/ map.insert(\"x-number\", \"123\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":83691,"byte_end":83742,"line_start":702,"line_end":702,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":83747,"byte_end":83750,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ for key_and_value in map.iter() {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":83755,"byte_end":83792,"line_start":704,"line_end":704,"column_start":5,"column_end":42}},{"value":"/     match key_and_value {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":83797,"byte_end":83826,"line_start":705,"line_end":705,"column_start":5,"column_end":34}},{"value":"/         KeyAndValueRef::Ascii(ref key, ref value) =>","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":83831,"byte_end":83887,"line_start":706,"line_end":706,"column_start":5,"column_end":61}},{"value":"/             println!(\"Ascii: {:?}: {:?}\", key, value),","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":83892,"byte_end":83950,"line_start":707,"line_end":707,"column_start":5,"column_end":63}},{"value":"/         KeyAndValueRef::Binary(ref key, ref value) =>","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":83955,"byte_end":84012,"line_start":708,"line_end":708,"column_start":5,"column_end":62}},{"value":"/             println!(\"Binary: {:?}: {:?}\", key, value),","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":84017,"byte_end":84076,"line_start":709,"line_end":709,"column_start":5,"column_end":64}},{"value":"/     }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":84081,"byte_end":84090,"line_start":710,"line_end":710,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":84095,"byte_end":84100,"line_start":711,"line_end":711,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":84105,"byte_end":84112,"line_start":712,"line_end":712,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":561},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":85197,"byte_end":85205,"line_start":744,"line_end":744,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<MetadataMap>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all key-value pairs, with mutable value references.","sig":null,"attributes":[{"value":"/ An iterator visiting all key-value pairs, with mutable value references.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":84226,"byte_end":84302,"line_start":719,"line_end":719,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":84307,"byte_end":84310,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ The iterator order is arbitrary, but consistent across platforms for the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":84315,"byte_end":84391,"line_start":721,"line_end":721,"column_start":5,"column_end":81}},{"value":"/ same crate version. Each key will be yielded once per associated value,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":84396,"byte_end":84471,"line_start":722,"line_end":722,"column_start":5,"column_end":80}},{"value":"/ so if a key has 3 associated values, it will be yielded 3 times.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":84476,"byte_end":84544,"line_start":723,"line_end":723,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":84549,"byte_end":84552,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":84557,"byte_end":84571,"line_start":725,"line_end":725,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":84576,"byte_end":84579,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":84584,"byte_end":84591,"line_start":727,"line_end":727,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":84596,"byte_end":84625,"line_start":728,"line_end":728,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":84630,"byte_end":84667,"line_start":729,"line_end":729,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":84672,"byte_end":84675,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-word\", \"hello\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":84680,"byte_end":84731,"line_start":731,"line_end":731,"column_start":5,"column_end":56}},{"value":"/ map.append(\"x-word\", \"goodbye\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":84736,"byte_end":84789,"line_start":732,"line_end":732,"column_start":5,"column_end":58}},{"value":"/ map.insert(\"x-number\", \"123\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":84794,"byte_end":84845,"line_start":733,"line_end":733,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":84850,"byte_end":84853,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ for key_and_value in map.iter_mut() {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":84858,"byte_end":84899,"line_start":735,"line_end":735,"column_start":5,"column_end":46}},{"value":"/     match key_and_value {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":84904,"byte_end":84933,"line_start":736,"line_end":736,"column_start":5,"column_end":34}},{"value":"/         KeyAndMutValueRef::Ascii(key, mut value) =>","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":84938,"byte_end":84993,"line_start":737,"line_end":737,"column_start":5,"column_end":60}},{"value":"/             value.set_sensitive(true),","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":84998,"byte_end":85040,"line_start":738,"line_end":738,"column_start":5,"column_end":47}},{"value":"/         KeyAndMutValueRef::Binary(key, mut value) =>","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":85045,"byte_end":85101,"line_start":739,"line_end":739,"column_start":5,"column_end":61}},{"value":"/             value.set_sensitive(false),","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":85106,"byte_end":85149,"line_start":740,"line_end":740,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":85154,"byte_end":85163,"line_start":741,"line_end":741,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":85168,"byte_end":85173,"line_start":742,"line_end":742,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":85178,"byte_end":85185,"line_start":743,"line_end":743,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":86216,"byte_end":86220,"line_start":776,"line_end":776,"column_start":12,"column_end":16},"name":"keys","qualname":"<MetadataMap>::keys","value":"pub fn keys(&Self) -> Keys","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all keys.","sig":null,"attributes":[{"value":"/ An iterator visiting all keys.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":85317,"byte_end":85351,"line_start":750,"line_end":750,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":85356,"byte_end":85359,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ The iteration order is arbitrary, but consistent across platforms for","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":85364,"byte_end":85437,"line_start":752,"line_end":752,"column_start":5,"column_end":78}},{"value":"/ the same crate version. Each key will be yielded only once even if it","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":85442,"byte_end":85515,"line_start":753,"line_end":753,"column_start":5,"column_end":78}},{"value":"/ has multiple associated values.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":85520,"byte_end":85555,"line_start":754,"line_end":754,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":85560,"byte_end":85563,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":85568,"byte_end":85582,"line_start":756,"line_end":756,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":85587,"byte_end":85590,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":85595,"byte_end":85602,"line_start":758,"line_end":758,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":85607,"byte_end":85636,"line_start":759,"line_end":759,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":85641,"byte_end":85678,"line_start":760,"line_end":760,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":85683,"byte_end":85686,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-word\", \"hello\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":85691,"byte_end":85742,"line_start":762,"line_end":762,"column_start":5,"column_end":56}},{"value":"/ map.append(\"x-word\", \"goodbye\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":85747,"byte_end":85800,"line_start":763,"line_end":763,"column_start":5,"column_end":58}},{"value":"/ map.insert_bin(\"x-number-bin\", MetadataValue::from_bytes(b\"123\"));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":85805,"byte_end":85875,"line_start":764,"line_end":764,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":85880,"byte_end":85883,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ for key in map.keys() {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":85888,"byte_end":85915,"line_start":766,"line_end":766,"column_start":5,"column_end":32}},{"value":"/     match key {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":85920,"byte_end":85939,"line_start":767,"line_end":767,"column_start":5,"column_end":24}},{"value":"/         KeyRef::Ascii(ref key) =>","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":85944,"byte_end":85981,"line_start":768,"line_end":768,"column_start":5,"column_end":42}},{"value":"/             println!(\"Ascii key: {:?}\", key),","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":85986,"byte_end":86035,"line_start":769,"line_end":769,"column_start":5,"column_end":54}},{"value":"/         KeyRef::Binary(ref key) =>","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":86040,"byte_end":86078,"line_start":770,"line_end":770,"column_start":5,"column_end":43}},{"value":"/             println!(\"Binary key: {:?}\", key),","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":86083,"byte_end":86133,"line_start":771,"line_end":771,"column_start":5,"column_end":55}},{"value":"/     }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":86138,"byte_end":86147,"line_start":772,"line_end":772,"column_start":5,"column_end":14}},{"value":"/     println!(\"{:?}\", key);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":86152,"byte_end":86182,"line_start":773,"line_end":773,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":86187,"byte_end":86192,"line_start":774,"line_end":774,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":86197,"byte_end":86204,"line_start":775,"line_end":775,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":87181,"byte_end":87187,"line_start":807,"line_end":807,"column_start":12,"column_end":18},"name":"values","qualname":"<MetadataMap>::values","value":"pub fn values(&Self) -> Values","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values (both ascii and binary).","sig":null,"attributes":[{"value":"/ An iterator visiting all values (both ascii and binary).","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":86318,"byte_end":86378,"line_start":782,"line_end":782,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":86383,"byte_end":86386,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ The iteration order is arbitrary, but consistent across platforms for","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":86391,"byte_end":86464,"line_start":784,"line_end":784,"column_start":5,"column_end":78}},{"value":"/ the same crate version.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":86469,"byte_end":86496,"line_start":785,"line_end":785,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":86501,"byte_end":86504,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":86509,"byte_end":86523,"line_start":787,"line_end":787,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":86528,"byte_end":86531,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":86536,"byte_end":86543,"line_start":789,"line_end":789,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":86548,"byte_end":86577,"line_start":790,"line_end":790,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":86582,"byte_end":86619,"line_start":791,"line_end":791,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":86624,"byte_end":86627,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-word\", \"hello\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":86632,"byte_end":86683,"line_start":793,"line_end":793,"column_start":5,"column_end":56}},{"value":"/ map.append(\"x-word\", \"goodbye\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":86688,"byte_end":86741,"line_start":794,"line_end":794,"column_start":5,"column_end":58}},{"value":"/ map.insert_bin(\"x-number-bin\", MetadataValue::from_bytes(b\"123\"));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":86746,"byte_end":86816,"line_start":795,"line_end":795,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":86821,"byte_end":86824,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ for value in map.values() {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":86829,"byte_end":86860,"line_start":797,"line_end":797,"column_start":5,"column_end":36}},{"value":"/     match value {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":86865,"byte_end":86886,"line_start":798,"line_end":798,"column_start":5,"column_end":26}},{"value":"/         ValueRef::Ascii(ref value) =>","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":86891,"byte_end":86932,"line_start":799,"line_end":799,"column_start":5,"column_end":46}},{"value":"/             println!(\"Ascii value: {:?}\", value),","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":86937,"byte_end":86990,"line_start":800,"line_end":800,"column_start":5,"column_end":58}},{"value":"/         ValueRef::Binary(ref value) =>","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":86995,"byte_end":87037,"line_start":801,"line_end":801,"column_start":5,"column_end":47}},{"value":"/             println!(\"Binary value: {:?}\", value),","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":87042,"byte_end":87096,"line_start":802,"line_end":802,"column_start":5,"column_end":59}},{"value":"/     }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":87101,"byte_end":87110,"line_start":803,"line_end":803,"column_start":5,"column_end":14}},{"value":"/     println!(\"{:?}\", value);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":87115,"byte_end":87147,"line_start":804,"line_end":804,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":87152,"byte_end":87157,"line_start":805,"line_end":805,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":87162,"byte_end":87169,"line_start":806,"line_end":806,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":88072,"byte_end":88082,"line_start":837,"line_end":837,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<MetadataMap>::values_mut","value":"pub fn values_mut(&mut Self) -> ValuesMut","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values mutably.","sig":null,"attributes":[{"value":"/ An iterator visiting all values mutably.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":87289,"byte_end":87333,"line_start":813,"line_end":813,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":87338,"byte_end":87341,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ The iteration order is arbitrary, but consistent across platforms for","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":87346,"byte_end":87419,"line_start":815,"line_end":815,"column_start":5,"column_end":78}},{"value":"/ the same crate version.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":87424,"byte_end":87451,"line_start":816,"line_end":816,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":87456,"byte_end":87459,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":87464,"byte_end":87478,"line_start":818,"line_end":818,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":87483,"byte_end":87486,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":87491,"byte_end":87498,"line_start":820,"line_end":820,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":87503,"byte_end":87532,"line_start":821,"line_end":821,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::default();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":87537,"byte_end":87578,"line_start":822,"line_end":822,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":87583,"byte_end":87586,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-word\", \"hello\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":87591,"byte_end":87642,"line_start":824,"line_end":824,"column_start":5,"column_end":56}},{"value":"/ map.append(\"x-word\", \"goodbye\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":87647,"byte_end":87700,"line_start":825,"line_end":825,"column_start":5,"column_end":58}},{"value":"/ map.insert(\"x-number\", \"123\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":87705,"byte_end":87756,"line_start":826,"line_end":826,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":87761,"byte_end":87764,"line_start":827,"line_end":827,"column_start":5,"column_end":8}},{"value":"/ for value in map.values_mut() {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":87769,"byte_end":87804,"line_start":828,"line_end":828,"column_start":5,"column_end":40}},{"value":"/     match value {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":87809,"byte_end":87830,"line_start":829,"line_end":829,"column_start":5,"column_end":26}},{"value":"/         ValueRefMut::Ascii(mut value) =>","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":87835,"byte_end":87879,"line_start":830,"line_end":830,"column_start":5,"column_end":49}},{"value":"/             value.set_sensitive(true),","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":87884,"byte_end":87926,"line_start":831,"line_end":831,"column_start":5,"column_end":47}},{"value":"/         ValueRefMut::Binary(mut value) =>","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":87931,"byte_end":87976,"line_start":832,"line_end":832,"column_start":5,"column_end":50}},{"value":"/             value.set_sensitive(false),","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":87981,"byte_end":88024,"line_start":833,"line_end":833,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":88029,"byte_end":88038,"line_start":834,"line_end":834,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":88043,"byte_end":88048,"line_start":835,"line_end":835,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":88053,"byte_end":88060,"line_start":836,"line_end":836,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":89710,"byte_end":89715,"line_start":883,"line_end":883,"column_start":12,"column_end":17},"name":"entry","qualname":"<MetadataMap>::entry","value":"pub fn entry<K>(&mut Self, K) -> Result<Entry<, Ascii>, InvalidMetadataKey>\nwhere K: AsMetadataKey<Ascii>","parent":null,"children":[],"decl_id":null,"docs":" Gets the given ascii key's corresponding entry in the map for in-place\n manipulation. For binary keys, use `entry_bin`.","sig":null,"attributes":[{"value":"/ Gets the given ascii key's corresponding entry in the map for in-place","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":88198,"byte_end":88272,"line_start":843,"line_end":843,"column_start":5,"column_end":79}},{"value":"/ manipulation. For binary keys, use `entry_bin`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":88277,"byte_end":88328,"line_start":844,"line_end":844,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":88333,"byte_end":88336,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":88341,"byte_end":88355,"line_start":846,"line_end":846,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":88360,"byte_end":88363,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":88368,"byte_end":88375,"line_start":848,"line_end":848,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":88380,"byte_end":88409,"line_start":849,"line_end":849,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::default();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":88414,"byte_end":88455,"line_start":850,"line_end":850,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":88460,"byte_end":88463,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ let headers = &[","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":88468,"byte_end":88488,"line_start":852,"line_end":852,"column_start":5,"column_end":25}},{"value":"/     \"content-length\",","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":88493,"byte_end":88518,"line_start":853,"line_end":853,"column_start":5,"column_end":30}},{"value":"/     \"x-hello\",","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":88523,"byte_end":88541,"line_start":854,"line_end":854,"column_start":5,"column_end":23}},{"value":"/     \"Content-Length\",","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":88546,"byte_end":88571,"line_start":855,"line_end":855,"column_start":5,"column_end":30}},{"value":"/     \"x-world\",","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":88576,"byte_end":88594,"line_start":856,"line_end":856,"column_start":5,"column_end":23}},{"value":"/ ];","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":88599,"byte_end":88605,"line_start":857,"line_end":857,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":88610,"byte_end":88613,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ for &header in headers {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":88618,"byte_end":88646,"line_start":859,"line_end":859,"column_start":5,"column_end":33}},{"value":"/     let counter = map.entry(header).unwrap().or_insert(\"\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":88651,"byte_end":88731,"line_start":860,"line_end":860,"column_start":5,"column_end":85}},{"value":"/     *counter = format!(\"{}{}\", counter.to_str().unwrap(), \"1\").parse().unwrap();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":88736,"byte_end":88820,"line_start":861,"line_end":861,"column_start":5,"column_end":89}},{"value":"/ }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":88825,"byte_end":88830,"line_start":862,"line_end":862,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":88835,"byte_end":88838,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.get(\"content-length\").unwrap(), \"11\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":88843,"byte_end":88900,"line_start":864,"line_end":864,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(map.get(\"x-hello\").unwrap(), \"1\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":88905,"byte_end":88954,"line_start":865,"line_end":865,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":88959,"byte_end":88962,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ // Gracefully handles parting invalid key strings","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":88967,"byte_end":89020,"line_start":867,"line_end":867,"column_start":5,"column_end":58}},{"value":"/ assert!(!map.entry(\"a{}b\").is_ok());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":89025,"byte_end":89065,"line_start":868,"line_end":868,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":89070,"byte_end":89073,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read a key of the wrong type fails by not","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":89078,"byte_end":89140,"line_start":870,"line_end":870,"column_start":5,"column_end":67}},{"value":"/ // finding anything.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":89145,"byte_end":89169,"line_start":871,"line_end":871,"column_start":5,"column_end":29}},{"value":"/ map.append_bin(\"host-bin\", MetadataValue::from_bytes(b\"world\"));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":89174,"byte_end":89242,"line_start":872,"line_end":872,"column_start":5,"column_end":73}},{"value":"/ assert!(!map.entry(\"host-bin\").is_ok());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":89247,"byte_end":89291,"line_start":873,"line_end":873,"column_start":5,"column_end":49}},{"value":"/ assert!(!map.entry(\"host-bin\".to_string()).is_ok());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":89296,"byte_end":89352,"line_start":874,"line_end":874,"column_start":5,"column_end":61}},{"value":"/ assert!(!map.entry(&(\"host-bin\".to_string())).is_ok());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":89357,"byte_end":89416,"line_start":875,"line_end":875,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":89421,"byte_end":89424,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read an invalid key string fails by not","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":89429,"byte_end":89489,"line_start":877,"line_end":877,"column_start":5,"column_end":65}},{"value":"/ // finding anything.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":89494,"byte_end":89518,"line_start":878,"line_end":878,"column_start":5,"column_end":29}},{"value":"/ assert!(!map.entry(\"host{}\").is_ok());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":89523,"byte_end":89565,"line_start":879,"line_end":879,"column_start":5,"column_end":47}},{"value":"/ assert!(!map.entry(\"host{}\".to_string()).is_ok());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":89570,"byte_end":89624,"line_start":880,"line_end":880,"column_start":5,"column_end":59}},{"value":"/ assert!(!map.entry(&(\"host{}\".to_string())).is_ok());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":89629,"byte_end":89686,"line_start":881,"line_end":881,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":89691,"byte_end":89698,"line_start":882,"line_end":882,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":91391,"byte_end":91400,"line_start":928,"line_end":928,"column_start":12,"column_end":21},"name":"entry_bin","qualname":"<MetadataMap>::entry_bin","value":"pub fn entry_bin<K>(&mut Self, K)\n-> Result<Entry<, Binary>, InvalidMetadataKey> where K: AsMetadataKey<Binary>","parent":null,"children":[],"decl_id":null,"docs":" Gets the given Binary key's corresponding entry in the map for in-place\n manipulation.","sig":null,"attributes":[{"value":"/ Gets the given Binary key's corresponding entry in the map for in-place","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":89890,"byte_end":89965,"line_start":890,"line_end":890,"column_start":5,"column_end":80}},{"value":"/ manipulation.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":89970,"byte_end":89987,"line_start":891,"line_end":891,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":89992,"byte_end":89995,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":90000,"byte_end":90014,"line_start":893,"line_end":893,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":90019,"byte_end":90022,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":90027,"byte_end":90034,"line_start":895,"line_end":895,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":90039,"byte_end":90068,"line_start":896,"line_end":896,"column_start":5,"column_end":34}},{"value":"/ # use std::str;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":90073,"byte_end":90092,"line_start":897,"line_end":897,"column_start":5,"column_end":24}},{"value":"/ let mut map = MetadataMap::default();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":90097,"byte_end":90138,"line_start":898,"line_end":898,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":90143,"byte_end":90146,"line_start":899,"line_end":899,"column_start":5,"column_end":8}},{"value":"/ let headers = &[","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":90151,"byte_end":90171,"line_start":900,"line_end":900,"column_start":5,"column_end":25}},{"value":"/     \"content-length-bin\",","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":90176,"byte_end":90205,"line_start":901,"line_end":901,"column_start":5,"column_end":34}},{"value":"/     \"x-hello-bin\",","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":90210,"byte_end":90232,"line_start":902,"line_end":902,"column_start":5,"column_end":27}},{"value":"/     \"Content-Length-bin\",","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":90237,"byte_end":90266,"line_start":903,"line_end":903,"column_start":5,"column_end":34}},{"value":"/     \"x-world-bin\",","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":90271,"byte_end":90293,"line_start":904,"line_end":904,"column_start":5,"column_end":27}},{"value":"/ ];","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":90298,"byte_end":90304,"line_start":905,"line_end":905,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":90309,"byte_end":90312,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ for &header in headers {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":90317,"byte_end":90345,"line_start":907,"line_end":907,"column_start":5,"column_end":33}},{"value":"/     let counter = map.entry_bin(header).unwrap().or_insert(MetadataValue::from_bytes(b\"\"));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":90350,"byte_end":90445,"line_start":908,"line_end":908,"column_start":5,"column_end":100}},{"value":"/     *counter = MetadataValue::from_bytes(format!(\"{}{}\", str::from_utf8(counter.to_bytes().unwrap().as_ref()).unwrap(), \"1\").as_bytes());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":90450,"byte_end":90591,"line_start":909,"line_end":909,"column_start":5,"column_end":146}},{"value":"/ }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":90596,"byte_end":90601,"line_start":910,"line_end":910,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":90606,"byte_end":90609,"line_start":911,"line_end":911,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.get_bin(\"content-length-bin\").unwrap(), \"11\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":90614,"byte_end":90679,"line_start":912,"line_end":912,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(map.get_bin(\"x-hello-bin\").unwrap(), \"1\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":90684,"byte_end":90741,"line_start":913,"line_end":913,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":90746,"byte_end":90749,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read a key of the wrong type fails by not","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":90754,"byte_end":90816,"line_start":915,"line_end":915,"column_start":5,"column_end":67}},{"value":"/ // finding anything.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":90821,"byte_end":90845,"line_start":916,"line_end":916,"column_start":5,"column_end":29}},{"value":"/ map.append(\"host\", \"world\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":90850,"byte_end":90899,"line_start":917,"line_end":917,"column_start":5,"column_end":54}},{"value":"/ assert!(!map.entry_bin(\"host\").is_ok());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":90904,"byte_end":90948,"line_start":918,"line_end":918,"column_start":5,"column_end":49}},{"value":"/ assert!(!map.entry_bin(\"host\".to_string()).is_ok());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":90953,"byte_end":91009,"line_start":919,"line_end":919,"column_start":5,"column_end":61}},{"value":"/ assert!(!map.entry_bin(&(\"host\".to_string())).is_ok());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":91014,"byte_end":91073,"line_start":920,"line_end":920,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":91078,"byte_end":91081,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read an invalid key string fails by not","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":91086,"byte_end":91146,"line_start":922,"line_end":922,"column_start":5,"column_end":65}},{"value":"/ // finding anything.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":91151,"byte_end":91175,"line_start":923,"line_end":923,"column_start":5,"column_end":29}},{"value":"/ assert!(!map.entry_bin(\"host{}-bin\").is_ok());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":91180,"byte_end":91230,"line_start":924,"line_end":924,"column_start":5,"column_end":55}},{"value":"/ assert!(!map.entry_bin(\"host{}-bin\".to_string()).is_ok());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":91235,"byte_end":91297,"line_start":925,"line_end":925,"column_start":5,"column_end":67}},{"value":"/ assert!(!map.entry_bin(&(\"host{}-bin\".to_string())).is_ok());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":91302,"byte_end":91367,"line_start":926,"line_end":926,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":91372,"byte_end":91379,"line_start":927,"line_end":927,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":93986,"byte_end":93992,"line_start":1001,"line_end":1001,"column_start":12,"column_end":18},"name":"insert","qualname":"<MetadataMap>::insert","value":"pub fn insert<K>(&mut Self, K, MetadataValue<Ascii>)\n-> Option<MetadataValue<Ascii>> where K: IntoMetadataKey<Ascii>","parent":null,"children":[],"decl_id":null,"docs":" Inserts an ascii key-value pair into the map. To insert a binary entry,\n use `insert_bin`.","sig":null,"attributes":[{"value":"/ Inserts an ascii key-value pair into the map. To insert a binary entry,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":92241,"byte_end":92316,"line_start":957,"line_end":957,"column_start":5,"column_end":80}},{"value":"/ use `insert_bin`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":92321,"byte_end":92342,"line_start":958,"line_end":958,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":92347,"byte_end":92350,"line_start":959,"line_end":959,"column_start":5,"column_end":8}},{"value":"/ This method panics when the given key is a string and it cannot be","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":92355,"byte_end":92425,"line_start":960,"line_end":960,"column_start":5,"column_end":75}},{"value":"/ converted to a MetadataKey<Ascii>.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":92430,"byte_end":92468,"line_start":961,"line_end":961,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":92473,"byte_end":92476,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ If the map did not previously have this key present, then `None` is","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":92481,"byte_end":92552,"line_start":963,"line_end":963,"column_start":5,"column_end":76}},{"value":"/ returned.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":92557,"byte_end":92570,"line_start":964,"line_end":964,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":92575,"byte_end":92578,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/ If the map did have this key present, the new value is associated with","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":92583,"byte_end":92657,"line_start":966,"line_end":966,"column_start":5,"column_end":79}},{"value":"/ the key and all previous values are removed. **Note** that only a single","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":92662,"byte_end":92738,"line_start":967,"line_end":967,"column_start":5,"column_end":81}},{"value":"/ one of the previous values is returned. If there are multiple values","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":92743,"byte_end":92815,"line_start":968,"line_end":968,"column_start":5,"column_end":77}},{"value":"/ that have been previously associated with the key, then the first one is","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":92820,"byte_end":92896,"line_start":969,"line_end":969,"column_start":5,"column_end":81}},{"value":"/ returned. See `insert_mult` on `OccupiedEntry` for an API that returns","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":92901,"byte_end":92975,"line_start":970,"line_end":970,"column_start":5,"column_end":79}},{"value":"/ all values.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":92980,"byte_end":92995,"line_start":971,"line_end":971,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":93000,"byte_end":93003,"line_start":972,"line_end":972,"column_start":5,"column_end":8}},{"value":"/ The key is not updated, though; this matters for types that can be `==`","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":93008,"byte_end":93083,"line_start":973,"line_end":973,"column_start":5,"column_end":80}},{"value":"/ without being identical.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":93088,"byte_end":93116,"line_start":974,"line_end":974,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":93121,"byte_end":93124,"line_start":975,"line_end":975,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":93129,"byte_end":93143,"line_start":976,"line_end":976,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":93148,"byte_end":93151,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":93156,"byte_end":93163,"line_start":978,"line_end":978,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":93168,"byte_end":93197,"line_start":979,"line_end":979,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":93202,"byte_end":93239,"line_start":980,"line_end":980,"column_start":5,"column_end":42}},{"value":"/ assert!(map.insert(\"x-host\", \"world\".parse().unwrap()).is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":93244,"byte_end":93314,"line_start":981,"line_end":981,"column_start":5,"column_end":75}},{"value":"/ assert!(!map.is_empty());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":93319,"byte_end":93348,"line_start":982,"line_end":982,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":93353,"byte_end":93356,"line_start":983,"line_end":983,"column_start":5,"column_end":8}},{"value":"/ let mut prev = map.insert(\"x-host\", \"earth\".parse().unwrap()).unwrap();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":93361,"byte_end":93436,"line_start":984,"line_end":984,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(\"world\", prev);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":93441,"byte_end":93471,"line_start":985,"line_end":985,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":93476,"byte_end":93483,"line_start":986,"line_end":986,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":93488,"byte_end":93491,"line_start":987,"line_end":987,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":93496,"byte_end":93515,"line_start":988,"line_end":988,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":93520,"byte_end":93549,"line_start":989,"line_end":989,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":93554,"byte_end":93591,"line_start":990,"line_end":990,"column_start":5,"column_end":42}},{"value":"/ // Trying to insert a key that is not valid panics.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":93596,"byte_end":93651,"line_start":991,"line_end":991,"column_start":5,"column_end":60}},{"value":"/ map.insert(\"x{}host\", \"world\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":93656,"byte_end":93708,"line_start":992,"line_end":992,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":93713,"byte_end":93720,"line_start":993,"line_end":993,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":93725,"byte_end":93728,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":93733,"byte_end":93752,"line_start":995,"line_end":995,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":93757,"byte_end":93786,"line_start":996,"line_end":996,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":93791,"byte_end":93828,"line_start":997,"line_end":997,"column_start":5,"column_end":42}},{"value":"/ // Trying to insert a key that is binary panics (use insert_bin).","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":93833,"byte_end":93902,"line_start":998,"line_end":998,"column_start":5,"column_end":74}},{"value":"/ map.insert(\"x-host-bin\", \"world\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":93907,"byte_end":93962,"line_start":999,"line_end":999,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":93967,"byte_end":93974,"line_start":1000,"line_end":1000,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":95361,"byte_end":95371,"line_start":1038,"line_end":1038,"column_start":12,"column_end":22},"name":"insert_bin","qualname":"<MetadataMap>::insert_bin","value":"pub fn insert_bin<K>(&mut Self, K, MetadataValue<Binary>)\n-> Option<MetadataValue<Binary>> where K: IntoMetadataKey<Binary>","parent":null,"children":[],"decl_id":null,"docs":" Like insert, but for Binary keys (for example \"trace-proto-bin\").","sig":null,"attributes":[{"value":"/ Like insert, but for Binary keys (for example \"trace-proto-bin\").","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":94166,"byte_end":94235,"line_start":1008,"line_end":1008,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":94240,"byte_end":94243,"line_start":1009,"line_end":1009,"column_start":5,"column_end":8}},{"value":"/ This method panics when the given key is a string and it cannot be","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":94248,"byte_end":94318,"line_start":1010,"line_end":1010,"column_start":5,"column_end":75}},{"value":"/ converted to a MetadataKey<Binary>.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":94323,"byte_end":94362,"line_start":1011,"line_end":1011,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":94367,"byte_end":94370,"line_start":1012,"line_end":1012,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":94375,"byte_end":94389,"line_start":1013,"line_end":1013,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":94394,"byte_end":94397,"line_start":1014,"line_end":1014,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":94402,"byte_end":94409,"line_start":1015,"line_end":1015,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":94414,"byte_end":94443,"line_start":1016,"line_end":1016,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":94448,"byte_end":94485,"line_start":1017,"line_end":1017,"column_start":5,"column_end":42}},{"value":"/ assert!(map.insert_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"world\")).is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":94490,"byte_end":94584,"line_start":1018,"line_end":1018,"column_start":5,"column_end":99}},{"value":"/ assert!(!map.is_empty());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":94589,"byte_end":94618,"line_start":1019,"line_end":1019,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":94623,"byte_end":94626,"line_start":1020,"line_end":1020,"column_start":5,"column_end":8}},{"value":"/ let mut prev = map.insert_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"earth\")).unwrap();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":94631,"byte_end":94730,"line_start":1021,"line_end":1021,"column_start":5,"column_end":104}},{"value":"/ assert_eq!(\"world\", prev);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":94735,"byte_end":94765,"line_start":1022,"line_end":1022,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":94770,"byte_end":94777,"line_start":1023,"line_end":1023,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":94782,"byte_end":94785,"line_start":1024,"line_end":1024,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":94790,"byte_end":94809,"line_start":1025,"line_end":1025,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":94814,"byte_end":94843,"line_start":1026,"line_end":1026,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::default();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":94848,"byte_end":94889,"line_start":1027,"line_end":1027,"column_start":5,"column_end":46}},{"value":"/ // Attempting to add a binary metadata entry with an invalid name","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":94894,"byte_end":94963,"line_start":1028,"line_end":1028,"column_start":5,"column_end":74}},{"value":"/ map.insert_bin(\"trace-proto\", MetadataValue::from_bytes(b\"hello\")); // This line panics!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":94968,"byte_end":95060,"line_start":1029,"line_end":1029,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":95065,"byte_end":95072,"line_start":1030,"line_end":1030,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":95077,"byte_end":95080,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":95085,"byte_end":95104,"line_start":1032,"line_end":1032,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":95109,"byte_end":95138,"line_start":1033,"line_end":1033,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":95143,"byte_end":95180,"line_start":1034,"line_end":1034,"column_start":5,"column_end":42}},{"value":"/ // Trying to insert a key that is not valid panics.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":95185,"byte_end":95240,"line_start":1035,"line_end":1035,"column_start":5,"column_end":60}},{"value":"/ map.insert_bin(\"x{}host-bin\", MetadataValue::from_bytes(b\"world\")); // This line panics!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":95245,"byte_end":95337,"line_start":1036,"line_end":1036,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":95342,"byte_end":95349,"line_start":1037,"line_end":1037,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":97214,"byte_end":97220,"line_start":1092,"line_end":1092,"column_start":12,"column_end":18},"name":"append","qualname":"<MetadataMap>::append","value":"pub fn append<K>(&mut Self, K, MetadataValue<Ascii>) -> bool where\nK: IntoMetadataKey<Ascii>","parent":null,"children":[],"decl_id":null,"docs":" Inserts an ascii key-value pair into the map. To insert a binary entry,\n use `append_bin`.","sig":null,"attributes":[{"value":"/ Inserts an ascii key-value pair into the map. To insert a binary entry,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":95579,"byte_end":95654,"line_start":1049,"line_end":1049,"column_start":5,"column_end":80}},{"value":"/ use `append_bin`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":95659,"byte_end":95680,"line_start":1050,"line_end":1050,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":95685,"byte_end":95688,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ This method panics when the given key is a string and it cannot be","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":95693,"byte_end":95763,"line_start":1052,"line_end":1052,"column_start":5,"column_end":75}},{"value":"/ converted to a MetadataKey<Ascii>.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":95768,"byte_end":95806,"line_start":1053,"line_end":1053,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":95811,"byte_end":95814,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ If the map did not previously have this key present, then `false` is","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":95819,"byte_end":95891,"line_start":1055,"line_end":1055,"column_start":5,"column_end":77}},{"value":"/ returned.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":95896,"byte_end":95909,"line_start":1056,"line_end":1056,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":95914,"byte_end":95917,"line_start":1057,"line_end":1057,"column_start":5,"column_end":8}},{"value":"/ If the map did have this key present, the new value is pushed to the end","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":95922,"byte_end":95998,"line_start":1058,"line_end":1058,"column_start":5,"column_end":81}},{"value":"/ of the list of values currently associated with the key. The key is not","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":96003,"byte_end":96078,"line_start":1059,"line_end":1059,"column_start":5,"column_end":80}},{"value":"/ updated, though; this matters for types that can be `==` without being","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":96083,"byte_end":96157,"line_start":1060,"line_end":1060,"column_start":5,"column_end":79}},{"value":"/ identical.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":96162,"byte_end":96176,"line_start":1061,"line_end":1061,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":96181,"byte_end":96184,"line_start":1062,"line_end":1062,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":96189,"byte_end":96203,"line_start":1063,"line_end":1063,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":96208,"byte_end":96211,"line_start":1064,"line_end":1064,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":96216,"byte_end":96223,"line_start":1065,"line_end":1065,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":96228,"byte_end":96257,"line_start":1066,"line_end":1066,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":96262,"byte_end":96299,"line_start":1067,"line_end":1067,"column_start":5,"column_end":42}},{"value":"/ assert!(map.insert(\"x-host\", \"world\".parse().unwrap()).is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":96304,"byte_end":96374,"line_start":1068,"line_end":1068,"column_start":5,"column_end":75}},{"value":"/ assert!(!map.is_empty());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":96379,"byte_end":96408,"line_start":1069,"line_end":1069,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":96413,"byte_end":96416,"line_start":1070,"line_end":1070,"column_start":5,"column_end":8}},{"value":"/ map.append(\"x-host\", \"earth\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":96421,"byte_end":96472,"line_start":1071,"line_end":1071,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":96477,"byte_end":96480,"line_start":1072,"line_end":1072,"column_start":5,"column_end":8}},{"value":"/ let values = map.get_all(\"x-host\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":96485,"byte_end":96524,"line_start":1073,"line_end":1073,"column_start":5,"column_end":44}},{"value":"/ let mut i = values.iter();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":96529,"byte_end":96559,"line_start":1074,"line_end":1074,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(\"world\", *i.next().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":96564,"byte_end":96608,"line_start":1075,"line_end":1075,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(\"earth\", *i.next().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":96613,"byte_end":96657,"line_start":1076,"line_end":1076,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":96662,"byte_end":96669,"line_start":1077,"line_end":1077,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":96674,"byte_end":96677,"line_start":1078,"line_end":1078,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":96682,"byte_end":96701,"line_start":1079,"line_end":1079,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":96706,"byte_end":96735,"line_start":1080,"line_end":1080,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":96740,"byte_end":96777,"line_start":1081,"line_end":1081,"column_start":5,"column_end":42}},{"value":"/ // Trying to append a key that is not valid panics.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":96782,"byte_end":96837,"line_start":1082,"line_end":1082,"column_start":5,"column_end":60}},{"value":"/ map.append(\"x{}host\", \"world\".parse().unwrap()); // This line panics!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":96842,"byte_end":96915,"line_start":1083,"line_end":1083,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":96920,"byte_end":96927,"line_start":1084,"line_end":1084,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":96932,"byte_end":96935,"line_start":1085,"line_end":1085,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":96940,"byte_end":96959,"line_start":1086,"line_end":1086,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":96964,"byte_end":96993,"line_start":1087,"line_end":1087,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":96998,"byte_end":97035,"line_start":1088,"line_end":1088,"column_start":5,"column_end":42}},{"value":"/ // Trying to append a key that is binary panics (use append_bin).","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":97040,"byte_end":97109,"line_start":1089,"line_end":1089,"column_start":5,"column_end":74}},{"value":"/ map.append(\"x-host-bin\", \"world\".parse().unwrap()); // This line panics!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":97114,"byte_end":97190,"line_start":1090,"line_end":1090,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":97195,"byte_end":97202,"line_start":1091,"line_end":1091,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":98694,"byte_end":98704,"line_start":1133,"line_end":1133,"column_start":12,"column_end":22},"name":"append_bin","qualname":"<MetadataMap>::append_bin","value":"pub fn append_bin<K>(&mut Self, K, MetadataValue<Binary>) -> bool where\nK: IntoMetadataKey<Binary>","parent":null,"children":[],"decl_id":null,"docs":" Like append, but for binary keys (for example \"trace-proto-bin\").","sig":null,"attributes":[{"value":"/ Like append, but for binary keys (for example \"trace-proto-bin\").","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":97374,"byte_end":97443,"line_start":1099,"line_end":1099,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":97448,"byte_end":97451,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/ This method panics when the given key is a string and it cannot be","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":97456,"byte_end":97526,"line_start":1101,"line_end":1101,"column_start":5,"column_end":75}},{"value":"/ converted to a MetadataKey<Binary>.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":97531,"byte_end":97570,"line_start":1102,"line_end":1102,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":97575,"byte_end":97578,"line_start":1103,"line_end":1103,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":97583,"byte_end":97597,"line_start":1104,"line_end":1104,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":97602,"byte_end":97605,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":97610,"byte_end":97617,"line_start":1106,"line_end":1106,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":97622,"byte_end":97651,"line_start":1107,"line_end":1107,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":97656,"byte_end":97693,"line_start":1108,"line_end":1108,"column_start":5,"column_end":42}},{"value":"/ assert!(map.insert_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"world\")).is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":97698,"byte_end":97792,"line_start":1109,"line_end":1109,"column_start":5,"column_end":99}},{"value":"/ assert!(!map.is_empty());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":97797,"byte_end":97826,"line_start":1110,"line_end":1110,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":97831,"byte_end":97834,"line_start":1111,"line_end":1111,"column_start":5,"column_end":8}},{"value":"/ map.append_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"earth\"));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":97839,"byte_end":97914,"line_start":1112,"line_end":1112,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":97919,"byte_end":97922,"line_start":1113,"line_end":1113,"column_start":5,"column_end":8}},{"value":"/ let values = map.get_all_bin(\"trace-proto-bin\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":97927,"byte_end":97979,"line_start":1114,"line_end":1114,"column_start":5,"column_end":57}},{"value":"/ let mut i = values.iter();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":97984,"byte_end":98014,"line_start":1115,"line_end":1115,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(\"world\", *i.next().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":98019,"byte_end":98063,"line_start":1116,"line_end":1116,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(\"earth\", *i.next().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":98068,"byte_end":98112,"line_start":1117,"line_end":1117,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":98117,"byte_end":98124,"line_start":1118,"line_end":1118,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":98129,"byte_end":98132,"line_start":1119,"line_end":1119,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":98137,"byte_end":98156,"line_start":1120,"line_end":1120,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":98161,"byte_end":98190,"line_start":1121,"line_end":1121,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":98195,"byte_end":98232,"line_start":1122,"line_end":1122,"column_start":5,"column_end":42}},{"value":"/ // Trying to append a key that is not valid panics.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":98237,"byte_end":98292,"line_start":1123,"line_end":1123,"column_start":5,"column_end":60}},{"value":"/ map.append_bin(\"x{}host-bin\", MetadataValue::from_bytes(b\"world\")); // This line panics!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":98297,"byte_end":98389,"line_start":1124,"line_end":1124,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":98394,"byte_end":98401,"line_start":1125,"line_end":1125,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":98406,"byte_end":98409,"line_start":1126,"line_end":1126,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":98414,"byte_end":98433,"line_start":1127,"line_end":1127,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":98438,"byte_end":98467,"line_start":1128,"line_end":1128,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":98472,"byte_end":98509,"line_start":1129,"line_end":1129,"column_start":5,"column_end":42}},{"value":"/ // Trying to append a key that is ascii panics (use append).","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":98514,"byte_end":98578,"line_start":1130,"line_end":1130,"column_start":5,"column_end":69}},{"value":"/ map.append_bin(\"x-host\", MetadataValue::from_bytes(b\"world\")); // This line panics!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":98583,"byte_end":98670,"line_start":1131,"line_end":1131,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":98675,"byte_end":98682,"line_start":1132,"line_end":1132,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":100251,"byte_end":100257,"line_start":1173,"line_end":1173,"column_start":12,"column_end":18},"name":"remove","qualname":"<MetadataMap>::remove","value":"pub fn remove<K>(&mut Self, K) -> Option<MetadataValue<Ascii>> where\nK: AsMetadataKey<Ascii>","parent":null,"children":[],"decl_id":null,"docs":" Removes an ascii key from the map, returning the value associated with\n the key. To remove a binary key, use `remove_bin`.","sig":null,"attributes":[{"value":"/ Removes an ascii key from the map, returning the value associated with","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":98860,"byte_end":98934,"line_start":1140,"line_end":1140,"column_start":5,"column_end":79}},{"value":"/ the key. To remove a binary key, use `remove_bin`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":98939,"byte_end":98993,"line_start":1141,"line_end":1141,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":98998,"byte_end":99001,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the map does not contain the key. If there are","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":99006,"byte_end":99074,"line_start":1143,"line_end":1143,"column_start":5,"column_end":73}},{"value":"/ multiple values associated with the key, then the first one is returned.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":99079,"byte_end":99155,"line_start":1144,"line_end":1144,"column_start":5,"column_end":81}},{"value":"/ See `remove_entry_mult` on `OccupiedEntry` for an API that yields all","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":99160,"byte_end":99233,"line_start":1145,"line_end":1145,"column_start":5,"column_end":78}},{"value":"/ values.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":99238,"byte_end":99249,"line_start":1146,"line_end":1146,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":99254,"byte_end":99257,"line_start":1147,"line_end":1147,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":99262,"byte_end":99276,"line_start":1148,"line_end":1148,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":99281,"byte_end":99284,"line_start":1149,"line_end":1149,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":99289,"byte_end":99296,"line_start":1150,"line_end":1150,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":99301,"byte_end":99330,"line_start":1151,"line_end":1151,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":99335,"byte_end":99372,"line_start":1152,"line_end":1152,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"x-host\", \"hello.world\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":99377,"byte_end":99434,"line_start":1153,"line_end":1153,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":99439,"byte_end":99442,"line_start":1154,"line_end":1154,"column_start":5,"column_end":8}},{"value":"/ let prev = map.remove(\"x-host\").unwrap();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":99447,"byte_end":99492,"line_start":1155,"line_end":1155,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(\"hello.world\", prev);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":99497,"byte_end":99533,"line_start":1156,"line_end":1156,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":99538,"byte_end":99541,"line_start":1157,"line_end":1157,"column_start":5,"column_end":8}},{"value":"/ assert!(map.remove(\"x-host\").is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":99546,"byte_end":99590,"line_start":1158,"line_end":1158,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":99595,"byte_end":99598,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ // Attempting to remove a key of the wrong type fails by not","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":99603,"byte_end":99667,"line_start":1160,"line_end":1160,"column_start":5,"column_end":69}},{"value":"/ // finding anything.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":99672,"byte_end":99696,"line_start":1161,"line_end":1161,"column_start":5,"column_end":29}},{"value":"/ map.append_bin(\"host-bin\", MetadataValue::from_bytes(b\"world\"));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":99701,"byte_end":99769,"line_start":1162,"line_end":1162,"column_start":5,"column_end":73}},{"value":"/ assert!(map.remove(\"host-bin\").is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":99774,"byte_end":99820,"line_start":1163,"line_end":1163,"column_start":5,"column_end":51}},{"value":"/ assert!(map.remove(\"host-bin\".to_string()).is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":99825,"byte_end":99883,"line_start":1164,"line_end":1164,"column_start":5,"column_end":63}},{"value":"/ assert!(map.remove(&(\"host-bin\".to_string())).is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":99888,"byte_end":99949,"line_start":1165,"line_end":1165,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":99954,"byte_end":99957,"line_start":1166,"line_end":1166,"column_start":5,"column_end":8}},{"value":"/ // Attempting to remove an invalid key string fails by not","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":99962,"byte_end":100024,"line_start":1167,"line_end":1167,"column_start":5,"column_end":67}},{"value":"/ // finding anything.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":100029,"byte_end":100053,"line_start":1168,"line_end":1168,"column_start":5,"column_end":29}},{"value":"/ assert!(map.remove(\"host{}\").is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":100058,"byte_end":100102,"line_start":1169,"line_end":1169,"column_start":5,"column_end":49}},{"value":"/ assert!(map.remove(\"host{}\".to_string()).is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":100107,"byte_end":100163,"line_start":1170,"line_end":1170,"column_start":5,"column_end":61}},{"value":"/ assert!(map.remove(&(\"host{}\".to_string())).is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":100168,"byte_end":100227,"line_start":1171,"line_end":1171,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":100232,"byte_end":100239,"line_start":1172,"line_end":1172,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":101523,"byte_end":101533,"line_start":1207,"line_end":1207,"column_start":12,"column_end":22},"name":"remove_bin","qualname":"<MetadataMap>::remove_bin","value":"pub fn remove_bin<K>(&mut Self, K) -> Option<MetadataValue<Binary>> where\nK: AsMetadataKey<Binary>","parent":null,"children":[],"decl_id":null,"docs":" Like remove, but for Binary keys (for example \"trace-proto-bin\").","sig":null,"attributes":[{"value":"/ Like remove, but for Binary keys (for example \"trace-proto-bin\").","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":100397,"byte_end":100466,"line_start":1180,"line_end":1180,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":100471,"byte_end":100474,"line_start":1181,"line_end":1181,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":100479,"byte_end":100493,"line_start":1182,"line_end":1182,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":100498,"byte_end":100501,"line_start":1183,"line_end":1183,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":100506,"byte_end":100513,"line_start":1184,"line_end":1184,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":100518,"byte_end":100547,"line_start":1185,"line_end":1185,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":100552,"byte_end":100589,"line_start":1186,"line_end":1186,"column_start":5,"column_end":42}},{"value":"/ map.insert_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"hello.world\"));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":100594,"byte_end":100675,"line_start":1187,"line_end":1187,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":100680,"byte_end":100683,"line_start":1188,"line_end":1188,"column_start":5,"column_end":8}},{"value":"/ let prev = map.remove_bin(\"trace-proto-bin\").unwrap();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":100688,"byte_end":100746,"line_start":1189,"line_end":1189,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(\"hello.world\", prev);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":100751,"byte_end":100787,"line_start":1190,"line_end":1190,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":100792,"byte_end":100795,"line_start":1191,"line_end":1191,"column_start":5,"column_end":8}},{"value":"/ assert!(map.remove_bin(\"trace-proto-bin\").is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":100800,"byte_end":100857,"line_start":1192,"line_end":1192,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":100862,"byte_end":100865,"line_start":1193,"line_end":1193,"column_start":5,"column_end":8}},{"value":"/ // Attempting to remove a key of the wrong type fails by not","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":100870,"byte_end":100934,"line_start":1194,"line_end":1194,"column_start":5,"column_end":69}},{"value":"/ // finding anything.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":100939,"byte_end":100963,"line_start":1195,"line_end":1195,"column_start":5,"column_end":29}},{"value":"/ map.append(\"host\", \"world\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":100968,"byte_end":101017,"line_start":1196,"line_end":1196,"column_start":5,"column_end":54}},{"value":"/ assert!(map.remove_bin(\"host\").is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":101022,"byte_end":101068,"line_start":1197,"line_end":1197,"column_start":5,"column_end":51}},{"value":"/ assert!(map.remove_bin(\"host\".to_string()).is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":101073,"byte_end":101131,"line_start":1198,"line_end":1198,"column_start":5,"column_end":63}},{"value":"/ assert!(map.remove_bin(&(\"host\".to_string())).is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":101136,"byte_end":101197,"line_start":1199,"line_end":1199,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":101202,"byte_end":101205,"line_start":1200,"line_end":1200,"column_start":5,"column_end":8}},{"value":"/ // Attempting to remove an invalid key string fails by not","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":101210,"byte_end":101272,"line_start":1201,"line_end":1201,"column_start":5,"column_end":67}},{"value":"/ // finding anything.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":101277,"byte_end":101301,"line_start":1202,"line_end":1202,"column_start":5,"column_end":29}},{"value":"/ assert!(map.remove_bin(\"host{}-bin\").is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":101306,"byte_end":101358,"line_start":1203,"line_end":1203,"column_start":5,"column_end":57}},{"value":"/ assert!(map.remove_bin(\"host{}-bin\".to_string()).is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":101363,"byte_end":101427,"line_start":1204,"line_end":1204,"column_start":5,"column_end":69}},{"value":"/ assert!(map.remove_bin(&(\"host{}-bin\".to_string())).is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":101432,"byte_end":101499,"line_start":1205,"line_end":1205,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":101504,"byte_end":101511,"line_start":1206,"line_end":1206,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":665},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":108495,"byte_end":108504,"line_start":1460,"line_end":1460,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"pub fn or_insert(Self, MetadataValue<VE>) -> &'a mut MetadataValue<VE>","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default if empty.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":107642,"byte_end":107712,"line_start":1433,"line_end":1433,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":107717,"byte_end":107720,"line_start":1434,"line_end":1434,"column_start":5,"column_end":8}},{"value":"/ Returns a mutable reference to the **first** value in the entry.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":107725,"byte_end":107793,"line_start":1435,"line_end":1435,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":107798,"byte_end":107801,"line_start":1436,"line_end":1436,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":107806,"byte_end":107820,"line_start":1437,"line_end":1437,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":107825,"byte_end":107828,"line_start":1438,"line_end":1438,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":107833,"byte_end":107840,"line_start":1439,"line_end":1439,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":107845,"byte_end":107874,"line_start":1440,"line_end":1440,"column_start":5,"column_end":34}},{"value":"/ let mut map: MetadataMap = MetadataMap::default();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":107879,"byte_end":107933,"line_start":1441,"line_end":1441,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":107938,"byte_end":107941,"line_start":1442,"line_end":1442,"column_start":5,"column_end":8}},{"value":"/ let keys = &[","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":107946,"byte_end":107963,"line_start":1443,"line_end":1443,"column_start":5,"column_end":22}},{"value":"/     \"content-length\",","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":107968,"byte_end":107993,"line_start":1444,"line_end":1444,"column_start":5,"column_end":30}},{"value":"/     \"x-hello\",","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":107998,"byte_end":108016,"line_start":1445,"line_end":1445,"column_start":5,"column_end":23}},{"value":"/     \"Content-Length\",","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":108021,"byte_end":108046,"line_start":1446,"line_end":1446,"column_start":5,"column_end":30}},{"value":"/     \"x-world\",","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":108051,"byte_end":108069,"line_start":1447,"line_end":1447,"column_start":5,"column_end":23}},{"value":"/ ];","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":108074,"byte_end":108080,"line_start":1448,"line_end":1448,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":108085,"byte_end":108088,"line_start":1449,"line_end":1449,"column_start":5,"column_end":8}},{"value":"/ for &key in keys {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":108093,"byte_end":108115,"line_start":1450,"line_end":1450,"column_start":5,"column_end":27}},{"value":"/     let counter = map.entry(key)","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":108120,"byte_end":108156,"line_start":1451,"line_end":1451,"column_start":5,"column_end":41}},{"value":"/         .expect(\"valid key names\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":108161,"byte_end":108199,"line_start":1452,"line_end":1452,"column_start":5,"column_end":43}},{"value":"/         .or_insert(\"\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":108204,"byte_end":108248,"line_start":1453,"line_end":1453,"column_start":5,"column_end":49}},{"value":"/     *counter = format!(\"{}{}\", counter.to_str().unwrap(), \"1\").parse().unwrap();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":108253,"byte_end":108337,"line_start":1454,"line_end":1454,"column_start":5,"column_end":89}},{"value":"/ }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":108342,"byte_end":108347,"line_start":1455,"line_end":1455,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":108352,"byte_end":108355,"line_start":1456,"line_end":1456,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.get(\"content-length\").unwrap(), \"11\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":108360,"byte_end":108417,"line_start":1457,"line_end":1457,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(map.get(\"x-hello\").unwrap(), \"1\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":108422,"byte_end":108471,"line_start":1458,"line_end":1458,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":108476,"byte_end":108483,"line_start":1459,"line_end":1459,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":109748,"byte_end":109762,"line_start":1503,"line_end":1503,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"pub fn or_insert_with<F: FnOnce() -> MetadataValue<VE>>(Self, F)\n-> &'a mut MetadataValue<VE>","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the result of the default\n function if empty.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the result of the default","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":108726,"byte_end":108800,"line_start":1469,"line_end":1469,"column_start":5,"column_end":79}},{"value":"/ function if empty.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":108805,"byte_end":108827,"line_start":1470,"line_end":1470,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":108832,"byte_end":108835,"line_start":1471,"line_end":1471,"column_start":5,"column_end":8}},{"value":"/ The default function is not called if the entry exists in the map.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":108840,"byte_end":108910,"line_start":1472,"line_end":1472,"column_start":5,"column_end":75}},{"value":"/ Returns a mutable reference to the **first** value in the entry.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":108915,"byte_end":108983,"line_start":1473,"line_end":1473,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":108988,"byte_end":108991,"line_start":1474,"line_end":1474,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":108996,"byte_end":109010,"line_start":1475,"line_end":1475,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":109015,"byte_end":109018,"line_start":1476,"line_end":1476,"column_start":5,"column_end":8}},{"value":"/ Basic usage.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":109023,"byte_end":109039,"line_start":1477,"line_end":1477,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":109044,"byte_end":109047,"line_start":1478,"line_end":1478,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":109052,"byte_end":109059,"line_start":1479,"line_end":1479,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":109064,"byte_end":109093,"line_start":1480,"line_end":1480,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":109098,"byte_end":109135,"line_start":1481,"line_end":1481,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":109140,"byte_end":109143,"line_start":1482,"line_end":1482,"column_start":5,"column_end":8}},{"value":"/ let res = map.entry(\"x-hello\").unwrap()","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":109148,"byte_end":109191,"line_start":1483,"line_end":1483,"column_start":5,"column_end":48}},{"value":"/     .or_insert_with(|| \"world\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":109196,"byte_end":109249,"line_start":1484,"line_end":1484,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":109254,"byte_end":109257,"line_start":1485,"line_end":1485,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(res, \"world\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":109262,"byte_end":109291,"line_start":1486,"line_end":1486,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":109296,"byte_end":109303,"line_start":1487,"line_end":1487,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":109308,"byte_end":109311,"line_start":1488,"line_end":1488,"column_start":5,"column_end":8}},{"value":"/ The default function is not called if the entry exists in the map.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":109316,"byte_end":109386,"line_start":1489,"line_end":1489,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":109391,"byte_end":109394,"line_start":1490,"line_end":1490,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":109399,"byte_end":109406,"line_start":1491,"line_end":1491,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":109411,"byte_end":109440,"line_start":1492,"line_end":1492,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":109445,"byte_end":109482,"line_start":1493,"line_end":1493,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"host\", \"world\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":109487,"byte_end":109536,"line_start":1494,"line_end":1494,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":109541,"byte_end":109544,"line_start":1495,"line_end":1495,"column_start":5,"column_end":8}},{"value":"/ let res = map.entry(\"host\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":109549,"byte_end":109580,"line_start":1496,"line_end":1496,"column_start":5,"column_end":36}},{"value":"/     .expect(\"host is a valid string\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":109585,"byte_end":109626,"line_start":1497,"line_end":1497,"column_start":5,"column_end":46}},{"value":"/     .or_insert_with(|| unreachable!());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":109631,"byte_end":109674,"line_start":1498,"line_end":1498,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":109679,"byte_end":109682,"line_start":1499,"line_end":1499,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":109687,"byte_end":109690,"line_start":1500,"line_end":1500,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(res, \"world\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":109695,"byte_end":109724,"line_start":1501,"line_end":1501,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":109729,"byte_end":109736,"line_start":1502,"line_end":1502,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":110292,"byte_end":110295,"line_start":1525,"line_end":1525,"column_start":12,"column_end":15},"name":"key","qualname":"<Entry>::key","value":"pub fn key(&Self) -> &MetadataKey<VE>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the entry's key","sig":null,"attributes":[{"value":"/ Returns a reference to the entry's key","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":110027,"byte_end":110069,"line_start":1515,"line_end":1515,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":110074,"byte_end":110077,"line_start":1516,"line_end":1516,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":110082,"byte_end":110096,"line_start":1517,"line_end":1517,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":110101,"byte_end":110104,"line_start":1518,"line_end":1518,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":110109,"byte_end":110116,"line_start":1519,"line_end":1519,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":110121,"byte_end":110150,"line_start":1520,"line_end":1520,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":110155,"byte_end":110192,"line_start":1521,"line_end":1521,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":110197,"byte_end":110200,"line_start":1522,"line_end":1522,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.entry(\"x-hello\").unwrap().key(), \"x-hello\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":110205,"byte_end":110268,"line_start":1523,"line_end":1523,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":110273,"byte_end":110280,"line_start":1524,"line_end":1524,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":110882,"byte_end":110885,"line_start":1548,"line_end":1548,"column_start":12,"column_end":15},"name":"key","qualname":"<VacantEntry>::key","value":"pub fn key(&Self) -> &MetadataKey<VE>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the entry's key","sig":null,"attributes":[{"value":"/ Returns a reference to the entry's key","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":110617,"byte_end":110659,"line_start":1538,"line_end":1538,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":110664,"byte_end":110667,"line_start":1539,"line_end":1539,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":110672,"byte_end":110686,"line_start":1540,"line_end":1540,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":110691,"byte_end":110694,"line_start":1541,"line_end":1541,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":110699,"byte_end":110706,"line_start":1542,"line_end":1542,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":110711,"byte_end":110740,"line_start":1543,"line_end":1543,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":110745,"byte_end":110782,"line_start":1544,"line_end":1544,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":110787,"byte_end":110790,"line_start":1545,"line_end":1545,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.entry(\"x-hello\").unwrap().key(), \"x-hello\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":110795,"byte_end":110858,"line_start":1546,"line_end":1546,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":110863,"byte_end":110870,"line_start":1547,"line_end":1547,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":111314,"byte_end":111322,"line_start":1564,"line_end":1564,"column_start":12,"column_end":20},"name":"into_key","qualname":"<VacantEntry>::into_key","value":"pub fn into_key(Self) -> MetadataKey<VE>","parent":null,"children":[],"decl_id":null,"docs":" Take ownership of the key","sig":null,"attributes":[{"value":"/ Take ownership of the key","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":110996,"byte_end":111025,"line_start":1552,"line_end":1552,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":111030,"byte_end":111033,"line_start":1553,"line_end":1553,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":111038,"byte_end":111052,"line_start":1554,"line_end":1554,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":111057,"byte_end":111060,"line_start":1555,"line_end":1555,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":111065,"byte_end":111072,"line_start":1556,"line_end":1556,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":111077,"byte_end":111106,"line_start":1557,"line_end":1557,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":111111,"byte_end":111148,"line_start":1558,"line_end":1558,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":111153,"byte_end":111156,"line_start":1559,"line_end":1559,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Vacant(v) = map.entry(\"x-hello\").unwrap() {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":111161,"byte_end":111222,"line_start":1560,"line_end":1560,"column_start":5,"column_end":66}},{"value":"/     assert_eq!(v.into_key().as_str(), \"x-hello\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":111227,"byte_end":111280,"line_start":1561,"line_end":1561,"column_start":5,"column_end":58}},{"value":"/ }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":111285,"byte_end":111290,"line_start":1562,"line_end":1562,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":111295,"byte_end":111302,"line_start":1563,"line_end":1563,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":111949,"byte_end":111955,"line_start":1585,"line_end":1585,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"pub fn insert(Self, MetadataValue<VE>) -> &'a mut MetadataValue<VE>","parent":null,"children":[],"decl_id":null,"docs":" Insert the value into the entry.","sig":null,"attributes":[{"value":"/ Insert the value into the entry.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":111432,"byte_end":111468,"line_start":1568,"line_end":1568,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":111473,"byte_end":111476,"line_start":1569,"line_end":1569,"column_start":5,"column_end":8}},{"value":"/ The value will be associated with this entry's key. A mutable reference","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":111481,"byte_end":111556,"line_start":1570,"line_end":1570,"column_start":5,"column_end":80}},{"value":"/ to the inserted value will be returned.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":111561,"byte_end":111604,"line_start":1571,"line_end":1571,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":111609,"byte_end":111612,"line_start":1572,"line_end":1572,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":111617,"byte_end":111631,"line_start":1573,"line_end":1573,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":111636,"byte_end":111639,"line_start":1574,"line_end":1574,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":111644,"byte_end":111651,"line_start":1575,"line_end":1575,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":111656,"byte_end":111685,"line_start":1576,"line_end":1576,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":111690,"byte_end":111727,"line_start":1577,"line_end":1577,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":111732,"byte_end":111735,"line_start":1578,"line_end":1578,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Vacant(v) = map.entry(\"x-hello\").unwrap() {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":111740,"byte_end":111801,"line_start":1579,"line_end":1579,"column_start":5,"column_end":66}},{"value":"/     v.insert(\"world\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":111806,"byte_end":111849,"line_start":1580,"line_end":1580,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":111854,"byte_end":111859,"line_start":1581,"line_end":1581,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":111864,"byte_end":111867,"line_start":1582,"line_end":1582,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.get(\"x-hello\").unwrap(), \"world\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":111872,"byte_end":111925,"line_start":1583,"line_end":1583,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":111930,"byte_end":111937,"line_start":1584,"line_end":1584,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":112718,"byte_end":112730,"line_start":1607,"line_end":1607,"column_start":12,"column_end":24},"name":"insert_entry","qualname":"<VacantEntry>::insert_entry","value":"pub fn insert_entry(Self, MetadataValue<VE>) -> OccupiedEntry","parent":null,"children":[],"decl_id":null,"docs":" Insert the value into the entry.","sig":null,"attributes":[{"value":"/ Insert the value into the entry.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":112121,"byte_end":112157,"line_start":1589,"line_end":1589,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":112162,"byte_end":112165,"line_start":1590,"line_end":1590,"column_start":5,"column_end":8}},{"value":"/ The value will be associated with this entry's key. The new","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":112170,"byte_end":112233,"line_start":1591,"line_end":1591,"column_start":5,"column_end":68}},{"value":"/ `OccupiedEntry` is returned, allowing for further manipulation.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":112238,"byte_end":112305,"line_start":1592,"line_end":1592,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":112310,"byte_end":112313,"line_start":1593,"line_end":1593,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":112318,"byte_end":112332,"line_start":1594,"line_end":1594,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":112337,"byte_end":112340,"line_start":1595,"line_end":1595,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":112345,"byte_end":112352,"line_start":1596,"line_end":1596,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":112357,"byte_end":112386,"line_start":1597,"line_end":1597,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":112391,"byte_end":112428,"line_start":1598,"line_end":1598,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":112433,"byte_end":112436,"line_start":1599,"line_end":1599,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Vacant(v) = map.entry(\"x-hello\").unwrap() {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":112441,"byte_end":112502,"line_start":1600,"line_end":1600,"column_start":5,"column_end":66}},{"value":"/     let mut e = v.insert_entry(\"world\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":112507,"byte_end":112568,"line_start":1601,"line_end":1601,"column_start":5,"column_end":66}},{"value":"/     e.insert(\"world2\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":112573,"byte_end":112617,"line_start":1602,"line_end":1602,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":112622,"byte_end":112627,"line_start":1603,"line_end":1603,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":112632,"byte_end":112635,"line_start":1604,"line_end":1604,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.get(\"x-hello\").unwrap(), \"world2\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":112640,"byte_end":112694,"line_start":1605,"line_end":1605,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":112699,"byte_end":112706,"line_start":1606,"line_end":1606,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":113386,"byte_end":113389,"line_start":1631,"line_end":1631,"column_start":12,"column_end":15},"name":"key","qualname":"<OccupiedEntry>::key","value":"pub fn key(&Self) -> &MetadataKey<VE>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the entry's key.","sig":null,"attributes":[{"value":"/ Returns a reference to the entry's key.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":113018,"byte_end":113061,"line_start":1618,"line_end":1618,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":113066,"byte_end":113069,"line_start":1619,"line_end":1619,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":113074,"byte_end":113088,"line_start":1620,"line_end":1620,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":113093,"byte_end":113096,"line_start":1621,"line_end":1621,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":113101,"byte_end":113108,"line_start":1622,"line_end":1622,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":113113,"byte_end":113142,"line_start":1623,"line_end":1623,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":113147,"byte_end":113184,"line_start":1624,"line_end":1624,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"host\", \"world\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":113189,"byte_end":113238,"line_start":1625,"line_end":1625,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":113243,"byte_end":113246,"line_start":1626,"line_end":1626,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(e) = map.entry(\"host\").unwrap() {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":113251,"byte_end":113311,"line_start":1627,"line_end":1627,"column_start":5,"column_end":65}},{"value":"/     assert_eq!(\"host\", e.key());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":113316,"byte_end":113352,"line_start":1628,"line_end":1628,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":113357,"byte_end":113362,"line_start":1629,"line_end":1629,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":113367,"byte_end":113374,"line_start":1630,"line_end":1630,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":114172,"byte_end":114175,"line_start":1658,"line_end":1658,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"pub fn get(&Self) -> &MetadataValue<VE>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the first value in the entry.","sig":null,"attributes":[{"value":"/ Get a reference to the first value in the entry.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":113500,"byte_end":113552,"line_start":1635,"line_end":1635,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":113557,"byte_end":113560,"line_start":1636,"line_end":1636,"column_start":5,"column_end":8}},{"value":"/ Values are stored in insertion order.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":113565,"byte_end":113606,"line_start":1637,"line_end":1637,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":113611,"byte_end":113614,"line_start":1638,"line_end":1638,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":113619,"byte_end":113631,"line_start":1639,"line_end":1639,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":113636,"byte_end":113639,"line_start":1640,"line_end":1640,"column_start":5,"column_end":8}},{"value":"/ `get` panics if there are no values associated with the entry.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":113644,"byte_end":113710,"line_start":1641,"line_end":1641,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":113715,"byte_end":113718,"line_start":1642,"line_end":1642,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":113723,"byte_end":113737,"line_start":1643,"line_end":1643,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":113742,"byte_end":113745,"line_start":1644,"line_end":1644,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":113750,"byte_end":113757,"line_start":1645,"line_end":1645,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":113762,"byte_end":113791,"line_start":1646,"line_end":1646,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":113796,"byte_end":113833,"line_start":1647,"line_end":1647,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"host\", \"hello.world\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":113838,"byte_end":113893,"line_start":1648,"line_end":1648,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":113898,"byte_end":113901,"line_start":1649,"line_end":1649,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(mut e) = map.entry(\"host\").unwrap() {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":113906,"byte_end":113970,"line_start":1650,"line_end":1650,"column_start":5,"column_end":69}},{"value":"/     assert_eq!(e.get(), &\"hello.world\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":113975,"byte_end":114019,"line_start":1651,"line_end":1651,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":114024,"byte_end":114027,"line_start":1652,"line_end":1652,"column_start":5,"column_end":8}},{"value":"/     e.append(\"hello.earth\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":114032,"byte_end":114081,"line_start":1653,"line_end":1653,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":114086,"byte_end":114089,"line_start":1654,"line_end":1654,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(e.get(), &\"hello.world\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":114094,"byte_end":114138,"line_start":1655,"line_end":1655,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":114143,"byte_end":114148,"line_start":1656,"line_end":1656,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":114153,"byte_end":114160,"line_start":1657,"line_end":1657,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":114950,"byte_end":114957,"line_start":1683,"line_end":1683,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut MetadataValue<VE>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the first value in the entry.","sig":null,"attributes":[{"value":"/ Get a mutable reference to the first value in the entry.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":114291,"byte_end":114351,"line_start":1662,"line_end":1662,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":114356,"byte_end":114359,"line_start":1663,"line_end":1663,"column_start":5,"column_end":8}},{"value":"/ Values are stored in insertion order.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":114364,"byte_end":114405,"line_start":1664,"line_end":1664,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":114410,"byte_end":114413,"line_start":1665,"line_end":1665,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":114418,"byte_end":114430,"line_start":1666,"line_end":1666,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":114435,"byte_end":114438,"line_start":1667,"line_end":1667,"column_start":5,"column_end":8}},{"value":"/ `get_mut` panics if there are no values associated with the entry.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":114443,"byte_end":114513,"line_start":1668,"line_end":1668,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":114518,"byte_end":114521,"line_start":1669,"line_end":1669,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":114526,"byte_end":114540,"line_start":1670,"line_end":1670,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":114545,"byte_end":114548,"line_start":1671,"line_end":1671,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":114553,"byte_end":114560,"line_start":1672,"line_end":1672,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":114565,"byte_end":114594,"line_start":1673,"line_end":1673,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::default();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":114599,"byte_end":114640,"line_start":1674,"line_end":1674,"column_start":5,"column_end":46}},{"value":"/ map.insert(\"host\", \"hello.world\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":114645,"byte_end":114700,"line_start":1675,"line_end":1675,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":114705,"byte_end":114708,"line_start":1676,"line_end":1676,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(mut e) = map.entry(\"host\").unwrap() {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":114713,"byte_end":114777,"line_start":1677,"line_end":1677,"column_start":5,"column_end":69}},{"value":"/     e.get_mut().set_sensitive(true);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":114782,"byte_end":114822,"line_start":1678,"line_end":1678,"column_start":5,"column_end":45}},{"value":"/     assert_eq!(e.get(), &\"hello.world\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":114827,"byte_end":114871,"line_start":1679,"line_end":1679,"column_start":5,"column_end":49}},{"value":"/     assert!(e.get().is_sensitive());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":114876,"byte_end":114916,"line_start":1680,"line_end":1680,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":114921,"byte_end":114926,"line_start":1681,"line_end":1681,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":114931,"byte_end":114938,"line_start":1682,"line_end":1682,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":115838,"byte_end":115846,"line_start":1710,"line_end":1710,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"pub fn into_mut(Self) -> &'a mut MetadataValue<VE>","parent":null,"children":[],"decl_id":null,"docs":" Converts the `OccupiedEntry` into a mutable reference to the **first**\n value.","sig":null,"attributes":[{"value":"/ Converts the `OccupiedEntry` into a mutable reference to the **first**","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":115089,"byte_end":115163,"line_start":1687,"line_end":1687,"column_start":5,"column_end":79}},{"value":"/ value.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":115168,"byte_end":115178,"line_start":1688,"line_end":1688,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":115183,"byte_end":115186,"line_start":1689,"line_end":1689,"column_start":5,"column_end":8}},{"value":"/ The lifetime of the returned reference is bound to the original map.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":115191,"byte_end":115263,"line_start":1690,"line_end":1690,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":115268,"byte_end":115271,"line_start":1691,"line_end":1691,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":115276,"byte_end":115288,"line_start":1692,"line_end":1692,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":115293,"byte_end":115296,"line_start":1693,"line_end":1693,"column_start":5,"column_end":8}},{"value":"/ `into_mut` panics if there are no values associated with the entry.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":115301,"byte_end":115372,"line_start":1694,"line_end":1694,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":115377,"byte_end":115380,"line_start":1695,"line_end":1695,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":115385,"byte_end":115399,"line_start":1696,"line_end":1696,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":115404,"byte_end":115407,"line_start":1697,"line_end":1697,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":115412,"byte_end":115419,"line_start":1698,"line_end":1698,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":115424,"byte_end":115453,"line_start":1699,"line_end":1699,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::default();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":115458,"byte_end":115499,"line_start":1700,"line_end":1700,"column_start":5,"column_end":46}},{"value":"/ map.insert(\"host\", \"hello.world\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":115504,"byte_end":115559,"line_start":1701,"line_end":1701,"column_start":5,"column_end":60}},{"value":"/ map.append(\"host\", \"hello.earth\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":115564,"byte_end":115619,"line_start":1702,"line_end":1702,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":115624,"byte_end":115627,"line_start":1703,"line_end":1703,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(e) = map.entry(\"host\").unwrap() {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":115632,"byte_end":115692,"line_start":1704,"line_end":1704,"column_start":5,"column_end":65}},{"value":"/     e.into_mut().set_sensitive(true);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":115697,"byte_end":115738,"line_start":1705,"line_end":1705,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":115743,"byte_end":115748,"line_start":1706,"line_end":1706,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":115753,"byte_end":115756,"line_start":1707,"line_end":1707,"column_start":5,"column_end":8}},{"value":"/ assert!(map.get(\"host\").unwrap().is_sensitive());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":115761,"byte_end":115814,"line_start":1708,"line_end":1708,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":115819,"byte_end":115826,"line_start":1709,"line_end":1709,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":116641,"byte_end":116647,"line_start":1733,"line_end":1733,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"pub fn insert(&mut Self, MetadataValue<VE>) -> MetadataValue<VE>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry.","sig":null,"attributes":[{"value":"/ Sets the value of the entry.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":115977,"byte_end":116009,"line_start":1714,"line_end":1714,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":116014,"byte_end":116017,"line_start":1715,"line_end":1715,"column_start":5,"column_end":8}},{"value":"/ All previous values associated with the entry are removed and the first","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":116022,"byte_end":116097,"line_start":1716,"line_end":1716,"column_start":5,"column_end":80}},{"value":"/ one is returned. See `insert_mult` for an API that returns all values.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":116102,"byte_end":116176,"line_start":1717,"line_end":1717,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":116181,"byte_end":116184,"line_start":1718,"line_end":1718,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":116189,"byte_end":116203,"line_start":1719,"line_end":1719,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":116208,"byte_end":116211,"line_start":1720,"line_end":1720,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":116216,"byte_end":116223,"line_start":1721,"line_end":1721,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":116228,"byte_end":116257,"line_start":1722,"line_end":1722,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":116262,"byte_end":116299,"line_start":1723,"line_end":1723,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"host\", \"hello.world\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":116304,"byte_end":116359,"line_start":1724,"line_end":1724,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":116364,"byte_end":116367,"line_start":1725,"line_end":1725,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(mut e) = map.entry(\"host\").unwrap() {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":116372,"byte_end":116436,"line_start":1726,"line_end":1726,"column_start":5,"column_end":69}},{"value":"/     let mut prev = e.insert(\"earth\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":116441,"byte_end":116499,"line_start":1727,"line_end":1727,"column_start":5,"column_end":63}},{"value":"/     assert_eq!(\"hello.world\", prev);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":116504,"byte_end":116544,"line_start":1728,"line_end":1728,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":116549,"byte_end":116554,"line_start":1729,"line_end":1729,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":116559,"byte_end":116562,"line_start":1730,"line_end":1730,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(\"earth\", map.get(\"host\").unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":116567,"byte_end":116617,"line_start":1731,"line_end":1731,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":116622,"byte_end":116629,"line_start":1732,"line_end":1732,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":117657,"byte_end":117668,"line_start":1760,"line_end":1760,"column_start":12,"column_end":23},"name":"insert_mult","qualname":"<OccupiedEntry>::insert_mult","value":"pub fn insert_mult(&mut Self, MetadataValue<VE>) -> ValueDrain<, VE>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry.","sig":null,"attributes":[{"value":"/ Sets the value of the entry.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":116843,"byte_end":116875,"line_start":1738,"line_end":1738,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":116880,"byte_end":116883,"line_start":1739,"line_end":1739,"column_start":5,"column_end":8}},{"value":"/ This function does the same as `insert` except it returns an iterator","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":116888,"byte_end":116961,"line_start":1740,"line_end":1740,"column_start":5,"column_end":78}},{"value":"/ that yields all values previously associated with the key.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":116966,"byte_end":117028,"line_start":1741,"line_end":1741,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":117033,"byte_end":117036,"line_start":1742,"line_end":1742,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":117041,"byte_end":117055,"line_start":1743,"line_end":1743,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":117060,"byte_end":117063,"line_start":1744,"line_end":1744,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":117068,"byte_end":117075,"line_start":1745,"line_end":1745,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":117080,"byte_end":117109,"line_start":1746,"line_end":1746,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":117114,"byte_end":117151,"line_start":1747,"line_end":1747,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"host\", \"world\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":117156,"byte_end":117205,"line_start":1748,"line_end":1748,"column_start":5,"column_end":54}},{"value":"/ map.append(\"host\", \"world2\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":117210,"byte_end":117260,"line_start":1749,"line_end":1749,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":117265,"byte_end":117268,"line_start":1750,"line_end":1750,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(mut e) = map.entry(\"host\").unwrap() {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":117273,"byte_end":117337,"line_start":1751,"line_end":1751,"column_start":5,"column_end":69}},{"value":"/     let mut prev = e.insert_mult(\"earth\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":117342,"byte_end":117405,"line_start":1752,"line_end":1752,"column_start":5,"column_end":68}},{"value":"/     assert_eq!(\"world\", prev.next().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":117410,"byte_end":117460,"line_start":1753,"line_end":1753,"column_start":5,"column_end":55}},{"value":"/     assert_eq!(\"world2\", prev.next().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":117465,"byte_end":117516,"line_start":1754,"line_end":1754,"column_start":5,"column_end":56}},{"value":"/     assert!(prev.next().is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":117521,"byte_end":117560,"line_start":1755,"line_end":1755,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":117565,"byte_end":117570,"line_start":1756,"line_end":1756,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":117575,"byte_end":117578,"line_start":1757,"line_end":1757,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(\"earth\", map.get(\"host\").unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":117583,"byte_end":117633,"line_start":1758,"line_end":1758,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":117638,"byte_end":117645,"line_start":1759,"line_end":1759,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":118565,"byte_end":118571,"line_start":1788,"line_end":1788,"column_start":12,"column_end":18},"name":"append","qualname":"<OccupiedEntry>::append","value":"pub fn append(&mut Self, MetadataValue<VE>)","parent":null,"children":[],"decl_id":null,"docs":" Insert the value into the entry.","sig":null,"attributes":[{"value":"/ Insert the value into the entry.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":117862,"byte_end":117898,"line_start":1767,"line_end":1767,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":117903,"byte_end":117906,"line_start":1768,"line_end":1768,"column_start":5,"column_end":8}},{"value":"/ The new value is appended to the end of the entry's value list. All","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":117911,"byte_end":117982,"line_start":1769,"line_end":1769,"column_start":5,"column_end":76}},{"value":"/ previous values associated with the entry are retained.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":117987,"byte_end":118046,"line_start":1770,"line_end":1770,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":118051,"byte_end":118054,"line_start":1771,"line_end":1771,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":118059,"byte_end":118073,"line_start":1772,"line_end":1772,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":118078,"byte_end":118081,"line_start":1773,"line_end":1773,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":118086,"byte_end":118093,"line_start":1774,"line_end":1774,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":118098,"byte_end":118127,"line_start":1775,"line_end":1775,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":118132,"byte_end":118169,"line_start":1776,"line_end":1776,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"host\", \"world\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":118174,"byte_end":118223,"line_start":1777,"line_end":1777,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":118228,"byte_end":118231,"line_start":1778,"line_end":1778,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(mut e) = map.entry(\"host\").unwrap() {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":118236,"byte_end":118300,"line_start":1779,"line_end":1779,"column_start":5,"column_end":69}},{"value":"/     e.append(\"earth\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":118305,"byte_end":118348,"line_start":1780,"line_end":1780,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":118353,"byte_end":118358,"line_start":1781,"line_end":1781,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":118363,"byte_end":118366,"line_start":1782,"line_end":1782,"column_start":5,"column_end":8}},{"value":"/ let values = map.get_all(\"host\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":118371,"byte_end":118408,"line_start":1783,"line_end":1783,"column_start":5,"column_end":42}},{"value":"/ let mut i = values.iter();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":118413,"byte_end":118443,"line_start":1784,"line_end":1784,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(\"world\", *i.next().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":118448,"byte_end":118492,"line_start":1785,"line_end":1785,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(\"earth\", *i.next().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":118497,"byte_end":118541,"line_start":1786,"line_end":1786,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":118546,"byte_end":118553,"line_start":1787,"line_end":1787,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":119273,"byte_end":119279,"line_start":1811,"line_end":1811,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"pub fn remove(Self) -> MetadataValue<VE>","parent":null,"children":[],"decl_id":null,"docs":" Remove the entry from the map.","sig":null,"attributes":[{"value":"/ Remove the entry from the map.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":118661,"byte_end":118695,"line_start":1792,"line_end":1792,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":118700,"byte_end":118703,"line_start":1793,"line_end":1793,"column_start":5,"column_end":8}},{"value":"/ All values associated with the entry are removed and the first one is","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":118708,"byte_end":118781,"line_start":1794,"line_end":1794,"column_start":5,"column_end":78}},{"value":"/ returned. See `remove_entry_mult` for an API that returns all values.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":118786,"byte_end":118859,"line_start":1795,"line_end":1795,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":118864,"byte_end":118867,"line_start":1796,"line_end":1796,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":118872,"byte_end":118886,"line_start":1797,"line_end":1797,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":118891,"byte_end":118894,"line_start":1798,"line_end":1798,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":118899,"byte_end":118906,"line_start":1799,"line_end":1799,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":118911,"byte_end":118940,"line_start":1800,"line_end":1800,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":118945,"byte_end":118982,"line_start":1801,"line_end":1801,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"host\", \"world\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":118987,"byte_end":119036,"line_start":1802,"line_end":1802,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":119041,"byte_end":119044,"line_start":1803,"line_end":1803,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(e) = map.entry(\"host\").unwrap() {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":119049,"byte_end":119109,"line_start":1804,"line_end":1804,"column_start":5,"column_end":65}},{"value":"/     let mut prev = e.remove();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":119114,"byte_end":119148,"line_start":1805,"line_end":1805,"column_start":5,"column_end":39}},{"value":"/     assert_eq!(\"world\", prev);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":119153,"byte_end":119187,"line_start":1806,"line_end":1806,"column_start":5,"column_end":39}},{"value":"/ }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":119192,"byte_end":119197,"line_start":1807,"line_end":1807,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":119202,"byte_end":119205,"line_start":1808,"line_end":1808,"column_start":5,"column_end":8}},{"value":"/ assert!(!map.contains_key(\"host\"));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":119210,"byte_end":119249,"line_start":1809,"line_end":1809,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":119254,"byte_end":119261,"line_start":1810,"line_end":1810,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":120110,"byte_end":120122,"line_start":1837,"line_end":1837,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<OccupiedEntry>::remove_entry","value":"pub fn remove_entry(Self) -> (MetadataKey<VE>, MetadataValue<VE>)","parent":null,"children":[],"decl_id":null,"docs":" Remove the entry from the map.","sig":null,"attributes":[{"value":"/ Remove the entry from the map.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":119419,"byte_end":119453,"line_start":1816,"line_end":1816,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":119458,"byte_end":119461,"line_start":1817,"line_end":1817,"column_start":5,"column_end":8}},{"value":"/ The key and all values associated with the entry are removed and the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":119466,"byte_end":119538,"line_start":1818,"line_end":1818,"column_start":5,"column_end":77}},{"value":"/ first one is returned. See `remove_entry_mult` for an API that returns","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":119543,"byte_end":119617,"line_start":1819,"line_end":1819,"column_start":5,"column_end":79}},{"value":"/ all values.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":119622,"byte_end":119637,"line_start":1820,"line_end":1820,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":119642,"byte_end":119645,"line_start":1821,"line_end":1821,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":119650,"byte_end":119664,"line_start":1822,"line_end":1822,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":119669,"byte_end":119672,"line_start":1823,"line_end":1823,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":119677,"byte_end":119684,"line_start":1824,"line_end":1824,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":119689,"byte_end":119718,"line_start":1825,"line_end":1825,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":119723,"byte_end":119760,"line_start":1826,"line_end":1826,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"host\", \"world\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":119765,"byte_end":119814,"line_start":1827,"line_end":1827,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":119819,"byte_end":119822,"line_start":1828,"line_end":1828,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(e) = map.entry(\"host\").unwrap() {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":119827,"byte_end":119887,"line_start":1829,"line_end":1829,"column_start":5,"column_end":65}},{"value":"/     let (key, mut prev) = e.remove_entry();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":119892,"byte_end":119939,"line_start":1830,"line_end":1830,"column_start":5,"column_end":52}},{"value":"/     assert_eq!(\"host\", key.as_str());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":119944,"byte_end":119985,"line_start":1831,"line_end":1831,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(\"world\", prev);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":119990,"byte_end":120024,"line_start":1832,"line_end":1832,"column_start":5,"column_end":39}},{"value":"/ }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":120029,"byte_end":120034,"line_start":1833,"line_end":1833,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":120039,"byte_end":120042,"line_start":1834,"line_end":1834,"column_start":5,"column_end":8}},{"value":"/ assert!(!map.contains_key(\"host\"));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":120047,"byte_end":120086,"line_start":1835,"line_end":1835,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":120091,"byte_end":120098,"line_start":1836,"line_end":1836,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":120524,"byte_end":120541,"line_start":1849,"line_end":1849,"column_start":12,"column_end":29},"name":"remove_entry_mult","qualname":"<OccupiedEntry>::remove_entry_mult","value":"pub fn remove_entry_mult(Self) -> (MetadataKey<VE>, ValueDrain)","parent":null,"children":[],"decl_id":null,"docs":" Remove the entry from the map.","sig":null,"attributes":[{"value":"/ Remove the entry from the map.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":120379,"byte_end":120413,"line_start":1845,"line_end":1845,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":120418,"byte_end":120421,"line_start":1846,"line_end":1846,"column_start":5,"column_end":8}},{"value":"/ The key and all values associated with the entry are removed and","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":120426,"byte_end":120494,"line_start":1847,"line_end":1847,"column_start":5,"column_end":73}},{"value":"/ returned.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":120499,"byte_end":120512,"line_start":1848,"line_end":1848,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":121518,"byte_end":121522,"line_start":1879,"line_end":1879,"column_start":12,"column_end":16},"name":"iter","qualname":"<OccupiedEntry>::iter","value":"pub fn iter(&Self) -> ValueIter<, VE>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator visiting all values associated with the entry.","sig":null,"attributes":[{"value":"/ Returns an iterator visiting all values associated with the entry.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":120861,"byte_end":120931,"line_start":1860,"line_end":1860,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":120936,"byte_end":120939,"line_start":1861,"line_end":1861,"column_start":5,"column_end":8}},{"value":"/ Values are iterated in insertion order.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":120944,"byte_end":120987,"line_start":1862,"line_end":1862,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":120992,"byte_end":120995,"line_start":1863,"line_end":1863,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":121000,"byte_end":121014,"line_start":1864,"line_end":1864,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":121019,"byte_end":121022,"line_start":1865,"line_end":1865,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":121027,"byte_end":121034,"line_start":1866,"line_end":1866,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":121039,"byte_end":121068,"line_start":1867,"line_end":1867,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":121073,"byte_end":121110,"line_start":1868,"line_end":1868,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"host\", \"world\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":121115,"byte_end":121164,"line_start":1869,"line_end":1869,"column_start":5,"column_end":54}},{"value":"/ map.append(\"host\", \"earth\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":121169,"byte_end":121218,"line_start":1870,"line_end":1870,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":121223,"byte_end":121226,"line_start":1871,"line_end":1871,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(e) = map.entry(\"host\").unwrap() {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":121231,"byte_end":121291,"line_start":1872,"line_end":1872,"column_start":5,"column_end":65}},{"value":"/     let mut iter = e.iter();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":121296,"byte_end":121328,"line_start":1873,"line_end":1873,"column_start":5,"column_end":37}},{"value":"/     assert_eq!(&\"world\", iter.next().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":121333,"byte_end":121384,"line_start":1874,"line_end":1874,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(&\"earth\", iter.next().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":121389,"byte_end":121440,"line_start":1875,"line_end":1875,"column_start":5,"column_end":56}},{"value":"/     assert!(iter.next().is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":121445,"byte_end":121484,"line_start":1876,"line_end":1876,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":121489,"byte_end":121494,"line_start":1877,"line_end":1877,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":121499,"byte_end":121506,"line_start":1878,"line_end":1878,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":122440,"byte_end":122448,"line_start":1910,"line_end":1910,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<OccupiedEntry>::iter_mut","value":"pub fn iter_mut(&mut Self) -> ValueIterMut<, VE>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator mutably visiting all values associated with the\n entry.","sig":null,"attributes":[{"value":"/ Returns an iterator mutably visiting all values associated with the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":121672,"byte_end":121743,"line_start":1886,"line_end":1886,"column_start":5,"column_end":76}},{"value":"/ entry.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":121748,"byte_end":121758,"line_start":1887,"line_end":1887,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":121763,"byte_end":121766,"line_start":1888,"line_end":1888,"column_start":5,"column_end":8}},{"value":"/ Values are iterated in insertion order.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":121771,"byte_end":121814,"line_start":1889,"line_end":1889,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":121819,"byte_end":121822,"line_start":1890,"line_end":1890,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":121827,"byte_end":121841,"line_start":1891,"line_end":1891,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":121846,"byte_end":121849,"line_start":1892,"line_end":1892,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":121854,"byte_end":121861,"line_start":1893,"line_end":1893,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":121866,"byte_end":121895,"line_start":1894,"line_end":1894,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::default();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":121900,"byte_end":121941,"line_start":1895,"line_end":1895,"column_start":5,"column_end":46}},{"value":"/ map.insert(\"host\", \"world\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":121946,"byte_end":121995,"line_start":1896,"line_end":1896,"column_start":5,"column_end":54}},{"value":"/ map.append(\"host\", \"earth\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":122000,"byte_end":122049,"line_start":1897,"line_end":1897,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":122054,"byte_end":122057,"line_start":1898,"line_end":1898,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(mut e) = map.entry(\"host\").unwrap() {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":122062,"byte_end":122126,"line_start":1899,"line_end":1899,"column_start":5,"column_end":69}},{"value":"/     for e in e.iter_mut() {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":122131,"byte_end":122162,"line_start":1900,"line_end":1900,"column_start":5,"column_end":36}},{"value":"/         e.set_sensitive(true);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":122167,"byte_end":122201,"line_start":1901,"line_end":1901,"column_start":5,"column_end":39}},{"value":"/     }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":122206,"byte_end":122215,"line_start":1902,"line_end":1902,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":122220,"byte_end":122225,"line_start":1903,"line_end":1903,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":122230,"byte_end":122233,"line_start":1904,"line_end":1904,"column_start":5,"column_end":8}},{"value":"/ let mut values = map.get_all(\"host\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":122238,"byte_end":122279,"line_start":1905,"line_end":1905,"column_start":5,"column_end":46}},{"value":"/ let mut i = values.iter();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":122284,"byte_end":122314,"line_start":1906,"line_end":1906,"column_start":5,"column_end":35}},{"value":"/ assert!(i.next().unwrap().is_sensitive());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":122319,"byte_end":122365,"line_start":1907,"line_end":1907,"column_start":5,"column_end":51}},{"value":"/ assert!(i.next().unwrap().is_sensitive());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":122370,"byte_end":122416,"line_start":1908,"line_end":1908,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":122421,"byte_end":122428,"line_start":1909,"line_end":1909,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":124153,"byte_end":124157,"line_start":1972,"line_end":1972,"column_start":12,"column_end":16},"name":"iter","qualname":"<GetAll>::iter","value":"pub fn iter(&Self) -> ValueIter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator visiting all values associated with the entry.","sig":null,"attributes":[{"value":"/ Returns an iterator visiting all values associated with the entry.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":123510,"byte_end":123580,"line_start":1954,"line_end":1954,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":123585,"byte_end":123588,"line_start":1955,"line_end":1955,"column_start":5,"column_end":8}},{"value":"/ Values are iterated in insertion order.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":123593,"byte_end":123636,"line_start":1956,"line_end":1956,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":123641,"byte_end":123644,"line_start":1957,"line_end":1957,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":123649,"byte_end":123663,"line_start":1958,"line_end":1958,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":123668,"byte_end":123671,"line_start":1959,"line_end":1959,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":123676,"byte_end":123683,"line_start":1960,"line_end":1960,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":123688,"byte_end":123717,"line_start":1961,"line_end":1961,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":123722,"byte_end":123759,"line_start":1962,"line_end":1962,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"x-host\", \"hello.world\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":123764,"byte_end":123821,"line_start":1963,"line_end":1963,"column_start":5,"column_end":62}},{"value":"/ map.append(\"x-host\", \"hello.earth\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":123826,"byte_end":123883,"line_start":1964,"line_end":1964,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":123888,"byte_end":123891,"line_start":1965,"line_end":1965,"column_start":5,"column_end":8}},{"value":"/ let values = map.get_all(\"x-host\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":123896,"byte_end":123935,"line_start":1966,"line_end":1966,"column_start":5,"column_end":44}},{"value":"/ let mut iter = values.iter();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":123940,"byte_end":123973,"line_start":1967,"line_end":1967,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(&\"hello.world\", iter.next().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":123978,"byte_end":124031,"line_start":1968,"line_end":1968,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(&\"hello.earth\", iter.next().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":124036,"byte_end":124089,"line_start":1969,"line_end":1969,"column_start":5,"column_end":58}},{"value":"/ assert!(iter.next().is_none());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":124094,"byte_end":124129,"line_start":1970,"line_end":1970,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":124134,"byte_end":124141,"line_start":1971,"line_end":1971,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":744},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":125473,"byte_end":125488,"line_start":2021,"line_end":2021,"column_start":15,"column_end":30},"name":"IntoMetadataKey","qualname":"::metadata::map::into_metadata_key::IntoMetadataKey","value":"IntoMetadataKey<VE: ValueEncoding>: Sealed<VE>","parent":null,"children":[],"decl_id":null,"docs":" A marker trait used to identify values that can be used as insert keys\n to a `MetadataMap`.\n","sig":null,"attributes":[{"value":"/ A marker trait used to identify values that can be used as insert keys","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":125356,"byte_end":125430,"line_start":2019,"line_end":2019,"column_start":5,"column_end":79}},{"value":"/ to a `MetadataMap`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":125435,"byte_end":125458,"line_start":2020,"line_end":2020,"column_start":5,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":746},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":125928,"byte_end":125934,"line_start":2031,"line_end":2031,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::metadata::map::into_metadata_key::Sealed","value":"Sealed<VE: ValueEncoding>","parent":null,"children":[{"krate":0,"index":748},{"krate":0,"index":749}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":748},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":125990,"byte_end":125996,"line_start":2033,"line_end":2033,"column_start":12,"column_end":18},"name":"insert","qualname":"::metadata::map::into_metadata_key::Sealed::insert","value":"pub fn insert(Self, &mut MetadataMap, MetadataValue<VE>)\n-> Option<MetadataValue<VE>>","parent":{"krate":0,"index":746},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":749},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":126127,"byte_end":126133,"line_start":2037,"line_end":2037,"column_start":12,"column_end":18},"name":"append","qualname":"::metadata::map::into_metadata_key::Sealed::append","value":"pub fn append(Self, &mut MetadataMap, MetadataValue<VE>) -> bool","parent":{"krate":0,"index":746},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":782},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":128750,"byte_end":128763,"line_start":2120,"line_end":2120,"column_start":15,"column_end":28},"name":"AsMetadataKey","qualname":"::metadata::map::as_metadata_key::AsMetadataKey","value":"AsMetadataKey<VE: ValueEncoding>: Sealed<VE>","parent":null,"children":[],"decl_id":null,"docs":" A marker trait used to identify values that can be used as search keys\n to a `MetadataMap`.\n","sig":null,"attributes":[{"value":"/ A marker trait used to identify values that can be used as search keys","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":128633,"byte_end":128707,"line_start":2118,"line_end":2118,"column_start":5,"column_end":79}},{"value":"/ to a `MetadataMap`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":128712,"byte_end":128735,"line_start":2119,"line_end":2119,"column_start":5,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":784},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":129180,"byte_end":129186,"line_start":2130,"line_end":2130,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::metadata::map::as_metadata_key::Sealed","value":"Sealed<VE: ValueEncoding>","parent":null,"children":[{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":790}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":786},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":129242,"byte_end":129245,"line_start":2132,"line_end":2132,"column_start":12,"column_end":15},"name":"get","qualname":"::metadata::map::as_metadata_key::Sealed::get","value":"pub fn get(Self, &MetadataMap) -> Option<&MetadataValue<VE>>","parent":{"krate":0,"index":784},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":787},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":129337,"byte_end":129344,"line_start":2135,"line_end":2135,"column_start":12,"column_end":19},"name":"get_mut","qualname":"::metadata::map::as_metadata_key::Sealed::get_mut","value":"pub fn get_mut(Self, &mut MetadataMap) -> Option<&mut MetadataValue<VE>>","parent":{"krate":0,"index":784},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":788},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":129444,"byte_end":129451,"line_start":2138,"line_end":2138,"column_start":12,"column_end":19},"name":"get_all","qualname":"::metadata::map::as_metadata_key::Sealed::get_all","value":"pub fn get_all(Self, &MetadataMap) -> Option<GetAll<, HeaderValue>>","parent":{"krate":0,"index":784},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":789},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":129548,"byte_end":129553,"line_start":2141,"line_end":2141,"column_start":12,"column_end":17},"name":"entry","qualname":"::metadata::map::as_metadata_key::Sealed::entry","value":"pub fn entry(Self, &mut MetadataMap)\n-> Result<Entry<, HeaderValue>, InvalidMetadataKey>","parent":{"krate":0,"index":784},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":790},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":129685,"byte_end":129691,"line_start":2145,"line_end":2145,"column_start":12,"column_end":18},"name":"remove","qualname":"::metadata::map::as_metadata_key::Sealed::remove","value":"pub fn remove(Self, &mut MetadataMap) -> Option<MetadataValue<VE>>","parent":{"krate":0,"index":784},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":850},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":138541,"byte_end":138570,"line_start":2427,"line_end":2427,"column_start":15,"column_end":44},"name":"AsEncodingAgnosticMetadataKey","qualname":"::metadata::map::as_encoding_agnostic_metadata_key::AsEncodingAgnosticMetadataKey","value":"AsEncodingAgnosticMetadataKey: Sealed","parent":null,"children":[],"decl_id":null,"docs":" A marker trait used to identify values that can be used as search keys\n to a `MetadataMap`, for operations that don't expose the actual value.\n","sig":null,"attributes":[{"value":"/ A marker trait used to identify values that can be used as search keys","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":138373,"byte_end":138447,"line_start":2425,"line_end":2425,"column_start":5,"column_end":79}},{"value":"/ to a `MetadataMap`, for operations that don't expose the actual value.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":138452,"byte_end":138526,"line_start":2426,"line_end":2426,"column_start":5,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":851},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":139011,"byte_end":139017,"line_start":2438,"line_end":2438,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::metadata::map::as_encoding_agnostic_metadata_key::Sealed","value":"Sealed","parent":null,"children":[{"krate":0,"index":852}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":139054,"byte_end":139066,"line_start":2440,"line_end":2440,"column_start":12,"column_end":24},"name":"contains_key","qualname":"::metadata::map::as_encoding_agnostic_metadata_key::Sealed::contains_key","value":"pub fn contains_key(&Self, &MetadataMap) -> bool","parent":{"krate":0,"index":851},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2740},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":148462,"byte_end":148475,"line_start":21,"line_end":21,"column_start":12,"column_end":25},"name":"MetadataValue","qualname":"::metadata::value::MetadataValue","value":"MetadataValue {  }","parent":null,"children":[{"krate":0,"index":2742},{"krate":0,"index":2743}],"decl_id":null,"docs":" Represents a custom metadata field value.","sig":null,"attributes":[{"value":"/ Represents a custom metadata field value.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":148209,"byte_end":148254,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":148255,"byte_end":148258,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ `MetadataValue` is used as the [`MetadataMap`] value.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":148259,"byte_end":148316,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":148317,"byte_end":148320,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`HeaderMap`]: struct.HeaderMap.html","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":148321,"byte_end":148361,"line_start":17,"line_end":17,"column_start":1,"column_end":41}},{"value":"/ [`MetadataMap`]: struct.MetadataMap.html","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":148362,"byte_end":148406,"line_start":18,"line_end":18,"column_start":1,"column_end":45}},{"value":"repr(transparent)","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":148430,"byte_end":148450,"line_start":20,"line_end":20,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":2751},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":148933,"byte_end":148943,"line_start":33,"line_end":33,"column_start":12,"column_end":22},"name":"ToStrError","qualname":"::metadata::value::ToStrError","value":"ToStrError {  }","parent":null,"children":[{"krate":0,"index":2752}],"decl_id":null,"docs":" A possible error when converting a `MetadataValue` to a string representation.","sig":null,"attributes":[{"value":"/ A possible error when converting a `MetadataValue` to a string representation.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":148693,"byte_end":148775,"line_start":28,"line_end":28,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":148776,"byte_end":148779,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Metadata field values may contain opaque bytes, in which case it is not","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":148780,"byte_end":148855,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ possible to represent the value as a string.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":148856,"byte_end":148904,"line_start":31,"line_end":31,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":894},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":149002,"byte_end":149020,"line_start":38,"line_end":38,"column_start":10,"column_end":28},"name":"AsciiMetadataValue","qualname":"::metadata::value::AsciiMetadataValue","value":"MetadataValue<Ascii>","parent":null,"children":[],"decl_id":null,"docs":" An ascii metadata value.\n","sig":null,"attributes":[{"value":"/ An ascii metadata value.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":148964,"byte_end":148992,"line_start":37,"line_end":37,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":895},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":149083,"byte_end":149102,"line_start":40,"line_end":40,"column_start":10,"column_end":29},"name":"BinaryMetadataValue","qualname":"::metadata::value::BinaryMetadataValue","value":"MetadataValue<Binary>","parent":null,"children":[],"decl_id":null,"docs":" A binary metadata value.\n","sig":null,"attributes":[{"value":"/ A binary metadata value.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":149045,"byte_end":149073,"line_start":39,"line_end":39,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":898},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":150035,"byte_end":150046,"line_start":70,"line_end":70,"column_start":12,"column_end":23},"name":"from_static","qualname":"<MetadataValue<VE>>::from_static","value":"pub fn from_static(&'static str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert a static string to a `MetadataValue`.","sig":null,"attributes":[{"value":"/ Convert a static string to a `MetadataValue`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":149177,"byte_end":149226,"line_start":43,"line_end":43,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":149231,"byte_end":149234,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ This function will not perform any copying, however the string is","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":149239,"byte_end":149308,"line_start":45,"line_end":45,"column_start":5,"column_end":74}},{"value":"/ checked to ensure that no invalid characters are present.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":149313,"byte_end":149374,"line_start":46,"line_end":46,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":149379,"byte_end":149382,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ For Ascii values, only visible ASCII characters (32-127) are permitted.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":149387,"byte_end":149462,"line_start":48,"line_end":48,"column_start":5,"column_end":80}},{"value":"/ For Binary values, the string must be valid base64.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":149467,"byte_end":149522,"line_start":49,"line_end":49,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":149527,"byte_end":149530,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":149535,"byte_end":149547,"line_start":51,"line_end":51,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":149552,"byte_end":149555,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This function panics if the argument contains invalid metadata value","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":149560,"byte_end":149632,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ characters.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":149637,"byte_end":149652,"line_start":54,"line_end":54,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":149657,"byte_end":149660,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":149665,"byte_end":149679,"line_start":56,"line_end":56,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":149684,"byte_end":149687,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":149692,"byte_end":149699,"line_start":58,"line_end":58,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":149704,"byte_end":149733,"line_start":59,"line_end":59,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::from_static(\"hello\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":149738,"byte_end":149793,"line_start":60,"line_end":60,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(val, \"hello\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":149798,"byte_end":149827,"line_start":61,"line_end":61,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":149832,"byte_end":149839,"line_start":62,"line_end":62,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":149844,"byte_end":149847,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":149852,"byte_end":149859,"line_start":64,"line_end":64,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":149864,"byte_end":149893,"line_start":65,"line_end":65,"column_start":5,"column_end":34}},{"value":"/ let val = BinaryMetadataValue::from_static(\"SGVsbG8hIQ==\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":149898,"byte_end":149961,"line_start":66,"line_end":66,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(val, \"Hello!!\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":149966,"byte_end":149997,"line_start":67,"line_end":67,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":150002,"byte_end":150009,"line_start":68,"line_end":68,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":150014,"byte_end":150023,"line_start":69,"line_end":69,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":899},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":151193,"byte_end":151207,"line_start":105,"line_end":105,"column_start":12,"column_end":26},"name":"try_from_bytes","qualname":"<MetadataValue<VE>>::try_from_bytes","value":"pub fn try_from_bytes(&[u8]) -> Result<Self, InvalidMetadataValueBytes>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to convert a byte slice to a `MetadataValue`.","sig":null,"attributes":[{"value":"/ Attempt to convert a byte slice to a `MetadataValue`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":150196,"byte_end":150253,"line_start":77,"line_end":77,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":150258,"byte_end":150261,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ For Ascii metadata values, If the argument contains invalid metadata","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":150266,"byte_end":150338,"line_start":79,"line_end":79,"column_start":5,"column_end":77}},{"value":"/ value bytes, an error is returned. Only byte values between 32 and 255","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":150343,"byte_end":150417,"line_start":80,"line_end":80,"column_start":5,"column_end":79}},{"value":"/ (inclusive) are permitted, excluding byte 127 (DEL).","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":150422,"byte_end":150478,"line_start":81,"line_end":81,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":150483,"byte_end":150486,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ For Binary metadata values this method cannot fail. See also the Binary","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":150491,"byte_end":150566,"line_start":83,"line_end":83,"column_start":5,"column_end":80}},{"value":"/ only version of this method `from_bytes`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":150571,"byte_end":150616,"line_start":84,"line_end":84,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":150621,"byte_end":150624,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be replaced in the future by a `TryFrom`","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":150629,"byte_end":150702,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ implementation once the trait is stabilized in std.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":150707,"byte_end":150762,"line_start":87,"line_end":87,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":150767,"byte_end":150770,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":150775,"byte_end":150789,"line_start":89,"line_end":89,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":150794,"byte_end":150797,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":150802,"byte_end":150809,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":150814,"byte_end":150843,"line_start":92,"line_end":92,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::try_from_bytes(b\"hello\\xfa\").unwrap();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":150848,"byte_end":150920,"line_start":93,"line_end":93,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(val, &b\"hello\\xfa\"[..]);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":150925,"byte_end":150964,"line_start":94,"line_end":94,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":150969,"byte_end":150976,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":150981,"byte_end":150984,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ An invalid value","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":150989,"byte_end":151009,"line_start":97,"line_end":97,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":151014,"byte_end":151017,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":151022,"byte_end":151029,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":151034,"byte_end":151063,"line_start":100,"line_end":100,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::try_from_bytes(b\"\\n\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":151068,"byte_end":151124,"line_start":101,"line_end":101,"column_start":5,"column_end":61}},{"value":"/ assert!(val.is_err());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":151129,"byte_end":151155,"line_start":102,"line_end":102,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":151160,"byte_end":151167,"line_start":103,"line_end":103,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":151172,"byte_end":151181,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":901},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":152138,"byte_end":152149,"line_start":126,"line_end":126,"column_start":12,"column_end":23},"name":"from_shared","qualname":"<MetadataValue<VE>>::from_shared","value":"pub fn from_shared(Bytes) -> Result<Self, InvalidMetadataValueBytes>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to convert a `Bytes` buffer to a `MetadataValue`.","sig":null,"attributes":[{"value":"/ Attempt to convert a `Bytes` buffer to a `MetadataValue`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":151403,"byte_end":151464,"line_start":112,"line_end":112,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":151469,"byte_end":151472,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ For `MetadataValue<Ascii>`, if the argument contains invalid metadata","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":151477,"byte_end":151550,"line_start":114,"line_end":114,"column_start":5,"column_end":78}},{"value":"/ value bytes, an error is returned. Only byte values between 32 and 255","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":151555,"byte_end":151629,"line_start":115,"line_end":115,"column_start":5,"column_end":79}},{"value":"/ (inclusive) are permitted, excluding byte 127 (DEL).","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":151634,"byte_end":151690,"line_start":116,"line_end":116,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":151695,"byte_end":151698,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ For `MetadataValue<Binary>`, if the argument is not valid base64, an","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":151703,"byte_end":151775,"line_start":118,"line_end":118,"column_start":5,"column_end":77}},{"value":"/ error is returned. In use cases where the input is not base64 encoded,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":151780,"byte_end":151854,"line_start":119,"line_end":119,"column_start":5,"column_end":79}},{"value":"/ use `from_bytes`; if the value has to be encoded it's not possible to","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":151859,"byte_end":151932,"line_start":120,"line_end":120,"column_start":5,"column_end":78}},{"value":"/ share the memory anyways.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":151937,"byte_end":151966,"line_start":121,"line_end":121,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":151971,"byte_end":151974,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be replaced in the future by a `TryFrom`","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":151979,"byte_end":152052,"line_start":123,"line_end":123,"column_start":5,"column_end":78}},{"value":"/ implementation once the trait is stabilized in std.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":152057,"byte_end":152112,"line_start":124,"line_end":124,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":152117,"byte_end":152126,"line_start":125,"line_end":125,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":903},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":152686,"byte_end":152707,"line_start":140,"line_end":140,"column_start":19,"column_end":40},"name":"from_shared_unchecked","qualname":"<MetadataValue<VE>>::from_shared_unchecked","value":"pub unsafe fn from_shared_unchecked(Bytes) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert a `Bytes` directly into a `MetadataValue` without validating.\n For MetadataValue<Binary> the provided parameter must be base64\n encoded without padding bytes at the end.","sig":null,"attributes":[{"value":"/ Convert a `Bytes` directly into a `MetadataValue` without validating.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":152346,"byte_end":152419,"line_start":133,"line_end":133,"column_start":5,"column_end":78}},{"value":"/ For MetadataValue<Binary> the provided parameter must be base64","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":152424,"byte_end":152491,"line_start":134,"line_end":134,"column_start":5,"column_end":72}},{"value":"/ encoded without padding bytes at the end.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":152496,"byte_end":152541,"line_start":135,"line_end":135,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":152546,"byte_end":152549,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ This function does NOT validate that illegal bytes are not contained","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":152554,"byte_end":152626,"line_start":137,"line_end":137,"column_start":5,"column_end":77}},{"value":"/ within the buffer.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":152631,"byte_end":152653,"line_start":138,"line_end":138,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":152658,"byte_end":152667,"line_start":139,"line_end":139,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":904},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":153251,"byte_end":153259,"line_start":160,"line_end":160,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<MetadataValue<VE>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the `MetadataValue` has a length of zero bytes.","sig":null,"attributes":[{"value":"/ Returns true if the `MetadataValue` has a length of zero bytes.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":152875,"byte_end":152942,"line_start":147,"line_end":147,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":152947,"byte_end":152950,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":152955,"byte_end":152969,"line_start":149,"line_end":149,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":152974,"byte_end":152977,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":152982,"byte_end":152989,"line_start":151,"line_end":151,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":152994,"byte_end":153023,"line_start":152,"line_end":152,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::from_static(\"\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":153028,"byte_end":153078,"line_start":153,"line_end":153,"column_start":5,"column_end":55}},{"value":"/ assert!(val.is_empty());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":153083,"byte_end":153111,"line_start":154,"line_end":154,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":153116,"byte_end":153119,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ let val = AsciiMetadataValue::from_static(\"hello\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":153124,"byte_end":153179,"line_start":156,"line_end":156,"column_start":5,"column_end":60}},{"value":"/ assert!(!val.is_empty());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":153184,"byte_end":153213,"line_start":157,"line_end":157,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":153218,"byte_end":153225,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":153230,"byte_end":153239,"line_start":159,"line_end":159,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":905},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":153929,"byte_end":153937,"line_start":182,"line_end":182,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<MetadataValue<VE>>::to_bytes","value":"pub fn to_bytes(&Self) -> Result<Bytes, InvalidMetadataValueBytes>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `MetadataValue` to a Bytes buffer. This method cannot\n fail for Ascii values. For Ascii values, `as_bytes` is more convenient\n to use.","sig":null,"attributes":[{"value":"/ Converts a `MetadataValue` to a Bytes buffer. This method cannot","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":153332,"byte_end":153400,"line_start":164,"line_end":164,"column_start":5,"column_end":73}},{"value":"/ fail for Ascii values. For Ascii values, `as_bytes` is more convenient","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":153405,"byte_end":153479,"line_start":165,"line_end":165,"column_start":5,"column_end":79}},{"value":"/ to use.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":153484,"byte_end":153495,"line_start":166,"line_end":166,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":153500,"byte_end":153503,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":153508,"byte_end":153522,"line_start":168,"line_end":168,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":153527,"byte_end":153530,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":153535,"byte_end":153542,"line_start":170,"line_end":170,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":153547,"byte_end":153576,"line_start":171,"line_end":171,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::from_static(\"hello\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":153581,"byte_end":153636,"line_start":172,"line_end":172,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(val.to_bytes().unwrap().as_ref(), b\"hello\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":153641,"byte_end":153700,"line_start":173,"line_end":173,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":153705,"byte_end":153712,"line_start":174,"line_end":174,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":153717,"byte_end":153720,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":153725,"byte_end":153732,"line_start":176,"line_end":176,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":153737,"byte_end":153766,"line_start":177,"line_end":177,"column_start":5,"column_end":34}},{"value":"/ let val = BinaryMetadataValue::from_bytes(b\"hello\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":153771,"byte_end":153827,"line_start":178,"line_end":178,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(val.to_bytes().unwrap().as_ref(), b\"hello\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":153832,"byte_end":153891,"line_start":179,"line_end":179,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":153896,"byte_end":153903,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":153908,"byte_end":153917,"line_start":181,"line_end":181,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":906},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":154455,"byte_end":154468,"line_start":201,"line_end":201,"column_start":12,"column_end":25},"name":"set_sensitive","qualname":"<MetadataValue<VE>>::set_sensitive","value":"pub fn set_sensitive(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Mark that the metadata value represents sensitive information.","sig":null,"attributes":[{"value":"/ Mark that the metadata value represents sensitive information.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":154044,"byte_end":154110,"line_start":186,"line_end":186,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":154115,"byte_end":154118,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":154123,"byte_end":154137,"line_start":188,"line_end":188,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":154142,"byte_end":154145,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":154150,"byte_end":154157,"line_start":190,"line_end":190,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":154162,"byte_end":154191,"line_start":191,"line_end":191,"column_start":5,"column_end":34}},{"value":"/ let mut val = AsciiMetadataValue::from_static(\"my secret\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":154196,"byte_end":154259,"line_start":192,"line_end":192,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":154264,"byte_end":154267,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ val.set_sensitive(true);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":154272,"byte_end":154300,"line_start":194,"line_end":194,"column_start":5,"column_end":33}},{"value":"/ assert!(val.is_sensitive());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":154305,"byte_end":154337,"line_start":195,"line_end":195,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":154342,"byte_end":154345,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ val.set_sensitive(false);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":154350,"byte_end":154379,"line_start":197,"line_end":197,"column_start":5,"column_end":34}},{"value":"/ assert!(!val.is_sensitive());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":154384,"byte_end":154417,"line_start":198,"line_end":198,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":154422,"byte_end":154429,"line_start":199,"line_end":199,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":154434,"byte_end":154443,"line_start":200,"line_end":200,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":907},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":155341,"byte_end":155353,"line_start":227,"line_end":227,"column_start":12,"column_end":24},"name":"is_sensitive","qualname":"<MetadataValue<VE>>::is_sensitive","value":"pub fn is_sensitive(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the value represents sensitive data.","sig":null,"attributes":[{"value":"/ Returns `true` if the value represents sensitive data.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":154543,"byte_end":154601,"line_start":205,"line_end":205,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":154606,"byte_end":154609,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ Sensitive data could represent passwords or other data that should not","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":154614,"byte_end":154688,"line_start":207,"line_end":207,"column_start":5,"column_end":79}},{"value":"/ be stored on disk or in memory. This setting can be used by components","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":154693,"byte_end":154767,"line_start":208,"line_end":208,"column_start":5,"column_end":79}},{"value":"/ like caches to avoid storing the value. HPACK encoders must set the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":154772,"byte_end":154843,"line_start":209,"line_end":209,"column_start":5,"column_end":76}},{"value":"/ metadata field to never index when `is_sensitive` returns true.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":154848,"byte_end":154915,"line_start":210,"line_end":210,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":154920,"byte_end":154923,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ Note that sensitivity is not factored into equality or ordering.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":154928,"byte_end":154996,"line_start":212,"line_end":212,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":155001,"byte_end":155004,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":155009,"byte_end":155023,"line_start":214,"line_end":214,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":155028,"byte_end":155031,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":155036,"byte_end":155043,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":155048,"byte_end":155077,"line_start":217,"line_end":217,"column_start":5,"column_end":34}},{"value":"/ let mut val = AsciiMetadataValue::from_static(\"my secret\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":155082,"byte_end":155145,"line_start":218,"line_end":218,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":155150,"byte_end":155153,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ val.set_sensitive(true);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":155158,"byte_end":155186,"line_start":220,"line_end":220,"column_start":5,"column_end":33}},{"value":"/ assert!(val.is_sensitive());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":155191,"byte_end":155223,"line_start":221,"line_end":221,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":155228,"byte_end":155231,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ val.set_sensitive(false);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":155236,"byte_end":155265,"line_start":223,"line_end":223,"column_start":5,"column_end":34}},{"value":"/ assert!(!val.is_sensitive());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":155270,"byte_end":155303,"line_start":224,"line_end":224,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":155308,"byte_end":155315,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":155320,"byte_end":155329,"line_start":226,"line_end":226,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":155944,"byte_end":155960,"line_start":248,"line_end":248,"column_start":12,"column_end":28},"name":"as_encoded_bytes","qualname":"<MetadataValue<VE>>::as_encoded_bytes","value":"pub fn as_encoded_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Converts a `MetadataValue` to a byte slice. For Binary values, the\n return value is base64 encoded.","sig":null,"attributes":[{"value":"/ Converts a `MetadataValue` to a byte slice. For Binary values, the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":155416,"byte_end":155486,"line_start":231,"line_end":231,"column_start":5,"column_end":75}},{"value":"/ return value is base64 encoded.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":155491,"byte_end":155526,"line_start":232,"line_end":232,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":155531,"byte_end":155534,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":155539,"byte_end":155553,"line_start":234,"line_end":234,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":155558,"byte_end":155561,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":155566,"byte_end":155573,"line_start":236,"line_end":236,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":155578,"byte_end":155607,"line_start":237,"line_end":237,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::from_static(\"hello\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":155612,"byte_end":155667,"line_start":238,"line_end":238,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(val.as_encoded_bytes(), b\"hello\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":155672,"byte_end":155721,"line_start":239,"line_end":239,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":155726,"byte_end":155733,"line_start":240,"line_end":240,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":155738,"byte_end":155741,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":155746,"byte_end":155753,"line_start":242,"line_end":242,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":155758,"byte_end":155787,"line_start":243,"line_end":243,"column_start":5,"column_end":34}},{"value":"/ let val = BinaryMetadataValue::from_bytes(b\"Hello!\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":155792,"byte_end":155849,"line_start":244,"line_end":244,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(val.as_encoded_bytes(), b\"SGVsbG8h\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":155854,"byte_end":155906,"line_start":245,"line_end":245,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":155911,"byte_end":155918,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":155923,"byte_end":155932,"line_start":247,"line_end":247,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":158054,"byte_end":158062,"line_start":307,"line_end":307,"column_start":12,"column_end":20},"name":"from_str","qualname":"<MetadataValue<Ascii>>::from_str","value":"pub fn from_str(&str) -> Result<Self, InvalidMetadataValue>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to convert a string to a `MetadataValue<Ascii>`.","sig":null,"attributes":[{"value":"/ Attempt to convert a string to a `MetadataValue<Ascii>`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":157185,"byte_end":157245,"line_start":281,"line_end":281,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":157250,"byte_end":157253,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ If the argument contains invalid metadata value characters, an error is","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":157258,"byte_end":157333,"line_start":283,"line_end":283,"column_start":5,"column_end":80}},{"value":"/ returned. Only visible ASCII characters (32-127) are permitted. Use","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":157338,"byte_end":157409,"line_start":284,"line_end":284,"column_start":5,"column_end":76}},{"value":"/ `from_bytes` to create a `MetadataValue` that includes opaque octets","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":157414,"byte_end":157486,"line_start":285,"line_end":285,"column_start":5,"column_end":77}},{"value":"/ (128-255).","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":157491,"byte_end":157505,"line_start":286,"line_end":286,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":157510,"byte_end":157513,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be replaced in the future by a `TryFrom`","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":157518,"byte_end":157591,"line_start":288,"line_end":288,"column_start":5,"column_end":78}},{"value":"/ implementation once the trait is stabilized in std.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":157596,"byte_end":157651,"line_start":289,"line_end":289,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":157656,"byte_end":157659,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":157664,"byte_end":157678,"line_start":291,"line_end":291,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":157683,"byte_end":157686,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":157691,"byte_end":157698,"line_start":293,"line_end":293,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":157703,"byte_end":157732,"line_start":294,"line_end":294,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::from_str(\"hello\").unwrap();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":157737,"byte_end":157798,"line_start":295,"line_end":295,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(val, \"hello\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":157803,"byte_end":157832,"line_start":296,"line_end":296,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":157837,"byte_end":157844,"line_start":297,"line_end":297,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":157849,"byte_end":157852,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ An invalid value","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":157857,"byte_end":157877,"line_start":299,"line_end":299,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":157882,"byte_end":157885,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":157890,"byte_end":157897,"line_start":301,"line_end":301,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":157902,"byte_end":157931,"line_start":302,"line_end":302,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::from_str(\"\\n\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":157936,"byte_end":157985,"line_start":303,"line_end":303,"column_start":5,"column_end":54}},{"value":"/ assert!(val.is_err());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":157990,"byte_end":158016,"line_start":304,"line_end":304,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":158021,"byte_end":158028,"line_start":305,"line_end":305,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":158033,"byte_end":158042,"line_start":306,"line_end":306,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":916},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":158781,"byte_end":158789,"line_start":329,"line_end":329,"column_start":12,"column_end":20},"name":"from_key","qualname":"<MetadataValue<Ascii>>::from_key","value":"pub fn from_key<KeyVE: ValueEncoding>(MetadataKey<KeyVE>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Converts a MetadataKey into a MetadataValue<Ascii>.","sig":null,"attributes":[{"value":"/ Converts a MetadataKey into a MetadataValue<Ascii>.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":158338,"byte_end":158393,"line_start":316,"line_end":316,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":158398,"byte_end":158401,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ Since every valid MetadataKey is a valid MetadataValue this is done","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":158406,"byte_end":158477,"line_start":318,"line_end":318,"column_start":5,"column_end":76}},{"value":"/ infallibly.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":158482,"byte_end":158497,"line_start":319,"line_end":319,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":158502,"byte_end":158505,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":158510,"byte_end":158524,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":158529,"byte_end":158532,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":158537,"byte_end":158544,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":158549,"byte_end":158578,"line_start":324,"line_end":324,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::from_key::<Ascii>(\"accept\".parse().unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":158583,"byte_end":158662,"line_start":325,"line_end":325,"column_start":5,"column_end":84}},{"value":"/ assert_eq!(val, AsciiMetadataValue::try_from_bytes(b\"accept\").unwrap());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":158667,"byte_end":158743,"line_start":326,"line_end":326,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":158748,"byte_end":158755,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":158760,"byte_end":158769,"line_start":328,"line_end":328,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":918},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":159418,"byte_end":159421,"line_start":348,"line_end":348,"column_start":12,"column_end":15},"name":"len","qualname":"<MetadataValue<Ascii>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of `self`, in bytes.","sig":null,"attributes":[{"value":"/ Returns the length of `self`, in bytes.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":158877,"byte_end":158920,"line_start":333,"line_end":333,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":158925,"byte_end":158928,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ This method is not available for MetadataValue<Binary> because that","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":158933,"byte_end":159004,"line_start":335,"line_end":335,"column_start":5,"column_end":76}},{"value":"/ cannot be implemented in constant time, which most people would probably","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":159009,"byte_end":159085,"line_start":336,"line_end":336,"column_start":5,"column_end":81}},{"value":"/ expect. To get the length of MetadataValue<Binary>, convert it to a","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":159090,"byte_end":159161,"line_start":337,"line_end":337,"column_start":5,"column_end":76}},{"value":"/ Bytes value and measure its length.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":159166,"byte_end":159205,"line_start":338,"line_end":338,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":159210,"byte_end":159213,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":159218,"byte_end":159232,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":159237,"byte_end":159240,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":159245,"byte_end":159252,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":159257,"byte_end":159286,"line_start":343,"line_end":343,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::from_static(\"hello\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":159291,"byte_end":159346,"line_start":344,"line_end":344,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(val.len(), 5);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":159351,"byte_end":159380,"line_start":345,"line_end":345,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":159385,"byte_end":159392,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":159397,"byte_end":159406,"line_start":347,"line_end":347,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":919},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":159894,"byte_end":159900,"line_start":365,"line_end":365,"column_start":12,"column_end":18},"name":"to_str","qualname":"<MetadataValue<Ascii>>::to_str","value":"pub fn to_str(&Self) -> Result<&str, ToStrError>","parent":null,"children":[],"decl_id":null,"docs":" Yields a `&str` slice if the `MetadataValue` only contains visible ASCII\n chars.","sig":null,"attributes":[{"value":"/ Yields a `&str` slice if the `MetadataValue` only contains visible ASCII","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":159476,"byte_end":159552,"line_start":352,"line_end":352,"column_start":5,"column_end":81}},{"value":"/ chars.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":159557,"byte_end":159567,"line_start":353,"line_end":353,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":159572,"byte_end":159575,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ This function will perform a scan of the metadata value, checking all the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":159580,"byte_end":159657,"line_start":355,"line_end":355,"column_start":5,"column_end":82}},{"value":"/ characters.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":159662,"byte_end":159677,"line_start":356,"line_end":356,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":159682,"byte_end":159685,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":159690,"byte_end":159704,"line_start":358,"line_end":358,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":159709,"byte_end":159712,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":159717,"byte_end":159724,"line_start":360,"line_end":360,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":159729,"byte_end":159758,"line_start":361,"line_end":361,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::from_static(\"hello\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":159763,"byte_end":159818,"line_start":362,"line_end":362,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(val.to_str().unwrap(), \"hello\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":159823,"byte_end":159870,"line_start":363,"line_end":363,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":159875,"byte_end":159882,"line_start":364,"line_end":364,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":921},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":160323,"byte_end":160331,"line_start":380,"line_end":380,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<MetadataValue<Ascii>>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Converts a `MetadataValue` to a byte slice. For Binary values, use\n `to_bytes`.","sig":null,"attributes":[{"value":"/ Converts a `MetadataValue` to a byte slice. For Binary values, use","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":160008,"byte_end":160078,"line_start":369,"line_end":369,"column_start":5,"column_end":75}},{"value":"/ `to_bytes`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":160083,"byte_end":160098,"line_start":370,"line_end":370,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":160103,"byte_end":160106,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":160111,"byte_end":160125,"line_start":372,"line_end":372,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":160130,"byte_end":160133,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":160138,"byte_end":160145,"line_start":374,"line_end":374,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":160150,"byte_end":160179,"line_start":375,"line_end":375,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::from_static(\"hello\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":160184,"byte_end":160239,"line_start":376,"line_end":376,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(val.as_bytes(), b\"hello\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":160244,"byte_end":160285,"line_start":377,"line_end":377,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":160290,"byte_end":160297,"line_start":378,"line_end":378,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":160302,"byte_end":160311,"line_start":379,"line_end":379,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":923},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":160704,"byte_end":160714,"line_start":396,"line_end":396,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<MetadataValue<Binary>>::from_bytes","value":"pub fn from_bytes(&[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert a byte slice to a `MetadataValue<Binary>`.","sig":null,"attributes":[{"value":"/ Convert a byte slice to a `MetadataValue<Binary>`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":160422,"byte_end":160476,"line_start":386,"line_end":386,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":160481,"byte_end":160484,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":160489,"byte_end":160503,"line_start":388,"line_end":388,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":160508,"byte_end":160511,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":160516,"byte_end":160523,"line_start":390,"line_end":390,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":160528,"byte_end":160557,"line_start":391,"line_end":391,"column_start":5,"column_end":34}},{"value":"/ let val = BinaryMetadataValue::from_bytes(b\"hello\\xfa\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":160562,"byte_end":160622,"line_start":392,"line_end":392,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(val, &b\"hello\\xfa\"[..]);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":160627,"byte_end":160666,"line_start":393,"line_end":393,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":160671,"byte_end":160678,"line_start":394,"line_end":394,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":160683,"byte_end":160692,"line_start":395,"line_end":395,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":1045},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\mod.rs","byte_start":45544,"byte_end":45550,"line_start":34,"line_end":34,"column_start":9,"column_end":15},"name":"errors","qualname":"::metadata::errors","value":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\mod.rs","parent":null,"children":[{"krate":0,"index":1046},{"krate":0,"index":1047},{"krate":0,"index":1048},{"krate":0,"index":1049}],"decl_id":null,"docs":" The metadata::errors module contains types for errors that can occur\n while handling gRPC custom metadata.\n","sig":null,"attributes":[{"value":"/ The metadata::errors module contains types for errors that can occur","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\mod.rs","byte_start":45422,"byte_end":45494,"line_start":32,"line_end":32,"column_start":1,"column_end":73}},{"value":"/ while handling gRPC custom metadata.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\mod.rs","byte_start":45495,"byte_end":45535,"line_start":33,"line_end":33,"column_start":1,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":1050},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"server","qualname":"::server","value":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\mod.rs","parent":null,"children":[{"krate":0,"index":1051},{"krate":0,"index":1123},{"krate":0,"index":1186},{"krate":0,"index":1187},{"krate":0,"index":1188},{"krate":0,"index":1189},{"krate":0,"index":1190},{"krate":0,"index":1191}],"decl_id":null,"docs":" Generic server implementation.","sig":null,"attributes":[{"value":"! Generic server implementation.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\mod.rs","byte_start":172061,"byte_end":172095,"line_start":1,"line_end":1,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\mod.rs","byte_start":172096,"byte_end":172099,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains the low level components to build a gRPC server. It","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\mod.rs","byte_start":172100,"byte_end":172176,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"! provides a codec agnostic gRPC server handler.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\mod.rs","byte_start":172177,"byte_end":172227,"line_start":4,"line_end":4,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\mod.rs","byte_start":172228,"byte_end":172231,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! The items in this module are generally designed to be used by some codegen","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\mod.rs","byte_start":172232,"byte_end":172310,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"! tool that will provide the user some custom way to implement the server that","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\mod.rs","byte_start":172311,"byte_end":172391,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"! will implement the proper gRPC service. Thusly, they are a bit hard to use","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\mod.rs","byte_start":172392,"byte_end":172470,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"! by hand.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\mod.rs","byte_start":172471,"byte_end":172483,"line_start":9,"line_end":9,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":1075},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\grpc.rs","byte_start":173597,"byte_end":173601,"line_start":32,"line_end":32,"column_start":12,"column_end":16},"name":"Grpc","qualname":"::server::grpc::Grpc","value":"Grpc {  }","parent":null,"children":[{"krate":0,"index":1077},{"krate":0,"index":1078}],"decl_id":null,"docs":" A gRPC Server handler.","sig":null,"attributes":[{"value":"/ A gRPC Server handler.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\grpc.rs","byte_start":173197,"byte_end":173223,"line_start":23,"line_end":23,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\grpc.rs","byte_start":173224,"byte_end":173227,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This will wrap some inner [`Codec`] and provide utilities to handle","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\grpc.rs","byte_start":173228,"byte_end":173299,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ inbound unary, client side streaming, server side streaming, and","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\grpc.rs","byte_start":173300,"byte_end":173368,"line_start":26,"line_end":26,"column_start":1,"column_end":69}},{"value":"/ bi-directional streaming.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\grpc.rs","byte_start":173369,"byte_end":173398,"line_start":27,"line_end":27,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\grpc.rs","byte_start":173399,"byte_end":173402,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Each request handler method accepts some service that implements the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\grpc.rs","byte_start":173403,"byte_end":173475,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ corresponding service trait and a http request that contains some body that","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\grpc.rs","byte_start":173476,"byte_end":173555,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ implements some [`Body`].","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\grpc.rs","byte_start":173556,"byte_end":173585,"line_start":31,"line_end":31,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1081},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\grpc.rs","byte_start":173795,"byte_end":173798,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<Grpc<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new gRPC server with the provided [`Codec`].\n","sig":null,"attributes":[{"value":"/ Creates a new gRPC server with the provided [`Codec`].","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\grpc.rs","byte_start":173725,"byte_end":173783,"line_start":42,"line_end":42,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1082},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\grpc.rs","byte_start":174047,"byte_end":174063,"line_start":52,"line_end":52,"column_start":12,"column_end":28},"name":"with_interceptor","qualname":"<Grpc<T>>::with_interceptor","value":"pub fn with_interceptor<impl Into<Interceptor>: Into<Interceptor>>(T,\n                                                                   impl Into<Interceptor>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new gRPC server with the provided [`Codec`] and will apply the provided\n interceptor on each inbound request.\n","sig":null,"attributes":[{"value":"/ Creates a new gRPC server with the provided [`Codec`] and will apply the provided","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\grpc.rs","byte_start":173905,"byte_end":173990,"line_start":50,"line_end":50,"column_start":5,"column_end":90}},{"value":"/ interceptor on each inbound request.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\grpc.rs","byte_start":173995,"byte_end":174035,"line_start":51,"line_end":51,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1084},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\grpc.rs","byte_start":174284,"byte_end":174289,"line_start":60,"line_end":60,"column_start":18,"column_end":23},"name":"unary","qualname":"<Grpc<T>>::unary","value":"pub async fn unary<'_, S, B>(&'_ mut Self, S, http::Request<B>)\n-> /*impl Trait*/ where S: UnaryService<T::Decode, Response = T::Encode>,\nB: Body + Send + Sync + 'static, B::Error: Into<crate::Error> + Send","parent":null,"children":[],"decl_id":null,"docs":" Handle a single unary gRPC request.\n","sig":null,"attributes":[{"value":"/ Handle a single unary gRPC request.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\grpc.rs","byte_start":174227,"byte_end":174266,"line_start":59,"line_end":59,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1091},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\grpc.rs","byte_start":175196,"byte_end":175212,"line_start":91,"line_end":91,"column_start":18,"column_end":34},"name":"server_streaming","qualname":"<Grpc<T>>::server_streaming","value":"pub async fn server_streaming<'_, S, B>(&'_ mut Self, S, http::Request<B>)\n-> /*impl Trait*/ where S: ServerStreamingService<T::Decode, Response =\nT::Encode>, S::ResponseStream: Send + Sync + 'static, B: Body + Send + Sync +\n'static, B::Error: Into<crate::Error> + Send","parent":null,"children":[],"decl_id":null,"docs":" Handle a server side streaming request.\n","sig":null,"attributes":[{"value":"/ Handle a server side streaming request.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\grpc.rs","byte_start":175135,"byte_end":175178,"line_start":90,"line_end":90,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\grpc.rs","byte_start":175992,"byte_end":176008,"line_start":117,"line_end":117,"column_start":18,"column_end":34},"name":"client_streaming","qualname":"<Grpc<T>>::client_streaming","value":"pub async fn client_streaming<'_, S, B>(&'_ mut Self, S, http::Request<B>)\n-> /*impl Trait*/ where S: ClientStreamingService<T::Decode, Response =\nT::Encode>, B: Body + Send + Sync + 'static, B::Error: Into<crate::Error> +\nSend + 'static","parent":null,"children":[],"decl_id":null,"docs":" Handle a client side streaming gRPC request.\n","sig":null,"attributes":[{"value":"/ Handle a client side streaming gRPC request.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\grpc.rs","byte_start":175926,"byte_end":175974,"line_start":116,"line_end":116,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1103},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\grpc.rs","byte_start":176672,"byte_end":176681,"line_start":137,"line_end":137,"column_start":18,"column_end":27},"name":"streaming","qualname":"<Grpc<T>>::streaming","value":"pub async fn streaming<'_, S, B>(&'_ mut Self, S, http::Request<B>)\n-> /*impl Trait*/ where S: StreamingService<T::Decode, Response = T::Encode> +\nSend, S::ResponseStream: Send + Sync + 'static, B: Body + Send + Sync +\n'static, B::Error: Into<crate::Error> + Send","parent":null,"children":[],"decl_id":null,"docs":" Handle a bi-directional streaming gRPC request.\n","sig":null,"attributes":[{"value":"/ Handle a bi-directional streaming gRPC request.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\grpc.rs","byte_start":176603,"byte_end":176654,"line_start":136,"line_end":136,"column_start":5,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":1132},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":179983,"byte_end":179995,"line_start":10,"line_end":10,"column_start":11,"column_end":23},"name":"UnaryService","qualname":"::server::service::UnaryService","value":"UnaryService<R>","parent":null,"children":[{"krate":0,"index":1134},{"krate":0,"index":1135},{"krate":0,"index":1136}],"decl_id":null,"docs":" A specialization of tower_service::Service.","sig":null,"attributes":[{"value":"/ A specialization of tower_service::Service.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":179798,"byte_end":179845,"line_start":6,"line_end":6,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":179846,"byte_end":179849,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Existing tower_service::Service implementations with the correct form will","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":179850,"byte_end":179928,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ automatically implement `UnaryService`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":179929,"byte_end":179972,"line_start":9,"line_end":9,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":1134},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":180049,"byte_end":180057,"line_start":12,"line_end":12,"column_start":10,"column_end":18},"name":"Response","qualname":"::server::service::UnaryService::Response","value":"type Response;","parent":{"krate":0,"index":1132},"children":[],"decl_id":null,"docs":" Protobuf response message type\n","sig":null,"attributes":[{"value":"/ Protobuf response message type","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":180005,"byte_end":180039,"line_start":11,"line_end":11,"column_start":5,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":1135},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":180093,"byte_end":180099,"line_start":15,"line_end":15,"column_start":10,"column_end":16},"name":"Future","qualname":"::server::service::UnaryService::Future","value":"type Future: Future<Output = Result<Response<Self::Response>, Status>>;","parent":{"krate":0,"index":1132},"children":[],"decl_id":null,"docs":" Response future\n","sig":null,"attributes":[{"value":"/ Response future","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":180064,"byte_end":180083,"line_start":14,"line_end":14,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1136},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":180193,"byte_end":180197,"line_start":18,"line_end":18,"column_start":8,"column_end":12},"name":"call","qualname":"::server::service::UnaryService::call","value":"pub fn call(&mut Self, Request<R>) -> Self::Future","parent":{"krate":0,"index":1132},"children":[],"decl_id":null,"docs":" Call the service\n","sig":null,"attributes":[{"value":"/ Call the service","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":180165,"byte_end":180185,"line_start":17,"line_end":17,"column_start":5,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":1144},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":180732,"byte_end":180754,"line_start":37,"line_end":37,"column_start":11,"column_end":33},"name":"ServerStreamingService","qualname":"::server::service::ServerStreamingService","value":"ServerStreamingService<R>","parent":null,"children":[{"krate":0,"index":1146},{"krate":0,"index":1147},{"krate":0,"index":1148},{"krate":0,"index":1149}],"decl_id":null,"docs":" A specialization of tower_service::Service.","sig":null,"attributes":[{"value":"/ A specialization of tower_service::Service.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":180537,"byte_end":180584,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":180585,"byte_end":180588,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Existing tower_service::Service implementations with the correct form will","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":180589,"byte_end":180667,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ automatically implement `ServerStreamingService`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":180668,"byte_end":180721,"line_start":36,"line_end":36,"column_start":1,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":1146},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":180808,"byte_end":180816,"line_start":39,"line_end":39,"column_start":10,"column_end":18},"name":"Response","qualname":"::server::service::ServerStreamingService::Response","value":"type Response;","parent":{"krate":0,"index":1144},"children":[],"decl_id":null,"docs":" Protobuf response message type\n","sig":null,"attributes":[{"value":"/ Protobuf response message type","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":180764,"byte_end":180798,"line_start":38,"line_end":38,"column_start":5,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":1147},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":180873,"byte_end":180887,"line_start":42,"line_end":42,"column_start":10,"column_end":24},"name":"ResponseStream","qualname":"::server::service::ServerStreamingService::ResponseStream","value":"type ResponseStream: Stream<Item = Result<Self::Response, Status>>;","parent":{"krate":0,"index":1144},"children":[],"decl_id":null,"docs":" Stream of outbound response messages\n","sig":null,"attributes":[{"value":"/ Stream of outbound response messages","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":180823,"byte_end":180863,"line_start":41,"line_end":41,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1148},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":180970,"byte_end":180976,"line_start":45,"line_end":45,"column_start":10,"column_end":16},"name":"Future","qualname":"::server::service::ServerStreamingService::Future","value":"type Future: Future<Output = Result<Response<Self::ResponseStream>, Status>>;","parent":{"krate":0,"index":1144},"children":[],"decl_id":null,"docs":" Response future\n","sig":null,"attributes":[{"value":"/ Response future","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":180941,"byte_end":180960,"line_start":44,"line_end":44,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1149},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":181076,"byte_end":181080,"line_start":48,"line_end":48,"column_start":8,"column_end":12},"name":"call","qualname":"::server::service::ServerStreamingService::call","value":"pub fn call(&mut Self, Request<R>) -> Self::Future","parent":{"krate":0,"index":1144},"children":[],"decl_id":null,"docs":" Call the service\n","sig":null,"attributes":[{"value":"/ Call the service","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":181048,"byte_end":181068,"line_start":47,"line_end":47,"column_start":5,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":1159},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":181705,"byte_end":181727,"line_start":69,"line_end":69,"column_start":11,"column_end":33},"name":"ClientStreamingService","qualname":"::server::service::ClientStreamingService","value":"ClientStreamingService<R>","parent":null,"children":[{"krate":0,"index":1161},{"krate":0,"index":1162},{"krate":0,"index":1163}],"decl_id":null,"docs":" A specialization of tower_service::Service.","sig":null,"attributes":[{"value":"/ A specialization of tower_service::Service.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":181510,"byte_end":181557,"line_start":65,"line_end":65,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":181558,"byte_end":181561,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Existing tower_service::Service implementations with the correct form will","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":181562,"byte_end":181640,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ automatically implement `ClientStreamingService`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":181641,"byte_end":181694,"line_start":68,"line_end":68,"column_start":1,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":1161},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":181781,"byte_end":181789,"line_start":71,"line_end":71,"column_start":10,"column_end":18},"name":"Response","qualname":"::server::service::ClientStreamingService::Response","value":"type Response;","parent":{"krate":0,"index":1159},"children":[],"decl_id":null,"docs":" Protobuf response message type\n","sig":null,"attributes":[{"value":"/ Protobuf response message type","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":181737,"byte_end":181771,"line_start":70,"line_end":70,"column_start":5,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":1162},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":181825,"byte_end":181831,"line_start":74,"line_end":74,"column_start":10,"column_end":16},"name":"Future","qualname":"::server::service::ClientStreamingService::Future","value":"type Future: Future<Output = Result<Response<Self::Response>, Status>>;","parent":{"krate":0,"index":1159},"children":[],"decl_id":null,"docs":" Response future\n","sig":null,"attributes":[{"value":"/ Response future","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":181796,"byte_end":181815,"line_start":73,"line_end":73,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1163},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":181925,"byte_end":181929,"line_start":77,"line_end":77,"column_start":8,"column_end":12},"name":"call","qualname":"::server::service::ClientStreamingService::call","value":"pub fn call(&mut Self, Request<Streaming<R>>) -> Self::Future","parent":{"krate":0,"index":1159},"children":[],"decl_id":null,"docs":" Call the service\n","sig":null,"attributes":[{"value":"/ Call the service","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":181897,"byte_end":181917,"line_start":76,"line_end":76,"column_start":5,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":1171},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":182501,"byte_end":182517,"line_start":96,"line_end":96,"column_start":11,"column_end":27},"name":"StreamingService","qualname":"::server::service::StreamingService","value":"StreamingService<R>","parent":null,"children":[{"krate":0,"index":1173},{"krate":0,"index":1174},{"krate":0,"index":1175},{"krate":0,"index":1176}],"decl_id":null,"docs":" A specialization of tower_service::Service.","sig":null,"attributes":[{"value":"/ A specialization of tower_service::Service.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":182312,"byte_end":182359,"line_start":92,"line_end":92,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":182360,"byte_end":182363,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ Existing tower_service::Service implementations with the correct form will","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":182364,"byte_end":182442,"line_start":94,"line_end":94,"column_start":1,"column_end":79}},{"value":"/ automatically implement `StreamingService`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":182443,"byte_end":182490,"line_start":95,"line_end":95,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":1173},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":182571,"byte_end":182579,"line_start":98,"line_end":98,"column_start":10,"column_end":18},"name":"Response","qualname":"::server::service::StreamingService::Response","value":"type Response;","parent":{"krate":0,"index":1171},"children":[],"decl_id":null,"docs":" Protobuf response message type\n","sig":null,"attributes":[{"value":"/ Protobuf response message type","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":182527,"byte_end":182561,"line_start":97,"line_end":97,"column_start":5,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":1174},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":182636,"byte_end":182650,"line_start":101,"line_end":101,"column_start":10,"column_end":24},"name":"ResponseStream","qualname":"::server::service::StreamingService::ResponseStream","value":"type ResponseStream: Stream<Item = Result<Self::Response, Status>>;","parent":{"krate":0,"index":1171},"children":[],"decl_id":null,"docs":" Stream of outbound response messages\n","sig":null,"attributes":[{"value":"/ Stream of outbound response messages","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":182586,"byte_end":182626,"line_start":100,"line_end":100,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1175},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":182733,"byte_end":182739,"line_start":104,"line_end":104,"column_start":10,"column_end":16},"name":"Future","qualname":"::server::service::StreamingService::Future","value":"type Future: Future<Output = Result<Response<Self::ResponseStream>, Status>>;","parent":{"krate":0,"index":1171},"children":[],"decl_id":null,"docs":" Response future\n","sig":null,"attributes":[{"value":"/ Response future","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":182704,"byte_end":182723,"line_start":103,"line_end":103,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1176},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":182839,"byte_end":182843,"line_start":107,"line_end":107,"column_start":8,"column_end":12},"name":"call","qualname":"::server::service::StreamingService::call","value":"pub fn call(&mut Self, Request<Streaming<R>>) -> Self::Future","parent":{"krate":0,"index":1171},"children":[],"decl_id":null,"docs":" Call the service\n","sig":null,"attributes":[{"value":"/ Call the service","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":182811,"byte_end":182831,"line_start":106,"line_end":106,"column_start":5,"column_end":25}}]},{"kind":"Mod","id":{"krate":0,"index":1192},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"transport","qualname":"::transport","value":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","parent":null,"children":[{"krate":0,"index":1193},{"krate":0,"index":1356},{"krate":0,"index":1607},{"krate":0,"index":1632},{"krate":0,"index":2054},{"krate":0,"index":2067},{"krate":0,"index":2068},{"krate":0,"index":2069},{"krate":0,"index":2070},{"krate":0,"index":2071},{"krate":0,"index":2072},{"krate":0,"index":2073},{"krate":0,"index":2074},{"krate":0,"index":2075},{"krate":0,"index":2076},{"krate":0,"index":2077},{"krate":0,"index":2078},{"krate":0,"index":2079},{"krate":0,"index":2080},{"krate":0,"index":2081}],"decl_id":null,"docs":" Batteries included server and client.","sig":null,"attributes":[{"value":"cfg(feature = \"transport\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":3484,"byte_end":3513,"line_start":85,"line_end":85,"column_start":1,"column_end":30}},{"value":"! Batteries included server and client.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":183300,"byte_end":183341,"line_start":1,"line_end":1,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":183342,"byte_end":183345,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module provides a set of batteries included, fully featured and","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":183346,"byte_end":183418,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"! fast set of HTTP/2 server and client's. These components each provide a or","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":183419,"byte_end":183497,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"! `rustls` tls backend when the respective feature flag is enabled, and","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":183498,"byte_end":183571,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"! provides builders to configure transport behavior.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":183572,"byte_end":183626,"line_start":6,"line_end":6,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":183627,"byte_end":183630,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! # Features","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":183631,"byte_end":183645,"line_start":8,"line_end":8,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":183646,"byte_end":183649,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! - TLS support via [rustls].","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":183650,"byte_end":183681,"line_start":10,"line_end":10,"column_start":1,"column_end":32}},{"value":"! - Load balancing","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":183682,"byte_end":183702,"line_start":11,"line_end":11,"column_start":1,"column_end":21}},{"value":"! - Timeouts","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":183703,"byte_end":183717,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"! - Concurrency Limits","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":183718,"byte_end":183742,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"! - Rate limiting","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":183743,"byte_end":183762,"line_start":14,"line_end":14,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":183763,"byte_end":183766,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":183767,"byte_end":183781,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":183782,"byte_end":183785,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! ## Client","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":183786,"byte_end":183799,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":183800,"byte_end":183803,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":183804,"byte_end":183817,"line_start":20,"line_end":20,"column_start":1,"column_end":14}},{"value":"! # use tonic::transport::{Channel, Certificate, ClientTlsConfig};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":183818,"byte_end":183886,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"! # use std::time::Duration;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":183887,"byte_end":183917,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"! # use tonic::body::BoxBody;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":183918,"byte_end":183949,"line_start":23,"line_end":23,"column_start":1,"column_end":32}},{"value":"! # use tonic::client::GrpcService;;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":183950,"byte_end":183988,"line_start":24,"line_end":24,"column_start":1,"column_end":39}},{"value":"! # use http::Request;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":183989,"byte_end":184013,"line_start":25,"line_end":25,"column_start":1,"column_end":25}},{"value":"! # #[cfg(feature = \"rustls\")]","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":184014,"byte_end":184046,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"! # async fn do_thing() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":184047,"byte_end":184116,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"! let cert = std::fs::read_to_string(\"ca.pem\")?;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":184117,"byte_end":184167,"line_start":28,"line_end":28,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":184168,"byte_end":184171,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! let mut channel = Channel::from_static(\"https://example.com\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":184172,"byte_end":184237,"line_start":30,"line_end":30,"column_start":1,"column_end":66}},{"value":"!     .tls_config(ClientTlsConfig::new()","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":184238,"byte_end":184280,"line_start":31,"line_end":31,"column_start":1,"column_end":43}},{"value":"!         .ca_certificate(Certificate::from_pem(&cert))","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":184281,"byte_end":184338,"line_start":32,"line_end":32,"column_start":1,"column_end":58}},{"value":"!         .domain_name(\"example.com\".to_string()))?","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":184339,"byte_end":184392,"line_start":33,"line_end":33,"column_start":1,"column_end":54}},{"value":"!     .timeout(Duration::from_secs(5))","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":184393,"byte_end":184433,"line_start":34,"line_end":34,"column_start":1,"column_end":41}},{"value":"!     .rate_limit(5, Duration::from_secs(1))","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":184434,"byte_end":184480,"line_start":35,"line_end":35,"column_start":1,"column_end":47}},{"value":"!     .concurrency_limit(256)","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":184481,"byte_end":184512,"line_start":36,"line_end":36,"column_start":1,"column_end":32}},{"value":"!     .connect()","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":184513,"byte_end":184531,"line_start":37,"line_end":37,"column_start":1,"column_end":19}},{"value":"!     .await?;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":184532,"byte_end":184548,"line_start":38,"line_end":38,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":184549,"byte_end":184552,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"! channel.call(Request::new(BoxBody::empty())).await?;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":184553,"byte_end":184609,"line_start":40,"line_end":40,"column_start":1,"column_end":57}},{"value":"! # Ok(())","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":184610,"byte_end":184622,"line_start":41,"line_end":41,"column_start":1,"column_end":13}},{"value":"! # }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":184623,"byte_end":184630,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":184631,"byte_end":184638,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":184639,"byte_end":184642,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! ## Server","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":184643,"byte_end":184656,"line_start":45,"line_end":45,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":184657,"byte_end":184660,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":184661,"byte_end":184674,"line_start":47,"line_end":47,"column_start":1,"column_end":14}},{"value":"! # use tonic::transport::{Server, Identity, ServerTlsConfig};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":184675,"byte_end":184739,"line_start":48,"line_end":48,"column_start":1,"column_end":65}},{"value":"! # use tower::{Service, service_fn};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":184740,"byte_end":184779,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"! # use futures_util::future::{err, ok};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":184780,"byte_end":184822,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"! # #[cfg(feature = \"rustls\")]","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":184823,"byte_end":184855,"line_start":51,"line_end":51,"column_start":1,"column_end":33}},{"value":"! # async fn do_thing() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":184856,"byte_end":184925,"line_start":52,"line_end":52,"column_start":1,"column_end":70}},{"value":"! # #[derive(Clone)]","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":184926,"byte_end":184948,"line_start":53,"line_end":53,"column_start":1,"column_end":23}},{"value":"! # pub struct Svc;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":184949,"byte_end":184970,"line_start":54,"line_end":54,"column_start":1,"column_end":22}},{"value":"! # impl Service<hyper::Request<hyper::Body>> for Svc {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":184971,"byte_end":185028,"line_start":55,"line_end":55,"column_start":1,"column_end":58}},{"value":"! #   type Response = hyper::Response<tonic::body::BoxBody>;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":185029,"byte_end":185091,"line_start":56,"line_end":56,"column_start":1,"column_end":63}},{"value":"! #   type Error = tonic::Status;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":185092,"byte_end":185127,"line_start":57,"line_end":57,"column_start":1,"column_end":36}},{"value":"! #   type Future = futures_util::future::Ready<Result<Self::Response, Self::Error>>;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":185128,"byte_end":185215,"line_start":58,"line_end":58,"column_start":1,"column_end":88}},{"value":"! #   fn poll_ready(&mut self, _cx: &mut std::task::Context<'_>) -> std::task::Poll<Result<(), Self::Error>> {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":185216,"byte_end":185328,"line_start":59,"line_end":59,"column_start":1,"column_end":113}},{"value":"! #       Ok(()).into()","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":185329,"byte_end":185354,"line_start":60,"line_end":60,"column_start":1,"column_end":26}},{"value":"! #  }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":185355,"byte_end":185363,"line_start":61,"line_end":61,"column_start":1,"column_end":9}},{"value":"! #   fn call(&mut self, _req: hyper::Request<hyper::Body>) -> Self::Future {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":185364,"byte_end":185443,"line_start":62,"line_end":62,"column_start":1,"column_end":80}},{"value":"! #       unimplemented!()","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":185444,"byte_end":185472,"line_start":63,"line_end":63,"column_start":1,"column_end":29}},{"value":"! #   }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":185473,"byte_end":185482,"line_start":64,"line_end":64,"column_start":1,"column_end":10}},{"value":"! # }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":185483,"byte_end":185490,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"! # impl tonic::transport::NamedService for Svc {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":185491,"byte_end":185542,"line_start":66,"line_end":66,"column_start":1,"column_end":52}},{"value":"! # const NAME: &'static str = \"some_svc\";","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":185543,"byte_end":185587,"line_start":67,"line_end":67,"column_start":1,"column_end":45}},{"value":"! # }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":185588,"byte_end":185595,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"! # let my_svc = Svc;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":185596,"byte_end":185619,"line_start":69,"line_end":69,"column_start":1,"column_end":24}},{"value":"! let cert = std::fs::read_to_string(\"server.pem\")?;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":185620,"byte_end":185674,"line_start":70,"line_end":70,"column_start":1,"column_end":55}},{"value":"! let key = std::fs::read_to_string(\"server.key\")?;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":185675,"byte_end":185728,"line_start":71,"line_end":71,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":185729,"byte_end":185732,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"! let addr = \"[::1]:50051\".parse()?;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":185733,"byte_end":185771,"line_start":73,"line_end":73,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":185772,"byte_end":185775,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"! Server::builder()","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":185776,"byte_end":185797,"line_start":75,"line_end":75,"column_start":1,"column_end":22}},{"value":"!     .tls_config(ServerTlsConfig::new()","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":185798,"byte_end":185840,"line_start":76,"line_end":76,"column_start":1,"column_end":43}},{"value":"!         .identity(Identity::from_pem(&cert, &key)))?","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":185841,"byte_end":185897,"line_start":77,"line_end":77,"column_start":1,"column_end":57}},{"value":"!     .concurrency_limit_per_connection(256)","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":185898,"byte_end":185944,"line_start":78,"line_end":78,"column_start":1,"column_end":47}},{"value":"!     .add_service(my_svc)","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":185945,"byte_end":185973,"line_start":79,"line_end":79,"column_start":1,"column_end":29}},{"value":"!     .serve(addr)","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":185974,"byte_end":185994,"line_start":80,"line_end":80,"column_start":1,"column_end":21}},{"value":"!     .await?;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":185995,"byte_end":186011,"line_start":81,"line_end":81,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":186012,"byte_end":186015,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"! # Ok(())","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":186016,"byte_end":186028,"line_start":83,"line_end":83,"column_start":1,"column_end":13}},{"value":"! # }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":186029,"byte_end":186036,"line_start":84,"line_end":84,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":186037,"byte_end":186044,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":186045,"byte_end":186048,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"! [rustls]: https://docs.rs/rustls/0.16.0/rustls/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":186049,"byte_end":186100,"line_start":87,"line_end":87,"column_start":1,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":1193},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"channel","qualname":"::transport::channel","value":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","parent":null,"children":[{"krate":0,"index":1194},{"krate":0,"index":1257},{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":1281},{"krate":0,"index":1282},{"krate":0,"index":1283},{"krate":0,"index":1284},{"krate":0,"index":1285},{"krate":0,"index":1286},{"krate":0,"index":1287},{"krate":0,"index":1288},{"krate":0,"index":1289},{"krate":0,"index":1290},{"krate":0,"index":1291},{"krate":0,"index":1292},{"krate":0,"index":1293},{"krate":0,"index":1294},{"krate":0,"index":1295},{"krate":0,"index":3876},{"krate":0,"index":1296},{"krate":0,"index":1297},{"krate":0,"index":1298},{"krate":0,"index":1299},{"krate":0,"index":1300},{"krate":0,"index":1301},{"krate":0,"index":1302},{"krate":0,"index":1303},{"krate":0,"index":1304},{"krate":0,"index":1305},{"krate":0,"index":1306},{"krate":0,"index":1307},{"krate":0,"index":1308},{"krate":0,"index":1309},{"krate":0,"index":1310},{"krate":0,"index":1311},{"krate":0,"index":1312},{"krate":0,"index":1313},{"krate":0,"index":1314},{"krate":0,"index":1315},{"krate":0,"index":1316},{"krate":0,"index":1317},{"krate":0,"index":1318},{"krate":0,"index":1319},{"krate":0,"index":1320},{"krate":0,"index":2797},{"krate":0,"index":2799},{"krate":0,"index":1321},{"krate":0,"index":1323},{"krate":0,"index":1341},{"krate":0,"index":1348},{"krate":0,"index":1352},{"krate":0,"index":1354}],"decl_id":null,"docs":" Client implementation and builder.\n","sig":null,"attributes":[{"value":"! Client implementation and builder.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":186613,"byte_end":186651,"line_start":1,"line_end":1,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":2771},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":194137,"byte_end":194145,"line_start":21,"line_end":21,"column_start":12,"column_end":20},"name":"Endpoint","qualname":"::transport::channel::endpoint::Endpoint","value":"Endpoint {  }","parent":null,"children":[{"krate":0,"index":2772},{"krate":0,"index":2773},{"krate":0,"index":2774},{"krate":0,"index":2775},{"krate":0,"index":2776},{"krate":0,"index":2777},{"krate":0,"index":2778},{"krate":0,"index":2779},{"krate":0,"index":2780},{"krate":0,"index":2781},{"krate":0,"index":2782},{"krate":0,"index":2783},{"krate":0,"index":2784}],"decl_id":null,"docs":" Channel builder.","sig":null,"attributes":[{"value":"/ Channel builder.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":194020,"byte_end":194040,"line_start":17,"line_end":17,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":194041,"byte_end":194044,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This struct is used to build and configure HTTP/2 channels.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":194045,"byte_end":194108,"line_start":19,"line_end":19,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1212},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":194964,"byte_end":194967,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"new","qualname":"<Endpoint>::new","value":"pub fn new<D>(D) -> Result<Self, Error> where D: TryInto<Self>,\nD::Error: Into<crate::Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1215},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":195371,"byte_end":195382,"line_start":57,"line_end":57,"column_start":12,"column_end":23},"name":"from_static","qualname":"<Endpoint>::from_static","value":"pub fn from_static(&'static str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert an `Endpoint` from a static string.","sig":null,"attributes":[{"value":"/ Convert an `Endpoint` from a static string.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":195184,"byte_end":195231,"line_start":51,"line_end":51,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":195236,"byte_end":195239,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":195244,"byte_end":195251,"line_start":53,"line_end":53,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Endpoint;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":195256,"byte_end":195293,"line_start":54,"line_end":54,"column_start":5,"column_end":42}},{"value":"/ Endpoint::from_static(\"https://example.com\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":195298,"byte_end":195347,"line_start":55,"line_end":55,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":195352,"byte_end":195359,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1216},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":195680,"byte_end":195691,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"from_shared","qualname":"<Endpoint>::from_shared","value":"pub fn from_shared<impl Into<Bytes>: Into<Bytes>>(impl Into<Bytes>)\n-> Result<Self, InvalidUri>","parent":null,"children":[],"decl_id":null,"docs":" Convert an `Endpoint` from shared bytes.","sig":null,"attributes":[{"value":"/ Convert an `Endpoint` from shared bytes.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":195484,"byte_end":195528,"line_start":62,"line_end":62,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":195533,"byte_end":195536,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":195541,"byte_end":195548,"line_start":64,"line_end":64,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Endpoint;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":195553,"byte_end":195590,"line_start":65,"line_end":65,"column_start":5,"column_end":42}},{"value":"/ Endpoint::from_shared(\"https://example.com\".to_string());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":195595,"byte_end":195656,"line_start":66,"line_end":66,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":195661,"byte_end":195668,"line_start":67,"line_end":67,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1218},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":196115,"byte_end":196122,"line_start":81,"line_end":81,"column_start":12,"column_end":19},"name":"timeout","qualname":"<Endpoint>::timeout","value":"pub fn timeout(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Apply a timeout to each request.","sig":null,"attributes":[{"value":"/ Apply a timeout to each request.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":195835,"byte_end":195871,"line_start":73,"line_end":73,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":195876,"byte_end":195879,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":195884,"byte_end":195891,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Endpoint;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":195896,"byte_end":195933,"line_start":76,"line_end":76,"column_start":5,"column_end":42}},{"value":"/ # use std::time::Duration;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":195938,"byte_end":195968,"line_start":77,"line_end":77,"column_start":5,"column_end":35}},{"value":"/ # let mut builder = Endpoint::from_static(\"https://example.com\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":195973,"byte_end":196042,"line_start":78,"line_end":78,"column_start":5,"column_end":74}},{"value":"/ builder.timeout(Duration::from_secs(5));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":196047,"byte_end":196091,"line_start":79,"line_end":79,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":196096,"byte_end":196103,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1219},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":196570,"byte_end":196583,"line_start":96,"line_end":96,"column_start":12,"column_end":25},"name":"tcp_keepalive","qualname":"<Endpoint>::tcp_keepalive","value":"pub fn tcp_keepalive(Self, Option<Duration>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether TCP keepalive messages are enabled on accepted connections.","sig":null,"attributes":[{"value":"/ Set whether TCP keepalive messages are enabled on accepted connections.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":196245,"byte_end":196320,"line_start":88,"line_end":88,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":196325,"byte_end":196328,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ If `None` is specified, keepalive is disabled, otherwise the duration","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":196333,"byte_end":196406,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ specified will be the time to remain idle before sending TCP keepalive","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":196411,"byte_end":196485,"line_start":91,"line_end":91,"column_start":5,"column_end":79}},{"value":"/ probes.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":196490,"byte_end":196501,"line_start":92,"line_end":92,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":196506,"byte_end":196509,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Default is no keepalive (`None`)","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":196514,"byte_end":196550,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":196555,"byte_end":196558,"line_start":95,"line_end":95,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1220},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":196965,"byte_end":196982,"line_start":110,"line_end":110,"column_start":12,"column_end":29},"name":"concurrency_limit","qualname":"<Endpoint>::concurrency_limit","value":"pub fn concurrency_limit(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Apply a concurrency limit to each request.","sig":null,"attributes":[{"value":"/ Apply a concurrency limit to each request.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":196719,"byte_end":196765,"line_start":103,"line_end":103,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":196770,"byte_end":196773,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":196778,"byte_end":196785,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Endpoint;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":196790,"byte_end":196827,"line_start":106,"line_end":106,"column_start":5,"column_end":42}},{"value":"/ # let mut builder = Endpoint::from_static(\"https://example.com\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":196832,"byte_end":196901,"line_start":107,"line_end":107,"column_start":5,"column_end":74}},{"value":"/ builder.concurrency_limit(256);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":196906,"byte_end":196941,"line_start":108,"line_end":108,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":196946,"byte_end":196953,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1221},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":197406,"byte_end":197416,"line_start":125,"line_end":125,"column_start":12,"column_end":22},"name":"rate_limit","qualname":"<Endpoint>::rate_limit","value":"pub fn rate_limit(Self, u64, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Apply a rate limit to each request.","sig":null,"attributes":[{"value":"/ Apply a rate limit to each request.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":197116,"byte_end":197155,"line_start":117,"line_end":117,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":197160,"byte_end":197163,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":197168,"byte_end":197175,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Endpoint;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":197180,"byte_end":197217,"line_start":120,"line_end":120,"column_start":5,"column_end":42}},{"value":"/ # use std::time::Duration;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":197222,"byte_end":197252,"line_start":121,"line_end":121,"column_start":5,"column_end":35}},{"value":"/ # let mut builder = Endpoint::from_static(\"https://example.com\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":197257,"byte_end":197326,"line_start":122,"line_end":122,"column_start":5,"column_end":74}},{"value":"/ builder.rate_limit(32, Duration::from_secs(1));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":197331,"byte_end":197382,"line_start":123,"line_end":123,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":197387,"byte_end":197394,"line_start":124,"line_end":124,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1222},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":197811,"byte_end":197837,"line_start":138,"line_end":138,"column_start":12,"column_end":38},"name":"initial_stream_window_size","qualname":"<Endpoint>::initial_stream_window_size","value":"pub fn initial_stream_window_size<impl Into<Option<u32>>: Into<Option<u32>>>(Self,\n                                                                             impl Into<Option<u32>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for HTTP2\n stream-level flow control.","sig":null,"attributes":[{"value":"/ Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for HTTP2","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":197573,"byte_end":197641,"line_start":132,"line_end":132,"column_start":5,"column_end":73}},{"value":"/ stream-level flow control.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":197646,"byte_end":197676,"line_start":133,"line_end":133,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":197681,"byte_end":197684,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Default is 65,535","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":197689,"byte_end":197710,"line_start":135,"line_end":135,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":197715,"byte_end":197718,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ [spec]: https://http2.github.io/http2-spec/#SETTINGS_INITIAL_WINDOW_SIZE","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":197723,"byte_end":197799,"line_start":137,"line_end":137,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1224},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":198091,"byte_end":198121,"line_start":148,"line_end":148,"column_start":12,"column_end":42},"name":"initial_connection_window_size","qualname":"<Endpoint>::initial_connection_window_size","value":"pub fn initial_connection_window_size<impl Into<Option<u32>>: Into<Option<u32>>>(Self,\n                                                                                 impl Into<Option<u32>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max connection-level flow control for HTTP2","sig":null,"attributes":[{"value":"/ Sets the max connection-level flow control for HTTP2","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":197989,"byte_end":198045,"line_start":145,"line_end":145,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":198050,"byte_end":198053,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ Default is 65,535","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":198058,"byte_end":198079,"line_start":147,"line_end":147,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1226},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":198404,"byte_end":198414,"line_start":158,"line_end":158,"column_start":12,"column_end":22},"name":"tls_config","qualname":"<Endpoint>::tls_config","value":"pub fn tls_config(Self, ClientTlsConfig) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Configures TLS for the endpoint.\n","sig":null,"attributes":[{"value":"/ Configures TLS for the endpoint.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":198277,"byte_end":198313,"line_start":155,"line_end":155,"column_start":5,"column_end":41}},{"value":"cfg(feature = \"tls\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":198318,"byte_end":198341,"line_start":156,"line_end":156,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1228},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":198813,"byte_end":198824,"line_start":170,"line_end":170,"column_start":12,"column_end":23},"name":"tcp_nodelay","qualname":"<Endpoint>::tcp_nodelay","value":"pub fn tcp_nodelay(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the value of `TCP_NODELAY` option for accepted connections. Enabled by default.\n","sig":null,"attributes":[{"value":"/ Set the value of `TCP_NODELAY` option for accepted connections. Enabled by default.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":198714,"byte_end":198801,"line_start":169,"line_end":169,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1229},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":199029,"byte_end":199054,"line_start":178,"line_end":178,"column_start":12,"column_end":37},"name":"http2_keep_alive_interval","qualname":"<Endpoint>::http2_keep_alive_interval","value":"pub fn http2_keep_alive_interval(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set http2 KEEP_ALIVE_INTERVAL. Uses `hyper`'s default otherwise.\n","sig":null,"attributes":[{"value":"/ Set http2 KEEP_ALIVE_INTERVAL. Uses `hyper`'s default otherwise.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":198949,"byte_end":199017,"line_start":177,"line_end":177,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1230},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":199284,"byte_end":199302,"line_start":186,"line_end":186,"column_start":12,"column_end":30},"name":"keep_alive_timeout","qualname":"<Endpoint>::keep_alive_timeout","value":"pub fn keep_alive_timeout(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set http2 KEEP_ALIVE_TIMEOUT. Uses `hyper`'s default otherwise.\n","sig":null,"attributes":[{"value":"/ Set http2 KEEP_ALIVE_TIMEOUT. Uses `hyper`'s default otherwise.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":199205,"byte_end":199272,"line_start":185,"line_end":185,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1231},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":199534,"byte_end":199555,"line_start":194,"line_end":194,"column_start":12,"column_end":33},"name":"keep_alive_while_idle","qualname":"<Endpoint>::keep_alive_while_idle","value":"pub fn keep_alive_while_idle(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set http2 KEEP_ALIVE_WHILE_IDLE. Uses `hyper`'s default otherwise.\n","sig":null,"attributes":[{"value":"/ Set http2 KEEP_ALIVE_WHILE_IDLE. Uses `hyper`'s default otherwise.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":199452,"byte_end":199522,"line_start":193,"line_end":193,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1232},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":199758,"byte_end":199765,"line_start":202,"line_end":202,"column_start":18,"column_end":25},"name":"connect","qualname":"<Endpoint>::connect","value":"pub async fn connect<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Create a channel from this config.\n","sig":null,"attributes":[{"value":"/ Create a channel from this config.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":199702,"byte_end":199740,"line_start":201,"line_end":201,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1235},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":200424,"byte_end":200436,"line_start":221,"line_end":221,"column_start":12,"column_end":24},"name":"connect_lazy","qualname":"<Endpoint>::connect_lazy","value":"pub fn connect_lazy(&Self) -> Result<Channel, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a channel from this config.","sig":null,"attributes":[{"value":"/ Create a channel from this config.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":200253,"byte_end":200291,"line_start":217,"line_end":217,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":200296,"byte_end":200299,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ The channel returned by this method does not attempt to connect to the endpoint until first","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":200304,"byte_end":200399,"line_start":219,"line_end":219,"column_start":5,"column_end":100}},{"value":"/ use.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":200404,"byte_end":200412,"line_start":220,"line_end":220,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":1236},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":200968,"byte_end":200990,"line_start":237,"line_end":237,"column_start":18,"column_end":40},"name":"connect_with_connector","qualname":"<Endpoint>::connect_with_connector","value":"pub async fn connect_with_connector<'_, C>(&'_ Self, C) -> /*impl Trait*/\nwhere C: MakeConnection<Uri> + Send + 'static, C::Connection: Unpin + Send +\n'static, C::Future: Send + 'static, crate::Error: From<C::Error> + Send +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Connect with a custom connector.\n","sig":null,"attributes":[{"value":"/ Connect with a custom connector.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":200914,"byte_end":200950,"line_start":236,"line_end":236,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1240},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":201800,"byte_end":201803,"line_start":262,"line_end":262,"column_start":12,"column_end":15},"name":"uri","qualname":"<Endpoint>::uri","value":"pub fn uri(&Self) -> &Uri","parent":null,"children":[],"decl_id":null,"docs":" Get the endpoint uri.","sig":null,"attributes":[{"value":"/ Get the endpoint uri.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":201509,"byte_end":201534,"line_start":253,"line_end":253,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":201539,"byte_end":201542,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":201547,"byte_end":201554,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Endpoint;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":201559,"byte_end":201596,"line_start":256,"line_end":256,"column_start":5,"column_end":42}},{"value":"/ # use http::Uri;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":201601,"byte_end":201621,"line_start":257,"line_end":257,"column_start":5,"column_end":25}},{"value":"/ let endpoint = Endpoint::from_static(\"https://example.com\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":201626,"byte_end":201690,"line_start":258,"line_end":258,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":201695,"byte_end":201698,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(endpoint.uri(), &Uri::from_static(\"https://example.com\"));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":201703,"byte_end":201776,"line_start":260,"line_end":260,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":201781,"byte_end":201788,"line_start":261,"line_end":261,"column_start":5,"column_end":12}}]},{"kind":"Enum","id":{"krate":0,"index":2787},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":202969,"byte_end":202974,"line_start":313,"line_end":313,"column_start":10,"column_end":15},"name":"Never","qualname":"::transport::channel::endpoint::Never","value":"pub enum Never { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2790},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\tls.rs","byte_start":203574,"byte_end":203589,"line_start":13,"line_end":13,"column_start":12,"column_end":27},"name":"ClientTlsConfig","qualname":"::transport::channel::tls::ClientTlsConfig","value":"ClientTlsConfig {  }","parent":null,"children":[{"krate":0,"index":2791},{"krate":0,"index":2792},{"krate":0,"index":2793},{"krate":0,"index":2794}],"decl_id":null,"docs":" Configures TLS settings for endpoints.\n","sig":null,"attributes":[{"value":"/ Configures TLS settings for endpoints.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\tls.rs","byte_start":203432,"byte_end":203474,"line_start":9,"line_end":9,"column_start":1,"column_end":43}},{"value":"cfg(feature = \"tls\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\tls.rs","byte_start":203475,"byte_end":203498,"line_start":10,"line_end":10,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1269},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\tls.rs","byte_start":204185,"byte_end":204188,"line_start":34,"line_end":34,"column_start":12,"column_end":15},"name":"new","qualname":"<ClientTlsConfig>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ClientTlsConfig` using Rustls.\n","sig":null,"attributes":[{"value":"/ Creates a new `ClientTlsConfig` using Rustls.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\tls.rs","byte_start":204124,"byte_end":204173,"line_start":33,"line_end":33,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1270},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\tls.rs","byte_start":204536,"byte_end":204547,"line_start":46,"line_end":46,"column_start":12,"column_end":23},"name":"domain_name","qualname":"<ClientTlsConfig>::domain_name","value":"pub fn domain_name<impl Into<String>: Into<String>>(Self, impl Into<String>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the domain name against which to verify the server's TLS certificate.","sig":null,"attributes":[{"value":"/ Sets the domain name against which to verify the server's TLS certificate.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\tls.rs","byte_start":204356,"byte_end":204434,"line_start":43,"line_end":43,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\tls.rs","byte_start":204439,"byte_end":204442,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ This has no effect if `rustls_client_config` is used to configure Rustls.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\tls.rs","byte_start":204447,"byte_end":204524,"line_start":45,"line_end":45,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1272},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\tls.rs","byte_start":204891,"byte_end":204905,"line_start":56,"line_end":56,"column_start":12,"column_end":26},"name":"ca_certificate","qualname":"<ClientTlsConfig>::ca_certificate","value":"pub fn ca_certificate(Self, Certificate) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the CA Certificate against which to verify the server's TLS certificate.","sig":null,"attributes":[{"value":"/ Sets the CA Certificate against which to verify the server's TLS certificate.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\tls.rs","byte_start":204708,"byte_end":204789,"line_start":53,"line_end":53,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\tls.rs","byte_start":204794,"byte_end":204797,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ This has no effect if `rustls_client_config` is used to configure Rustls.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\tls.rs","byte_start":204802,"byte_end":204879,"line_start":55,"line_end":55,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1273},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\tls.rs","byte_start":205213,"byte_end":205221,"line_start":66,"line_end":66,"column_start":12,"column_end":20},"name":"identity","qualname":"<ClientTlsConfig>::identity","value":"pub fn identity(Self, Identity) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the client identity to present to the server.","sig":null,"attributes":[{"value":"/ Sets the client identity to present to the server.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\tls.rs","byte_start":205057,"byte_end":205111,"line_start":63,"line_end":63,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\tls.rs","byte_start":205116,"byte_end":205119,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ This has no effect if `rustls_client_config` is used to configure Rustls.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\tls.rs","byte_start":205124,"byte_end":205201,"line_start":65,"line_end":65,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1274},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\tls.rs","byte_start":205519,"byte_end":205539,"line_start":76,"line_end":76,"column_start":12,"column_end":32},"name":"rustls_client_config","qualname":"<ClientTlsConfig>::rustls_client_config","value":"pub fn rustls_client_config(Self, tokio_rustls::rustls::ClientConfig) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Use options specified by the given `ClientConfig` to configure TLS.","sig":null,"attributes":[{"value":"/ Use options specified by the given `ClientConfig` to configure TLS.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\tls.rs","byte_start":205362,"byte_end":205433,"line_start":73,"line_end":73,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\tls.rs","byte_start":205438,"byte_end":205441,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ This overrides all other TLS options set via other means.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\tls.rs","byte_start":205446,"byte_end":205507,"line_start":75,"line_end":75,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":2797},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":188838,"byte_end":188845,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"Channel","qualname":"::transport::channel::Channel","value":"Channel {  }","parent":null,"children":[{"krate":0,"index":2798}],"decl_id":null,"docs":" A default batteries included `transport` channel.","sig":null,"attributes":[{"value":"/ A default batteries included `transport` channel.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":187562,"byte_end":187615,"line_start":44,"line_end":44,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":187616,"byte_end":187619,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ This provides a fully featured http2 gRPC client based on [`hyper::Client`]","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":187620,"byte_end":187699,"line_start":46,"line_end":46,"column_start":1,"column_end":80}},{"value":"/ and `tower` services.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":187700,"byte_end":187725,"line_start":47,"line_end":47,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":187726,"byte_end":187729,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Multiplexing requests","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":187730,"byte_end":187757,"line_start":49,"line_end":49,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":187758,"byte_end":187761,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Sending a request on a channel requires a `&mut self` and thus can only send","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":187762,"byte_end":187842,"line_start":51,"line_end":51,"column_start":1,"column_end":81}},{"value":"/ one request in flight. This is intentional and is required to follow the `Service`","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":187843,"byte_end":187929,"line_start":52,"line_end":52,"column_start":1,"column_end":87}},{"value":"/ contract from the `tower` library which this channel implementation is built on","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":187930,"byte_end":188013,"line_start":53,"line_end":53,"column_start":1,"column_end":84}},{"value":"/ top of.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":188014,"byte_end":188025,"line_start":54,"line_end":54,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":188026,"byte_end":188029,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ `tower` itself has a concept of `poll_ready` which is the main mechanism to apply","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":188030,"byte_end":188115,"line_start":56,"line_end":56,"column_start":1,"column_end":86}},{"value":"/ back pressure. `poll_ready` takes a `&mut self` and when it returns `Poll::Ready`","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":188116,"byte_end":188201,"line_start":57,"line_end":57,"column_start":1,"column_end":86}},{"value":"/ we know the `Service` is able to accept only one request before we must `poll_ready`","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":188202,"byte_end":188290,"line_start":58,"line_end":58,"column_start":1,"column_end":89}},{"value":"/ again. Due to this fact any `async fn` that wants to poll for readiness and submit","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":188291,"byte_end":188377,"line_start":59,"line_end":59,"column_start":1,"column_end":87}},{"value":"/ the request must have a `&mut self` reference.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":188378,"byte_end":188428,"line_start":60,"line_end":60,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":188429,"byte_end":188432,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ To work around this and to ease the use of the channel, `Channel` provides a","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":188433,"byte_end":188513,"line_start":62,"line_end":62,"column_start":1,"column_end":81}},{"value":"/ `Clone` implementation that is _cheap_. This is because at the very top level","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":188514,"byte_end":188595,"line_start":63,"line_end":63,"column_start":1,"column_end":82}},{"value":"/ the channel is backed by a `tower_buffer::Buffer` which runs the connection","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":188596,"byte_end":188675,"line_start":64,"line_end":64,"column_start":1,"column_end":80}},{"value":"/ in a background task and provides a `mpsc` channel interface. Due to this","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":188676,"byte_end":188753,"line_start":65,"line_end":65,"column_start":1,"column_end":78}},{"value":"/ cloning the `Channel` type is cheap and encouraged.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":188754,"byte_end":188809,"line_start":66,"line_end":66,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1321},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":189014,"byte_end":189028,"line_start":75,"line_end":75,"column_start":12,"column_end":26},"name":"ResponseFuture","qualname":"::transport::channel::ResponseFuture","value":"ResponseFuture {  }","parent":null,"children":[{"krate":0,"index":1322}],"decl_id":null,"docs":" A future that resolves to an HTTP response.","sig":null,"attributes":[{"value":"/ A future that resolves to an HTTP response.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":188891,"byte_end":188938,"line_start":72,"line_end":72,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":188939,"byte_end":188942,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ This is returned by the `Service::call` on [`Channel`].","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":188943,"byte_end":189002,"line_start":74,"line_end":74,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1324},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":189218,"byte_end":189225,"line_start":81,"line_end":81,"column_start":12,"column_end":19},"name":"builder","qualname":"<Channel>::builder","value":"pub fn builder(Uri) -> Endpoint","parent":null,"children":[],"decl_id":null,"docs":" Create a [`Endpoint`] builder that can create a [`Channel`]'s.\n","sig":null,"attributes":[{"value":"/ Create a [`Endpoint`] builder that can create a [`Channel`]'s.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":189140,"byte_end":189206,"line_start":80,"line_end":80,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1325},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":189473,"byte_end":189484,"line_start":91,"line_end":91,"column_start":12,"column_end":23},"name":"from_static","qualname":"<Channel>::from_static","value":"pub fn from_static(&'static str) -> Endpoint","parent":null,"children":[],"decl_id":null,"docs":" Create an `Endpoint` from a static string.","sig":null,"attributes":[{"value":"/ Create an `Endpoint` from a static string.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":189289,"byte_end":189335,"line_start":85,"line_end":85,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":189340,"byte_end":189343,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":189348,"byte_end":189355,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Channel;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":189360,"byte_end":189396,"line_start":88,"line_end":88,"column_start":5,"column_end":41}},{"value":"/ Channel::from_static(\"https://example.com\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":189401,"byte_end":189449,"line_start":89,"line_end":89,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":189454,"byte_end":189461,"line_start":90,"line_end":90,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1326},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":189774,"byte_end":189785,"line_start":102,"line_end":102,"column_start":12,"column_end":23},"name":"from_shared","qualname":"<Channel>::from_shared","value":"pub fn from_shared<impl Into<Bytes>: Into<Bytes>>(impl Into<Bytes>)\n-> Result<Endpoint, InvalidUri>","parent":null,"children":[],"decl_id":null,"docs":" Create an `Endpoint` from shared bytes.","sig":null,"attributes":[{"value":"/ Create an `Endpoint` from shared bytes.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":189593,"byte_end":189636,"line_start":96,"line_end":96,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":189641,"byte_end":189644,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":189649,"byte_end":189656,"line_start":98,"line_end":98,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Channel;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":189661,"byte_end":189697,"line_start":99,"line_end":99,"column_start":5,"column_end":41}},{"value":"/ Channel::from_shared(\"https://example.com\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":189702,"byte_end":189750,"line_start":100,"line_end":100,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":189755,"byte_end":189762,"line_start":101,"line_end":101,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1328},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":190095,"byte_end":190107,"line_start":111,"line_end":111,"column_start":12,"column_end":24},"name":"balance_list","qualname":"<Channel>::balance_list","value":"pub fn balance_list<impl Iterator<Item = Endpoint>: Iterator<Item =\n                    Endpoint>>(impl Iterator<Item = Endpoint>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Balance a list of [`Endpoint`]'s.","sig":null,"attributes":[{"value":"/ Balance a list of [`Endpoint`]'s.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":189936,"byte_end":189973,"line_start":107,"line_end":107,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":189978,"byte_end":189981,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ This creates a [`Channel`] that will load balance accross all the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":189986,"byte_end":190055,"line_start":109,"line_end":109,"column_start":5,"column_end":74}},{"value":"/ provided endpoints.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":190060,"byte_end":190083,"line_start":110,"line_end":110,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1331},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":190587,"byte_end":190602,"line_start":124,"line_end":124,"column_start":12,"column_end":27},"name":"balance_channel","qualname":"<Channel>::balance_channel","value":"pub fn balance_channel<K>(usize) -> (Self, Sender<Change<K, Endpoint>>) where\nK: Hash + Eq + Send + Clone + 'static","parent":null,"children":[],"decl_id":null,"docs":" Balance a list of [`Endpoint`]'s.","sig":null,"attributes":[{"value":"/ Balance a list of [`Endpoint`]'s.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":190406,"byte_end":190443,"line_start":121,"line_end":121,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":190448,"byte_end":190451,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ This creates a [`Channel`] that will listen to a stream of change events and will add or remove provided endpoints.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":190456,"byte_end":190575,"line_start":123,"line_end":123,"column_start":5,"column_end":124}}]},{"kind":"Mod","id":{"krate":0,"index":1356},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"server","qualname":"::transport::server","value":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","parent":null,"children":[{"krate":0,"index":1357},{"krate":0,"index":1376},{"krate":0,"index":1435},{"krate":0,"index":1450},{"krate":0,"index":1451},{"krate":0,"index":1452},{"krate":0,"index":1453},{"krate":0,"index":1454},{"krate":0,"index":1455},{"krate":0,"index":1456},{"krate":0,"index":1457},{"krate":0,"index":1458},{"krate":0,"index":1459},{"krate":0,"index":1460},{"krate":0,"index":1461},{"krate":0,"index":1462},{"krate":0,"index":1463},{"krate":0,"index":1464},{"krate":0,"index":1465},{"krate":0,"index":1466},{"krate":0,"index":1467},{"krate":0,"index":1468},{"krate":0,"index":1469},{"krate":0,"index":1470},{"krate":0,"index":1471},{"krate":0,"index":1472},{"krate":0,"index":1473},{"krate":0,"index":1474},{"krate":0,"index":1475},{"krate":0,"index":1476},{"krate":0,"index":1477},{"krate":0,"index":1478},{"krate":0,"index":1479},{"krate":0,"index":1480},{"krate":0,"index":1481},{"krate":0,"index":1482},{"krate":0,"index":1483},{"krate":0,"index":1484},{"krate":0,"index":1485},{"krate":0,"index":1486},{"krate":0,"index":1487},{"krate":0,"index":1488},{"krate":0,"index":1489},{"krate":0,"index":1490},{"krate":0,"index":1491},{"krate":0,"index":1492},{"krate":0,"index":1493},{"krate":0,"index":1494},{"krate":0,"index":1495},{"krate":0,"index":1496},{"krate":0,"index":1497},{"krate":0,"index":1498},{"krate":0,"index":1499},{"krate":0,"index":1500},{"krate":0,"index":2813},{"krate":0,"index":2825},{"krate":0,"index":2823},{"krate":0,"index":2827},{"krate":0,"index":2832},{"krate":0,"index":1501},{"krate":0,"index":1503},{"krate":0,"index":1507},{"krate":0,"index":1509},{"krate":0,"index":1536},{"krate":0,"index":1540},{"krate":0,"index":1569},{"krate":0,"index":1571},{"krate":0,"index":1576},{"krate":0,"index":1584},{"krate":0,"index":1587},{"krate":0,"index":1593},{"krate":0,"index":2836},{"krate":0,"index":2842},{"krate":0,"index":2840},{"krate":0,"index":2838},{"krate":0,"index":1601}],"decl_id":null,"docs":" Server implementation and builder.\n","sig":null,"attributes":[{"value":"! Server implementation and builder.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":206229,"byte_end":206267,"line_start":1,"line_end":1,"column_start":1,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":1364},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\conn.rs","byte_start":225387,"byte_end":225396,"line_start":15,"line_end":15,"column_start":11,"column_end":20},"name":"Connected","qualname":"::transport::server::conn::Connected","value":"Connected","parent":null,"children":[{"krate":0,"index":1365},{"krate":0,"index":1366}],"decl_id":null,"docs":" Trait that connected IO resources implement.","sig":null,"attributes":[{"value":"/ Trait that connected IO resources implement.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\conn.rs","byte_start":225188,"byte_end":225236,"line_start":10,"line_end":10,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\conn.rs","byte_start":225237,"byte_end":225240,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The goal for this trait is to allow users to implement","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\conn.rs","byte_start":225241,"byte_end":225299,"line_start":12,"line_end":12,"column_start":1,"column_end":59}},{"value":"/ custom IO types that can still provide the same connection","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\conn.rs","byte_start":225300,"byte_end":225362,"line_start":13,"line_end":13,"column_start":1,"column_end":63}},{"value":"/ metadata.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\conn.rs","byte_start":225363,"byte_end":225376,"line_start":14,"line_end":14,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1365},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\conn.rs","byte_start":225475,"byte_end":225486,"line_start":17,"line_end":17,"column_start":8,"column_end":19},"name":"remote_addr","qualname":"::transport::server::conn::Connected::remote_addr","value":"pub fn remote_addr(&Self) -> Option<SocketAddr>","parent":{"krate":0,"index":1364},"children":[],"decl_id":null,"docs":" Return the remote address this IO resource is connected too.\n","sig":null,"attributes":[{"value":"/ Return the remote address this IO resource is connected too.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\conn.rs","byte_start":225403,"byte_end":225467,"line_start":16,"line_end":16,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1366},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\conn.rs","byte_start":225604,"byte_end":225614,"line_start":22,"line_end":22,"column_start":8,"column_end":18},"name":"peer_certs","qualname":"::transport::server::conn::Connected::peer_certs","value":"pub fn peer_certs(&Self) -> Option<Vec<Certificate>>","parent":{"krate":0,"index":1364},"children":[],"decl_id":null,"docs":" Return the set of connected peer TLS certificates.\n","sig":null,"attributes":[{"value":"/ Return the set of connected peer TLS certificates.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\conn.rs","byte_start":225542,"byte_end":225596,"line_start":21,"line_end":21,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":2807},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\tls.rs","byte_start":231943,"byte_end":231958,"line_start":11,"line_end":11,"column_start":12,"column_end":27},"name":"ServerTlsConfig","qualname":"::transport::server::tls::ServerTlsConfig","value":"ServerTlsConfig {  }","parent":null,"children":[{"krate":0,"index":2808},{"krate":0,"index":2809},{"krate":0,"index":2810}],"decl_id":null,"docs":" Configures TLS settings for servers.\n","sig":null,"attributes":[{"value":"/ Configures TLS settings for servers.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\tls.rs","byte_start":231803,"byte_end":231843,"line_start":7,"line_end":7,"column_start":1,"column_end":41}},{"value":"cfg(feature = \"tls\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\tls.rs","byte_start":231844,"byte_end":231867,"line_start":8,"line_end":8,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1445},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\tls.rs","byte_start":232381,"byte_end":232384,"line_start":27,"line_end":27,"column_start":12,"column_end":15},"name":"new","qualname":"<ServerTlsConfig>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ServerTlsConfig`.\n","sig":null,"attributes":[{"value":"/ Creates a new `ServerTlsConfig`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\tls.rs","byte_start":232333,"byte_end":232369,"line_start":26,"line_end":26,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1446},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\tls.rs","byte_start":232588,"byte_end":232596,"line_start":36,"line_end":36,"column_start":12,"column_end":20},"name":"identity","qualname":"<ServerTlsConfig>::identity","value":"pub fn identity(Self, Identity) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the [`Identity`] of the server.\n","sig":null,"attributes":[{"value":"/ Sets the [`Identity`] of the server.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\tls.rs","byte_start":232536,"byte_end":232576,"line_start":35,"line_end":35,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1447},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\tls.rs","byte_start":232822,"byte_end":232836,"line_start":44,"line_end":44,"column_start":12,"column_end":26},"name":"client_ca_root","qualname":"<ServerTlsConfig>::client_ca_root","value":"pub fn client_ca_root(Self, Certificate) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a certificate against which to validate client TLS certificates.\n","sig":null,"attributes":[{"value":"/ Sets a certificate against which to validate client TLS certificates.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\tls.rs","byte_start":232737,"byte_end":232810,"line_start":43,"line_end":43,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1448},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\tls.rs","byte_start":233135,"byte_end":233155,"line_start":54,"line_end":54,"column_start":12,"column_end":32},"name":"rustls_server_config","qualname":"<ServerTlsConfig>::rustls_server_config","value":"pub fn rustls_server_config(&mut Self, tokio_rustls::rustls::ServerConfig)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Use options specified by the given `ServerConfig` to configure TLS.","sig":null,"attributes":[{"value":"/ Use options specified by the given `ServerConfig` to configure TLS.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\tls.rs","byte_start":232978,"byte_end":233049,"line_start":51,"line_end":51,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\tls.rs","byte_start":233054,"byte_end":233057,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This overrides all other TLS options set via other means.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\tls.rs","byte_start":233062,"byte_end":233123,"line_start":53,"line_end":53,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":2813},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":208046,"byte_end":208052,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"Server","qualname":"::transport::server::Server","value":"Server {  }","parent":null,"children":[{"krate":0,"index":2814},{"krate":0,"index":2815},{"krate":0,"index":2816},{"krate":0,"index":2817},{"krate":0,"index":2818},{"krate":0,"index":2819},{"krate":0,"index":2820},{"krate":0,"index":2821},{"krate":0,"index":2822}],"decl_id":null,"docs":" A default batteries included `transport` server.","sig":null,"attributes":[{"value":"/ A default batteries included `transport` server.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":207484,"byte_end":207536,"line_start":52,"line_end":52,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":207537,"byte_end":207540,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ This is a wrapper around [`hyper::Server`] and provides an easy builder","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":207541,"byte_end":207616,"line_start":54,"line_end":54,"column_start":1,"column_end":76}},{"value":"/ pattern style builder [`Server`]. This builder exposes easy configuration parameters","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":207617,"byte_end":207705,"line_start":55,"line_end":55,"column_start":1,"column_end":89}},{"value":"/ for providing a fully featured http2 based gRPC server. This should provide","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":207706,"byte_end":207785,"line_start":56,"line_end":56,"column_start":1,"column_end":80}},{"value":"/ a very good out of the box http2 server for use with tonic but is also a","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":207786,"byte_end":207862,"line_start":57,"line_end":57,"column_start":1,"column_end":77}},{"value":"/ reference implementation that should be a good starting point for anyone","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":207863,"byte_end":207939,"line_start":58,"line_end":58,"column_start":1,"column_end":77}},{"value":"/ wanting to create a more complex and/or specific implementation.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":207940,"byte_end":208008,"line_start":59,"line_end":59,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":2827},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":208487,"byte_end":208493,"line_start":76,"line_end":76,"column_start":12,"column_end":18},"name":"Router","qualname":"::transport::server::Router","value":"Router {  }","parent":null,"children":[{"krate":0,"index":2830},{"krate":0,"index":2831}],"decl_id":null,"docs":" A stack based `Service` router.\n","sig":null,"attributes":[{"value":"/ A stack based `Service` router.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":208423,"byte_end":208458,"line_start":74,"line_end":74,"column_start":1,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":1501},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":208699,"byte_end":208711,"line_start":83,"line_end":83,"column_start":11,"column_end":23},"name":"NamedService","qualname":"::transport::server::NamedService","value":"NamedService","parent":null,"children":[{"krate":0,"index":1502}],"decl_id":null,"docs":" A trait to provide a static reference to the service's\n name. This is used for routing service's within the router.\n","sig":null,"attributes":[{"value":"/ A trait to provide a static reference to the service's","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":208566,"byte_end":208624,"line_start":81,"line_end":81,"column_start":1,"column_end":59}},{"value":"/ name. This is used for routing service's within the router.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":208625,"byte_end":208688,"line_start":82,"line_end":82,"column_start":1,"column_end":64}}]},{"kind":"Const","id":{"krate":0,"index":1502},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":208868,"byte_end":208872,"line_start":87,"line_end":87,"column_start":11,"column_end":15},"name":"NAME","qualname":"::transport::server::NamedService::NAME","value":"&'static str","parent":{"krate":0,"index":1501},"children":[],"decl_id":null,"docs":" The `Service-Name` as described [here].","sig":null,"attributes":[{"value":"/ The `Service-Name` as described [here].","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":208718,"byte_end":208761,"line_start":84,"line_end":84,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":208766,"byte_end":208769,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ [here]: https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md#requests","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":208774,"byte_end":208857,"line_start":86,"line_end":86,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1508},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":209085,"byte_end":209092,"line_start":96,"line_end":96,"column_start":12,"column_end":19},"name":"builder","qualname":"<Server>::builder","value":"pub fn builder() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new server builder that can configure a [`Server`].\n","sig":null,"attributes":[{"value":"/ Create a new server builder that can configure a [`Server`].","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":209009,"byte_end":209073,"line_start":95,"line_end":95,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1510},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":209348,"byte_end":209358,"line_start":108,"line_end":108,"column_start":12,"column_end":22},"name":"tls_config","qualname":"<Server>::tls_config","value":"pub fn tls_config(Self, ServerTlsConfig) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Configure TLS for this server.\n","sig":null,"attributes":[{"value":"/ Configure TLS for this server.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":209223,"byte_end":209257,"line_start":105,"line_end":105,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"tls\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":209262,"byte_end":209285,"line_start":106,"line_end":106,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1512},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":209964,"byte_end":209996,"line_start":129,"line_end":129,"column_start":12,"column_end":44},"name":"concurrency_limit_per_connection","qualname":"<Server>::concurrency_limit_per_connection","value":"pub fn concurrency_limit_per_connection(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the concurrency limit applied to on requests inbound per connection.","sig":null,"attributes":[{"value":"/ Set the concurrency limit applied to on requests inbound per connection.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":209639,"byte_end":209715,"line_start":119,"line_end":119,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":209720,"byte_end":209723,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":209728,"byte_end":209741,"line_start":121,"line_end":121,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":209746,"byte_end":209749,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":209754,"byte_end":209761,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Server;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":209766,"byte_end":209801,"line_start":124,"line_end":124,"column_start":5,"column_end":40}},{"value":"/ # use tower_service::Service;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":209806,"byte_end":209839,"line_start":125,"line_end":125,"column_start":5,"column_end":38}},{"value":"/ # let mut builder = Server::builder();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":209844,"byte_end":209886,"line_start":126,"line_end":126,"column_start":5,"column_end":47}},{"value":"/ builder.concurrency_limit_per_connection(32);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":209891,"byte_end":209940,"line_start":127,"line_end":127,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":209945,"byte_end":209952,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1513},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":210454,"byte_end":210461,"line_start":147,"line_end":147,"column_start":12,"column_end":19},"name":"timeout","qualname":"<Server>::timeout","value":"pub fn timeout(&mut Self, Duration) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set a timeout on for all request handlers.","sig":null,"attributes":[{"value":"/ Set a timeout on for all request handlers.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":210128,"byte_end":210174,"line_start":136,"line_end":136,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":210179,"byte_end":210182,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":210187,"byte_end":210200,"line_start":138,"line_end":138,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":210205,"byte_end":210208,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":210213,"byte_end":210220,"line_start":140,"line_end":140,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Server;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":210225,"byte_end":210260,"line_start":141,"line_end":141,"column_start":5,"column_end":40}},{"value":"/ # use tower_service::Service;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":210265,"byte_end":210298,"line_start":142,"line_end":142,"column_start":5,"column_end":38}},{"value":"/ # use std::time::Duration;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":210303,"byte_end":210333,"line_start":143,"line_end":143,"column_start":5,"column_end":35}},{"value":"/ # let mut builder = Server::builder();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":210338,"byte_end":210380,"line_start":144,"line_end":144,"column_start":5,"column_end":47}},{"value":"/ builder.timeout(Duration::from_secs(30));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":210385,"byte_end":210430,"line_start":145,"line_end":145,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":210435,"byte_end":210442,"line_start":146,"line_end":146,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1514},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":210807,"byte_end":210833,"line_start":158,"line_end":158,"column_start":12,"column_end":38},"name":"initial_stream_window_size","qualname":"<Server>::initial_stream_window_size","value":"pub fn initial_stream_window_size<impl Into<Option<u32>>: Into<Option<u32>>>(Self,\n                                                                             impl Into<Option<u32>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for HTTP2\n stream-level flow control.","sig":null,"attributes":[{"value":"/ Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for HTTP2","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":210569,"byte_end":210637,"line_start":152,"line_end":152,"column_start":5,"column_end":73}},{"value":"/ stream-level flow control.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":210642,"byte_end":210672,"line_start":153,"line_end":153,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":210677,"byte_end":210680,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ Default is 65,535","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":210685,"byte_end":210706,"line_start":155,"line_end":155,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":210711,"byte_end":210714,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ [spec]: https://http2.github.io/http2-spec/#SETTINGS_INITIAL_WINDOW_SIZE","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":210719,"byte_end":210795,"line_start":157,"line_end":157,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1516},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":211085,"byte_end":211115,"line_start":168,"line_end":168,"column_start":12,"column_end":42},"name":"initial_connection_window_size","qualname":"<Server>::initial_connection_window_size","value":"pub fn initial_connection_window_size<impl Into<Option<u32>>: Into<Option<u32>>>(Self,\n                                                                                 impl Into<Option<u32>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max connection-level flow control for HTTP2","sig":null,"attributes":[{"value":"/ Sets the max connection-level flow control for HTTP2","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":210983,"byte_end":211039,"line_start":165,"line_end":165,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":211044,"byte_end":211047,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Default is 65,535","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":211052,"byte_end":211073,"line_start":167,"line_end":167,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1518},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":211511,"byte_end":211533,"line_start":181,"line_end":181,"column_start":12,"column_end":34},"name":"max_concurrent_streams","qualname":"<Server>::max_concurrent_streams","value":"pub fn max_concurrent_streams<impl Into<Option<u32>>: Into<Option<u32>>>(Self,\n                                                                         impl Into<Option<u32>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the [`SETTINGS_MAX_CONCURRENT_STREAMS`][spec] option for HTTP2\n connections.","sig":null,"attributes":[{"value":"/ Sets the [`SETTINGS_MAX_CONCURRENT_STREAMS`][spec] option for HTTP2","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":211269,"byte_end":211340,"line_start":175,"line_end":175,"column_start":5,"column_end":76}},{"value":"/ connections.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":211345,"byte_end":211361,"line_start":176,"line_end":176,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":211366,"byte_end":211369,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ Default is no limit (`None`).","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":211374,"byte_end":211407,"line_start":178,"line_end":178,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":211412,"byte_end":211415,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ [spec]: https://http2.github.io/http2-spec/#SETTINGS_MAX_CONCURRENT_STREAMS","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":211420,"byte_end":211499,"line_start":180,"line_end":180,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1520},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":212009,"byte_end":212022,"line_start":196,"line_end":196,"column_start":12,"column_end":25},"name":"tcp_keepalive","qualname":"<Server>::tcp_keepalive","value":"pub fn tcp_keepalive(Self, Option<Duration>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether TCP keepalive messages are enabled on accepted connections.","sig":null,"attributes":[{"value":"/ Set whether TCP keepalive messages are enabled on accepted connections.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":211684,"byte_end":211759,"line_start":188,"line_end":188,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":211764,"byte_end":211767,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ If `None` is specified, keepalive is disabled, otherwise the duration","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":211772,"byte_end":211845,"line_start":190,"line_end":190,"column_start":5,"column_end":78}},{"value":"/ specified will be the time to remain idle before sending TCP keepalive","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":211850,"byte_end":211924,"line_start":191,"line_end":191,"column_start":5,"column_end":79}},{"value":"/ probes.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":211929,"byte_end":211940,"line_start":192,"line_end":192,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":211945,"byte_end":211948,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ Default is no keepalive (`None`)","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":211953,"byte_end":211989,"line_start":194,"line_end":194,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":211994,"byte_end":211997,"line_start":195,"line_end":195,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1521},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":212255,"byte_end":212266,"line_start":204,"line_end":204,"column_start":12,"column_end":23},"name":"tcp_nodelay","qualname":"<Server>::tcp_nodelay","value":"pub fn tcp_nodelay(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the value of `TCP_NODELAY` option for accepted connections. Enabled by default.\n","sig":null,"attributes":[{"value":"/ Set the value of `TCP_NODELAY` option for accepted connections. Enabled by default.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":212156,"byte_end":212243,"line_start":203,"line_end":203,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1522},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":212483,"byte_end":212491,"line_start":212,"line_end":212,"column_start":12,"column_end":20},"name":"trace_fn","qualname":"<Server>::trace_fn","value":"pub fn trace_fn<F>(Self, F) -> Self where F: Fn(&HeaderMap) -> tracing::Span +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Intercept inbound headers and add a [`tracing::Span`] to each response future.\n","sig":null,"attributes":[{"value":"/ Intercept inbound headers and add a [`tracing::Span`] to each response future.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":212389,"byte_end":212471,"line_start":211,"line_end":211,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":1524},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":212910,"byte_end":212921,"line_start":226,"line_end":226,"column_start":12,"column_end":23},"name":"add_service","qualname":"<Server>::add_service","value":"pub fn add_service<S>(&mut Self, S) -> Router<S, Unimplemented> where\nS: Service<Request<Body>, Response = Response<BoxBody>> + NamedService +\nClone + Send + 'static, S::Future: Send + 'static,\nS::Error: Into<crate::Error> + Send","parent":null,"children":[],"decl_id":null,"docs":" Create a router with the `S` typed service as the first service.","sig":null,"attributes":[{"value":"/ Create a router with the `S` typed service as the first service.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":212706,"byte_end":212774,"line_start":222,"line_end":222,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":212779,"byte_end":212782,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ This will clone the `Server` builder and create a router that will","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":212787,"byte_end":212857,"line_start":224,"line_end":224,"column_start":5,"column_end":75}},{"value":"/ route around different services.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":212862,"byte_end":212898,"line_start":225,"line_end":225,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1526},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":213707,"byte_end":213727,"line_start":247,"line_end":247,"column_start":12,"column_end":32},"name":"add_optional_service","qualname":"<Server>::add_optional_service","value":"pub fn add_optional_service<S>(&mut Self, Option<S>)\n-> Router<Either<S, Unimplemented>, Unimplemented> where\nS: Service<Request<Body>, Response = Response<BoxBody>> + NamedService +\nClone + Send + 'static, S::Future: Send + 'static,\nS::Error: Into<crate::Error> + Send","parent":null,"children":[],"decl_id":null,"docs":" Create a router with the optional `S` typed service as the first service.","sig":null,"attributes":[{"value":"/ Create a router with the optional `S` typed service as the first service.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":213271,"byte_end":213348,"line_start":239,"line_end":239,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":213353,"byte_end":213356,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ This will clone the `Server` builder and create a router that will","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":213361,"byte_end":213431,"line_start":241,"line_end":241,"column_start":5,"column_end":75}},{"value":"/ route around different services.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":213436,"byte_end":213472,"line_start":242,"line_end":242,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":213477,"byte_end":213480,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":213485,"byte_end":213495,"line_start":244,"line_end":244,"column_start":5,"column_end":15}},{"value":"/ Even when the argument given is `None` this will capture *all* requests to this service name.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":213500,"byte_end":213597,"line_start":245,"line_end":245,"column_start":5,"column_end":102}},{"value":"/ As a result, one cannot use this to toggle between two identically named implementations.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":213602,"byte_end":213695,"line_start":246,"line_end":246,"column_start":5,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":1543},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":217175,"byte_end":217186,"line_start":354,"line_end":354,"column_start":12,"column_end":23},"name":"add_service","qualname":"<Router<A, B>>::add_service","value":"pub fn add_service<S>(Self, S) -> Router<S, Or<A, B, Request<Body>>> where\nS: Service<Request<Body>, Response = Response<BoxBody>> + NamedService +\nClone + Send + 'static, S::Future: Send + 'static,\nS::Error: Into<crate::Error> + Send","parent":null,"children":[],"decl_id":null,"docs":" Add a new service to this router.\n","sig":null,"attributes":[{"value":"/ Add a new service to this router.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":217126,"byte_end":217163,"line_start":353,"line_end":353,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1546},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":218150,"byte_end":218170,"line_start":383,"line_end":383,"column_start":12,"column_end":32},"name":"add_optional_service","qualname":"<Router<A, B>>::add_optional_service","value":"pub fn add_optional_service<S>(Self, Option<S>)\n-> Router<Either<S, Unimplemented>, Or<A, B, Request<Body>>> where\nS: Service<Request<Body>, Response = Response<BoxBody>> + NamedService +\nClone + Send + 'static, S::Future: Send + 'static,\nS::Error: Into<crate::Error> + Send","parent":null,"children":[],"decl_id":null,"docs":" Add a new optional service to this router.","sig":null,"attributes":[{"value":"/ Add a new optional service to this router.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":217869,"byte_end":217915,"line_start":378,"line_end":378,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":217920,"byte_end":217923,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":217928,"byte_end":217938,"line_start":380,"line_end":380,"column_start":5,"column_end":15}},{"value":"/ Even when the argument given is `None` this will capture *all* requests to this service name.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":217943,"byte_end":218040,"line_start":381,"line_end":381,"column_start":5,"column_end":102}},{"value":"/ As a result, one cannot use this to toggle between two identically named implementations.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":218045,"byte_end":218138,"line_start":382,"line_end":382,"column_start":5,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":1549},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":219228,"byte_end":219233,"line_start":418,"line_end":418,"column_start":18,"column_end":23},"name":"serve","qualname":"<Router<A, B>>::serve","value":"pub async fn serve(Self, SocketAddr) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Consume this [`Server`] creating a future that will execute the server\n on [`tokio`]'s default executor.","sig":null,"attributes":[{"value":"/ Consume this [`Server`] creating a future that will execute the server","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":219048,"byte_end":219122,"line_start":414,"line_end":414,"column_start":5,"column_end":79}},{"value":"/ on [`tokio`]'s default executor.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":219127,"byte_end":219163,"line_start":415,"line_end":415,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":219168,"byte_end":219171,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ [`Server`]: struct.Server.html","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":219176,"byte_end":219210,"line_start":417,"line_end":417,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1552},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":219820,"byte_end":219839,"line_start":431,"line_end":431,"column_start":18,"column_end":37},"name":"serve_with_shutdown","qualname":"<Router<A, B>>::serve_with_shutdown","value":"pub async fn serve_with_shutdown<F: Future<Output = ()>>(Self, SocketAddr, F)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Consume this [`Server`] creating a future that will execute the server\n on [`tokio`]'s default executor. And shutdown when the provided signal\n is received.","sig":null,"attributes":[{"value":"/ Consume this [`Server`] creating a future that will execute the server","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":219581,"byte_end":219655,"line_start":426,"line_end":426,"column_start":5,"column_end":79}},{"value":"/ on [`tokio`]'s default executor. And shutdown when the provided signal","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":219660,"byte_end":219734,"line_start":427,"line_end":427,"column_start":5,"column_end":79}},{"value":"/ is received.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":219739,"byte_end":219755,"line_start":428,"line_end":428,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":219760,"byte_end":219763,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ [`Server`]: struct.Server.html","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":219768,"byte_end":219802,"line_start":430,"line_end":430,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1556},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":220436,"byte_end":220455,"line_start":447,"line_end":447,"column_start":18,"column_end":37},"name":"serve_with_incoming","qualname":"<Router<A, B>>::serve_with_incoming","value":"pub async fn serve_with_incoming<I, IO, IE>(Self, I) -> /*impl Trait*/ where\nI: Stream<Item = Result<IO, IE>>, IO: AsyncRead + AsyncWrite + Connected +\nUnpin + Send + 'static, IE: Into<crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Consume this [`Server`] creating a future that will execute the server on\n the provided incoming stream of `AsyncRead + AsyncWrite`.","sig":null,"attributes":[{"value":"/ Consume this [`Server`] creating a future that will execute the server on","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":220228,"byte_end":220305,"line_start":443,"line_end":443,"column_start":5,"column_end":82}},{"value":"/ the provided incoming stream of `AsyncRead + AsyncWrite`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":220310,"byte_end":220371,"line_start":444,"line_end":444,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":220376,"byte_end":220379,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ [`Server`]: struct.Server.html","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":220384,"byte_end":220418,"line_start":446,"line_end":446,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1562},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":221157,"byte_end":221185,"line_start":464,"line_end":464,"column_start":18,"column_end":46},"name":"serve_with_incoming_shutdown","qualname":"<Router<A, B>>::serve_with_incoming_shutdown","value":"pub async fn serve_with_incoming_shutdown<I, IO, IE, F>(Self, I, F)\n-> /*impl Trait*/ where I: Stream<Item = Result<IO, IE>>, IO: AsyncRead +\nAsyncWrite + Connected + Unpin + Send + 'static, IE: Into<crate::Error>,\nF: Future<Output = ()>","parent":null,"children":[],"decl_id":null,"docs":" Consume this [`Server`] creating a future that will execute the server on\n the provided incoming stream of `AsyncRead + AsyncWrite`. Similar to\n `serve_with_shutdown` this method will also take a signal future to\n gracefully shutdown the server.","sig":null,"attributes":[{"value":"/ Consume this [`Server`] creating a future that will execute the server on","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":220822,"byte_end":220899,"line_start":458,"line_end":458,"column_start":5,"column_end":82}},{"value":"/ the provided incoming stream of `AsyncRead + AsyncWrite`. Similar to","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":220904,"byte_end":220976,"line_start":459,"line_end":459,"column_start":5,"column_end":77}},{"value":"/ `serve_with_shutdown` this method will also take a signal future to","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":220981,"byte_end":221052,"line_start":460,"line_end":460,"column_start":5,"column_end":76}},{"value":"/ gracefully shutdown the server.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":221057,"byte_end":221092,"line_start":461,"line_end":461,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":221097,"byte_end":221100,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ [`Server`]: struct.Server.html","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":221105,"byte_end":221139,"line_start":463,"line_end":463,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":2836},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":224341,"byte_end":224354,"line_start":577,"line_end":577,"column_start":12,"column_end":25},"name":"Unimplemented","qualname":"::transport::server::Unimplemented","value":"Unimplemented {  }","parent":null,"children":[{"krate":0,"index":2837}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1612},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\error.rs","byte_start":234039,"byte_end":234044,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Error","qualname":"::transport::error::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":1613}],"decl_id":null,"docs":" Error's that originate from the client or server;\n","sig":null,"attributes":[{"value":"/ Error's that originate from the client or server;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\error.rs","byte_start":233974,"byte_end":234027,"line_start":10,"line_end":10,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":1956},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\router.rs","byte_start":258092,"byte_end":258094,"line_start":70,"line_end":70,"column_start":12,"column_end":14},"name":"Or","qualname":"::transport::service::router::Or","value":"Or {  }","parent":null,"children":[{"krate":0,"index":1960},{"krate":0,"index":1961},{"krate":0,"index":1962}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3154},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\tls.rs","byte_start":267005,"byte_end":267016,"line_start":3,"line_end":3,"column_start":12,"column_end":23},"name":"Certificate","qualname":"::transport::tls::Certificate","value":"Certificate {  }","parent":null,"children":[{"krate":0,"index":3155}],"decl_id":null,"docs":" Represents a X509 certificate.\n","sig":null,"attributes":[{"value":"/ Represents a X509 certificate.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\tls.rs","byte_start":266935,"byte_end":266969,"line_start":1,"line_end":1,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3160},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\tls.rs","byte_start":267137,"byte_end":267145,"line_start":9,"line_end":9,"column_start":12,"column_end":20},"name":"Identity","qualname":"::transport::tls::Identity","value":"Identity {  }","parent":null,"children":[{"krate":0,"index":3161},{"krate":0,"index":3162}],"decl_id":null,"docs":" Represents a private key and X509 certificate.\n","sig":null,"attributes":[{"value":"/ Represents a private key and X509 certificate.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\tls.rs","byte_start":267051,"byte_end":267101,"line_start":7,"line_end":7,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2056},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\tls.rs","byte_start":267376,"byte_end":267384,"line_start":18,"line_end":18,"column_start":12,"column_end":20},"name":"from_pem","qualname":"<Certificate>::from_pem","value":"pub fn from_pem<impl AsRef<[u8]>: AsRef<[u8]>>(impl AsRef<[u8]>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Parse a PEM encoded X509 Certificate.","sig":null,"attributes":[{"value":"/ Parse a PEM encoded X509 Certificate.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\tls.rs","byte_start":267237,"byte_end":267278,"line_start":15,"line_end":15,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\tls.rs","byte_start":267283,"byte_end":267286,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ The provided PEM should include at least one PEM encoded certificate.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\tls.rs","byte_start":267291,"byte_end":267364,"line_start":17,"line_end":17,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2058},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\tls.rs","byte_start":267556,"byte_end":267563,"line_start":24,"line_end":24,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Certificate>::get_ref","value":"pub fn get_ref(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Get a immutable reference to underlying certificate\n","sig":null,"attributes":[{"value":"/ Get a immutable reference to underlying certificate","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\tls.rs","byte_start":267489,"byte_end":267544,"line_start":23,"line_end":23,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2059},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\tls.rs","byte_start":267687,"byte_end":267694,"line_start":29,"line_end":29,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Certificate>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to underlying certificate\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to underlying certificate","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\tls.rs","byte_start":267622,"byte_end":267675,"line_start":28,"line_end":28,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2060},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\tls.rs","byte_start":267827,"byte_end":267837,"line_start":34,"line_end":34,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Certificate>::into_inner","value":"pub fn into_inner(Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self`, returning the underlying certificate\n","sig":null,"attributes":[{"value":"/ Consumes `self`, returning the underlying certificate","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\tls.rs","byte_start":267758,"byte_end":267815,"line_start":33,"line_end":33,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2064},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\tls.rs","byte_start":268154,"byte_end":268162,"line_start":49,"line_end":49,"column_start":12,"column_end":20},"name":"from_pem","qualname":"<Identity>::from_pem","value":"pub fn from_pem<impl AsRef<[u8]>: AsRef<[u8]>,\n                impl AsRef<[u8]>: AsRef<[u8]>>(impl AsRef<[u8]>,\n                                               impl AsRef<[u8]>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Parse a PEM encoded certificate and private key.","sig":null,"attributes":[{"value":"/ Parse a PEM encoded certificate and private key.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\tls.rs","byte_start":268005,"byte_end":268057,"line_start":46,"line_end":46,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\tls.rs","byte_start":268062,"byte_end":268065,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ The provided cert must contain at least one PEM encoded certificate.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\tls.rs","byte_start":268070,"byte_end":268142,"line_start":48,"line_end":48,"column_start":5,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":3167},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\interceptor.rs","byte_start":269112,"byte_end":269123,"line_start":18,"line_end":18,"column_start":12,"column_end":23},"name":"Interceptor","qualname":"::interceptor::Interceptor","value":"Interceptor {  }","parent":null,"children":[{"krate":0,"index":3168}],"decl_id":null,"docs":" Represents a gRPC interceptor.","sig":null,"attributes":[{"value":"/ Represents a gRPC interceptor.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\interceptor.rs","byte_start":268401,"byte_end":268435,"line_start":4,"line_end":4,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\interceptor.rs","byte_start":268436,"byte_end":268439,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ gRPC interceptors are similar to middleware but have much less","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\interceptor.rs","byte_start":268440,"byte_end":268506,"line_start":6,"line_end":6,"column_start":1,"column_end":67}},{"value":"/ flexibility. This interceptor allows you to do two main things,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\interceptor.rs","byte_start":268507,"byte_end":268574,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/ one is to add/remove/check items in the `MetadataMap` of each","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\interceptor.rs","byte_start":268575,"byte_end":268640,"line_start":8,"line_end":8,"column_start":1,"column_end":66}},{"value":"/ request. Two, cancel a request with any `Status`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\interceptor.rs","byte_start":268641,"byte_end":268694,"line_start":9,"line_end":9,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\interceptor.rs","byte_start":268695,"byte_end":268698,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ An interceptor can be used on both the server and client side through","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\interceptor.rs","byte_start":268699,"byte_end":268772,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"/ the `tonic-build` crate's generated structs.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\interceptor.rs","byte_start":268773,"byte_end":268821,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\interceptor.rs","byte_start":268822,"byte_end":268825,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ These interceptors do not allow you to modify the `Message` of the request","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\interceptor.rs","byte_start":268826,"byte_end":268904,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ but allow you to check for metadata. If you would like to apply middleware like","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\interceptor.rs","byte_start":268905,"byte_end":268988,"line_start":15,"line_end":15,"column_start":1,"column_end":84}},{"value":"/ features to the body of the request, going through the `tower` abstraction is recommended.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\interceptor.rs","byte_start":268989,"byte_end":269083,"line_start":16,"line_end":16,"column_start":1,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":2090},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\interceptor.rs","byte_start":269310,"byte_end":269313,"line_start":24,"line_end":24,"column_start":12,"column_end":15},"name":"new","qualname":"<Interceptor>::new","value":"pub fn new<impl Fn(Request<()>) -> Result<Request<()>, Status> + Send + Sync + 'static: Fn(Request<()>)\n           -> Result<Request<()>, Status> + Send + Sync +\n           'static>(impl Fn(Request<()>) -> Result<Request<()>, Status> + Send + Sync + 'static)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Interceptor` from the provided function.\n","sig":null,"attributes":[{"value":"/ Create a new `Interceptor` from the provided function.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\interceptor.rs","byte_start":269240,"byte_end":269298,"line_start":23,"line_end":23,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":3171},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":271522,"byte_end":271529,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"Request","qualname":"::request::Request","value":"Request {  }","parent":null,"children":[{"krate":0,"index":3173},{"krate":0,"index":3174},{"krate":0,"index":3175}],"decl_id":null,"docs":" A gRPC request and metadata from an RPC call.\n","sig":null,"attributes":[{"value":"/ A gRPC request and metadata from an RPC call.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":271444,"byte_end":271493,"line_start":10,"line_end":10,"column_start":1,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":2108},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":272726,"byte_end":272737,"line_start":54,"line_end":54,"column_start":11,"column_end":22},"name":"IntoRequest","qualname":"::request::IntoRequest","value":"IntoRequest<T>: sealed::Sealed","parent":null,"children":[{"krate":0,"index":2110}],"decl_id":null,"docs":" Trait implemented by RPC request types.","sig":null,"attributes":[{"value":"/ Trait implemented by RPC request types.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":271804,"byte_end":271847,"line_start":25,"line_end":25,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":271848,"byte_end":271851,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Types implementing this trait can be used as arguments to client RPC","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":271852,"byte_end":271924,"line_start":27,"line_end":27,"column_start":1,"column_end":73}},{"value":"/ methods without explicitly wrapping them into `tonic::Request`s. The purpose","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":271925,"byte_end":272005,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ is to make client calls slightly more convenient to write.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":272006,"byte_end":272068,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":272069,"byte_end":272072,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Tonic's code generation and blanket implementations handle this for you,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":272073,"byte_end":272149,"line_start":31,"line_end":31,"column_start":1,"column_end":77}},{"value":"/ so it is not necessary to implement this trait directly.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":272150,"byte_end":272210,"line_start":32,"line_end":32,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":272211,"byte_end":272214,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":272215,"byte_end":272228,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":272229,"byte_end":272232,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Given the following gRPC method definition:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":272233,"byte_end":272280,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ ```proto","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":272281,"byte_end":272293,"line_start":37,"line_end":37,"column_start":1,"column_end":13}},{"value":"/ rpc GetFeature(Point) returns (Feature) {}","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":272294,"byte_end":272340,"line_start":38,"line_end":38,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":272341,"byte_end":272348,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":272349,"byte_end":272352,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ we can call `get_feature` in two equivalent ways:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":272353,"byte_end":272406,"line_start":41,"line_end":41,"column_start":1,"column_end":54}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":272407,"byte_end":272418,"line_start":42,"line_end":42,"column_start":1,"column_end":12}},{"value":"/ # pub struct Point {}","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":272419,"byte_end":272444,"line_start":43,"line_end":43,"column_start":1,"column_end":26}},{"value":"/ # pub struct Client {}","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":272445,"byte_end":272471,"line_start":44,"line_end":44,"column_start":1,"column_end":27}},{"value":"/ # impl Client {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":272472,"byte_end":272491,"line_start":45,"line_end":45,"column_start":1,"column_end":20}},{"value":"/ #   fn get_feature(&self, r: impl tonic::IntoRequest<Point>) {}","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":272492,"byte_end":272559,"line_start":46,"line_end":46,"column_start":1,"column_end":68}},{"value":"/ # }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":272560,"byte_end":272567,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ # let client = Client {};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":272568,"byte_end":272597,"line_start":48,"line_end":48,"column_start":1,"column_end":30}},{"value":"/ use tonic::Request;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":272598,"byte_end":272621,"line_start":49,"line_end":49,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":272622,"byte_end":272625,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ client.get_feature(Point {});","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":272626,"byte_end":272659,"line_start":51,"line_end":51,"column_start":1,"column_end":34}},{"value":"/ client.get_feature(Request::new(Point {}));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":272660,"byte_end":272707,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":272708,"byte_end":272715,"line_start":53,"line_end":53,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2110},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":272823,"byte_end":272835,"line_start":56,"line_end":56,"column_start":8,"column_end":20},"name":"into_request","qualname":"::request::IntoRequest::into_request","value":"pub fn into_request(Self) -> Request<T>","parent":{"krate":0,"index":2108},"children":[],"decl_id":null,"docs":" Wrap the input message `T` in a `tonic::Request`\n","sig":null,"attributes":[{"value":"/ Wrap the input message `T` in a `tonic::Request`","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":272763,"byte_end":272815,"line_start":55,"line_end":55,"column_start":5,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":2111},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":273986,"byte_end":274006,"line_start":92,"line_end":92,"column_start":11,"column_end":31},"name":"IntoStreamingRequest","qualname":"::request::IntoStreamingRequest","value":"IntoStreamingRequest: sealed::Sealed","parent":null,"children":[{"krate":0,"index":2112},{"krate":0,"index":2113},{"krate":0,"index":2114}],"decl_id":null,"docs":" Trait implemented by RPC streaming request types.","sig":null,"attributes":[{"value":"/ Trait implemented by RPC streaming request types.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":272860,"byte_end":272913,"line_start":59,"line_end":59,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":272914,"byte_end":272917,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Types implementing this trait can be used as arguments to client streaming","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":272918,"byte_end":272996,"line_start":61,"line_end":61,"column_start":1,"column_end":79}},{"value":"/ RPC methods without explicitly wrapping them into `tonic::Request`s. The","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":272997,"byte_end":273073,"line_start":62,"line_end":62,"column_start":1,"column_end":77}},{"value":"/ purpose is to make client calls slightly more convenient to write.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":273074,"byte_end":273144,"line_start":63,"line_end":63,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":273145,"byte_end":273148,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Tonic's code generation and blanket implementations handle this for you,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":273149,"byte_end":273225,"line_start":65,"line_end":65,"column_start":1,"column_end":77}},{"value":"/ so it is not necessary to implement this trait directly.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":273226,"byte_end":273286,"line_start":66,"line_end":66,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":273287,"byte_end":273290,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":273291,"byte_end":273304,"line_start":68,"line_end":68,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":273305,"byte_end":273308,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ Given the following gRPC service method definition:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":273309,"byte_end":273364,"line_start":70,"line_end":70,"column_start":1,"column_end":56}},{"value":"/ ```proto","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":273365,"byte_end":273377,"line_start":71,"line_end":71,"column_start":1,"column_end":13}},{"value":"/ rpc RecordRoute(stream Point) returns (RouteSummary) {}","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":273378,"byte_end":273437,"line_start":72,"line_end":72,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":273438,"byte_end":273445,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/ we can call `record_route` in two equivalent ways:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":273446,"byte_end":273500,"line_start":74,"line_end":74,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":273501,"byte_end":273504,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":273505,"byte_end":273516,"line_start":76,"line_end":76,"column_start":1,"column_end":12}},{"value":"/ # #[derive(Clone)]","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":273517,"byte_end":273539,"line_start":77,"line_end":77,"column_start":1,"column_end":23}},{"value":"/ # pub struct Point {};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":273540,"byte_end":273566,"line_start":78,"line_end":78,"column_start":1,"column_end":27}},{"value":"/ # pub struct Client {};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":273567,"byte_end":273594,"line_start":79,"line_end":79,"column_start":1,"column_end":28}},{"value":"/ # impl Client {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":273595,"byte_end":273614,"line_start":80,"line_end":80,"column_start":1,"column_end":20}},{"value":"/ #   fn record_route(&self, r: impl tonic::IntoStreamingRequest<Message = Point>) {}","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":273615,"byte_end":273702,"line_start":81,"line_end":81,"column_start":1,"column_end":88}},{"value":"/ # }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":273703,"byte_end":273710,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/ # let client = Client {};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":273711,"byte_end":273740,"line_start":83,"line_end":83,"column_start":1,"column_end":30}},{"value":"/ use tonic::Request;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":273741,"byte_end":273764,"line_start":84,"line_end":84,"column_start":1,"column_end":24}},{"value":"/ use futures_util::stream;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":273765,"byte_end":273794,"line_start":85,"line_end":85,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":273795,"byte_end":273798,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ let messages = vec![Point {}, Point {}];","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":273799,"byte_end":273843,"line_start":87,"line_end":87,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":273844,"byte_end":273847,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ client.record_route(Request::new(stream::iter(messages.clone())));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":273848,"byte_end":273918,"line_start":89,"line_end":89,"column_start":1,"column_end":71}},{"value":"/ client.record_route(stream::iter(messages));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":273919,"byte_end":273967,"line_start":90,"line_end":90,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":273968,"byte_end":273975,"line_start":91,"line_end":91,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":2112},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":274070,"byte_end":274076,"line_start":94,"line_end":94,"column_start":10,"column_end":16},"name":"Stream","qualname":"::request::IntoStreamingRequest::Stream","value":"type Stream: Stream<Item = Self::Message> + Send + Sync + 'static;","parent":{"krate":0,"index":2111},"children":[],"decl_id":null,"docs":" The RPC request stream type\n","sig":null,"attributes":[{"value":"/ The RPC request stream type","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":274029,"byte_end":274060,"line_start":93,"line_end":93,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":2113},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":274171,"byte_end":274178,"line_start":97,"line_end":97,"column_start":10,"column_end":17},"name":"Message","qualname":"::request::IntoStreamingRequest::Message","value":"type Message;","parent":{"krate":0,"index":2111},"children":[],"decl_id":null,"docs":" The RPC request type\n","sig":null,"attributes":[{"value":"/ The RPC request type","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":274137,"byte_end":274161,"line_start":96,"line_end":96,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2114},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":274246,"byte_end":274268,"line_start":100,"line_end":100,"column_start":8,"column_end":30},"name":"into_streaming_request","qualname":"::request::IntoStreamingRequest::into_streaming_request","value":"pub fn into_streaming_request(Self) -> Request<Self::Stream>","parent":{"krate":0,"index":2111},"children":[],"decl_id":null,"docs":" Wrap the stream of messages in a `tonic::Request`\n","sig":null,"attributes":[{"value":"/ Wrap the stream of messages in a `tonic::Request`","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":274185,"byte_end":274238,"line_start":99,"line_end":99,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2117},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":274594,"byte_end":274597,"line_start":115,"line_end":115,"column_start":12,"column_end":15},"name":"new","qualname":"<Request<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new gRPC request.","sig":null,"attributes":[{"value":"/ Create a new gRPC request.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":274329,"byte_end":274359,"line_start":104,"line_end":104,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":274364,"byte_end":274367,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":274372,"byte_end":274383,"line_start":106,"line_end":106,"column_start":5,"column_end":16}},{"value":"/ # use tonic::Request;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":274388,"byte_end":274413,"line_start":107,"line_end":107,"column_start":5,"column_end":30}},{"value":"/ # pub struct HelloRequest {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":274418,"byte_end":274449,"line_start":108,"line_end":108,"column_start":5,"column_end":36}},{"value":"/ #   pub name: String,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":274454,"byte_end":274479,"line_start":109,"line_end":109,"column_start":5,"column_end":30}},{"value":"/ # }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":274484,"byte_end":274491,"line_start":110,"line_end":110,"column_start":5,"column_end":12}},{"value":"/ Request::new(HelloRequest {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":274496,"byte_end":274527,"line_start":111,"line_end":111,"column_start":5,"column_end":36}},{"value":"/    name: \"Bob\".into(),","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":274532,"byte_end":274558,"line_start":112,"line_end":112,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":274563,"byte_end":274570,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":274575,"byte_end":274582,"line_start":114,"line_end":114,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2118},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":274815,"byte_end":274822,"line_start":124,"line_end":124,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Request<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the message\n","sig":null,"attributes":[{"value":"/ Get a reference to the message","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":274769,"byte_end":274803,"line_start":123,"line_end":123,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2119},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":274925,"byte_end":274932,"line_start":129,"line_end":129,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Request<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the message\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the message","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":274871,"byte_end":274913,"line_start":128,"line_end":128,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2120},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":275056,"byte_end":275064,"line_start":134,"line_end":134,"column_start":12,"column_end":20},"name":"metadata","qualname":"<Request<T>>::metadata","value":"pub fn metadata(&Self) -> &MetadataMap","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the custom request metadata.\n","sig":null,"attributes":[{"value":"/ Get a reference to the custom request metadata.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":274993,"byte_end":275044,"line_start":133,"line_end":133,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2121},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":275188,"byte_end":275200,"line_start":139,"line_end":139,"column_start":12,"column_end":24},"name":"metadata_mut","qualname":"<Request<T>>::metadata_mut","value":"pub fn metadata_mut(&mut Self) -> &mut MetadataMap","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the request metadata.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the request metadata.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":275124,"byte_end":275176,"line_start":138,"line_end":138,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2122},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":275326,"byte_end":275336,"line_start":144,"line_end":144,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Request<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self`, returning the message\n","sig":null,"attributes":[{"value":"/ Consumes `self`, returning the message","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":275272,"byte_end":275314,"line_start":143,"line_end":143,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2126},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":276014,"byte_end":276023,"line_start":169,"line_end":169,"column_start":12,"column_end":21},"name":"from_http","qualname":"<Request<T>>::from_http","value":"pub fn from_http(http::Request<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert an HTTP request to a gRPC request\n","sig":null,"attributes":[{"value":"/ Convert an HTTP request to a gRPC request","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":275957,"byte_end":276002,"line_start":168,"line_end":168,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2128},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":276619,"byte_end":276622,"line_start":187,"line_end":187,"column_start":12,"column_end":15},"name":"map","qualname":"<Request<T>>::map","value":"pub fn map<F, U>(Self, F) -> Request<U> where F: FnOnce(T) -> U","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2131},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":277097,"byte_end":277108,"line_start":205,"line_end":205,"column_start":12,"column_end":23},"name":"remote_addr","qualname":"<Request<T>>::remote_addr","value":"pub fn remote_addr(&Self) -> Option<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Get the remote address of this connection.","sig":null,"attributes":[{"value":"/ Get the remote address of this connection.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":276882,"byte_end":276928,"line_start":200,"line_end":200,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":276933,"byte_end":276936,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ This will return `None` if the `IO` type used","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":276941,"byte_end":276990,"line_start":202,"line_end":202,"column_start":5,"column_end":54}},{"value":"/ does not implement `Connected`. This currently,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":276995,"byte_end":277046,"line_start":203,"line_end":203,"column_start":5,"column_end":56}},{"value":"/ only works on the server side.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":277051,"byte_end":277085,"line_start":204,"line_end":204,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2132},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":277597,"byte_end":277607,"line_start":217,"line_end":217,"column_start":12,"column_end":22},"name":"peer_certs","qualname":"<Request<T>>::peer_certs","value":"pub fn peer_certs(&Self) -> Option<Arc<Vec<Certificate>>>","parent":null,"children":[],"decl_id":null,"docs":" Get the peer certificates of the connected client.","sig":null,"attributes":[{"value":"/ Get the peer certificates of the connected client.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":277201,"byte_end":277255,"line_start":209,"line_end":209,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":277260,"byte_end":277263,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ This is used to fetch the certificates from the TLS session","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":277268,"byte_end":277331,"line_start":211,"line_end":211,"column_start":5,"column_end":68}},{"value":"/ and is mostly used for mTLS. This currently only returns","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":277336,"byte_end":277396,"line_start":212,"line_end":212,"column_start":5,"column_end":65}},{"value":"/ `Some` on the server side of the `transport` server with","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":277401,"byte_end":277461,"line_start":213,"line_end":213,"column_start":5,"column_end":65}},{"value":"/ TLS enabled connections.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":277466,"byte_end":277494,"line_start":214,"line_end":214,"column_start":5,"column_end":33}},{"value":"cfg(feature = \"transport\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":277499,"byte_end":277528,"line_start":215,"line_end":215,"column_start":5,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":2154},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":278537,"byte_end":278543,"line_start":265,"line_end":265,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::request::sealed::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3184},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\response.rs","byte_start":279148,"byte_end":279156,"line_start":5,"line_end":5,"column_start":12,"column_end":20},"name":"Response","qualname":"::response::Response","value":"Response {  }","parent":null,"children":[{"krate":0,"index":3186},{"krate":0,"index":3187}],"decl_id":null,"docs":" A gRPC response and metadata from an RPC call.\n","sig":null,"attributes":[{"value":"/ A gRPC response and metadata from an RPC call.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\response.rs","byte_start":279069,"byte_end":279119,"line_start":3,"line_end":3,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2159},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\response.rs","byte_start":279552,"byte_end":279555,"line_start":23,"line_end":23,"column_start":12,"column_end":15},"name":"new","qualname":"<Response<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new gRPC response.","sig":null,"attributes":[{"value":"/ Create a new gRPC response.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\response.rs","byte_start":279234,"byte_end":279265,"line_start":11,"line_end":11,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\response.rs","byte_start":279270,"byte_end":279273,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\response.rs","byte_start":279278,"byte_end":279289,"line_start":13,"line_end":13,"column_start":5,"column_end":16}},{"value":"/ # use tonic::Response;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\response.rs","byte_start":279294,"byte_end":279320,"line_start":14,"line_end":14,"column_start":5,"column_end":31}},{"value":"/ # pub struct HelloReply {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\response.rs","byte_start":279325,"byte_end":279354,"line_start":15,"line_end":15,"column_start":5,"column_end":34}},{"value":"/ #   pub message: String,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\response.rs","byte_start":279359,"byte_end":279387,"line_start":16,"line_end":16,"column_start":5,"column_end":33}},{"value":"/ # }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\response.rs","byte_start":279392,"byte_end":279399,"line_start":17,"line_end":17,"column_start":5,"column_end":12}},{"value":"/ # let name = \"\";","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\response.rs","byte_start":279404,"byte_end":279424,"line_start":18,"line_end":18,"column_start":5,"column_end":25}},{"value":"/ Response::new(HelloReply {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\response.rs","byte_start":279429,"byte_end":279459,"line_start":19,"line_end":19,"column_start":5,"column_end":35}},{"value":"/     message: format!(\"Hello, {}!\", name).into(),","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\response.rs","byte_start":279464,"byte_end":279516,"line_start":20,"line_end":20,"column_start":5,"column_end":57}},{"value":"/ });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\response.rs","byte_start":279521,"byte_end":279528,"line_start":21,"line_end":21,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\response.rs","byte_start":279533,"byte_end":279540,"line_start":22,"line_end":22,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2160},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\response.rs","byte_start":279730,"byte_end":279737,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Response<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Get a immutable reference to `T`.\n","sig":null,"attributes":[{"value":"/ Get a immutable reference to `T`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\response.rs","byte_start":279681,"byte_end":279718,"line_start":30,"line_end":30,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2161},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\response.rs","byte_start":279840,"byte_end":279847,"line_start":36,"line_end":36,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Response<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the message\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the message","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\response.rs","byte_start":279786,"byte_end":279828,"line_start":35,"line_end":35,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2162},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\response.rs","byte_start":279972,"byte_end":279980,"line_start":41,"line_end":41,"column_start":12,"column_end":20},"name":"metadata","qualname":"<Response<T>>::metadata","value":"pub fn metadata(&Self) -> &MetadataMap","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the custom response metadata.\n","sig":null,"attributes":[{"value":"/ Get a reference to the custom response metadata.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\response.rs","byte_start":279908,"byte_end":279960,"line_start":40,"line_end":40,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2163},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\response.rs","byte_start":280105,"byte_end":280117,"line_start":46,"line_end":46,"column_start":12,"column_end":24},"name":"metadata_mut","qualname":"<Response<T>>::metadata_mut","value":"pub fn metadata_mut(&mut Self) -> &mut MetadataMap","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the response metadata.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the response metadata.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\response.rs","byte_start":280040,"byte_end":280093,"line_start":45,"line_end":45,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2164},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\response.rs","byte_start":280243,"byte_end":280253,"line_start":51,"line_end":51,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Response<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self`, returning the message\n","sig":null,"attributes":[{"value":"/ Consumes `self`, returning the message","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\response.rs","byte_start":280189,"byte_end":280231,"line_start":50,"line_end":50,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2169},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\response.rs","byte_start":281029,"byte_end":281032,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"map","qualname":"<Response<T>>::map","value":"pub fn map<F, U>(Self, F) -> Response<U> where F: FnOnce(T) -> U","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3191},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":282820,"byte_end":282826,"line_start":37,"line_end":37,"column_start":12,"column_end":18},"name":"Status","qualname":"::status::Status","value":"Status {  }","parent":null,"children":[{"krate":0,"index":3192},{"krate":0,"index":3193},{"krate":0,"index":3194},{"krate":0,"index":3195}],"decl_id":null,"docs":" A gRPC status describing the result of an RPC call.","sig":null,"attributes":[{"value":"/ A gRPC status describing the result of an RPC call.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":282333,"byte_end":282388,"line_start":24,"line_end":24,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":282389,"byte_end":282392,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Values can be created using the `new` function or one of the specialized","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":282393,"byte_end":282469,"line_start":26,"line_end":26,"column_start":1,"column_end":77}},{"value":"/ associated functions.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":282470,"byte_end":282495,"line_start":27,"line_end":27,"column_start":1,"column_end":26}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":282496,"byte_end":282507,"line_start":28,"line_end":28,"column_start":1,"column_end":12}},{"value":"/ # use tonic::{Status, Code};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":282508,"byte_end":282540,"line_start":29,"line_end":29,"column_start":1,"column_end":33}},{"value":"/ let status1 = Status::new(Code::InvalidArgument, \"name is invalid\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":282541,"byte_end":282613,"line_start":30,"line_end":30,"column_start":1,"column_end":73}},{"value":"/ let status2 = Status::invalid_argument(\"name is invalid\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":282614,"byte_end":282676,"line_start":31,"line_end":31,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":282677,"byte_end":282680,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(status1.code(), Code::InvalidArgument);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":282681,"byte_end":282735,"line_start":33,"line_end":33,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(status1.code(), status2.code());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":282736,"byte_end":282783,"line_start":34,"line_end":34,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":282784,"byte_end":282791,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3199},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":283668,"byte_end":283670,"line_start":58,"line_end":58,"column_start":5,"column_end":7},"name":"Ok","qualname":"::status::Code::Ok","value":"Code::Ok","parent":{"krate":0,"index":3198},"children":[],"decl_id":null,"docs":" The operation completed successfully.\n","sig":null,"attributes":[{"value":"/ The operation completed successfully.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":283622,"byte_end":283663,"line_start":57,"line_end":57,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3202},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":283718,"byte_end":283727,"line_start":61,"line_end":61,"column_start":5,"column_end":14},"name":"Cancelled","qualname":"::status::Code::Cancelled","value":"Code::Cancelled","parent":{"krate":0,"index":3198},"children":[],"decl_id":null,"docs":" The operation was cancelled.\n","sig":null,"attributes":[{"value":"/ The operation was cancelled.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":283681,"byte_end":283713,"line_start":60,"line_end":60,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3205},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":283761,"byte_end":283768,"line_start":64,"line_end":64,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::status::Code::Unknown","value":"Code::Unknown","parent":{"krate":0,"index":3198},"children":[],"decl_id":null,"docs":" Unknown error.\n","sig":null,"attributes":[{"value":"/ Unknown error.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":283738,"byte_end":283756,"line_start":63,"line_end":63,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3208},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":283825,"byte_end":283840,"line_start":67,"line_end":67,"column_start":5,"column_end":20},"name":"InvalidArgument","qualname":"::status::Code::InvalidArgument","value":"Code::InvalidArgument","parent":{"krate":0,"index":3198},"children":[],"decl_id":null,"docs":" Client specified an invalid argument.\n","sig":null,"attributes":[{"value":"/ Client specified an invalid argument.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":283779,"byte_end":283820,"line_start":66,"line_end":66,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3211},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":283909,"byte_end":283925,"line_start":70,"line_end":70,"column_start":5,"column_end":21},"name":"DeadlineExceeded","qualname":"::status::Code::DeadlineExceeded","value":"Code::DeadlineExceeded","parent":{"krate":0,"index":3198},"children":[],"decl_id":null,"docs":" Deadline expired before operation could complete.\n","sig":null,"attributes":[{"value":"/ Deadline expired before operation could complete.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":283851,"byte_end":283904,"line_start":69,"line_end":69,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3214},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":283981,"byte_end":283989,"line_start":73,"line_end":73,"column_start":5,"column_end":13},"name":"NotFound","qualname":"::status::Code::NotFound","value":"Code::NotFound","parent":{"krate":0,"index":3198},"children":[],"decl_id":null,"docs":" Some requested entity was not found.\n","sig":null,"attributes":[{"value":"/ Some requested entity was not found.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":283936,"byte_end":283976,"line_start":72,"line_end":72,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3217},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":284064,"byte_end":284077,"line_start":76,"line_end":76,"column_start":5,"column_end":18},"name":"AlreadyExists","qualname":"::status::Code::AlreadyExists","value":"Code::AlreadyExists","parent":{"krate":0,"index":3198},"children":[],"decl_id":null,"docs":" Some entity that we attempted to create already exists.\n","sig":null,"attributes":[{"value":"/ Some entity that we attempted to create already exists.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":284000,"byte_end":284059,"line_start":75,"line_end":75,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3220},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":284168,"byte_end":284184,"line_start":79,"line_end":79,"column_start":5,"column_end":21},"name":"PermissionDenied","qualname":"::status::Code::PermissionDenied","value":"Code::PermissionDenied","parent":{"krate":0,"index":3198},"children":[],"decl_id":null,"docs":" The caller does not have permission to execute the specified operation.\n","sig":null,"attributes":[{"value":"/ The caller does not have permission to execute the specified operation.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":284088,"byte_end":284163,"line_start":78,"line_end":78,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3223},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":284237,"byte_end":284254,"line_start":82,"line_end":82,"column_start":5,"column_end":22},"name":"ResourceExhausted","qualname":"::status::Code::ResourceExhausted","value":"Code::ResourceExhausted","parent":{"krate":0,"index":3198},"children":[],"decl_id":null,"docs":" Some resource has been exhausted.\n","sig":null,"attributes":[{"value":"/ Some resource has been exhausted.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":284195,"byte_end":284232,"line_start":81,"line_end":81,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3226},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":284342,"byte_end":284360,"line_start":85,"line_end":85,"column_start":5,"column_end":23},"name":"FailedPrecondition","qualname":"::status::Code::FailedPrecondition","value":"Code::FailedPrecondition","parent":{"krate":0,"index":3198},"children":[],"decl_id":null,"docs":" The system is not in a state required for the operation's execution.\n","sig":null,"attributes":[{"value":"/ The system is not in a state required for the operation's execution.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":284265,"byte_end":284337,"line_start":84,"line_end":84,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3229},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":284406,"byte_end":284413,"line_start":88,"line_end":88,"column_start":5,"column_end":12},"name":"Aborted","qualname":"::status::Code::Aborted","value":"Code::Aborted","parent":{"krate":0,"index":3198},"children":[],"decl_id":null,"docs":" The operation was aborted.\n","sig":null,"attributes":[{"value":"/ The operation was aborted.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":284371,"byte_end":284401,"line_start":87,"line_end":87,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3232},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":284479,"byte_end":284489,"line_start":91,"line_end":91,"column_start":5,"column_end":15},"name":"OutOfRange","qualname":"::status::Code::OutOfRange","value":"Code::OutOfRange","parent":{"krate":0,"index":3198},"children":[],"decl_id":null,"docs":" Operation was attempted past the valid range.\n","sig":null,"attributes":[{"value":"/ Operation was attempted past the valid range.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":284425,"byte_end":284474,"line_start":90,"line_end":90,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3235},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":284556,"byte_end":284569,"line_start":94,"line_end":94,"column_start":5,"column_end":18},"name":"Unimplemented","qualname":"::status::Code::Unimplemented","value":"Code::Unimplemented","parent":{"krate":0,"index":3198},"children":[],"decl_id":null,"docs":" Operation is not implemented or not supported.\n","sig":null,"attributes":[{"value":"/ Operation is not implemented or not supported.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":284501,"byte_end":284551,"line_start":93,"line_end":93,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3238},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":284605,"byte_end":284613,"line_start":97,"line_end":97,"column_start":5,"column_end":13},"name":"Internal","qualname":"::status::Code::Internal","value":"Code::Internal","parent":{"krate":0,"index":3198},"children":[],"decl_id":null,"docs":" Internal error.\n","sig":null,"attributes":[{"value":"/ Internal error.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":284581,"byte_end":284600,"line_start":96,"line_end":96,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3241},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":284671,"byte_end":284682,"line_start":100,"line_end":100,"column_start":5,"column_end":16},"name":"Unavailable","qualname":"::status::Code::Unavailable","value":"Code::Unavailable","parent":{"krate":0,"index":3198},"children":[],"decl_id":null,"docs":" The service is currently unavailable.\n","sig":null,"attributes":[{"value":"/ The service is currently unavailable.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":284625,"byte_end":284666,"line_start":99,"line_end":99,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3244},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":284741,"byte_end":284749,"line_start":103,"line_end":103,"column_start":5,"column_end":13},"name":"DataLoss","qualname":"::status::Code::DataLoss","value":"Code::DataLoss","parent":{"krate":0,"index":3198},"children":[],"decl_id":null,"docs":" Unrecoverable data loss or corruption.\n","sig":null,"attributes":[{"value":"/ Unrecoverable data loss or corruption.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":284694,"byte_end":284736,"line_start":102,"line_end":102,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3247},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":284828,"byte_end":284843,"line_start":106,"line_end":106,"column_start":5,"column_end":20},"name":"Unauthenticated","qualname":"::status::Code::Unauthenticated","value":"Code::Unauthenticated","parent":{"krate":0,"index":3198},"children":[],"decl_id":null,"docs":" The request does not have valid authentication credentials\n","sig":null,"attributes":[{"value":"/ The request does not have valid authentication credentials","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":284761,"byte_end":284823,"line_start":105,"line_end":105,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3250},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":284948,"byte_end":284963,"line_start":110,"line_end":110,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::status::Code::__NonExhaustive","value":"Code::__NonExhaustive","parent":{"krate":0,"index":3198},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3198},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":283611,"byte_end":283615,"line_start":56,"line_end":56,"column_start":10,"column_end":14},"name":"Code","qualname":"::status::Code","value":"pub enum Code {\n\n    /// The operation completed successfully.\n    Ok = ,\n\n    /// The operation was cancelled.\n    Cancelled = ,\n\n    /// Unknown error.\n    Unknown = ,\n\n    /// Client specified an invalid argument.\n    InvalidArgument = ,\n\n    /// Deadline expired before operation could complete.\n    DeadlineExceeded = ,\n\n    /// Some requested entity was not found.\n    NotFound = ,\n\n    /// Some entity that we attempted to create already exists.\n    AlreadyExists = ,\n\n    /// The caller does not have permission to execute the specified operation.\n    PermissionDenied = ,\n\n    /// Some resource has been exhausted.\n    ResourceExhausted = ,\n\n    /// The system is not in a state required for the operation's execution.\n    FailedPrecondition = ,\n\n    /// The operation was aborted.\n    Aborted = ,\n\n    /// Operation was attempted past the valid range.\n    OutOfRange = ,\n\n    /// Operation is not implemented or not supported.\n    Unimplemented = ,\n\n    /// Internal error.\n    Internal = ,\n\n    /// The service is currently unavailable.\n    Unavailable = ,\n\n    /// Unrecoverable data loss or corruption.\n    DataLoss = ,\n\n    /// The request does not have valid authentication credentials\n    Unauthenticated = ,\n\n    #[doc(hidden)]\n    __NonExhaustive,\n}","parent":null,"children":[{"krate":0,"index":3199},{"krate":0,"index":3202},{"krate":0,"index":3205},{"krate":0,"index":3208},{"krate":0,"index":3211},{"krate":0,"index":3214},{"krate":0,"index":3217},{"krate":0,"index":3220},{"krate":0,"index":3223},{"krate":0,"index":3226},{"krate":0,"index":3229},{"krate":0,"index":3232},{"krate":0,"index":3235},{"krate":0,"index":3238},{"krate":0,"index":3241},{"krate":0,"index":3244},{"krate":0,"index":3247},{"krate":0,"index":3250}],"decl_id":null,"docs":" gRPC status codes used by [`Status`].","sig":null,"attributes":[{"value":"/ gRPC status codes used by [`Status`].","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":283337,"byte_end":283378,"line_start":50,"line_end":50,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":283379,"byte_end":283382,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ These variants match the [gRPC status codes].","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":283383,"byte_end":283432,"line_start":52,"line_end":52,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":283433,"byte_end":283436,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ [gRPC status codes]: https://github.com/grpc/grpc/blob/master/doc/statuscodes.md#status-codes-and-their-use-in-grpc","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":283437,"byte_end":283556,"line_start":54,"line_end":54,"column_start":1,"column_end":120}}]},{"kind":"Method","id":{"krate":0,"index":2197},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":285465,"byte_end":285476,"line_start":126,"line_end":126,"column_start":12,"column_end":23},"name":"description","qualname":"<Code>::description","value":"pub fn description(&Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Get description of this `Code`.\n ```\n fn make_grpc_request() -> tonic::Code {\n     // ...   \n     tonic::Code::Ok\n }\n let code = make_grpc_request();\n println!(\"Operation completed. Human readable description: {}\", code.description());\n ```\n If you only need description in `println`, `format`, `log` and other\n formatting contexts, you may want to use `Display` impl for `Code`\n instead.\n","sig":null,"attributes":[{"value":"/ Get description of this `Code`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":284984,"byte_end":285019,"line_start":114,"line_end":114,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":285024,"byte_end":285031,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ fn make_grpc_request() -> tonic::Code {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":285036,"byte_end":285079,"line_start":116,"line_end":116,"column_start":5,"column_end":48}},{"value":"/     // ...   ","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":285084,"byte_end":285101,"line_start":117,"line_end":117,"column_start":5,"column_end":22}},{"value":"/     tonic::Code::Ok","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":285106,"byte_end":285129,"line_start":118,"line_end":118,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":285134,"byte_end":285139,"line_start":119,"line_end":119,"column_start":5,"column_end":10}},{"value":"/ let code = make_grpc_request();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":285144,"byte_end":285179,"line_start":120,"line_end":120,"column_start":5,"column_end":40}},{"value":"/ println!(\"Operation completed. Human readable description: {}\", code.description());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":285184,"byte_end":285272,"line_start":121,"line_end":121,"column_start":5,"column_end":93}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":285277,"byte_end":285284,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ If you only need description in `println`, `format`, `log` and other","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":285289,"byte_end":285361,"line_start":123,"line_end":123,"column_start":5,"column_end":77}},{"value":"/ formatting contexts, you may want to use `Display` impl for `Code`","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":285366,"byte_end":285436,"line_start":124,"line_end":124,"column_start":5,"column_end":75}},{"value":"/ instead.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":285441,"byte_end":285453,"line_start":125,"line_end":125,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2201},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":287340,"byte_end":287343,"line_start":166,"line_end":166,"column_start":12,"column_end":15},"name":"new","qualname":"<Status>::new","value":"pub fn new<impl Into<String>: Into<String>>(Code, impl Into<String>) -> Status","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Status` with the associated code and message.\n","sig":null,"attributes":[{"value":"/ Create a new `Status` with the associated code and message.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":287265,"byte_end":287328,"line_start":165,"line_end":165,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2203},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":287619,"byte_end":287621,"line_start":176,"line_end":176,"column_start":12,"column_end":14},"name":"ok","qualname":"<Status>::ok","value":"pub fn ok<impl Into<String>: Into<String>>(impl Into<String>) -> Status","parent":null,"children":[],"decl_id":null,"docs":" The operation completed successfully.\n","sig":null,"attributes":[{"value":"/ The operation completed successfully.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":287566,"byte_end":287607,"line_start":175,"line_end":175,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2205},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":287782,"byte_end":287791,"line_start":181,"line_end":181,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<Status>::cancelled","value":"pub fn cancelled<impl Into<String>: Into<String>>(impl Into<String>) -> Status","parent":null,"children":[],"decl_id":null,"docs":" The operation was cancelled (typically by the caller).\n","sig":null,"attributes":[{"value":"/ The operation was cancelled (typically by the caller).","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":287712,"byte_end":287770,"line_start":180,"line_end":180,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2207},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":288219,"byte_end":288226,"line_start":189,"line_end":189,"column_start":12,"column_end":19},"name":"unknown","qualname":"<Status>::unknown","value":"pub fn unknown<impl Into<String>: Into<String>>(impl Into<String>) -> Status","parent":null,"children":[],"decl_id":null,"docs":" Unknown error. An example of where this error may be returned is if a\n `Status` value received from another address space belongs to an error-space\n that is not known in this address space. Also errors raised by APIs that\n do not return enough error information may be converted to this error.\n","sig":null,"attributes":[{"value":"/ Unknown error. An example of where this error may be returned is if a","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":287889,"byte_end":287962,"line_start":185,"line_end":185,"column_start":5,"column_end":78}},{"value":"/ `Status` value received from another address space belongs to an error-space","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":287967,"byte_end":288047,"line_start":186,"line_end":186,"column_start":5,"column_end":85}},{"value":"/ that is not known in this address space. Also errors raised by APIs that","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":288052,"byte_end":288128,"line_start":187,"line_end":187,"column_start":5,"column_end":81}},{"value":"/ do not return enough error information may be converted to this error.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":288133,"byte_end":288207,"line_start":188,"line_end":188,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2209},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":288577,"byte_end":288593,"line_start":197,"line_end":197,"column_start":12,"column_end":28},"name":"invalid_argument","qualname":"<Status>::invalid_argument","value":"pub fn invalid_argument<impl Into<String>: Into<String>>(impl Into<String>)\n-> Status","parent":null,"children":[],"decl_id":null,"docs":" Client specified an invalid argument. Note that this differs from\n `FailedPrecondition`. `InvalidArgument` indicates arguments that are\n problematic regardless of the state of the system (e.g., a malformed file\n name).\n","sig":null,"attributes":[{"value":"/ Client specified an invalid argument. Note that this differs from","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":288322,"byte_end":288391,"line_start":193,"line_end":193,"column_start":5,"column_end":74}},{"value":"/ `FailedPrecondition`. `InvalidArgument` indicates arguments that are","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":288396,"byte_end":288468,"line_start":194,"line_end":194,"column_start":5,"column_end":77}},{"value":"/ problematic regardless of the state of the system (e.g., a malformed file","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":288473,"byte_end":288550,"line_start":195,"line_end":195,"column_start":5,"column_end":82}},{"value":"/ name).","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":288555,"byte_end":288565,"line_start":196,"line_end":196,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":2211},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":289036,"byte_end":289053,"line_start":206,"line_end":206,"column_start":12,"column_end":29},"name":"deadline_exceeded","qualname":"<Status>::deadline_exceeded","value":"pub fn deadline_exceeded<impl Into<String>: Into<String>>(impl Into<String>)\n-> Status","parent":null,"children":[],"decl_id":null,"docs":" Deadline expired before operation could complete. For operations that\n change the state of the system, this error may be returned even if the\n operation has completed successfully. For example, a successful response\n from a server could have been delayed long enough for the deadline to\n expire.\n","sig":null,"attributes":[{"value":"/ Deadline expired before operation could complete. For operations that","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":288697,"byte_end":288770,"line_start":201,"line_end":201,"column_start":5,"column_end":78}},{"value":"/ change the state of the system, this error may be returned even if the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":288775,"byte_end":288849,"line_start":202,"line_end":202,"column_start":5,"column_end":79}},{"value":"/ operation has completed successfully. For example, a successful response","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":288854,"byte_end":288930,"line_start":203,"line_end":203,"column_start":5,"column_end":81}},{"value":"/ from a server could have been delayed long enough for the deadline to","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":288935,"byte_end":289008,"line_start":204,"line_end":204,"column_start":5,"column_end":78}},{"value":"/ expire.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":289013,"byte_end":289024,"line_start":205,"line_end":205,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2213},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":289236,"byte_end":289245,"line_start":211,"line_end":211,"column_start":12,"column_end":21},"name":"not_found","qualname":"<Status>::not_found","value":"pub fn not_found<impl Into<String>: Into<String>>(impl Into<String>) -> Status","parent":null,"children":[],"decl_id":null,"docs":" Some requested entity (e.g., file or directory) was not found.\n","sig":null,"attributes":[{"value":"/ Some requested entity (e.g., file or directory) was not found.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":289158,"byte_end":289224,"line_start":210,"line_end":210,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2215},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":289447,"byte_end":289461,"line_start":217,"line_end":217,"column_start":12,"column_end":26},"name":"already_exists","qualname":"<Status>::already_exists","value":"pub fn already_exists<impl Into<String>: Into<String>>(impl Into<String>)\n-> Status","parent":null,"children":[],"decl_id":null,"docs":" Some entity that we attempted to create (e.g., file or directory) already\n exists.\n","sig":null,"attributes":[{"value":"/ Some entity that we attempted to create (e.g., file or directory) already","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":289342,"byte_end":289419,"line_start":215,"line_end":215,"column_start":5,"column_end":82}},{"value":"/ exists.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":289424,"byte_end":289435,"line_start":216,"line_end":216,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2217},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":289941,"byte_end":289958,"line_start":226,"line_end":226,"column_start":12,"column_end":29},"name":"permission_denied","qualname":"<Status>::permission_denied","value":"pub fn permission_denied<impl Into<String>: Into<String>>(impl Into<String>)\n-> Status","parent":null,"children":[],"decl_id":null,"docs":" The caller does not have permission to execute the specified operation.\n `PermissionDenied` must not be used for rejections caused by exhausting\n some resource (use `ResourceExhausted` instead for those errors).\n `PermissionDenied` must not be used if the caller cannot be identified\n (use `Unauthenticated` instead for those errors).\n","sig":null,"attributes":[{"value":"/ The caller does not have permission to execute the specified operation.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":289563,"byte_end":289638,"line_start":221,"line_end":221,"column_start":5,"column_end":80}},{"value":"/ `PermissionDenied` must not be used for rejections caused by exhausting","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":289643,"byte_end":289718,"line_start":222,"line_end":222,"column_start":5,"column_end":80}},{"value":"/ some resource (use `ResourceExhausted` instead for those errors).","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":289723,"byte_end":289792,"line_start":223,"line_end":223,"column_start":5,"column_end":74}},{"value":"/ `PermissionDenied` must not be used if the caller cannot be identified","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":289797,"byte_end":289871,"line_start":224,"line_end":224,"column_start":5,"column_end":79}},{"value":"/ (use `Unauthenticated` instead for those errors).","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":289876,"byte_end":289929,"line_start":225,"line_end":225,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2219},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":290197,"byte_end":290215,"line_start":232,"line_end":232,"column_start":12,"column_end":30},"name":"resource_exhausted","qualname":"<Status>::resource_exhausted","value":"pub fn resource_exhausted<impl Into<String>: Into<String>>(impl Into<String>)\n-> Status","parent":null,"children":[],"decl_id":null,"docs":" Some resource has been exhausted, perhaps a per-user quota, or perhaps\n the entire file system is out of space.\n","sig":null,"attributes":[{"value":"/ Some resource has been exhausted, perhaps a per-user quota, or perhaps","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":290063,"byte_end":290137,"line_start":230,"line_end":230,"column_start":5,"column_end":79}},{"value":"/ the entire file system is out of space.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":290142,"byte_end":290185,"line_start":231,"line_end":231,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2221},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":291293,"byte_end":291312,"line_start":250,"line_end":250,"column_start":12,"column_end":31},"name":"failed_precondition","qualname":"<Status>::failed_precondition","value":"pub fn failed_precondition<impl Into<String>: Into<String>>(impl Into<String>)\n-> Status","parent":null,"children":[],"decl_id":null,"docs":" Operation was rejected because the system is not in a state required for\n the operation's execution. For example, directory to be deleted may be\n non-empty, an rmdir operation is applied to a non-directory, etc.","sig":null,"attributes":[{"value":"/ Operation was rejected because the system is not in a state required for","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":290321,"byte_end":290397,"line_start":236,"line_end":236,"column_start":5,"column_end":81}},{"value":"/ the operation's execution. For example, directory to be deleted may be","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":290402,"byte_end":290476,"line_start":237,"line_end":237,"column_start":5,"column_end":79}},{"value":"/ non-empty, an rmdir operation is applied to a non-directory, etc.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":290481,"byte_end":290550,"line_start":238,"line_end":238,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":290555,"byte_end":290558,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ A litmus test that may help a service implementor in deciding between","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":290563,"byte_end":290636,"line_start":240,"line_end":240,"column_start":5,"column_end":78}},{"value":"/ `FailedPrecondition`, `Aborted`, and `Unavailable`:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":290641,"byte_end":290696,"line_start":241,"line_end":241,"column_start":5,"column_end":60}},{"value":"/ (a) Use `Unavailable` if the client can retry just the failing call.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":290701,"byte_end":290773,"line_start":242,"line_end":242,"column_start":5,"column_end":77}},{"value":"/ (b) Use `Aborted` if the client should retry at a higher-level (e.g.,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":290778,"byte_end":290851,"line_start":243,"line_end":243,"column_start":5,"column_end":78}},{"value":"/     restarting a read-modify-write sequence).","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":290856,"byte_end":290905,"line_start":244,"line_end":244,"column_start":5,"column_end":54}},{"value":"/ (c) Use `FailedPrecondition` if the client should not retry until the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":290910,"byte_end":290983,"line_start":245,"line_end":245,"column_start":5,"column_end":78}},{"value":"/     system state has been explicitly fixed.  E.g., if an \"rmdir\" fails","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":290988,"byte_end":291062,"line_start":246,"line_end":246,"column_start":5,"column_end":79}},{"value":"/     because the directory is non-empty, `FailedPrecondition` should be","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":291067,"byte_end":291141,"line_start":247,"line_end":247,"column_start":5,"column_end":79}},{"value":"/     returned since the client should not retry unless they have first","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":291146,"byte_end":291219,"line_start":248,"line_end":248,"column_start":5,"column_end":78}},{"value":"/     fixed up the directory by deleting files from it.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":291224,"byte_end":291281,"line_start":249,"line_end":249,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2223},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":291681,"byte_end":291688,"line_start":259,"line_end":259,"column_start":12,"column_end":19},"name":"aborted","qualname":"<Status>::aborted","value":"pub fn aborted<impl Into<String>: Into<String>>(impl Into<String>) -> Status","parent":null,"children":[],"decl_id":null,"docs":" The operation was aborted, typically due to a concurrency issue like\n sequencer check failures, transaction aborts, etc.","sig":null,"attributes":[{"value":"/ The operation was aborted, typically due to a concurrency issue like","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":291419,"byte_end":291491,"line_start":254,"line_end":254,"column_start":5,"column_end":77}},{"value":"/ sequencer check failures, transaction aborts, etc.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":291496,"byte_end":291550,"line_start":255,"line_end":255,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":291555,"byte_end":291558,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ See litmus test above for deciding between `FailedPrecondition`,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":291563,"byte_end":291631,"line_start":257,"line_end":257,"column_start":5,"column_end":73}},{"value":"/ `Aborted`, and `Unavailable`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":291636,"byte_end":291669,"line_start":258,"line_end":258,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2225},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":292588,"byte_end":292600,"line_start":276,"line_end":276,"column_start":12,"column_end":24},"name":"out_of_range","qualname":"<Status>::out_of_range","value":"pub fn out_of_range<impl Into<String>: Into<String>>(impl Into<String>)\n-> Status","parent":null,"children":[],"decl_id":null,"docs":" Operation was attempted past the valid range. E.g., seeking or reading\n past end of file.","sig":null,"attributes":[{"value":"/ Operation was attempted past the valid range. E.g., seeking or reading","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":291784,"byte_end":291858,"line_start":263,"line_end":263,"column_start":5,"column_end":79}},{"value":"/ past end of file.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":291863,"byte_end":291884,"line_start":264,"line_end":264,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":291889,"byte_end":291892,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ Unlike `InvalidArgument`, this error indicates a problem that may be","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":291897,"byte_end":291969,"line_start":266,"line_end":266,"column_start":5,"column_end":77}},{"value":"/ fixed if the system state changes. For example, a 32-bit file system will","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":291974,"byte_end":292051,"line_start":267,"line_end":267,"column_start":5,"column_end":82}},{"value":"/ generate `InvalidArgument if asked to read at an offset that is not in the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":292056,"byte_end":292134,"line_start":268,"line_end":268,"column_start":5,"column_end":83}},{"value":"/ range [0,2^32-1], but it will generate `OutOfRange` if asked to read from","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":292139,"byte_end":292216,"line_start":269,"line_end":269,"column_start":5,"column_end":82}},{"value":"/ an offset past the current file size.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":292221,"byte_end":292262,"line_start":270,"line_end":270,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":292267,"byte_end":292270,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ There is a fair bit of overlap between `FailedPrecondition` and","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":292275,"byte_end":292342,"line_start":272,"line_end":272,"column_start":5,"column_end":72}},{"value":"/ `OutOfRange`. We recommend using `OutOfRange` (the more specific error)","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":292347,"byte_end":292422,"line_start":273,"line_end":273,"column_start":5,"column_end":80}},{"value":"/ when it applies so that callers who are iterating through a space can","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":292427,"byte_end":292500,"line_start":274,"line_end":274,"column_start":5,"column_end":78}},{"value":"/ easily look for an `OutOfRange` error to detect when they are done.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":292505,"byte_end":292576,"line_start":275,"line_end":275,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2227},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":292785,"byte_end":292798,"line_start":281,"line_end":281,"column_start":12,"column_end":25},"name":"unimplemented","qualname":"<Status>::unimplemented","value":"pub fn unimplemented<impl Into<String>: Into<String>>(impl Into<String>)\n-> Status","parent":null,"children":[],"decl_id":null,"docs":" Operation is not implemented or not supported/enabled in this service.\n","sig":null,"attributes":[{"value":"/ Operation is not implemented or not supported/enabled in this service.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":292699,"byte_end":292773,"line_start":280,"line_end":280,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2229},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":293067,"byte_end":293075,"line_start":287,"line_end":287,"column_start":12,"column_end":20},"name":"internal","qualname":"<Status>::internal","value":"pub fn internal<impl Into<String>: Into<String>>(impl Into<String>) -> Status","parent":null,"children":[],"decl_id":null,"docs":" Internal errors. Means some invariants expected by underlying system has\n been broken. If you see one of these errors, something is very broken.\n","sig":null,"attributes":[{"value":"/ Internal errors. Means some invariants expected by underlying system has","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":292900,"byte_end":292976,"line_start":285,"line_end":285,"column_start":5,"column_end":81}},{"value":"/ been broken. If you see one of these errors, something is very broken.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":292981,"byte_end":293055,"line_start":286,"line_end":286,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2231},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":293447,"byte_end":293458,"line_start":296,"line_end":296,"column_start":12,"column_end":23},"name":"unavailable","qualname":"<Status>::unavailable","value":"pub fn unavailable<impl Into<String>: Into<String>>(impl Into<String>)\n-> Status","parent":null,"children":[],"decl_id":null,"docs":" The service is currently unavailable.  This is a most likely a transient\n condition and may be corrected by retrying with a back-off.","sig":null,"attributes":[{"value":"/ The service is currently unavailable.  This is a most likely a transient","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":293172,"byte_end":293248,"line_start":291,"line_end":291,"column_start":5,"column_end":81}},{"value":"/ condition and may be corrected by retrying with a back-off.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":293253,"byte_end":293316,"line_start":292,"line_end":292,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":293321,"byte_end":293324,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ See litmus test above for deciding between `FailedPrecondition`,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":293329,"byte_end":293397,"line_start":294,"line_end":294,"column_start":5,"column_end":73}},{"value":"/ `Aborted`, and `Unavailable`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":293402,"byte_end":293435,"line_start":295,"line_end":295,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2233},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":293612,"byte_end":293621,"line_start":301,"line_end":301,"column_start":12,"column_end":21},"name":"data_loss","qualname":"<Status>::data_loss","value":"pub fn data_loss<impl Into<String>: Into<String>>(impl Into<String>) -> Status","parent":null,"children":[],"decl_id":null,"docs":" Unrecoverable data loss or corruption.\n","sig":null,"attributes":[{"value":"/ Unrecoverable data loss or corruption.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":293558,"byte_end":293600,"line_start":300,"line_end":300,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2235},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":293819,"byte_end":293834,"line_start":307,"line_end":307,"column_start":12,"column_end":27},"name":"unauthenticated","qualname":"<Status>::unauthenticated","value":"pub fn unauthenticated<impl Into<String>: Into<String>>(impl Into<String>)\n-> Status","parent":null,"children":[],"decl_id":null,"docs":" The request does not have valid authentication credentials for the\n operation.\n","sig":null,"attributes":[{"value":"/ The request does not have valid authentication credentials for the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":293718,"byte_end":293788,"line_start":305,"line_end":305,"column_start":5,"column_end":75}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":293793,"byte_end":293807,"line_start":306,"line_end":306,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":2248},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":298301,"byte_end":298305,"line_start":430,"line_end":430,"column_start":12,"column_end":16},"name":"code","qualname":"<Status>::code","value":"pub fn code(&Self) -> Code","parent":null,"children":[],"decl_id":null,"docs":" Get the gRPC `Code` of this `Status`.\n","sig":null,"attributes":[{"value":"/ Get the gRPC `Code` of this `Status`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":298248,"byte_end":298289,"line_start":429,"line_end":429,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2249},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":298412,"byte_end":298419,"line_start":435,"line_end":435,"column_start":12,"column_end":19},"name":"message","qualname":"<Status>::message","value":"pub fn message(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Get the text error message of this `Status`.\n","sig":null,"attributes":[{"value":"/ Get the text error message of this `Status`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":298352,"byte_end":298400,"line_start":434,"line_end":434,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2250},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":298532,"byte_end":298539,"line_start":440,"line_end":440,"column_start":12,"column_end":19},"name":"details","qualname":"<Status>::details","value":"pub fn details(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Get the opaque error details of this `Status`.\n","sig":null,"attributes":[{"value":"/ Get the opaque error details of this `Status`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":298470,"byte_end":298520,"line_start":439,"line_end":439,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2251},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":298646,"byte_end":298654,"line_start":445,"line_end":445,"column_start":12,"column_end":20},"name":"metadata","qualname":"<Status>::metadata","value":"pub fn metadata(&Self) -> &MetadataMap","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the custom metadata.\n","sig":null,"attributes":[{"value":"/ Get a reference to the custom metadata.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":298591,"byte_end":298634,"line_start":444,"line_end":444,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2252},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":298777,"byte_end":298789,"line_start":450,"line_end":450,"column_start":12,"column_end":24},"name":"metadata_mut","qualname":"<Status>::metadata_mut","value":"pub fn metadata_mut(&mut Self) -> &mut MetadataMap","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the custom metadata.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the custom metadata.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":298714,"byte_end":298765,"line_start":449,"line_end":449,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2255},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":300168,"byte_end":300180,"line_start":489,"line_end":489,"column_start":12,"column_end":24},"name":"with_details","qualname":"<Status>::with_details","value":"pub fn with_details<impl Into<String>: Into<String>>(Code, impl Into<String>,\n                                                     Bytes) -> Status","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Status` with the associated code, message, and binary details field.\n","sig":null,"attributes":[{"value":"/ Create a new `Status` with the associated code, message, and binary details field.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":300070,"byte_end":300156,"line_start":488,"line_end":488,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":2257},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":300436,"byte_end":300449,"line_start":494,"line_end":494,"column_start":12,"column_end":25},"name":"with_metadata","qualname":"<Status>::with_metadata","value":"pub fn with_metadata<impl Into<String>: Into<String>>(Code, impl Into<String>,\n                                                      MetadataMap) -> Status","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Status` with the associated code, message, and custom metadata\n","sig":null,"attributes":[{"value":"/ Create a new `Status` with the associated code, message, and custom metadata","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":300344,"byte_end":300424,"line_start":493,"line_end":493,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2259},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":300728,"byte_end":300753,"line_start":499,"line_end":499,"column_start":12,"column_end":37},"name":"with_details_and_metadata","qualname":"<Status>::with_details_and_metadata","value":"pub fn with_details_and_metadata<impl Into<String>: Into<String>>(Code,\n                                                                  impl Into<String>,\n                                                                  Bytes,\n                                                                  MetadataMap)\n-> Status","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Status` with the associated code, message, binary details field and custom metadata\n","sig":null,"attributes":[{"value":"/ Create a new `Status` with the associated code, message, binary details field and custom metadata","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":300615,"byte_end":300716,"line_start":498,"line_end":498,"column_start":5,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":2261},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":301105,"byte_end":301112,"line_start":514,"line_end":514,"column_start":12,"column_end":19},"name":"to_http","qualname":"<Status>::to_http","value":"pub fn to_http(Self) -> http::Response<BoxBody>","parent":null,"children":[],"decl_id":null,"docs":" Build an `http::Response` from the given `Status`.\n","sig":null,"attributes":[{"value":"/ Build an `http::Response` from the given `Status`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":301039,"byte_end":301093,"line_start":513,"line_end":513,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2273},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":304596,"byte_end":304604,"line_start":638,"line_end":638,"column_start":12,"column_end":20},"name":"from_i32","qualname":"<Code>::from_i32","value":"pub fn from_i32(i32) -> Code","parent":null,"children":[],"decl_id":null,"docs":" Get the `Code` that represents the integer, if known.","sig":null,"attributes":[{"value":"/ Get the `Code` that represents the integer, if known.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":304460,"byte_end":304517,"line_start":635,"line_end":635,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":304522,"byte_end":304525,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ If not known, returns `Code::Unknown` (surprise!).","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":304530,"byte_end":304584,"line_start":637,"line_end":637,"column_start":5,"column_end":59}}]},{"kind":"Mod","id":{"krate":0,"index":2291},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codegen.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codegen","qualname":"::codegen","value":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codegen.rs","parent":null,"children":[{"krate":0,"index":2292},{"krate":0,"index":2293},{"krate":0,"index":2294},{"krate":0,"index":2295},{"krate":0,"index":2296},{"krate":0,"index":2297},{"krate":0,"index":2298},{"krate":0,"index":2299},{"krate":0,"index":2300},{"krate":0,"index":2301},{"krate":0,"index":2302},{"krate":0,"index":2303},{"krate":0,"index":2304},{"krate":0,"index":2305},{"krate":0,"index":2306},{"krate":0,"index":2307},{"krate":0,"index":2308},{"krate":0,"index":2311},{"krate":0,"index":2313},{"krate":0,"index":3311},{"krate":0,"index":3312},{"krate":0,"index":2315},{"krate":0,"index":2317}],"decl_id":null,"docs":" Codegen exports used by `tonic-build`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"codegen\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":4137,"byte_end":4164,"line_start":110,"line_end":110,"column_start":1,"column_end":28}},{"value":"! Codegen exports used by `tonic-build`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codegen.rs","byte_start":312036,"byte_end":312078,"line_start":1,"line_end":1,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":2306},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codegen.rs","byte_start":312387,"byte_end":312395,"line_start":13,"line_end":13,"column_start":10,"column_end":18},"name":"StdError","qualname":"::codegen::StdError","value":"Box<std::error::Error + Send + Sync + 'static>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2308},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codegen.rs","byte_start":312487,"byte_end":312496,"line_start":16,"line_end":16,"column_start":10,"column_end":19},"name":"BoxFuture","qualname":"::codegen::BoxFuture","value":"self::Pin<Box<self::Future<Output = Result<T, E>> + Send + 'static>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2311},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codegen.rs","byte_start":312588,"byte_end":312597,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"name":"BoxStream","qualname":"::codegen::BoxStream","value":"self::Pin<Box<futures_core::Stream<Item = Result<T, crate::Status>> + Send +\n              'static>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2313},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codegen.rs","byte_start":312708,"byte_end":312712,"line_start":20,"line_end":20,"column_start":9,"column_end":13},"name":"http","qualname":"::codegen::http","value":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codegen.rs","parent":null,"children":[{"krate":0,"index":2314}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3311},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codegen.rs","byte_start":312765,"byte_end":312770,"line_start":25,"line_end":25,"column_start":10,"column_end":15},"name":"Never","qualname":"::codegen::Never","value":"pub enum Never { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","byte_start":5428,"byte_end":5429,"line_start":44,"line_end":44,"column_start":18,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","byte_start":6044,"byte_end":6045,"line_start":71,"line_end":71,"column_start":28,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","byte_start":6307,"byte_end":6314,"line_start":89,"line_end":89,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":43},{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","byte_start":7060,"byte_end":7067,"line_start":119,"line_end":119,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","byte_start":7625,"byte_end":7632,"line_start":142,"line_end":142,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","byte_start":8822,"byte_end":8829,"line_start":186,"line_end":186,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","byte_start":9025,"byte_end":9034,"line_start":197,"line_end":197,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","byte_start":11577,"byte_end":11581,"line_start":35,"line_end":35,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":109},{"krate":0,"index":113},{"krate":0,"index":120},{"krate":0,"index":128},{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","byte_start":17244,"byte_end":17248,"line_start":211,"line_end":211,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","byte_start":17443,"byte_end":17447,"line_start":220,"line_end":220,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\service.rs","byte_start":18771,"byte_end":18772,"line_start":33,"line_end":33,"column_start":52,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\buffer.rs","byte_start":21700,"byte_end":21709,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\buffer.rs","byte_start":21836,"byte_end":21845,"line_start":23,"line_end":23,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\buffer.rs","byte_start":22282,"byte_end":22291,"line_start":48,"line_end":48,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\buffer.rs","byte_start":22393,"byte_end":22402,"line_start":54,"line_end":54,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\buffer.rs","byte_start":22800,"byte_end":22809,"line_start":66,"line_end":66,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","byte_start":24944,"byte_end":24953,"line_start":30,"line_end":30,"column_start":19,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","byte_start":25161,"byte_end":25170,"line_start":45,"line_end":45,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":241},{"krate":0,"index":244},{"krate":0,"index":247},{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","byte_start":26604,"byte_end":26613,"line_start":91,"line_end":91,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":255},{"krate":0,"index":259},{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","byte_start":31093,"byte_end":31102,"line_start":214,"line_end":214,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":267},{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","byte_start":33757,"byte_end":33766,"line_start":287,"line_end":287,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\encode.rs","byte_start":36515,"byte_end":36525,"line_start":93,"line_end":93,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":314},{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\encode.rs","byte_start":36939,"byte_end":36949,"line_start":114,"line_end":114,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\prost.rs","byte_start":38647,"byte_end":38657,"line_start":13,"line_end":13,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\prost.rs","byte_start":38757,"byte_end":38767,"line_start":19,"line_end":19,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\prost.rs","byte_start":39303,"byte_end":39315,"line_start":43,"line_end":43,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\prost.rs","byte_start":39742,"byte_end":39754,"line_start":59,"line_end":59,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\encoding.rs","byte_start":47475,"byte_end":47480,"line_start":63,"line_end":63,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":411},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\encoding.rs","byte_start":48455,"byte_end":48460,"line_start":97,"line_end":97,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\encoding.rs","byte_start":48586,"byte_end":48592,"line_start":103,"line_end":103,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\encoding.rs","byte_start":50715,"byte_end":50721,"line_start":167,"line_end":167,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\encoding.rs","byte_start":50851,"byte_end":50871,"line_start":175,"line_end":175,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\encoding.rs","byte_start":50982,"byte_end":51002,"line_start":181,"line_end":181,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\encoding.rs","byte_start":51146,"byte_end":51166,"line_start":187,"line_end":187,"column_start":16,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\encoding.rs","byte_start":51389,"byte_end":51414,"line_start":196,"line_end":196,"column_start":6,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\encoding.rs","byte_start":51545,"byte_end":51570,"line_start":202,"line_end":202,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\encoding.rs","byte_start":51682,"byte_end":51707,"line_start":208,"line_end":208,"column_start":16,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":52750,"byte_end":52761,"line_start":37,"line_end":37,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":56372,"byte_end":56383,"line_start":142,"line_end":142,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":467},{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":56622,"byte_end":56633,"line_start":150,"line_end":150,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":56742,"byte_end":56753,"line_start":156,"line_end":156,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":475}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":56874,"byte_end":56885,"line_start":162,"line_end":162,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":478}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":56993,"byte_end":57004,"line_start":168,"line_end":168,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":57170,"byte_end":57181,"line_start":174,"line_end":174,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":57313,"byte_end":57331,"line_start":180,"line_end":180,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":57502,"byte_end":57513,"line_start":187,"line_end":187,"column_start":59,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":57658,"byte_end":57663,"line_start":193,"line_end":193,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":57850,"byte_end":57861,"line_start":200,"line_end":200,"column_start":64,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":58195,"byte_end":58206,"line_start":214,"line_end":214,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":59392,"byte_end":59403,"line_start":254,"line_end":254,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":511}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":59878,"byte_end":59896,"line_start":272,"line_end":272,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":60040,"byte_end":60058,"line_start":278,"line_end":278,"column_start":16,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":66303,"byte_end":66314,"line_start":199,"line_end":199,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":533},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":548},{"krate":0,"index":550},{"krate":0,"index":552},{"krate":0,"index":554},{"krate":0,"index":556},{"krate":0,"index":558},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":567},{"krate":0,"index":569},{"krate":0,"index":572},{"krate":0,"index":574},{"krate":0,"index":576},{"krate":0,"index":578},{"krate":0,"index":580},{"krate":0,"index":582},{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":101829,"byte_end":101833,"line_start":1221,"line_end":1221,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":590}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":102634,"byte_end":102638,"line_start":1246,"line_end":1246,"column_start":26,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":102671,"byte_end":102675,"line_start":1247,"line_end":1247,"column_start":26,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":102735,"byte_end":102742,"line_start":1251,"line_end":1251,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":103556,"byte_end":103563,"line_start":1276,"line_end":1276,"column_start":26,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":103596,"byte_end":103603,"line_start":1277,"line_end":1277,"column_start":26,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":103685,"byte_end":103695,"line_start":1281,"line_end":1281,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":104032,"byte_end":104042,"line_start":1295,"line_end":1295,"column_start":45,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":104098,"byte_end":104108,"line_start":1296,"line_end":1296,"column_start":45,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":104169,"byte_end":104173,"line_start":1300,"line_end":1300,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":104682,"byte_end":104686,"line_start":1318,"line_end":1318,"column_start":32,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":104744,"byte_end":104750,"line_start":1322,"line_end":1322,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":630}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":105337,"byte_end":105346,"line_start":1343,"line_end":1343,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":636}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":105969,"byte_end":105978,"line_start":1364,"line_end":1364,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":106534,"byte_end":106543,"line_start":1387,"line_end":1387,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":106912,"byte_end":106924,"line_start":1403,"line_end":1403,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":650},{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":107214,"byte_end":107226,"line_start":1416,"line_end":1416,"column_start":53,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":655}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":107474,"byte_end":107486,"line_start":1427,"line_end":1427,"column_start":45,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":107542,"byte_end":107554,"line_start":1428,"line_end":1428,"column_start":45,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":107622,"byte_end":107627,"line_start":1432,"line_end":1432,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":665},{"krate":0,"index":667},{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":110591,"byte_end":110602,"line_start":1537,"line_end":1537,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":112990,"byte_end":113003,"line_start":1617,"line_end":1617,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":122649,"byte_end":122662,"line_start":1918,"line_end":1918,"column_start":46,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":123489,"byte_end":123495,"line_start":1953,"line_end":1953,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":717}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":124369,"byte_end":124375,"line_start":1980,"line_end":1980,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":124530,"byte_end":124536,"line_start":1986,"line_end":1986,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":126270,"byte_end":126281,"line_start":2042,"line_end":2042,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":752},{"krate":0,"index":753}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":126871,"byte_end":126882,"line_start":2062,"line_end":2062,"column_start":53,"column_end":64},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":129825,"byte_end":129836,"line_start":2150,"line_end":2150,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":131095,"byte_end":131106,"line_start":2191,"line_end":2191,"column_start":51,"column_end":62},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":134418,"byte_end":134424,"line_start":2298,"line_end":2298,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":830}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":136310,"byte_end":136316,"line_start":2357,"line_end":2357,"column_start":51,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":139172,"byte_end":139183,"line_start":2445,"line_end":2445,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":855}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":139420,"byte_end":139431,"line_start":2453,"line_end":2453,"column_start":63,"column_end":74},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":140038,"byte_end":140044,"line_start":2475,"line_end":2475,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":871}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":140260,"byte_end":140266,"line_start":2483,"line_end":2483,"column_start":44,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":149153,"byte_end":149166,"line_start":42,"line_end":42,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":901},{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":911}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":157158,"byte_end":157171,"line_start":280,"line_end":280,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":913},{"krate":0,"index":916},{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":921}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":160394,"byte_end":160407,"line_start":385,"line_end":385,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":923}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":160891,"byte_end":160904,"line_start":402,"line_end":402,"column_start":41,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":926}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":161033,"byte_end":161046,"line_start":409,"line_end":409,"column_start":40,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":929}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":161213,"byte_end":161226,"line_start":415,"line_end":415,"column_start":57,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":932}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":163282,"byte_end":163295,"line_start":501,"line_end":501,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":935},{"krate":0,"index":936}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":163532,"byte_end":163537,"line_start":510,"line_end":510,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":939}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":163727,"byte_end":163740,"line_start":517,"line_end":517,"column_start":61,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":943}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":163868,"byte_end":163878,"line_start":526,"line_end":526,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":945}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":163979,"byte_end":163989,"line_start":532,"line_end":532,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":947}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":164138,"byte_end":164148,"line_start":538,"line_end":538,"column_start":16,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":164230,"byte_end":164243,"line_start":542,"line_end":542,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":951}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":164632,"byte_end":164645,"line_start":553,"line_end":553,"column_start":32,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":164693,"byte_end":164706,"line_start":555,"line_end":555,"column_start":40,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":956}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":164893,"byte_end":164906,"line_start":562,"line_end":562,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":959}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":165067,"byte_end":165080,"line_start":569,"line_end":569,"column_start":44,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":962}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":165244,"byte_end":165257,"line_start":576,"line_end":576,"column_start":45,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":965}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":165411,"byte_end":165424,"line_start":583,"line_end":583,"column_start":45,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":968}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":165614,"byte_end":165627,"line_start":590,"line_end":590,"column_start":46,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":971}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":166581,"byte_end":166594,"line_start":625,"line_end":625,"column_start":47,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":986}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":166741,"byte_end":166754,"line_start":632,"line_end":632,"column_start":48,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":989}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":166959,"byte_end":166965,"line_start":639,"line_end":639,"column_start":58,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":992}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":167127,"byte_end":167133,"line_start":646,"line_end":646,"column_start":59,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":995}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":167771,"byte_end":167784,"line_start":667,"line_end":667,"column_start":61,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":1008}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":167985,"byte_end":167998,"line_start":677,"line_end":677,"column_start":62,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":1013}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\grpc.rs","byte_start":173670,"byte_end":173674,"line_start":37,"line_end":37,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1081},{"krate":0,"index":1082},{"krate":0,"index":1084},{"krate":0,"index":1091},{"krate":0,"index":1096},{"krate":0,"index":1103},{"krate":0,"index":1108},{"krate":0,"index":1113},{"krate":0,"index":1116},{"krate":0,"index":1118}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\grpc.rs","byte_start":179517,"byte_end":179521,"line_start":229,"line_end":229,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1122}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":180287,"byte_end":180288,"line_start":21,"line_end":21,"column_start":38,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1141},{"krate":0,"index":1142},{"krate":0,"index":1143}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":181183,"byte_end":181184,"line_start":51,"line_end":51,"column_start":51,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1155},{"krate":0,"index":1156},{"krate":0,"index":1157},{"krate":0,"index":1158}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":182040,"byte_end":182041,"line_start":80,"line_end":80,"column_start":48,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1170}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":182951,"byte_end":182952,"line_start":110,"line_end":110,"column_start":45,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1182},{"krate":0,"index":1183},{"krate":0,"index":1184},{"krate":0,"index":1185}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":194806,"byte_end":194814,"line_start":38,"line_end":38,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1212},{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1218},{"krate":0,"index":1219},{"krate":0,"index":1220},{"krate":0,"index":1221},{"krate":0,"index":1222},{"krate":0,"index":1224},{"krate":0,"index":1226},{"krate":0,"index":1228},{"krate":0,"index":1229},{"krate":0,"index":1230},{"krate":0,"index":1231},{"krate":0,"index":1232},{"krate":0,"index":1235},{"krate":0,"index":1236},{"krate":0,"index":1240}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":201867,"byte_end":201875,"line_start":267,"line_end":267,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1242}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":202459,"byte_end":202467,"line_start":288,"line_end":288,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1244},{"krate":0,"index":1245}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":202620,"byte_end":202628,"line_start":296,"line_end":296,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1247},{"krate":0,"index":1248}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":202801,"byte_end":202809,"line_start":304,"line_end":304,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1250},{"krate":0,"index":1251}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":203006,"byte_end":203011,"line_start":315,"line_end":315,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1253}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":203146,"byte_end":203151,"line_start":321,"line_end":321,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":203176,"byte_end":203184,"line_start":323,"line_end":323,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1256}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\tls.rs","byte_start":203790,"byte_end":203805,"line_start":21,"line_end":21,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1267}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\tls.rs","byte_start":204102,"byte_end":204117,"line_start":32,"line_end":32,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1269},{"krate":0,"index":1270},{"krate":0,"index":1272},{"krate":0,"index":1273},{"krate":0,"index":1274},{"krate":0,"index":1275}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":189126,"byte_end":189133,"line_start":79,"line_end":79,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1324},{"krate":0,"index":1325},{"krate":0,"index":1326},{"krate":0,"index":1328},{"krate":0,"index":1331},{"krate":0,"index":1333},{"krate":0,"index":1335},{"krate":0,"index":1339}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":192541,"byte_end":192548,"line_start":180,"line_end":180,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1342},{"krate":0,"index":1343},{"krate":0,"index":1344},{"krate":0,"index":1345},{"krate":0,"index":1347}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":193029,"byte_end":193043,"line_start":195,"line_end":195,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1349},{"krate":0,"index":1350}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":193378,"byte_end":193385,"line_start":205,"line_end":205,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1353}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":193523,"byte_end":193537,"line_start":211,"line_end":211,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1355}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\conn.rs","byte_start":225693,"byte_end":225703,"line_start":27,"line_end":27,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1368}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\conn.rs","byte_start":225817,"byte_end":225826,"line_start":33,"line_end":33,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1370}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\conn.rs","byte_start":225975,"byte_end":225984,"line_start":40,"line_end":40,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1373},{"krate":0,"index":1374}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\incoming.rs","byte_start":227844,"byte_end":227855,"line_start":48,"line_end":48,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1406}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\incoming.rs","byte_start":228192,"byte_end":228203,"line_start":61,"line_end":61,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1408},{"krate":0,"index":1409}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\incoming.rs","byte_start":228895,"byte_end":228904,"line_start":84,"line_end":84,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1423},{"krate":0,"index":1424}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\incoming.rs","byte_start":229336,"byte_end":229345,"line_start":101,"line_end":101,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1427}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\incoming.rs","byte_start":230260,"byte_end":230269,"line_start":130,"line_end":130,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1431},{"krate":0,"index":1433},{"krate":0,"index":1434}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\tls.rs","byte_start":232141,"byte_end":232156,"line_start":18,"line_end":18,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1443}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\tls.rs","byte_start":232311,"byte_end":232326,"line_start":25,"line_end":25,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1445},{"krate":0,"index":1446},{"krate":0,"index":1447},{"krate":0,"index":1448},{"krate":0,"index":1449}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":208933,"byte_end":208939,"line_start":90,"line_end":90,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1506}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":208996,"byte_end":209002,"line_start":94,"line_end":94,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1508}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":209210,"byte_end":209216,"line_start":104,"line_end":104,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1510},{"krate":0,"index":1512},{"krate":0,"index":1513},{"krate":0,"index":1514},{"krate":0,"index":1516},{"krate":0,"index":1518},{"krate":0,"index":1520},{"krate":0,"index":1521},{"krate":0,"index":1522},{"krate":0,"index":1524},{"krate":0,"index":1526},{"krate":0,"index":1528}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":216078,"byte_end":216084,"line_start":319,"line_end":319,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1538}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":216785,"byte_end":216791,"line_start":344,"line_end":344,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1543},{"krate":0,"index":1546},{"krate":0,"index":1549},{"krate":0,"index":1552},{"krate":0,"index":1556},{"krate":0,"index":1562}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":221622,"byte_end":221628,"line_start":481,"line_end":481,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1570}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":221881,"byte_end":221884,"line_start":493,"line_end":493,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1578},{"krate":0,"index":1579},{"krate":0,"index":1580},{"krate":0,"index":1581},{"krate":0,"index":1582}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":222690,"byte_end":222693,"line_start":519,"line_end":519,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1586}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":222983,"byte_end":222990,"line_start":532,"line_end":532,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1595},{"krate":0,"index":1596},{"krate":0,"index":1597},{"krate":0,"index":1598},{"krate":0,"index":1599}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":224404,"byte_end":224417,"line_start":581,"line_end":581,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1602},{"krate":0,"index":1603},{"krate":0,"index":1604},{"krate":0,"index":1605},{"krate":0,"index":1606}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\error.rs","byte_start":234217,"byte_end":234222,"line_start":26,"line_end":26,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1618},{"krate":0,"index":1619},{"krate":0,"index":1621},{"krate":0,"index":1623},{"krate":0,"index":1624}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\error.rs","byte_start":234917,"byte_end":234922,"line_start":54,"line_end":54,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1626}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\error.rs","byte_start":235228,"byte_end":235233,"line_start":68,"line_end":68,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1628}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\error.rs","byte_start":235508,"byte_end":235513,"line_start":78,"line_end":78,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1630}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\add_origin.rs","byte_start":236422,"byte_end":236431,"line_start":11,"line_end":11,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1643}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\add_origin.rs","byte_start":236579,"byte_end":236588,"line_start":17,"line_end":17,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1647},{"krate":0,"index":1648},{"krate":0,"index":1649},{"krate":0,"index":1650},{"krate":0,"index":1651}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\connection.rs","byte_start":238460,"byte_end":238470,"line_start":31,"line_end":31,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1690},{"krate":0,"index":1694}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\connection.rs","byte_start":240479,"byte_end":240489,"line_start":84,"line_end":84,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1699},{"krate":0,"index":1700},{"krate":0,"index":1701},{"krate":0,"index":1702},{"krate":0,"index":1703}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\connection.rs","byte_start":240935,"byte_end":240945,"line_start":100,"line_end":100,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1705},{"krate":0,"index":1706}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\connection.rs","byte_start":241050,"byte_end":241060,"line_start":108,"line_end":108,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1708}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\connector.rs","byte_start":241859,"byte_end":241868,"line_start":30,"line_end":30,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1728}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\connector.rs","byte_start":242138,"byte_end":242147,"line_start":42,"line_end":42,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1731},{"krate":0,"index":1732},{"krate":0,"index":1733},{"krate":0,"index":1734},{"krate":0,"index":1735}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\discover.rs","byte_start":243732,"byte_end":243752,"line_start":23,"line_end":23,"column_start":28,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1760}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\discover.rs","byte_start":243955,"byte_end":243975,"line_start":32,"line_end":32,"column_start":41,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1763},{"krate":0,"index":1764},{"krate":0,"index":1765},{"krate":0,"index":1766}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\discover.rs","byte_start":245837,"byte_end":245857,"line_start":78,"line_end":78,"column_start":38,"column_end":58},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\io.rs","byte_start":246222,"byte_end":246223,"line_start":14,"line_end":14,"column_start":16,"column_end":17},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\io.rs","byte_start":246328,"byte_end":246335,"line_start":18,"line_end":18,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1792}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\io.rs","byte_start":246457,"byte_end":246464,"line_start":24,"line_end":24,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1795}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\io.rs","byte_start":246569,"byte_end":246576,"line_start":30,"line_end":30,"column_start":20,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\io.rs","byte_start":246600,"byte_end":246607,"line_start":32,"line_end":32,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1798}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\io.rs","byte_start":246829,"byte_end":246836,"line_start":42,"line_end":42,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1800},{"krate":0,"index":1801},{"krate":0,"index":1802}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\io.rs","byte_start":247417,"byte_end":247418,"line_start":62,"line_end":62,"column_start":25,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\io.rs","byte_start":247508,"byte_end":247516,"line_start":66,"line_end":66,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1810}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\io.rs","byte_start":247647,"byte_end":247655,"line_start":72,"line_end":72,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1813},{"krate":0,"index":1814}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\io.rs","byte_start":247862,"byte_end":247870,"line_start":82,"line_end":82,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1816}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\io.rs","byte_start":248092,"byte_end":248100,"line_start":92,"line_end":92,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1818},{"krate":0,"index":1819},{"krate":0,"index":1820}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\layer.rs","byte_start":249089,"byte_end":249103,"line_start":18,"line_end":18,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1842},{"krate":0,"index":1846},{"krate":0,"index":1850}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\layer.rs","byte_start":249979,"byte_end":249986,"line_start":54,"line_end":54,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1858},{"krate":0,"index":1859}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\layer.rs","byte_start":250236,"byte_end":250249,"line_start":70,"line_end":70,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1863},{"krate":0,"index":1864}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\reconnect.rs","byte_start":251039,"byte_end":251048,"line_start":31,"line_end":31,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1889}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\reconnect.rs","byte_start":251383,"byte_end":251392,"line_start":46,"line_end":46,"column_start":50,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1895},{"krate":0,"index":1896},{"krate":0,"index":1897},{"krate":0,"index":1898},{"krate":0,"index":1899}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\reconnect.rs","byte_start":254797,"byte_end":254806,"line_start":145,"line_end":145,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1903}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\reconnect.rs","byte_start":255517,"byte_end":255531,"line_start":176,"line_end":176,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1907},{"krate":0,"index":1908}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\reconnect.rs","byte_start":255828,"byte_end":255842,"line_start":190,"line_end":190,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1914},{"krate":0,"index":1915}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\router.rs","byte_start":256717,"byte_end":256723,"line_start":17,"line_end":17,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1933}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\router.rs","byte_start":256978,"byte_end":256984,"line_start":28,"line_end":28,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1939}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\router.rs","byte_start":257317,"byte_end":257323,"line_start":39,"line_end":39,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1946},{"krate":0,"index":1947},{"krate":0,"index":1948},{"krate":0,"index":1949},{"krate":0,"index":1950}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\router.rs","byte_start":257937,"byte_end":257943,"line_start":61,"line_end":61,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1955}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\router.rs","byte_start":258225,"byte_end":258227,"line_start":76,"line_end":76,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1967}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\router.rs","byte_start":258505,"byte_end":258507,"line_start":86,"line_end":86,"column_start":42,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1973},{"krate":0,"index":1974},{"krate":0,"index":1975},{"krate":0,"index":1976},{"krate":0,"index":1977}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\router.rs","byte_start":259365,"byte_end":259367,"line_start":115,"line_end":115,"column_start":45,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1984}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\router.rs","byte_start":259593,"byte_end":259595,"line_start":125,"line_end":125,"column_start":36,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1989}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\tls.rs","byte_start":260704,"byte_end":260716,"line_start":44,"line_end":44,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2015},{"krate":0,"index":2016},{"krate":0,"index":2017}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\tls.rs","byte_start":262682,"byte_end":262694,"line_start":111,"line_end":111,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2022}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\tls.rs","byte_start":262904,"byte_end":262915,"line_start":122,"line_end":122,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2024},{"krate":0,"index":2025},{"krate":0,"index":2026}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\tls.rs","byte_start":264602,"byte_end":264613,"line_start":174,"line_end":174,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2029}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\tls.rs","byte_start":264757,"byte_end":264765,"line_start":180,"line_end":180,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2031}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\tls.rs","byte_start":265246,"byte_end":265254,"line_start":193,"line_end":193,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\tls.rs","byte_start":267219,"byte_end":267230,"line_start":14,"line_end":14,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2056},{"krate":0,"index":2058},{"krate":0,"index":2059},{"krate":0,"index":2060}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\tls.rs","byte_start":267904,"byte_end":267915,"line_start":39,"line_end":39,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2062}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\tls.rs","byte_start":267990,"byte_end":267998,"line_start":45,"line_end":45,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2064}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\interceptor.rs","byte_start":269222,"byte_end":269233,"line_start":22,"line_end":22,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2090},{"krate":0,"index":2092}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\interceptor.rs","byte_start":269822,"byte_end":269833,"line_start":41,"line_end":41,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2096}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\interceptor.rs","byte_start":270006,"byte_end":270017,"line_start":50,"line_end":50,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2098}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":274312,"byte_end":274319,"line_start":103,"line_end":103,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2117},{"krate":0,"index":2118},{"krate":0,"index":2119},{"krate":0,"index":2120},{"krate":0,"index":2121},{"krate":0,"index":2122},{"krate":0,"index":2123},{"krate":0,"index":2124},{"krate":0,"index":2125},{"krate":0,"index":2126},{"krate":0,"index":2127},{"krate":0,"index":2128},{"krate":0,"index":2131},{"krate":0,"index":2132},{"krate":0,"index":2133}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":277856,"byte_end":277857,"line_start":226,"line_end":226,"column_start":28,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2137}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":277968,"byte_end":277975,"line_start":232,"line_end":232,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2140}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":278078,"byte_end":278079,"line_start":238,"line_end":238,"column_start":34,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2143},{"krate":0,"index":2144},{"krate":0,"index":2145}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":278301,"byte_end":278308,"line_start":250,"line_end":250,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2148},{"krate":0,"index":2149},{"krate":0,"index":2150}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":278504,"byte_end":278505,"line_start":262,"line_end":262,"column_start":28,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\response.rs","byte_start":279216,"byte_end":279224,"line_start":10,"line_end":10,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2159},{"krate":0,"index":2160},{"krate":0,"index":2161},{"krate":0,"index":2162},{"krate":0,"index":2163},{"krate":0,"index":2164},{"krate":0,"index":2165},{"krate":0,"index":2166},{"krate":0,"index":2167},{"krate":0,"index":2168},{"krate":0,"index":2169}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":284973,"byte_end":284977,"line_start":113,"line_end":113,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2197}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":287076,"byte_end":287080,"line_start":156,"line_end":156,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2199}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":287252,"byte_end":287258,"line_start":164,"line_end":164,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2201},{"krate":0,"index":2203},{"krate":0,"index":2205},{"krate":0,"index":2207},{"krate":0,"index":2209},{"krate":0,"index":2211},{"krate":0,"index":2213},{"krate":0,"index":2215},{"krate":0,"index":2217},{"krate":0,"index":2219},{"krate":0,"index":2221},{"krate":0,"index":2223},{"krate":0,"index":2225},{"krate":0,"index":2227},{"krate":0,"index":2229},{"krate":0,"index":2231},{"krate":0,"index":2233},{"krate":0,"index":2235},{"krate":0,"index":2237},{"krate":0,"index":2239},{"krate":0,"index":2240},{"krate":0,"index":2242},{"krate":0,"index":2248},{"krate":0,"index":2249},{"krate":0,"index":2250},{"krate":0,"index":2251},{"krate":0,"index":2252},{"krate":0,"index":2253},{"krate":0,"index":2254},{"krate":0,"index":2255},{"krate":0,"index":2257},{"krate":0,"index":2259},{"krate":0,"index":2261}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":301518,"byte_end":301524,"line_start":528,"line_end":528,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2263}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":302639,"byte_end":302645,"line_start":573,"line_end":573,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2267}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":302747,"byte_end":302753,"line_start":579,"line_end":579,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2269}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":303068,"byte_end":303074,"line_start":592,"line_end":592,"column_start":16,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":304449,"byte_end":304453,"line_start":634,"line_end":634,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2273},{"krate":0,"index":2274},{"krate":0,"index":2275},{"krate":0,"index":2276}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":307156,"byte_end":307160,"line_start":701,"line_end":701,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2278}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codegen.rs","byte_start":312802,"byte_end":312807,"line_start":27,"line_end":27,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2316}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codegen.rs","byte_start":312942,"byte_end":312947,"line_start":33,"line_end":33,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":3412,"byte_end":3416,"line_start":79,"line_end":79,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":3426,"byte_end":3432,"line_start":80,"line_end":80,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":68}},{"kind":"Mod","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":3442,"byte_end":3447,"line_start":81,"line_end":81,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":177}},{"kind":"Mod","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":3457,"byte_end":3465,"line_start":82,"line_end":82,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":384}},{"kind":"Mod","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":3475,"byte_end":3481,"line_start":83,"line_end":83,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1050}},{"kind":"Mod","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":3575,"byte_end":3584,"line_start":87,"line_end":87,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":1192}},{"kind":"Mod","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":186110,"byte_end":186117,"line_start":89,"line_end":89,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1193}},{"kind":"Mod","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\mod.rs","byte_start":186127,"byte_end":186133,"line_start":90,"line_end":90,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1356}},{"kind":"Mod","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\lib.rs","byte_start":4224,"byte_end":4231,"line_start":112,"line_end":112,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":2291}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","byte_start":4641,"byte_end":4647,"line_start":16,"line_end":16,"column_start":25,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":33},"to":{"krate":0,"index":17}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","byte_start":4650,"byte_end":4654,"line_start":16,"line_end":16,"column_start":34,"column_end":38},"kind":"SuperTrait","from":{"krate":2,"index":1927},"to":{"krate":0,"index":17}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","byte_start":4657,"byte_end":4661,"line_start":16,"line_end":16,"column_start":41,"column_end":45},"kind":"SuperTrait","from":{"krate":2,"index":1939},"to":{"krate":0,"index":17}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","byte_start":5428,"byte_end":5429,"line_start":44,"line_end":44,"column_start":18,"column_end":19},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":24},"to":{"krate":0,"index":17}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","byte_start":6044,"byte_end":6045,"line_start":71,"line_end":71,"column_start":28,"column_end":29},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":31},"to":{"krate":0,"index":33}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","byte_start":6307,"byte_end":6314,"line_start":89,"line_end":89,"column_start":6,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":34},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","byte_start":7060,"byte_end":7067,"line_start":119,"line_end":119,"column_start":19,"column_end":26},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":34},"to":{"krate":15,"index":40}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","byte_start":7625,"byte_end":7632,"line_start":142,"line_end":142,"column_start":22,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":36},"to":{"krate":15,"index":40}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","byte_start":8822,"byte_end":8829,"line_start":186,"line_end":186,"column_start":21,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":34},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\body.rs","byte_start":9025,"byte_end":9034,"line_start":197,"line_end":197,"column_start":19,"column_end":28},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":2318},"to":{"krate":15,"index":40}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","byte_start":11577,"byte_end":11581,"line_start":35,"line_end":35,"column_start":9,"column_end":13},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":100},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","byte_start":17244,"byte_end":17248,"line_start":211,"line_end":211,"column_start":26,"column_end":30},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":100},"to":{"krate":2,"index":1625}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\grpc.rs","byte_start":17443,"byte_end":17447,"line_start":220,"line_end":220,"column_start":36,"column_end":40},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":100},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\client\\service.rs","byte_start":18771,"byte_end":18772,"line_start":33,"line_end":33,"column_start":52,"column_end":53},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":167},"to":{"krate":0,"index":159}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\buffer.rs","byte_start":21700,"byte_end":21709,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":2324},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\buffer.rs","byte_start":21836,"byte_end":21845,"line_start":23,"line_end":23,"column_start":14,"column_end":23},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":2324},"to":{"krate":14,"index":15}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\buffer.rs","byte_start":22282,"byte_end":22291,"line_start":48,"line_end":48,"column_start":10,"column_end":19},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":2331},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\buffer.rs","byte_start":22393,"byte_end":22402,"line_start":54,"line_end":54,"column_start":6,"column_end":15},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":2331},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\buffer.rs","byte_start":22800,"byte_end":22809,"line_start":66,"line_end":66,"column_start":17,"column_end":26},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2331},"to":{"krate":14,"index":83}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","byte_start":24944,"byte_end":24953,"line_start":30,"line_end":30,"column_start":19,"column_end":28},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":229},"to":{"krate":2,"index":1968}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","byte_start":25161,"byte_end":25170,"line_start":45,"line_end":45,"column_start":9,"column_end":18},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":229},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","byte_start":26604,"byte_end":26613,"line_start":91,"line_end":91,"column_start":9,"column_end":18},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":229},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","byte_start":31093,"byte_end":31102,"line_start":214,"line_end":214,"column_start":20,"column_end":29},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":229},"to":{"krate":20,"index":68}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\decode.rs","byte_start":33757,"byte_end":33766,"line_start":287,"line_end":287,"column_start":24,"column_end":33},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":229},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\encode.rs","byte_start":36515,"byte_end":36525,"line_start":93,"line_end":93,"column_start":9,"column_end":19},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":2428},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\encode.rs","byte_start":36939,"byte_end":36949,"line_start":114,"line_end":114,"column_start":18,"column_end":28},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":2428},"to":{"krate":15,"index":40}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\prost.rs","byte_start":38647,"byte_end":38657,"line_start":13,"line_end":13,"column_start":24,"column_end":34},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":2475},"to":{"krate":2,"index":1915}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\prost.rs","byte_start":38757,"byte_end":38767,"line_start":19,"line_end":19,"column_start":22,"column_end":32},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":2475},"to":{"krate":0,"index":369}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\prost.rs","byte_start":39303,"byte_end":39315,"line_start":43,"line_end":43,"column_start":30,"column_end":42},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":2487},"to":{"krate":0,"index":376}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\prost.rs","byte_start":39742,"byte_end":39754,"line_start":59,"line_end":59,"column_start":40,"column_end":52},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":2500},"to":{"krate":0,"index":380}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codec\\mod.rs","byte_start":19902,"byte_end":19909,"line_start":23,"line_end":23,"column_start":18,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":1915},"to":{"krate":0,"index":369}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\encoding.rs","byte_start":46953,"byte_end":46958,"line_start":47,"line_end":47,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":1625},"to":{"krate":0,"index":405}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\encoding.rs","byte_start":46961,"byte_end":46963,"line_start":47,"line_end":47,"column_start":34,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":1658},"to":{"krate":0,"index":405}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\encoding.rs","byte_start":46966,"byte_end":46975,"line_start":47,"line_end":47,"column_start":39,"column_end":48},"kind":"SuperTrait","from":{"krate":2,"index":1653},"to":{"krate":0,"index":405}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\encoding.rs","byte_start":46978,"byte_end":46982,"line_start":47,"line_end":47,"column_start":51,"column_end":55},"kind":"SuperTrait","from":{"krate":2,"index":6398},"to":{"krate":0,"index":405}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\encoding.rs","byte_start":47007,"byte_end":47013,"line_start":47,"line_end":47,"column_start":80,"column_end":86},"kind":"SuperTrait","from":{"krate":0,"index":396},"to":{"krate":0,"index":405}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\encoding.rs","byte_start":47475,"byte_end":47480,"line_start":63,"line_end":63,"column_start":39,"column_end":44},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":2517},"to":{"krate":0,"index":396}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\encoding.rs","byte_start":48455,"byte_end":48460,"line_start":97,"line_end":97,"column_start":24,"column_end":29},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":2517},"to":{"krate":0,"index":405}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\encoding.rs","byte_start":48586,"byte_end":48592,"line_start":103,"line_end":103,"column_start":39,"column_end":45},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":2531},"to":{"krate":0,"index":396}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\encoding.rs","byte_start":50715,"byte_end":50721,"line_start":167,"line_end":167,"column_start":24,"column_end":30},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":2531},"to":{"krate":0,"index":405}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\encoding.rs","byte_start":50851,"byte_end":50871,"line_start":175,"line_end":175,"column_start":6,"column_end":26},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":2513},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\encoding.rs","byte_start":50982,"byte_end":51002,"line_start":181,"line_end":181,"column_start":23,"column_end":43},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":2513},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\encoding.rs","byte_start":51146,"byte_end":51166,"line_start":187,"line_end":187,"column_start":16,"column_end":36},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":2513},"to":{"krate":1,"index":1642}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\encoding.rs","byte_start":51389,"byte_end":51414,"line_start":196,"line_end":196,"column_start":6,"column_end":31},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":2545},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\encoding.rs","byte_start":51545,"byte_end":51570,"line_start":202,"line_end":202,"column_start":23,"column_end":48},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":2545},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\encoding.rs","byte_start":51682,"byte_end":51707,"line_start":208,"line_end":208,"column_start":16,"column_end":41},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":2545},"to":{"krate":1,"index":1642}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":52750,"byte_end":52761,"line_start":37,"line_end":37,"column_start":25,"column_end":36},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":2550},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":56372,"byte_end":56383,"line_start":142,"line_end":142,"column_start":37,"column_end":48},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":2550},"to":{"krate":2,"index":7741}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":56622,"byte_end":56633,"line_start":150,"line_end":150,"column_start":40,"column_end":51},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":2550},"to":{"krate":2,"index":1836}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":56742,"byte_end":56753,"line_start":156,"line_end":156,"column_start":41,"column_end":52},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":2550},"to":{"krate":2,"index":1836}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":56874,"byte_end":56885,"line_start":162,"line_end":162,"column_start":41,"column_end":52},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":2550},"to":{"krate":2,"index":1603}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":56993,"byte_end":57004,"line_start":168,"line_end":168,"column_start":40,"column_end":51},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":2550},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":57170,"byte_end":57181,"line_start":174,"line_end":174,"column_start":42,"column_end":53},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":2550},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":57313,"byte_end":57331,"line_start":180,"line_end":180,"column_start":6,"column_end":24},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":2572},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":57502,"byte_end":57513,"line_start":187,"line_end":187,"column_start":59,"column_end":70},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":2550},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":57658,"byte_end":57663,"line_start":193,"line_end":193,"column_start":51,"column_end":56},"kind":{"Impl":{"id":51}},"from":{"krate":14,"index":341},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":57850,"byte_end":57861,"line_start":200,"line_end":200,"column_start":64,"column_end":75},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":2550},"to":{"krate":2,"index":1653}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":58195,"byte_end":58206,"line_start":214,"line_end":214,"column_start":44,"column_end":55},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":2550},"to":{"krate":2,"index":1653}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":59392,"byte_end":59403,"line_start":254,"line_end":254,"column_start":52,"column_end":63},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":2550},"to":{"krate":2,"index":1653}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":59878,"byte_end":59896,"line_start":272,"line_end":272,"column_start":23,"column_end":41},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":2572},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\key.rs","byte_start":60040,"byte_end":60058,"line_start":278,"line_end":278,"column_start":16,"column_end":34},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":2572},"to":{"krate":1,"index":1642}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":66303,"byte_end":66314,"line_start":199,"line_end":199,"column_start":6,"column_end":17},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":2576},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":101829,"byte_end":101833,"line_start":1221,"line_end":1221,"column_start":23,"column_end":27},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":2584},"to":{"krate":2,"index":4996}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":102634,"byte_end":102638,"line_start":1246,"line_end":1246,"column_start":26,"column_end":30},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":2584},"to":{"krate":2,"index":1939}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":102671,"byte_end":102675,"line_start":1247,"line_end":1247,"column_start":26,"column_end":30},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":2584},"to":{"krate":2,"index":1927}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":102735,"byte_end":102742,"line_start":1251,"line_end":1251,"column_start":23,"column_end":30},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":2616},"to":{"krate":2,"index":4996}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":103556,"byte_end":103563,"line_start":1276,"line_end":1276,"column_start":26,"column_end":33},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":2616},"to":{"krate":2,"index":1939}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":103596,"byte_end":103603,"line_start":1277,"line_end":1277,"column_start":26,"column_end":33},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":2616},"to":{"krate":2,"index":1927}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":103685,"byte_end":103695,"line_start":1281,"line_end":1281,"column_start":42,"column_end":52},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":2622},"to":{"krate":2,"index":4996}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":104032,"byte_end":104042,"line_start":1295,"line_end":1295,"column_start":45,"column_end":55},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":2622},"to":{"krate":2,"index":1939}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":104098,"byte_end":104108,"line_start":1296,"line_end":1296,"column_start":45,"column_end":55},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":2622},"to":{"krate":2,"index":1927}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":104169,"byte_end":104173,"line_start":1300,"line_end":1300,"column_start":23,"column_end":27},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":2631},"to":{"krate":2,"index":4996}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":104682,"byte_end":104686,"line_start":1318,"line_end":1318,"column_start":32,"column_end":36},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":2631},"to":{"krate":2,"index":4951}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":104744,"byte_end":104750,"line_start":1322,"line_end":1322,"column_start":23,"column_end":29},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":2648},"to":{"krate":2,"index":4996}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":105337,"byte_end":105346,"line_start":1343,"line_end":1343,"column_start":23,"column_end":32},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":2665},"to":{"krate":2,"index":4996}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":105969,"byte_end":105978,"line_start":1364,"line_end":1364,"column_start":42,"column_end":51},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":2682},"to":{"krate":2,"index":4996}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":106534,"byte_end":106543,"line_start":1387,"line_end":1387,"column_start":53,"column_end":62},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":2682},"to":{"krate":2,"index":4928}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":106912,"byte_end":106924,"line_start":1403,"line_end":1403,"column_start":42,"column_end":54},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":2691},"to":{"krate":2,"index":4996}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":107214,"byte_end":107226,"line_start":1416,"line_end":1416,"column_start":53,"column_end":65},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":2691},"to":{"krate":2,"index":4928}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":107474,"byte_end":107486,"line_start":1427,"line_end":1427,"column_start":45,"column_end":57},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":2691},"to":{"krate":2,"index":1939}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":107542,"byte_end":107554,"line_start":1428,"line_end":1428,"column_start":45,"column_end":57},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":2691},"to":{"krate":2,"index":1927}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":107622,"byte_end":107627,"line_start":1432,"line_end":1432,"column_start":29,"column_end":34},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":2709},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":110591,"byte_end":110602,"line_start":1537,"line_end":1537,"column_start":29,"column_end":40},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":2722},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":112990,"byte_end":113003,"line_start":1617,"line_end":1617,"column_start":29,"column_end":42},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":2731},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":122649,"byte_end":122662,"line_start":1918,"line_end":1918,"column_start":46,"column_end":59},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":2731},"to":{"krate":2,"index":4906}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":123489,"byte_end":123495,"line_start":1953,"line_end":1953,"column_start":29,"column_end":35},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":2700},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":124369,"byte_end":124375,"line_start":1980,"line_end":1980,"column_start":43,"column_end":49},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":2700},"to":{"krate":2,"index":1653}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":124530,"byte_end":124536,"line_start":1986,"line_end":1986,"column_start":46,"column_end":52},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":2700},"to":{"krate":2,"index":4906}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":125509,"byte_end":125515,"line_start":2021,"line_end":2021,"column_start":51,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":746},"to":{"krate":0,"index":744}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":126270,"byte_end":126281,"line_start":2042,"line_end":2042,"column_start":44,"column_end":55},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2550},"to":{"krate":0,"index":746}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":126871,"byte_end":126882,"line_start":2062,"line_end":2062,"column_start":53,"column_end":64},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":2550},"to":{"krate":0,"index":744}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":128784,"byte_end":128790,"line_start":2120,"line_end":2120,"column_start":49,"column_end":55},"kind":"SuperTrait","from":{"krate":0,"index":784},"to":{"krate":0,"index":782}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":129825,"byte_end":129836,"line_start":2150,"line_end":2150,"column_start":44,"column_end":55},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2550},"to":{"krate":0,"index":784}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":131095,"byte_end":131106,"line_start":2191,"line_end":2191,"column_start":51,"column_end":62},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2550},"to":{"krate":0,"index":782}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":134418,"byte_end":134424,"line_start":2298,"line_end":2298,"column_start":44,"column_end":50},"kind":{"Impl":{"id":89}},"from":{"krate":5,"index":4932},"to":{"krate":0,"index":784}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":136310,"byte_end":136316,"line_start":2357,"line_end":2357,"column_start":51,"column_end":57},"kind":{"Impl":{"id":90}},"from":{"krate":5,"index":4932},"to":{"krate":0,"index":782}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":138572,"byte_end":138578,"line_start":2427,"line_end":2427,"column_start":46,"column_end":52},"kind":"SuperTrait","from":{"krate":0,"index":851},"to":{"krate":0,"index":850}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":139172,"byte_end":139183,"line_start":2445,"line_end":2445,"column_start":40,"column_end":51},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2550},"to":{"krate":0,"index":851}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":139420,"byte_end":139431,"line_start":2453,"line_end":2453,"column_start":63,"column_end":74},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":2550},"to":{"krate":0,"index":850}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":140038,"byte_end":140044,"line_start":2475,"line_end":2475,"column_start":21,"column_end":27},"kind":{"Impl":{"id":93}},"from":{"krate":5,"index":4932},"to":{"krate":0,"index":851}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\map.rs","byte_start":140260,"byte_end":140266,"line_start":2483,"line_end":2483,"column_start":44,"column_end":50},"kind":{"Impl":{"id":94}},"from":{"krate":5,"index":4932},"to":{"krate":0,"index":850}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":149153,"byte_end":149166,"line_start":42,"line_end":42,"column_start":25,"column_end":38},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2740},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":157158,"byte_end":157171,"line_start":280,"line_end":280,"column_start":6,"column_end":19},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":2740},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":160394,"byte_end":160407,"line_start":385,"line_end":385,"column_start":6,"column_end":19},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2740},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":160891,"byte_end":160904,"line_start":402,"line_end":402,"column_start":41,"column_end":54},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2740},"to":{"krate":2,"index":1836}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":161033,"byte_end":161046,"line_start":409,"line_end":409,"column_start":40,"column_end":53},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2740},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":161213,"byte_end":161226,"line_start":415,"line_end":415,"column_start":57,"column_end":70},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2740},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":163282,"byte_end":163295,"line_start":501,"line_end":501,"column_start":18,"column_end":31},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2740},"to":{"krate":2,"index":7741}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":163532,"byte_end":163537,"line_start":510,"line_end":510,"column_start":53,"column_end":58},"kind":{"Impl":{"id":102}},"from":{"krate":14,"index":341},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":163727,"byte_end":163740,"line_start":517,"line_end":517,"column_start":61,"column_end":74},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2740},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":163868,"byte_end":163878,"line_start":526,"line_end":526,"column_start":6,"column_end":16},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":163979,"byte_end":163989,"line_start":532,"line_end":532,"column_start":23,"column_end":33},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2751},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":164138,"byte_end":164148,"line_start":538,"line_end":538,"column_start":16,"column_end":26},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2751},"to":{"krate":1,"index":1642}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":164230,"byte_end":164243,"line_start":542,"line_end":542,"column_start":39,"column_end":52},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":2740},"to":{"krate":2,"index":1653}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":164632,"byte_end":164645,"line_start":553,"line_end":553,"column_start":32,"column_end":45},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2740},"to":{"krate":2,"index":1658}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":164693,"byte_end":164706,"line_start":555,"line_end":555,"column_start":40,"column_end":53},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2740},"to":{"krate":2,"index":1690}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":164893,"byte_end":164906,"line_start":562,"line_end":562,"column_start":33,"column_end":46},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2740},"to":{"krate":2,"index":1679}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":165067,"byte_end":165080,"line_start":569,"line_end":569,"column_start":44,"column_end":57},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2740},"to":{"krate":2,"index":1653}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":165244,"byte_end":165257,"line_start":576,"line_end":576,"column_start":45,"column_end":58},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2740},"to":{"krate":2,"index":1653}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":165411,"byte_end":165424,"line_start":583,"line_end":583,"column_start":45,"column_end":58},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2740},"to":{"krate":2,"index":1690}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":165614,"byte_end":165627,"line_start":590,"line_end":590,"column_start":46,"column_end":59},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2740},"to":{"krate":2,"index":1690}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":166581,"byte_end":166594,"line_start":625,"line_end":625,"column_start":47,"column_end":60},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2740},"to":{"krate":2,"index":1653}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":166741,"byte_end":166754,"line_start":632,"line_end":632,"column_start":48,"column_end":61},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2740},"to":{"krate":2,"index":1690}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":166959,"byte_end":166965,"line_start":639,"line_end":639,"column_start":58,"column_end":64},"kind":{"Impl":{"id":119}},"from":{"krate":5,"index":4932},"to":{"krate":2,"index":1653}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":167127,"byte_end":167133,"line_start":646,"line_end":646,"column_start":59,"column_end":65},"kind":{"Impl":{"id":120}},"from":{"krate":5,"index":4932},"to":{"krate":2,"index":1690}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":167771,"byte_end":167784,"line_start":667,"line_end":667,"column_start":61,"column_end":74},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2740},"to":{"krate":2,"index":1653}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\metadata\\value.rs","byte_start":167985,"byte_end":167998,"line_start":677,"line_end":677,"column_start":62,"column_end":75},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2740},"to":{"krate":2,"index":1690}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\grpc.rs","byte_start":173670,"byte_end":173674,"line_start":37,"line_end":37,"column_start":9,"column_end":13},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1075},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\grpc.rs","byte_start":179517,"byte_end":179521,"line_start":229,"line_end":229,"column_start":36,"column_end":40},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1075},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":180287,"byte_end":180288,"line_start":21,"line_end":21,"column_start":38,"column_end":39},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1138},"to":{"krate":0,"index":1132}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":181183,"byte_end":181184,"line_start":51,"line_end":51,"column_start":51,"column_end":52},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1151},"to":{"krate":0,"index":1144}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":182040,"byte_end":182041,"line_start":80,"line_end":80,"column_start":48,"column_end":49},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1165},"to":{"krate":0,"index":1159}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\server\\service.rs","byte_start":182951,"byte_end":182952,"line_start":110,"line_end":110,"column_start":45,"column_end":46},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1178},"to":{"krate":0,"index":1171}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":194806,"byte_end":194814,"line_start":38,"line_end":38,"column_start":6,"column_end":14},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2771},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":201867,"byte_end":201875,"line_start":267,"line_end":267,"column_start":20,"column_end":28},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2771},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":202459,"byte_end":202467,"line_start":288,"line_end":288,"column_start":25,"column_end":33},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2771},"to":{"krate":2,"index":1852}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":202620,"byte_end":202628,"line_start":296,"line_end":296,"column_start":26,"column_end":34},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2771},"to":{"krate":2,"index":1852}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":202801,"byte_end":202809,"line_start":304,"line_end":304,"column_start":32,"column_end":40},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2771},"to":{"krate":2,"index":1852}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":203006,"byte_end":203011,"line_start":315,"line_end":315,"column_start":28,"column_end":33},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":2787},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":203146,"byte_end":203151,"line_start":321,"line_end":321,"column_start":28,"column_end":33},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":2787},"to":{"krate":1,"index":1642}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\endpoint.rs","byte_start":203176,"byte_end":203184,"line_start":323,"line_end":323,"column_start":21,"column_end":29},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":2771},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\tls.rs","byte_start":203790,"byte_end":203805,"line_start":21,"line_end":21,"column_start":21,"column_end":36},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":2790},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\tls.rs","byte_start":204102,"byte_end":204117,"line_start":32,"line_end":32,"column_start":6,"column_end":21},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":2790},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":189126,"byte_end":189133,"line_start":79,"line_end":79,"column_start":6,"column_end":13},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":2797},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":192541,"byte_end":192548,"line_start":180,"line_end":180,"column_start":31,"column_end":38},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":2797},"to":{"krate":0,"index":159}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":193029,"byte_end":193043,"line_start":195,"line_end":195,"column_start":17,"column_end":31},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1321},"to":{"krate":2,"index":8336}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":193378,"byte_end":193385,"line_start":205,"line_end":205,"column_start":21,"column_end":28},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":2797},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\channel\\mod.rs","byte_start":193523,"byte_end":193537,"line_start":211,"line_end":211,"column_start":21,"column_end":35},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1321},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\conn.rs","byte_start":225693,"byte_end":225703,"line_start":27,"line_end":27,"column_start":20,"column_end":30},"kind":{"Impl":{"id":144}},"from":{"krate":61,"index":7401},"to":{"krate":0,"index":1364}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\conn.rs","byte_start":225817,"byte_end":225826,"line_start":33,"line_end":33,"column_start":20,"column_end":29},"kind":{"Impl":{"id":145}},"from":{"krate":46,"index":3640},"to":{"krate":0,"index":1364}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\conn.rs","byte_start":225975,"byte_end":225984,"line_start":40,"line_end":40,"column_start":34,"column_end":43},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1410},"to":{"krate":0,"index":1364}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\incoming.rs","byte_start":227844,"byte_end":227855,"line_start":48,"line_end":48,"column_start":6,"column_end":17},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1403},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\incoming.rs","byte_start":228192,"byte_end":228203,"line_start":61,"line_end":61,"column_start":17,"column_end":28},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1403},"to":{"krate":20,"index":68}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\incoming.rs","byte_start":228895,"byte_end":228904,"line_start":84,"line_end":84,"column_start":10,"column_end":19},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":1410},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\incoming.rs","byte_start":229336,"byte_end":229345,"line_start":101,"line_end":101,"column_start":24,"column_end":33},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":1410},"to":{"krate":46,"index":215}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\incoming.rs","byte_start":230260,"byte_end":230269,"line_start":130,"line_end":130,"column_start":25,"column_end":34},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1410},"to":{"krate":46,"index":271}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\tls.rs","byte_start":232141,"byte_end":232156,"line_start":18,"line_end":18,"column_start":21,"column_end":36},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":2807},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\tls.rs","byte_start":232311,"byte_end":232326,"line_start":25,"line_end":25,"column_start":6,"column_end":21},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":2807},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":208933,"byte_end":208939,"line_start":90,"line_end":90,"column_start":43,"column_end":49},"kind":{"Impl":{"id":154}},"from":{"krate":82,"index":628},"to":{"krate":0,"index":1501}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":208996,"byte_end":209002,"line_start":94,"line_end":94,"column_start":6,"column_end":12},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":2813},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":209210,"byte_end":209216,"line_start":104,"line_end":104,"column_start":6,"column_end":12},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":2813},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":216078,"byte_end":216084,"line_start":319,"line_end":319,"column_start":9,"column_end":15},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":2827},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":216785,"byte_end":216791,"line_start":344,"line_end":344,"column_start":12,"column_end":18},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":2827},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":221622,"byte_end":221628,"line_start":481,"line_end":481,"column_start":21,"column_end":27},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":2813},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":221881,"byte_end":221884,"line_start":493,"line_end":493,"column_start":36,"column_end":39},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":1571},"to":{"krate":33,"index":7}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":222690,"byte_end":222693,"line_start":519,"line_end":519,"column_start":24,"column_end":27},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1571},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":222983,"byte_end":222990,"line_start":532,"line_end":532,"column_start":32,"column_end":39},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":1587},"to":{"krate":33,"index":7}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\server\\mod.rs","byte_start":224404,"byte_end":224417,"line_start":581,"line_end":581,"column_start":33,"column_end":46},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":2836},"to":{"krate":33,"index":7}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\error.rs","byte_start":234217,"byte_end":234222,"line_start":26,"line_end":26,"column_start":6,"column_end":11},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":1612},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\error.rs","byte_start":234917,"byte_end":234922,"line_start":54,"line_end":54,"column_start":21,"column_end":26},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":1612},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\error.rs","byte_start":235228,"byte_end":235233,"line_start":68,"line_end":68,"column_start":23,"column_end":28},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":1612},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\error.rs","byte_start":235508,"byte_end":235513,"line_start":78,"line_end":78,"column_start":19,"column_end":24},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":1612},"to":{"krate":1,"index":1642}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\add_origin.rs","byte_start":236422,"byte_end":236431,"line_start":11,"line_end":11,"column_start":9,"column_end":18},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":2851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\add_origin.rs","byte_start":236579,"byte_end":236588,"line_start":17,"line_end":17,"column_start":48,"column_end":57},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":2851},"to":{"krate":33,"index":7}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\connection.rs","byte_start":238460,"byte_end":238470,"line_start":31,"line_end":31,"column_start":6,"column_end":16},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":1687},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\connection.rs","byte_start":240479,"byte_end":240489,"line_start":84,"line_end":84,"column_start":27,"column_end":37},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":1687},"to":{"krate":33,"index":7}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\connection.rs","byte_start":240935,"byte_end":240945,"line_start":100,"line_end":100,"column_start":15,"column_end":25},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":1687},"to":{"krate":78,"index":206}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\connection.rs","byte_start":241050,"byte_end":241060,"line_start":108,"line_end":108,"column_start":21,"column_end":31},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":1687},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\connector.rs","byte_start":241859,"byte_end":241868,"line_start":30,"line_end":30,"column_start":9,"column_end":18},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":1722},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\connector.rs","byte_start":242138,"byte_end":242147,"line_start":42,"line_end":42,"column_start":26,"column_end":35},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":1722},"to":{"krate":33,"index":7}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\discover.rs","byte_start":243732,"byte_end":243752,"line_start":23,"line_end":23,"column_start":28,"column_end":48},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":1754},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\discover.rs","byte_start":243955,"byte_end":243975,"line_start":32,"line_end":32,"column_start":41,"column_end":61},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":1754},"to":{"krate":76,"index":76}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\discover.rs","byte_start":245837,"byte_end":245857,"line_start":78,"line_end":78,"column_start":38,"column_end":58},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":1754},"to":{"krate":2,"index":1968}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\io.rs","byte_start":246162,"byte_end":246171,"line_start":10,"line_end":10,"column_start":5,"column_end":14},"kind":"SuperTrait","from":{"krate":46,"index":215},"to":{"krate":0,"index":1785}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\io.rs","byte_start":246174,"byte_end":246184,"line_start":10,"line_end":10,"column_start":17,"column_end":27},"kind":"SuperTrait","from":{"krate":46,"index":271},"to":{"krate":0,"index":1785}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\io.rs","byte_start":246187,"byte_end":246191,"line_start":10,"line_end":10,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":1927},"to":{"krate":0,"index":1785}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\io.rs","byte_start":246222,"byte_end":246223,"line_start":14,"line_end":14,"column_start":16,"column_end":17},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":1787},"to":{"krate":0,"index":1785}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\io.rs","byte_start":246328,"byte_end":246335,"line_start":18,"line_end":18,"column_start":6,"column_end":13},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":1788},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\io.rs","byte_start":246457,"byte_end":246464,"line_start":24,"line_end":24,"column_start":21,"column_end":28},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":1788},"to":{"krate":61,"index":898}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\io.rs","byte_start":246569,"byte_end":246576,"line_start":30,"line_end":30,"column_start":20,"column_end":27},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":1788},"to":{"krate":0,"index":1364}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\io.rs","byte_start":246600,"byte_end":246607,"line_start":32,"line_end":32,"column_start":20,"column_end":27},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":1788},"to":{"krate":46,"index":215}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\io.rs","byte_start":246829,"byte_end":246836,"line_start":42,"line_end":42,"column_start":21,"column_end":28},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":1788},"to":{"krate":46,"index":271}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\io.rs","byte_start":247374,"byte_end":247376,"line_start":60,"line_end":60,"column_start":45,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":1785},"to":{"krate":0,"index":1803}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\io.rs","byte_start":247379,"byte_end":247388,"line_start":60,"line_end":60,"column_start":50,"column_end":59},"kind":"SuperTrait","from":{"krate":0,"index":1364},"to":{"krate":0,"index":1803}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\io.rs","byte_start":247417,"byte_end":247418,"line_start":62,"line_end":62,"column_start":25,"column_end":26},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":1805},"to":{"krate":0,"index":1803}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\io.rs","byte_start":247508,"byte_end":247516,"line_start":66,"line_end":66,"column_start":6,"column_end":14},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":1806},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\io.rs","byte_start":247647,"byte_end":247655,"line_start":72,"line_end":72,"column_start":20,"column_end":28},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":1806},"to":{"krate":0,"index":1364}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\io.rs","byte_start":247862,"byte_end":247870,"line_start":82,"line_end":82,"column_start":20,"column_end":28},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":1806},"to":{"krate":46,"index":215}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\io.rs","byte_start":248092,"byte_end":248100,"line_start":92,"line_end":92,"column_start":21,"column_end":29},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":1806},"to":{"krate":46,"index":271}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\layer.rs","byte_start":249089,"byte_end":249103,"line_start":18,"line_end":18,"column_start":34,"column_end":48},"kind":{"Impl":{"id":190}},"from":{"krate":73,"index":62},"to":{"krate":0,"index":1828}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\layer.rs","byte_start":249979,"byte_end":249986,"line_start":54,"line_end":54,"column_start":30,"column_end":37},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":2858},"to":{"krate":75,"index":51}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\layer.rs","byte_start":250236,"byte_end":250249,"line_start":70,"line_end":70,"column_start":25,"column_end":38},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":2870},"to":{"krate":75,"index":51}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\reconnect.rs","byte_start":251039,"byte_end":251048,"line_start":31,"line_end":31,"column_start":17,"column_end":26},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":1878},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\reconnect.rs","byte_start":251383,"byte_end":251392,"line_start":46,"line_end":46,"column_start":50,"column_end":59},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":1878},"to":{"krate":33,"index":7}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\reconnect.rs","byte_start":254797,"byte_end":254806,"line_start":145,"line_end":145,"column_start":32,"column_end":41},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":1878},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\reconnect.rs","byte_start":255517,"byte_end":255531,"line_start":176,"line_end":176,"column_start":12,"column_end":26},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":3002},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\reconnect.rs","byte_start":255828,"byte_end":255842,"line_start":190,"line_end":190,"column_start":30,"column_end":44},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":3002},"to":{"krate":2,"index":8336}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\router.rs","byte_start":256717,"byte_end":256723,"line_start":17,"line_end":17,"column_start":21,"column_end":27},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":3118},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\router.rs","byte_start":256978,"byte_end":256984,"line_start":28,"line_end":28,"column_start":21,"column_end":27},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":3118},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\router.rs","byte_start":257317,"byte_end":257323,"line_start":39,"line_end":39,"column_start":42,"column_end":48},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":3118},"to":{"krate":33,"index":7}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\router.rs","byte_start":257937,"byte_end":257943,"line_start":61,"line_end":61,"column_start":45,"column_end":51},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":3118},"to":{"krate":2,"index":1625}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\router.rs","byte_start":258225,"byte_end":258227,"line_start":76,"line_end":76,"column_start":21,"column_end":23},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":1956},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\router.rs","byte_start":258505,"byte_end":258507,"line_start":86,"line_end":86,"column_start":42,"column_end":44},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":1956},"to":{"krate":33,"index":7}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\router.rs","byte_start":259365,"byte_end":259367,"line_start":115,"line_end":115,"column_start":45,"column_end":47},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":1956},"to":{"krate":2,"index":1625}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\router.rs","byte_start":259593,"byte_end":259595,"line_start":125,"line_end":125,"column_start":36,"column_end":38},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":1956},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\tls.rs","byte_start":260704,"byte_end":260716,"line_start":44,"line_end":44,"column_start":6,"column_end":18},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":3145},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\tls.rs","byte_start":262682,"byte_end":262694,"line_start":111,"line_end":111,"column_start":21,"column_end":33},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":3145},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\tls.rs","byte_start":262904,"byte_end":262915,"line_start":122,"line_end":122,"column_start":6,"column_end":17},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":3150},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\tls.rs","byte_start":264602,"byte_end":264613,"line_start":174,"line_end":174,"column_start":21,"column_end":32},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":3150},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\tls.rs","byte_start":264757,"byte_end":264765,"line_start":180,"line_end":180,"column_start":23,"column_end":31},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":3136},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\service\\tls.rs","byte_start":265246,"byte_end":265254,"line_start":193,"line_end":193,"column_start":28,"column_end":36},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":3136},"to":{"krate":1,"index":1642}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\tls.rs","byte_start":267219,"byte_end":267230,"line_start":14,"line_end":14,"column_start":6,"column_end":17},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":3154},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\tls.rs","byte_start":267904,"byte_end":267915,"line_start":39,"line_end":39,"column_start":22,"column_end":33},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":3154},"to":{"krate":2,"index":1836}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\transport\\tls.rs","byte_start":267990,"byte_end":267998,"line_start":45,"line_end":45,"column_start":6,"column_end":14},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":3160},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\interceptor.rs","byte_start":269222,"byte_end":269233,"line_start":22,"line_end":22,"column_start":6,"column_end":17},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":3167},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\interceptor.rs","byte_start":269822,"byte_end":269833,"line_start":41,"line_end":41,"column_start":21,"column_end":32},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":3167},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\interceptor.rs","byte_start":270006,"byte_end":270017,"line_start":50,"line_end":50,"column_start":21,"column_end":32},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":3167},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":272750,"byte_end":272756,"line_start":54,"line_end":54,"column_start":35,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":2154},"to":{"krate":0,"index":2108}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":274016,"byte_end":274022,"line_start":92,"line_end":92,"column_start":41,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":2154},"to":{"krate":0,"index":2111}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":274312,"byte_end":274319,"line_start":103,"line_end":103,"column_start":9,"column_end":16},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":3171},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":277856,"byte_end":277857,"line_start":226,"line_end":226,"column_start":28,"column_end":29},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":2136},"to":{"krate":0,"index":2108}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":277968,"byte_end":277975,"line_start":232,"line_end":232,"column_start":28,"column_end":35},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":3171},"to":{"krate":0,"index":2108}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":278078,"byte_end":278079,"line_start":238,"line_end":238,"column_start":34,"column_end":35},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":2142},"to":{"krate":0,"index":2111}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":278301,"byte_end":278308,"line_start":250,"line_end":250,"column_start":34,"column_end":41},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":3171},"to":{"krate":0,"index":2111}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\request.rs","byte_start":278504,"byte_end":278505,"line_start":262,"line_end":262,"column_start":28,"column_end":29},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":2152},"to":{"krate":0,"index":2154}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\response.rs","byte_start":279216,"byte_end":279224,"line_start":10,"line_end":10,"column_start":9,"column_end":17},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":3184},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":284973,"byte_end":284977,"line_start":113,"line_end":113,"column_start":6,"column_end":10},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":3198},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":287076,"byte_end":287080,"line_start":156,"line_end":156,"column_start":28,"column_end":32},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":3198},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":287252,"byte_end":287258,"line_start":164,"line_end":164,"column_start":6,"column_end":12},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":3191},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":301518,"byte_end":301524,"line_start":528,"line_end":528,"column_start":21,"column_end":27},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":3191},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":302639,"byte_end":302645,"line_start":573,"line_end":573,"column_start":31,"column_end":37},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":3191},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":302747,"byte_end":302753,"line_start":579,"line_end":579,"column_start":23,"column_end":29},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":3191},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":303068,"byte_end":303074,"line_start":592,"line_end":592,"column_start":16,"column_end":22},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":3191},"to":{"krate":1,"index":1642}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":304449,"byte_end":304453,"line_start":634,"line_end":634,"column_start":6,"column_end":10},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":3198},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\status.rs","byte_start":307156,"byte_end":307160,"line_start":701,"line_end":701,"column_start":20,"column_end":24},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":3198},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codegen.rs","byte_start":312802,"byte_end":312807,"line_start":27,"line_end":27,"column_start":28,"column_end":33},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":3311},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tonic-0.3.1\\src\\codegen.rs","byte_start":312942,"byte_end":312947,"line_start":33,"line_end":33,"column_start":28,"column_end":33},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":3311},"to":{"krate":1,"index":1642}}]}