{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12","program":"C:\\Users\\renat\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","futures_util","--edition=2018","C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","-C","metadata=c8a541dbd2ea5fe4","-C","extra-filename=-c8a541dbd2ea5fe4","--out-dir","c:\\rustProjects\\example_real_word\\example_real_word\\src\\cross_cutting\\target\\rls\\debug\\deps","-L","dependency=c:\\rustProjects\\example_real_word\\example_real_word\\src\\cross_cutting\\target\\rls\\debug\\deps","--extern","futures_core=c:\\rustProjects\\example_real_word\\example_real_word\\src\\cross_cutting\\target\\rls\\debug\\deps\\libfutures_core-473269095126e29f.rmeta","--extern","futures_task=c:\\rustProjects\\example_real_word\\example_real_word\\src\\cross_cutting\\target\\rls\\debug\\deps\\libfutures_task-d66c64d0488381e4.rmeta","--extern","pin_project_lite=c:\\rustProjects\\example_real_word\\example_real_word\\src\\cross_cutting\\target\\rls\\debug\\deps\\libpin_project_lite-f954910d3487646f.rmeta","--extern","pin_utils=c:\\rustProjects\\example_real_word\\example_real_word\\src\\cross_cutting\\target\\rls\\debug\\deps\\libpin_utils-8db4e498cd9caa1b.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\renat\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\rustProjects\\example_real_word\\example_real_word\\src\\cross_cutting\\target\\rls\\debug\\deps\\libfutures_util-c8a541dbd2ea5fe4.rmeta"},"prelude":{"crate_id":{"name":"futures_util","disambiguator":[17189707756562820186,14539711353129764192]},"crate_root":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src","external_crates":[{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[11710271729537087300,7936810236211621860]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[221620535861096092,14052674651022364528]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[6754765288211962248,11319126938093173531]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","num":4,"id":{"name":"alloc","disambiguator":[12146955935630897969,9411134559866261862]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","num":5,"id":{"name":"futures_core","disambiguator":[10195818575127068416,2784049674970187270]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","num":6,"id":{"name":"std","disambiguator":[2951836381390344939,16649128255697415692]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","num":7,"id":{"name":"libc","disambiguator":[14833668363639865695,5655522694650611187]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","num":8,"id":{"name":"unwind","disambiguator":[4272166054306925428,11429919485785531186]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","num":9,"id":{"name":"cfg_if","disambiguator":[12683507629027033058,3032465482526171902]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","num":10,"id":{"name":"backtrace","disambiguator":[3621516987667804763,14118985286121416357]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[3114763798488812350,3771385689256703239]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[12308387851717752688,1271721453298801945]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[41357415245366713,267475365531445088]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[14877867959531453948,6948897495248942720]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","num":15,"id":{"name":"pin_utils","disambiguator":[9649324178910884247,16817075994413001608]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","num":16,"id":{"name":"futures_task","disambiguator":[3176483154925030147,12341115470529542651]}},{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\flatten.rs","num":17,"id":{"name":"pin_project_lite","disambiguator":[1191491414497640821,5863284106166447590]}}],"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","byte_start":0,"byte_end":12340,"line_start":1,"line_end":346,"column_start":1,"column_end":18}},"imports":[{"kind":"Use","ref_id":{"krate":5,"index":131},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","byte_start":1485,"byte_end":1490,"line_start":33,"line_end":33,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":7},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","byte_start":1511,"byte_end":1518,"line_start":34,"line_end":34,"column_start":20,"column_end":27},"alias_span":null,"name":"pin_mut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":11},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":12826,"byte_end":12835,"line_start":13,"line_end":13,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxFuture","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":5,"index":14},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":12837,"byte_end":12851,"line_start":13,"line_end":13,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxFuture","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":5,"index":17},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":12885,"byte_end":12896,"line_start":14,"line_end":14,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedFuture","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":1,"index":8336},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":12898,"byte_end":12904,"line_start":14,"line_end":14,"column_start":45,"column_end":51},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":5,"index":32},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":12906,"byte_end":12915,"line_start":14,"line_end":14,"column_start":53,"column_end":62},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":16,"index":111},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":12941,"byte_end":12950,"line_start":15,"line_end":15,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":16,"index":77},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":12952,"byte_end":12966,"line_start":15,"line_end":15,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":16,"index":132},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":12968,"byte_end":12983,"line_start":15,"line_end":15,"column_start":51,"column_end":66},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":2997},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13098,"byte_end":13105,"line_start":21,"line_end":21,"column_start":5,"column_end":12},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":2911},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13107,"byte_end":13111,"line_start":21,"line_end":21,"column_start":14,"column_end":18},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13113,"byte_end":13122,"line_start":21,"line_end":21,"column_start":20,"column_end":29},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":3340},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13124,"byte_end":13131,"line_start":21,"line_end":21,"column_start":31,"column_end":38},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":3155},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13133,"byte_end":13143,"line_start":21,"line_end":21,"column_start":40,"column_end":50},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":3095},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13145,"byte_end":13148,"line_start":21,"line_end":21,"column_start":52,"column_end":55},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":3400},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13150,"byte_end":13160,"line_start":21,"line_end":21,"column_start":57,"column_end":67},"alias_span":null,"name":"NeverError","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":3267},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13162,"byte_end":13166,"line_start":21,"line_end":21,"column_start":69,"column_end":73},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":3448},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13168,"byte_end":13177,"line_start":21,"line_end":21,"column_start":75,"column_end":84},"alias_span":null,"name":"UnitError","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":3205},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13179,"byte_end":13186,"line_start":21,"line_end":21,"column_start":86,"column_end":93},"alias_span":null,"name":"MapInto","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":3045},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13282,"byte_end":13295,"line_start":25,"line_end":25,"column_start":23,"column_end":36},"alias_span":null,"name":"FlattenStream","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":3799},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13625,"byte_end":13632,"line_start":40,"line_end":40,"column_start":5,"column_end":12},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":3946},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13634,"byte_end":13641,"line_start":40,"line_end":40,"column_start":14,"column_end":21},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":4007},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13643,"byte_end":13649,"line_start":40,"line_end":40,"column_start":23,"column_end":29},"alias_span":null,"name":"OkInto","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":4129},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13651,"byte_end":13661,"line_start":40,"line_end":40,"column_start":31,"column_end":41},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":4068},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13663,"byte_end":13672,"line_start":40,"line_end":40,"column_start":43,"column_end":52},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":3499},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13674,"byte_end":13684,"line_start":40,"line_end":40,"column_start":54,"column_end":64},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":4251},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13686,"byte_end":13692,"line_start":40,"line_end":40,"column_start":66,"column_end":72},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":4190},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13694,"byte_end":13699,"line_start":40,"line_end":40,"column_start":74,"column_end":79},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":3873},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13701,"byte_end":13707,"line_start":40,"line_end":40,"column_start":81,"column_end":87},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":3748},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13709,"byte_end":13725,"line_start":40,"line_end":40,"column_start":89,"column_end":105},"alias_span":null,"name":"TryFlattenStream","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":277},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13731,"byte_end":13743,"line_start":41,"line_end":41,"column_start":5,"column_end":17},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":4386},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13745,"byte_end":13757,"line_start":41,"line_end":41,"column_start":19,"column_end":31},"alias_span":null,"name":"UnwrapOrElse","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":4313},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13759,"byte_end":13770,"line_start":41,"line_end":41,"column_start":33,"column_end":44},"alias_span":null,"name":"MapOkOrElse","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":3627},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13772,"byte_end":13782,"line_start":41,"line_end":41,"column_start":46,"column_end":56},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":333},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13954,"byte_end":13958,"line_start":51,"line_end":51,"column_start":22,"column_end":26},"alias_span":null,"name":"lazy","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":4444},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13960,"byte_end":13964,"line_start":51,"line_end":51,"column_start":28,"column_end":32},"alias_span":null,"name":"Lazy","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":360},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14005,"byte_end":14012,"line_start":54,"line_end":54,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":4450},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14014,"byte_end":14021,"line_start":54,"line_end":54,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":386},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14068,"byte_end":14078,"line_start":57,"line_end":57,"column_start":28,"column_end":38},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":4456},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14080,"byte_end":14089,"line_start":57,"line_end":57,"column_start":40,"column_end":49},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":415},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14144,"byte_end":14158,"line_start":60,"line_end":60,"column_start":32,"column_end":46},"alias_span":null,"name":"try_maybe_done","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":4469},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14160,"byte_end":14172,"line_start":60,"line_end":60,"column_start":48,"column_end":60},"alias_span":null,"name":"TryMaybeDone","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":4487},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14210,"byte_end":14222,"line_start":63,"line_end":63,"column_start":23,"column_end":35},"alias_span":null,"name":"OptionFuture","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":463},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14262,"byte_end":14269,"line_start":66,"line_end":66,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":458},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14271,"byte_end":14277,"line_start":66,"line_end":66,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":502},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14314,"byte_end":14317,"line_start":69,"line_end":69,"column_start":23,"column_end":26},"alias_span":null,"name":"err","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":499},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14319,"byte_end":14321,"line_start":69,"line_end":69,"column_start":28,"column_end":30},"alias_span":null,"name":"ok","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":497},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14323,"byte_end":14328,"line_start":69,"line_end":69,"column_start":32,"column_end":37},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":4521},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14330,"byte_end":14335,"line_start":69,"line_end":69,"column_start":39,"column_end":44},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":525},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14370,"byte_end":14374,"line_start":72,"line_end":72,"column_start":22,"column_end":26},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":528},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14376,"byte_end":14381,"line_start":72,"line_end":72,"column_start":28,"column_end":33},"alias_span":null,"name":"join3","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":532},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14383,"byte_end":14388,"line_start":72,"line_end":72,"column_start":35,"column_end":40},"alias_span":null,"name":"join4","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":537},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14390,"byte_end":14395,"line_start":72,"line_end":72,"column_start":42,"column_end":47},"alias_span":null,"name":"join5","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":4623},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14397,"byte_end":14401,"line_start":72,"line_end":72,"column_start":49,"column_end":53},"alias_span":null,"name":"Join","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":4668},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14403,"byte_end":14408,"line_start":72,"line_end":72,"column_start":55,"column_end":60},"alias_span":null,"name":"Join3","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":4725},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14410,"byte_end":14415,"line_start":72,"line_end":72,"column_start":62,"column_end":67},"alias_span":null,"name":"Join4","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":4794},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14417,"byte_end":14422,"line_start":72,"line_end":72,"column_start":69,"column_end":74},"alias_span":null,"name":"Join5","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":574},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14517,"byte_end":14525,"line_start":77,"line_end":77,"column_start":26,"column_end":34},"alias_span":null,"name":"join_all","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":568},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14527,"byte_end":14534,"line_start":77,"line_end":77,"column_start":36,"column_end":43},"alias_span":null,"name":"JoinAll","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":602},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14573,"byte_end":14579,"line_start":80,"line_end":80,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":4875},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14581,"byte_end":14587,"line_start":80,"line_end":80,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":629},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14686,"byte_end":14696,"line_start":85,"line_end":85,"column_start":28,"column_end":38},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":4883},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14698,"byte_end":14707,"line_start":85,"line_end":85,"column_start":40,"column_end":49},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":657},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14755,"byte_end":14763,"line_start":89,"line_end":89,"column_start":5,"column_end":13},"alias_span":null,"name":"try_join","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":660},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14765,"byte_end":14774,"line_start":89,"line_end":89,"column_start":15,"column_end":24},"alias_span":null,"name":"try_join3","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":664},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14776,"byte_end":14785,"line_start":89,"line_end":89,"column_start":26,"column_end":35},"alias_span":null,"name":"try_join4","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":669},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14787,"byte_end":14796,"line_start":89,"line_end":89,"column_start":37,"column_end":46},"alias_span":null,"name":"try_join5","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":4959},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14798,"byte_end":14805,"line_start":89,"line_end":89,"column_start":48,"column_end":55},"alias_span":null,"name":"TryJoin","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":5004},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14807,"byte_end":14815,"line_start":89,"line_end":89,"column_start":57,"column_end":65},"alias_span":null,"name":"TryJoin3","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":5061},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14817,"byte_end":14825,"line_start":89,"line_end":89,"column_start":67,"column_end":75},"alias_span":null,"name":"TryJoin4","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":5130},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14827,"byte_end":14835,"line_start":89,"line_end":89,"column_start":77,"column_end":85},"alias_span":null,"name":"TryJoin5","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":717},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14940,"byte_end":14952,"line_start":95,"line_end":95,"column_start":30,"column_end":42},"alias_span":null,"name":"try_join_all","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":711},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14954,"byte_end":14964,"line_start":95,"line_end":95,"column_start":44,"column_end":54},"alias_span":null,"name":"TryJoinAll","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":745},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":15011,"byte_end":15021,"line_start":98,"line_end":98,"column_start":28,"column_end":38},"alias_span":null,"name":"try_select","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":5211},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":15023,"byte_end":15032,"line_start":98,"line_end":98,"column_start":40,"column_end":49},"alias_span":null,"name":"TrySelect","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":770},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":15129,"byte_end":15138,"line_start":103,"line_end":103,"column_start":27,"column_end":36},"alias_span":null,"name":"select_ok","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":5219},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":15140,"byte_end":15148,"line_start":103,"line_end":103,"column_start":38,"column_end":46},"alias_span":null,"name":"SelectOk","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":5225},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":15186,"byte_end":15192,"line_start":106,"line_end":106,"column_start":23,"column_end":29},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":5260},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":15329,"byte_end":15338,"line_start":112,"line_end":112,"column_start":31,"column_end":40},"alias_span":null,"name":"abortable","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":9298},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":15340,"byte_end":15349,"line_start":112,"line_end":112,"column_start":42,"column_end":51},"alias_span":null,"name":"Abortable","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":5280},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":15351,"byte_end":15362,"line_start":112,"line_end":112,"column_start":53,"column_end":64},"alias_span":null,"name":"AbortHandle","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":5276},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":15364,"byte_end":15381,"line_start":112,"line_end":112,"column_start":66,"column_end":83},"alias_span":null,"name":"AbortRegistration","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":5291},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":15383,"byte_end":15390,"line_start":112,"line_end":112,"column_start":85,"column_end":92},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":5292},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":15383,"byte_end":15390,"line_start":112,"line_end":112,"column_start":85,"column_end":92},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":5275}},{"kind":"Use","ref_id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","byte_start":11632,"byte_end":11641,"line_start":312,"line_end":312,"column_start":25,"column_end":34},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":277},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","byte_start":11643,"byte_end":11655,"line_start":312,"line_end":312,"column_start":36,"column_end":48},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":62},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":127547,"byte_end":127556,"line_start":13,"line_end":13,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxStream","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":5,"index":65},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":127558,"byte_end":127572,"line_start":13,"line_end":13,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxStream","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":5,"index":82},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":127606,"byte_end":127617,"line_start":14,"line_end":14,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":5,"index":68},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":127619,"byte_end":127625,"line_start":14,"line_end":14,"column_start":45,"column_end":51},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":5,"index":97},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":127627,"byte_end":127636,"line_start":14,"line_end":14,"column_start":53,"column_end":62},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":6706},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":135257,"byte_end":135263,"line_start":157,"line_end":157,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":845}},{"kind":"Use","ref_id":{"krate":0,"index":6754},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":135440,"byte_end":135451,"line_start":163,"line_end":163,"column_start":29,"column_end":40},"alias_span":null,"name":"ReadyChunks","value":"","parent":{"krate":0,"index":845}},{"kind":"Use","ref_id":{"krate":0,"index":5311},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":127752,"byte_end":127757,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":5360},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":127759,"byte_end":127766,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":5469},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":127768,"byte_end":127774,"line_start":21,"line_end":21,"column_start":21,"column_end":27},"alias_span":null,"name":"Concat","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":5509},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":127776,"byte_end":127781,"line_start":21,"line_end":21,"column_start":29,"column_end":34},"alias_span":null,"name":"Cycle","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":5549},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":127783,"byte_end":127792,"line_start":21,"line_end":21,"column_start":36,"column_end":45},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":5588},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":127794,"byte_end":127800,"line_start":21,"line_end":21,"column_start":47,"column_end":53},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":5653},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":127802,"byte_end":127811,"line_start":21,"line_end":21,"column_start":55,"column_end":64},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":6120},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":127813,"byte_end":127820,"line_start":21,"line_end":21,"column_start":66,"column_end":73},"alias_span":null,"name":"FlatMap","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":5769},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":127822,"byte_end":127829,"line_start":21,"line_end":21,"column_start":75,"column_end":82},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":5822},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":127831,"byte_end":127835,"line_start":21,"line_end":21,"column_start":84,"column_end":88},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":5891},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":127837,"byte_end":127844,"line_start":21,"line_end":21,"column_start":90,"column_end":97},"alias_span":null,"name":"ForEach","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":5953},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":127850,"byte_end":127854,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":6001},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":127856,"byte_end":127863,"line_start":22,"line_end":22,"column_start":11,"column_end":18},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":6067},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":127865,"byte_end":127868,"line_start":22,"line_end":22,"column_start":20,"column_end":23},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":6199},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":127870,"byte_end":127874,"line_start":22,"line_end":22,"column_start":25,"column_end":29},"alias_span":null,"name":"Next","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":6259},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":127876,"byte_end":127880,"line_start":22,"line_end":22,"column_start":31,"column_end":35},"alias_span":null,"name":"Peek","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":6220},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":127882,"byte_end":127890,"line_start":22,"line_end":22,"column_start":37,"column_end":45},"alias_span":null,"name":"Peekable","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":6797},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":127892,"byte_end":127896,"line_start":22,"line_end":22,"column_start":47,"column_end":51},"alias_span":null,"name":"Scan","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":6207},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":127898,"byte_end":127912,"line_start":22,"line_end":22,"column_start":53,"column_end":67},"alias_span":null,"name":"SelectNextSome","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":6305},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":127914,"byte_end":127918,"line_start":22,"line_end":22,"column_start":69,"column_end":73},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":6344},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":127920,"byte_end":127929,"line_start":22,"line_end":22,"column_start":75,"column_end":84},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":1692},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":127931,"byte_end":127940,"line_start":22,"line_end":22,"column_start":86,"column_end":95},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":5992},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":127946,"byte_end":127958,"line_start":23,"line_end":23,"column_start":5,"column_end":17},"alias_span":null,"name":"StreamFuture","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":6418},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":127960,"byte_end":127964,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":6526},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":127966,"byte_end":127975,"line_start":23,"line_end":23,"column_start":25,"column_end":34},"alias_span":null,"name":"TakeUntil","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":6457},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":127977,"byte_end":127986,"line_start":23,"line_end":23,"column_start":36,"column_end":45},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":6583},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":127988,"byte_end":127992,"line_start":23,"line_end":23,"column_start":47,"column_end":51},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":5411},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":127994,"byte_end":127999,"line_start":23,"line_end":23,"column_start":53,"column_end":58},"alias_span":null,"name":"Unzip","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":6651},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":128001,"byte_end":128004,"line_start":23,"line_end":23,"column_start":60,"column_end":63},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":6706},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":128118,"byte_end":128124,"line_start":30,"line_end":30,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":6754},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":128175,"byte_end":128186,"line_start":33,"line_end":33,"column_start":23,"column_end":34},"alias_span":null,"name":"ReadyChunks","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":9252},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":128422,"byte_end":128437,"line_start":41,"line_end":41,"column_start":24,"column_end":39},"alias_span":null,"name":"BufferUnordered","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":9211},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":128439,"byte_end":128447,"line_start":41,"line_end":41,"column_start":41,"column_end":49},"alias_span":null,"name":"Buffered","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":9150},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":128449,"byte_end":128466,"line_start":41,"line_end":41,"column_start":51,"column_end":68},"alias_span":null,"name":"ForEachConcurrent","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":2171},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":128759,"byte_end":128769,"line_start":51,"line_end":51,"column_start":5,"column_end":15},"alias_span":null,"name":"try_unfold","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":6968},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":128771,"byte_end":128778,"line_start":51,"line_end":51,"column_start":17,"column_end":24},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":7032},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":128780,"byte_end":128787,"line_start":51,"line_end":51,"column_start":26,"column_end":33},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":7170},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":128789,"byte_end":128799,"line_start":51,"line_end":51,"column_start":35,"column_end":45},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":7101},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":128801,"byte_end":128810,"line_start":51,"line_end":51,"column_start":47,"column_end":56},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":7241},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":128812,"byte_end":128822,"line_start":51,"line_end":51,"column_start":58,"column_end":68},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":7348},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":128824,"byte_end":128830,"line_start":51,"line_end":51,"column_start":70,"column_end":76},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":7279},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":128832,"byte_end":128837,"line_start":51,"line_end":51,"column_start":78,"column_end":83},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":7414},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":128839,"byte_end":128845,"line_start":51,"line_end":51,"column_start":85,"column_end":91},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":7717},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":128851,"byte_end":128861,"line_start":52,"line_end":52,"column_start":5,"column_end":15},"alias_span":null,"name":"TryCollect","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":7764},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":128863,"byte_end":128872,"line_start":52,"line_end":52,"column_start":17,"column_end":26},"alias_span":null,"name":"TryConcat","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":7540},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":128874,"byte_end":128883,"line_start":52,"line_end":52,"column_start":28,"column_end":37},"alias_span":null,"name":"TryFilter","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":7605},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":128885,"byte_end":128897,"line_start":52,"line_end":52,"column_start":39,"column_end":51},"alias_span":null,"name":"TryFilterMap","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":7671},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":128899,"byte_end":128909,"line_start":52,"line_end":52,"column_start":53,"column_end":63},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":7799},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":128911,"byte_end":128918,"line_start":52,"line_end":52,"column_start":65,"column_end":72},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":7483},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":128920,"byte_end":128930,"line_start":52,"line_end":52,"column_start":74,"column_end":84},"alias_span":null,"name":"TryForEach","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":7475},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":128932,"byte_end":128939,"line_start":52,"line_end":52,"column_start":86,"column_end":93},"alias_span":null,"name":"TryNext","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":7925},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":128945,"byte_end":128957,"line_start":53,"line_end":53,"column_start":5,"column_end":17},"alias_span":null,"name":"TrySkipWhile","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":2267},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":128959,"byte_end":128971,"line_start":53,"line_end":53,"column_start":19,"column_end":31},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":7994},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":128973,"byte_end":128985,"line_start":53,"line_end":53,"column_start":33,"column_end":45},"alias_span":null,"name":"TryTakeWhile","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":7868},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":128987,"byte_end":128996,"line_start":53,"line_end":53,"column_start":47,"column_end":56},"alias_span":null,"name":"TryUnfold","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":9111},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":129269,"byte_end":129287,"line_start":63,"line_end":63,"column_start":28,"column_end":46},"alias_span":null,"name":"TryBufferUnordered","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":9067},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":129289,"byte_end":129300,"line_start":63,"line_end":63,"column_start":48,"column_end":59},"alias_span":null,"name":"TryBuffered","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":9001},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":129302,"byte_end":129322,"line_start":63,"line_end":63,"column_start":61,"column_end":81},"alias_span":null,"name":"TryForEachConcurrent","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":2353},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":129379,"byte_end":129383,"line_start":68,"line_end":68,"column_start":22,"column_end":26},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":8162},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":129385,"byte_end":129389,"line_start":68,"line_end":68,"column_start":28,"column_end":32},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":2371},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":129428,"byte_end":129434,"line_start":71,"line_end":71,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":8171},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":129436,"byte_end":129442,"line_start":71,"line_end":71,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":2407},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":129491,"byte_end":129502,"line_start":74,"line_end":74,"column_start":29,"column_end":40},"alias_span":null,"name":"repeat_with","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":8180},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":129504,"byte_end":129514,"line_start":74,"line_end":74,"column_start":42,"column_end":52},"alias_span":null,"name":"RepeatWith","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":2422},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":129551,"byte_end":129556,"line_start":77,"line_end":77,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":8189},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":129558,"byte_end":129563,"line_start":77,"line_end":77,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":2451},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":129598,"byte_end":129602,"line_start":80,"line_end":80,"column_start":22,"column_end":26},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":8200},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":129604,"byte_end":129608,"line_start":80,"line_end":80,"column_start":28,"column_end":32},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":2476},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":129649,"byte_end":129656,"line_start":83,"line_end":83,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":8231},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":129658,"byte_end":129665,"line_start":83,"line_end":83,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":2509},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":129706,"byte_end":129713,"line_start":86,"line_end":86,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":2501},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":129715,"byte_end":129721,"line_start":86,"line_end":86,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":2532},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":129760,"byte_end":129766,"line_start":89,"line_end":89,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":8244},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":129768,"byte_end":129774,"line_start":89,"line_end":89,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":2570},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":129813,"byte_end":129819,"line_start":92,"line_end":92,"column_start":24,"column_end":30},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":8290},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":129821,"byte_end":129827,"line_start":92,"line_end":92,"column_start":32,"column_end":38},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":8381},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":129976,"byte_end":129990,"line_start":98,"line_end":98,"column_start":36,"column_end":50},"alias_span":null,"name":"FuturesOrdered","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":8732},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5561235,"byte_end":5561239,"line_start":25,"line_end":25,"column_start":22,"column_end":26},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":8419}},{"kind":"Use","ref_id":{"krate":0,"index":8733},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5561235,"byte_end":5561239,"line_start":25,"line_end":25,"column_start":22,"column_end":26},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":8500}},{"kind":"Use","ref_id":{"krate":0,"index":8712},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5561241,"byte_end":5561248,"line_start":25,"line_end":25,"column_start":28,"column_end":35},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":8419}},{"kind":"Use","ref_id":{"krate":0,"index":8713},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5561241,"byte_end":5561248,"line_start":25,"line_end":25,"column_start":28,"column_end":35},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":8501}},{"kind":"Use","ref_id":{"krate":0,"index":8702},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5561250,"byte_end":5561260,"line_start":25,"line_end":25,"column_start":37,"column_end":47},"alias_span":null,"name":"IterPinMut","value":"","parent":{"krate":0,"index":8419}},{"kind":"Use","ref_id":{"krate":0,"index":8721},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5561262,"byte_end":5561272,"line_start":25,"line_end":25,"column_start":49,"column_end":59},"alias_span":null,"name":"IterPinRef","value":"","parent":{"krate":0,"index":8419}},{"kind":"Use","ref_id":{"krate":0,"index":8585},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":130140,"byte_end":130156,"line_start":104,"line_end":104,"column_start":38,"column_end":54},"alias_span":null,"name":"FuturesUnordered","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":8689},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":130270,"byte_end":130280,"line_start":109,"line_end":109,"column_start":32,"column_end":42},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":8667},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":130282,"byte_end":130291,"line_start":109,"line_end":109,"column_start":44,"column_end":53},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":837}},{"kind":"Use","ref_id":{"krate":0,"index":1692},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","byte_start":11714,"byte_end":11723,"line_start":316,"line_end":316,"column_start":25,"column_end":34},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2267},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","byte_start":11725,"byte_end":11737,"line_start":316,"line_end":316,"column_start":36,"column_end":48},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":8502},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":341419,"byte_end":341426,"line_start":13,"line_end":13,"column_start":30,"column_end":37},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":2602}},{"kind":"Use","ref_id":{"krate":1,"index":32540},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":341428,"byte_end":341432,"line_start":13,"line_end":13,"column_start":39,"column_end":43},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":2602}},{"kind":"Use","ref_id":{"krate":1,"index":8512},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":341434,"byte_end":341439,"line_start":13,"line_end":13,"column_start":45,"column_end":50},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":2602}},{"kind":"Use","ref_id":{"krate":1,"index":32580},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":341441,"byte_end":341449,"line_start":13,"line_end":13,"column_start":52,"column_end":60},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":2602}},{"kind":"Use","ref_id":{"krate":1,"index":32589},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":341451,"byte_end":341465,"line_start":13,"line_end":13,"column_start":62,"column_end":76},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":2602}},{"kind":"Use","ref_id":{"krate":16,"index":11},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":341497,"byte_end":341502,"line_start":16,"line_end":16,"column_start":5,"column_end":10},"alias_span":null,"name":"Spawn","value":"","parent":{"krate":0,"index":2602}},{"kind":"Use","ref_id":{"krate":16,"index":14},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":341504,"byte_end":341514,"line_start":16,"line_end":16,"column_start":12,"column_end":22},"alias_span":null,"name":"LocalSpawn","value":"","parent":{"krate":0,"index":2602}},{"kind":"Use","ref_id":{"krate":16,"index":17},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":341516,"byte_end":341526,"line_start":16,"line_end":16,"column_start":24,"column_end":34},"alias_span":null,"name":"SpawnError","value":"","parent":{"krate":0,"index":2602}},{"kind":"Use","ref_id":{"krate":16,"index":111},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":341532,"byte_end":341541,"line_start":17,"line_end":17,"column_start":5,"column_end":14},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":2602}},{"kind":"Use","ref_id":{"krate":16,"index":77},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":341543,"byte_end":341557,"line_start":17,"line_end":17,"column_start":16,"column_end":30},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":2602}},{"kind":"Use","ref_id":{"krate":16,"index":132},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":341559,"byte_end":341574,"line_start":17,"line_end":17,"column_start":32,"column_end":47},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":2602}},{"kind":"Use","ref_id":{"krate":16,"index":236},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":341602,"byte_end":341612,"line_start":20,"line_end":20,"column_start":23,"column_end":33},"alias_span":null,"name":"noop_waker","value":"","parent":{"krate":0,"index":2602}},{"kind":"Use","ref_id":{"krate":16,"index":256},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":341758,"byte_end":341765,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"alias_span":null,"name":"ArcWake","value":"","parent":{"krate":0,"index":2602}},{"kind":"Use","ref_id":{"krate":16,"index":270},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":341824,"byte_end":341829,"line_start":29,"line_end":29,"column_start":27,"column_end":32},"alias_span":null,"name":"waker","value":"","parent":{"krate":0,"index":2602}},{"kind":"Use","ref_id":{"krate":16,"index":301},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":341889,"byte_end":341898,"line_start":32,"line_end":32,"column_start":28,"column_end":37},"alias_span":null,"name":"waker_ref","value":"","parent":{"krate":0,"index":2602}},{"kind":"Use","ref_id":{"krate":16,"index":306},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":341900,"byte_end":341908,"line_start":32,"line_end":32,"column_start":39,"column_end":47},"alias_span":null,"name":"WakerRef","value":"","parent":{"krate":0,"index":2602}},{"kind":"Use","ref_id":{"krate":5,"index":142},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":341956,"byte_end":341967,"line_start":34,"line_end":34,"column_start":45,"column_end":56},"alias_span":null,"name":"AtomicWaker","value":"","parent":{"krate":0,"index":2602}},{"kind":"Use","ref_id":{"krate":0,"index":2631},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":342005,"byte_end":342013,"line_start":38,"line_end":38,"column_start":23,"column_end":31},"alias_span":null,"name":"SpawnExt","value":"","parent":{"krate":0,"index":2602}},{"kind":"Use","ref_id":{"krate":0,"index":2634},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":342015,"byte_end":342028,"line_start":38,"line_end":38,"column_start":33,"column_end":46},"alias_span":null,"name":"LocalSpawnExt","value":"","parent":{"krate":0,"index":2602}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","byte_start":0,"byte_end":12340,"line_start":1,"line_end":346,"column_start":1,"column_end":18},"name":"","qualname":"::","value":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":12},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":2599},{"krate":0,"index":2600},{"krate":0,"index":2601},{"krate":0,"index":2602},{"krate":0,"index":2640},{"krate":0,"index":2642},{"krate":0,"index":2643},{"krate":0,"index":2851}],"decl_id":null,"docs":" Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,\n and the `AsyncRead` and `AsyncWrite` traits.\n","sig":null,"attributes":[{"value":"! Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"! and the `AsyncRead` and `AsyncWrite` traits.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","byte_start":78,"byte_end":126,"line_start":2,"line_end":2,"column_start":1,"column_end":49}},{"value":"no_std","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","byte_start":384,"byte_end":390,"line_start":7,"line_end":7,"column_start":35,"column_end":41}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","byte_start":393,"byte_end":499,"line_start":8,"line_end":13,"column_start":1,"column_end":3}},{"value":"warn(clippy :: all)","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","byte_start":667,"byte_end":688,"line_start":16,"line_end":16,"column_start":1,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":12},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","parent":null,"children":[{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":756},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":830},{"krate":0,"index":5242},{"krate":0,"index":5270},{"krate":0,"index":5271},{"krate":0,"index":5272},{"krate":0,"index":5273},{"krate":0,"index":5274},{"krate":0,"index":5275},{"krate":0,"index":9950},{"krate":0,"index":831}],"decl_id":null,"docs":" Asynchronous values.","sig":null,"attributes":[{"value":"! Asynchronous values.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":12342,"byte_end":12366,"line_start":1,"line_end":1,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":12367,"byte_end":12370,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":12371,"byte_end":12396,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":12397,"byte_end":12400,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! - The [`Future`] trait.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":12401,"byte_end":12428,"line_start":5,"line_end":5,"column_start":1,"column_end":28}},{"value":"! - The [`FutureExt`] and [`TryFutureExt`] trait, which provides adapters for","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":12429,"byte_end":12508,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"!   chaining and composing futures.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":12509,"byte_end":12546,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"! - Top-level future combinators like [`lazy`](lazy()) which creates a future","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":12547,"byte_end":12626,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"!   from a closure that defines its return value, and [`ready`](ready()),","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":12627,"byte_end":12702,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"!   which constructs a future with an immediate defined value.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":12703,"byte_end":12767,"line_start":10,"line_end":10,"column_start":1,"column_end":65}}]},{"kind":"StructVariant","id":{"krate":0,"index":2866},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\flatten.rs","byte_start":35841,"byte_end":35846,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"First","qualname":"::future::future::flatten::Flatten::First","value":"Flatten::First { f }","parent":{"krate":0,"index":2863},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2868},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\flatten.rs","byte_start":35875,"byte_end":35881,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::future::flatten::Flatten::Second","value":"Flatten::Second { f }","parent":{"krate":0,"index":2863},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2870},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\flatten.rs","byte_start":35910,"byte_end":35915,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::future::flatten::Flatten::Empty","value":"Flatten::Empty","parent":{"krate":0,"index":2863},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2863},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\flatten.rs","byte_start":35811,"byte_end":35818,"line_start":13,"line_end":13,"column_start":14,"column_end":21},"name":"Flatten","qualname":"::future::future::flatten::Flatten","value":"pub enum Flatten<Fut1, Fut2> {\n    First {\n        f: Fut1,\n    },\n    Second {\n        f: Fut2,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":2866},{"krate":0,"index":2868},{"krate":0,"index":2870}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2911},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":40350,"byte_end":40354,"line_start":11,"line_end":11,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::future::future::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":2913}],"decl_id":null,"docs":" Future for the [`fuse`](super::FutureExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":42173,"byte_end":42183,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"name":"terminated","qualname":"<Fuse<Fut>>::terminated","value":"pub fn terminated() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Fuse`-wrapped future which is already terminated.","sig":null,"attributes":[{"value":"/ Creates a new `Fuse`-wrapped future which is already terminated.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":40551,"byte_end":40619,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":40624,"byte_end":40627,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ This can be useful in combination with looping and the `select!`","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":40632,"byte_end":40700,"line_start":26,"line_end":26,"column_start":5,"column_end":73}},{"value":"/ macro, which bypasses terminated futures.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":40705,"byte_end":40750,"line_start":27,"line_end":27,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":40755,"byte_end":40758,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":40763,"byte_end":40777,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":40782,"byte_end":40785,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":40790,"byte_end":40797,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":40802,"byte_end":40843,"line_start":32,"line_end":32,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":40848,"byte_end":40879,"line_start":33,"line_end":33,"column_start":5,"column_end":36}},{"value":"/ use futures::future::{Fuse, FusedFuture, FutureExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":40884,"byte_end":40940,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/ use futures::select;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":40945,"byte_end":40969,"line_start":35,"line_end":35,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":40974,"byte_end":41009,"line_start":36,"line_end":36,"column_start":5,"column_end":40}},{"value":"/ use futures::pin_mut;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":41014,"byte_end":41039,"line_start":37,"line_end":37,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":41044,"byte_end":41047,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let (sender, mut stream) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":41052,"byte_end":41101,"line_start":39,"line_end":39,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":41106,"byte_end":41109,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ // Send a few messages into the stream","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":41114,"byte_end":41156,"line_start":41,"line_end":41,"column_start":5,"column_end":47}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":41161,"byte_end":41200,"line_start":42,"line_end":42,"column_start":5,"column_end":44}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":41205,"byte_end":41244,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ drop(sender);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":41249,"byte_end":41266,"line_start":44,"line_end":44,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":41271,"byte_end":41274,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ // Use `Fuse::terminated()` to create an already-terminated future","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":41279,"byte_end":41349,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ // which may be instantiated later.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":41354,"byte_end":41393,"line_start":47,"line_end":47,"column_start":5,"column_end":44}},{"value":"/ let foo_printer = Fuse::terminated();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":41398,"byte_end":41439,"line_start":48,"line_end":48,"column_start":5,"column_end":46}},{"value":"/ pin_mut!(foo_printer);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":41444,"byte_end":41470,"line_start":49,"line_end":49,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":41475,"byte_end":41478,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":41483,"byte_end":41493,"line_start":51,"line_end":51,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":41498,"byte_end":41515,"line_start":52,"line_end":52,"column_start":5,"column_end":22}},{"value":"/         _ = foo_printer => {},","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":41520,"byte_end":41554,"line_start":53,"line_end":53,"column_start":5,"column_end":39}},{"value":"/         () = stream.select_next_some() => {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":41559,"byte_end":41606,"line_start":54,"line_end":54,"column_start":5,"column_end":52}},{"value":"/             if !foo_printer.is_terminated() {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":41611,"byte_end":41660,"line_start":55,"line_end":55,"column_start":5,"column_end":54}},{"value":"/                 println!(\"Foo is already being printed!\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":41665,"byte_end":41727,"line_start":56,"line_end":56,"column_start":5,"column_end":67}},{"value":"/             } else {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":41732,"byte_end":41756,"line_start":57,"line_end":57,"column_start":5,"column_end":29}},{"value":"/                 foo_printer.set(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":41761,"byte_end":41804,"line_start":58,"line_end":58,"column_start":5,"column_end":48}},{"value":"/                     // do some other async operations","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":41809,"byte_end":41866,"line_start":59,"line_end":59,"column_start":5,"column_end":62}},{"value":"/                     println!(\"Printing foo from `foo_printer` future\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":41871,"byte_end":41946,"line_start":60,"line_end":60,"column_start":5,"column_end":80}},{"value":"/                 }.fuse());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":41951,"byte_end":41981,"line_start":61,"line_end":61,"column_start":5,"column_end":35}},{"value":"/             }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":41986,"byte_end":42003,"line_start":62,"line_end":62,"column_start":5,"column_end":22}},{"value":"/         },","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":42008,"byte_end":42022,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/         complete => break, // `foo_printer` is terminated and the stream is done","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":42027,"byte_end":42111,"line_start":64,"line_end":64,"column_start":5,"column_end":89}},{"value":"/     }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":42116,"byte_end":42125,"line_start":65,"line_end":65,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":42130,"byte_end":42135,"line_start":66,"line_end":66,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":42140,"byte_end":42149,"line_start":67,"line_end":67,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":42154,"byte_end":42161,"line_start":68,"line_end":68,"column_start":5,"column_end":12}}]},{"kind":"StructVariant","id":{"krate":0,"index":2949},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\map.rs","byte_start":43242,"byte_end":43252,"line_start":16,"line_end":16,"column_start":9,"column_end":19},"name":"Incomplete","qualname":"::future::future::map::Map::Incomplete","value":"Map::Incomplete { future, f }","parent":{"krate":0,"index":2946},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2952},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\map.rs","byte_start":43336,"byte_end":43344,"line_start":21,"line_end":21,"column_start":9,"column_end":17},"name":"Complete","qualname":"::future::future::map::Map::Complete","value":"Map::Complete","parent":{"krate":0,"index":2946},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2946},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\map.rs","byte_start":43220,"byte_end":43223,"line_start":15,"line_end":15,"column_start":14,"column_end":17},"name":"Map","qualname":"::future::future::map::Map","value":"pub enum Map<Fut, F> {\n    Incomplete {\n        future: Fut,\n        f: F,\n    },\n    Complete,\n}","parent":null,"children":[{"krate":0,"index":2949},{"krate":0,"index":2952}],"decl_id":null,"docs":" Internal Map future\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5490723,"byte_end":5490732,"line_start":631,"line_end":631,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":2997},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":16342,"byte_end":16349,"line_start":31,"line_end":31,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::future::future::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":2999}],"decl_id":null,"docs":" Future for the [`flatten`](super::FutureExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3045},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":16600,"byte_end":16613,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"FlattenStream","qualname":"::future::future::FlattenStream","value":"FlattenStream {  }","parent":null,"children":[{"krate":0,"index":3047}],"decl_id":null,"docs":" Stream for the [`flatten_stream`](FutureExt::flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3095},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":16953,"byte_end":16956,"line_start":50,"line_end":50,"column_start":5,"column_end":8},"name":"Map","qualname":"::future::future::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":3098}],"decl_id":null,"docs":" Future for the [`map`](super::FutureExt::map) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3155},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":17163,"byte_end":17173,"line_start":57,"line_end":57,"column_start":5,"column_end":15},"name":"IntoStream","qualname":"::future::future::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":3157}],"decl_id":null,"docs":" Stream for the [`into_stream`](FutureExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3205},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":17379,"byte_end":17386,"line_start":64,"line_end":64,"column_start":5,"column_end":12},"name":"MapInto","qualname":"::future::future::MapInto","value":"MapInto {  }","parent":null,"children":[{"krate":0,"index":3208}],"decl_id":null,"docs":" Future for the [`map_into`](FutureExt::map_into) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3267},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":17579,"byte_end":17583,"line_start":71,"line_end":71,"column_start":5,"column_end":9},"name":"Then","qualname":"::future::future::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":3271}],"decl_id":null,"docs":" Future for the [`then`](FutureExt::then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3340},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":17828,"byte_end":17835,"line_start":78,"line_end":78,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::future::future::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":3343}],"decl_id":null,"docs":" Future for the [`inspect`](FutureExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3400},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":18076,"byte_end":18086,"line_start":85,"line_end":85,"column_start":5,"column_end":15},"name":"NeverError","qualname":"::future::future::NeverError","value":"NeverError {  }","parent":null,"children":[{"krate":0,"index":3402}],"decl_id":null,"docs":" Future for the [`never_error`](super::FutureExt::never_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3448},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":18299,"byte_end":18308,"line_start":92,"line_end":92,"column_start":5,"column_end":14},"name":"UnitError","qualname":"::future::future::UnitError","value":"UnitError {  }","parent":null,"children":[{"krate":0,"index":3450}],"decl_id":null,"docs":" Future for the [`unit_error`](super::FutureExt::unit_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":19290,"byte_end":19299,"line_start":123,"line_end":123,"column_start":11,"column_end":20},"name":"FutureExt","qualname":"::future::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":141},{"krate":0,"index":143},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":151},{"krate":0,"index":153},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158}],"decl_id":null,"docs":" An extension trait for `Future`s that provides a variety of convenient\n adapters.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Future`s that provides a variety of convenient","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":19191,"byte_end":19265,"line_start":121,"line_end":121,"column_start":1,"column_end":75}},{"value":"/ adapters.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":19266,"byte_end":19279,"line_start":122,"line_end":122,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":20131,"byte_end":20134,"line_start":146,"line_end":146,"column_start":8,"column_end":11},"name":"map","qualname":"::future::future::FutureExt::map","value":"pub fn map<U, F>(Self, F) -> Map<Self, F> where F: FnOnce(Self::Output) -> U,\nSelf: Sized","parent":{"krate":0,"index":132},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":19314,"byte_end":19389,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":19394,"byte_end":19417,"line_start":125,"line_end":125,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":19422,"byte_end":19425,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function is similar to the `Option::map` or `Iterator::map` where","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":19430,"byte_end":19504,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ it will change the type of the underlying future. This is useful to","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":19509,"byte_end":19580,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ chain along a computation once a future has been resolved.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":19585,"byte_end":19647,"line_start":129,"line_end":129,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":19652,"byte_end":19655,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":19660,"byte_end":19731,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":19736,"byte_end":19807,"line_start":132,"line_end":132,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":19812,"byte_end":19833,"line_start":133,"line_end":133,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":19838,"byte_end":19841,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":19846,"byte_end":19860,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":19865,"byte_end":19868,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":19873,"byte_end":19880,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":19885,"byte_end":19926,"line_start":138,"line_end":138,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":19931,"byte_end":19966,"line_start":139,"line_end":139,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":19971,"byte_end":19974,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":19979,"byte_end":20008,"line_start":141,"line_end":141,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.map(|x| x + 3);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":20013,"byte_end":20056,"line_start":142,"line_end":142,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(new_future.await, 4);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":20061,"byte_end":20097,"line_start":143,"line_end":143,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":20102,"byte_end":20111,"line_start":144,"line_end":144,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":20116,"byte_end":20123,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":20531,"byte_end":20539,"line_start":159,"line_end":159,"column_start":8,"column_end":16},"name":"map_into","qualname":"::future::future::FutureExt::map_into","value":"pub fn map_into<U>(Self) -> MapInto<Self, U> where Self::Output: Into<U>,\nSelf: Sized","parent":{"krate":0,"index":132},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":20304,"byte_end":20379,"line_start":154,"line_end":154,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":20384,"byte_end":20407,"line_start":155,"line_end":155,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":20412,"byte_end":20415,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to calling `map(Into::into)` but allows naming","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":20420,"byte_end":20498,"line_start":157,"line_end":157,"column_start":5,"column_end":83}},{"value":"/ the return type.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":20503,"byte_end":20523,"line_start":158,"line_end":158,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":21551,"byte_end":21555,"line_start":191,"line_end":191,"column_start":8,"column_end":12},"name":"then","qualname":"::future::future::FutureExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where\nF: FnOnce(Self::Output) -> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":132},"children":[],"decl_id":null,"docs":" Chain on a computation for when a future finished, passing the result of\n the future to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a future finished, passing the result of","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":20698,"byte_end":20774,"line_start":167,"line_end":167,"column_start":5,"column_end":81}},{"value":"/ the future to the provided closure `f`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":20779,"byte_end":20822,"line_start":168,"line_end":168,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":20827,"byte_end":20830,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `Future` trait","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":20835,"byte_end":20906,"line_start":170,"line_end":170,"column_start":5,"column_end":76}},{"value":"/ and can represent some more work to be done before the composed future","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":20911,"byte_end":20985,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":20990,"byte_end":21006,"line_start":172,"line_end":172,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":21011,"byte_end":21014,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is only run *after* successful completion of the `self`","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":21019,"byte_end":21094,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/ future.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":21099,"byte_end":21110,"line_start":175,"line_end":175,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":21115,"byte_end":21118,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":21123,"byte_end":21194,"line_start":177,"line_end":177,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":21199,"byte_end":21225,"line_start":178,"line_end":178,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":21230,"byte_end":21233,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":21238,"byte_end":21252,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":21257,"byte_end":21260,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":21265,"byte_end":21272,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":21277,"byte_end":21318,"line_start":183,"line_end":183,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":21323,"byte_end":21358,"line_start":184,"line_end":184,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":21363,"byte_end":21366,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ let future_of_1 = async { 1 };","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":21371,"byte_end":21405,"line_start":186,"line_end":186,"column_start":5,"column_end":39}},{"value":"/ let future_of_4 = future_of_1.then(|x| async move { x + 3 });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":21410,"byte_end":21475,"line_start":187,"line_end":187,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(future_of_4.await, 4);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":21480,"byte_end":21517,"line_start":188,"line_end":188,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":21522,"byte_end":21531,"line_start":189,"line_end":189,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":21536,"byte_end":21543,"line_start":190,"line_end":190,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22425,"byte_end":22436,"line_start":222,"line_end":222,"column_start":8,"column_end":19},"name":"left_future","qualname":"::future::future::FutureExt::left_future","value":"pub fn left_future<B>(Self) -> Either<Self, B> where B: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":132},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the left-hand variant","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":21767,"byte_end":21842,"line_start":200,"line_end":200,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":21847,"byte_end":21868,"line_start":201,"line_end":201,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":21873,"byte_end":21876,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_future` method to write `if`","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":21881,"byte_end":21961,"line_start":203,"line_end":203,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":21966,"byte_end":22038,"line_start":204,"line_end":204,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22043,"byte_end":22046,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22051,"byte_end":22065,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22070,"byte_end":22073,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22078,"byte_end":22085,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22090,"byte_end":22131,"line_start":209,"line_end":209,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22136,"byte_end":22171,"line_start":210,"line_end":210,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22176,"byte_end":22179,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22184,"byte_end":22198,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/ let future = if x < 10 {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22203,"byte_end":22231,"line_start":213,"line_end":213,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22236,"byte_end":22272,"line_start":214,"line_end":214,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22277,"byte_end":22289,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22294,"byte_end":22332,"line_start":216,"line_end":216,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22337,"byte_end":22343,"line_start":217,"line_end":217,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22348,"byte_end":22351,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, true);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22356,"byte_end":22391,"line_start":219,"line_end":219,"column_start":5,"column_end":40}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22396,"byte_end":22405,"line_start":220,"line_end":220,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22410,"byte_end":22417,"line_start":221,"line_end":221,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23275,"byte_end":23287,"line_start":252,"line_end":252,"column_start":8,"column_end":20},"name":"right_future","qualname":"::future::future::FutureExt::right_future","value":"pub fn right_future<A>(Self) -> Either<A, Self> where A: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":132},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the right-hand variant","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22616,"byte_end":22692,"line_start":230,"line_end":230,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22697,"byte_end":22718,"line_start":231,"line_end":231,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22723,"byte_end":22726,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_future` method to write `if`","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22731,"byte_end":22810,"line_start":233,"line_end":233,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22815,"byte_end":22887,"line_start":234,"line_end":234,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22892,"byte_end":22895,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22900,"byte_end":22914,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22919,"byte_end":22922,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22927,"byte_end":22934,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22939,"byte_end":22980,"line_start":239,"line_end":239,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22985,"byte_end":23020,"line_start":240,"line_end":240,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23025,"byte_end":23028,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23033,"byte_end":23047,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/ let future = if x > 10 {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23052,"byte_end":23080,"line_start":243,"line_end":243,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23085,"byte_end":23121,"line_start":244,"line_end":244,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23126,"byte_end":23138,"line_start":245,"line_end":245,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23143,"byte_end":23181,"line_start":246,"line_end":246,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23186,"byte_end":23192,"line_start":247,"line_end":247,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23197,"byte_end":23200,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, false);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23205,"byte_end":23241,"line_start":249,"line_end":249,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23246,"byte_end":23255,"line_start":250,"line_end":250,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23260,"byte_end":23267,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":24066,"byte_end":24077,"line_start":278,"line_end":278,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::future::future::FutureExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":132},"children":[],"decl_id":null,"docs":" Convert this future into a single element stream.","sig":null,"attributes":[{"value":"/ Convert this future into a single element stream.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23468,"byte_end":23521,"line_start":260,"line_end":260,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23526,"byte_end":23529,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ The returned stream contains single success if this future resolves to","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23534,"byte_end":23608,"line_start":262,"line_end":262,"column_start":5,"column_end":79}},{"value":"/ success or single error if this future resolves into error.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23613,"byte_end":23676,"line_start":263,"line_end":263,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23681,"byte_end":23684,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23689,"byte_end":23703,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23708,"byte_end":23711,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23716,"byte_end":23723,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23728,"byte_end":23769,"line_start":268,"line_end":268,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23774,"byte_end":23809,"line_start":269,"line_end":269,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23814,"byte_end":23849,"line_start":270,"line_end":270,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23854,"byte_end":23857,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let future = async { 17 };","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23862,"byte_end":23892,"line_start":272,"line_end":272,"column_start":5,"column_end":35}},{"value":"/ let stream = future.into_stream();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23897,"byte_end":23935,"line_start":273,"line_end":273,"column_start":5,"column_end":43}},{"value":"/ let collected: Vec<_> = stream.collect().await;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23940,"byte_end":23991,"line_start":274,"line_end":274,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23996,"byte_end":24032,"line_start":275,"line_end":275,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":24037,"byte_end":24046,"line_start":276,"line_end":276,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":24051,"byte_end":24058,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":24942,"byte_end":24949,"line_start":307,"line_end":307,"column_start":8,"column_end":15},"name":"flatten","qualname":"::future::future::FutureExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Output: Future, Self: Sized","parent":{"krate":0,"index":132},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the output of this\n future is itself another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the output of this","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":24216,"byte_end":24280,"line_start":285,"line_end":285,"column_start":5,"column_end":69}},{"value":"/ future is itself another future.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":24285,"byte_end":24321,"line_start":286,"line_end":286,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":24326,"byte_end":24329,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This can be useful when combining futures together to flatten the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":24334,"byte_end":24403,"line_start":288,"line_end":288,"column_start":5,"column_end":74}},{"value":"/ computation out the final result.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":24408,"byte_end":24445,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":24450,"byte_end":24453,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ This method is roughly equivalent to `self.then(|x| x)`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":24458,"byte_end":24518,"line_start":291,"line_end":291,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":24523,"byte_end":24526,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":24531,"byte_end":24602,"line_start":293,"line_end":293,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":24607,"byte_end":24633,"line_start":294,"line_end":294,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":24638,"byte_end":24641,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":24646,"byte_end":24660,"line_start":296,"line_end":296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":24665,"byte_end":24668,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":24673,"byte_end":24680,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":24685,"byte_end":24726,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":24731,"byte_end":24766,"line_start":300,"line_end":300,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":24771,"byte_end":24774,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ let nested_future = async { async { 1 } };","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":24779,"byte_end":24825,"line_start":302,"line_end":302,"column_start":5,"column_end":51}},{"value":"/ let future = nested_future.flatten();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":24830,"byte_end":24871,"line_start":303,"line_end":303,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(future.await, 1);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":24876,"byte_end":24908,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":24913,"byte_end":24922,"line_start":305,"line_end":305,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":24927,"byte_end":24934,"line_start":306,"line_end":306,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":26054,"byte_end":26068,"line_start":341,"line_end":341,"column_start":8,"column_end":22},"name":"flatten_stream","qualname":"::future::future::FutureExt::flatten_stream","value":"pub fn flatten_stream(Self) -> FlattenStream<Self> where Self::Output: Stream,\nSelf: Sized","parent":{"krate":0,"index":132},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":25163,"byte_end":25238,"line_start":316,"line_end":316,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":25243,"byte_end":25266,"line_start":317,"line_end":317,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":25271,"byte_end":25274,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":25279,"byte_end":25351,"line_start":319,"line_end":319,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":25356,"byte_end":25429,"line_start":320,"line_end":320,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":25434,"byte_end":25448,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":25453,"byte_end":25456,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":25461,"byte_end":25531,"line_start":323,"line_end":323,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":25536,"byte_end":25554,"line_start":324,"line_end":324,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":25559,"byte_end":25562,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":25567,"byte_end":25581,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":25586,"byte_end":25589,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":25594,"byte_end":25601,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":25606,"byte_end":25647,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":25652,"byte_end":25687,"line_start":330,"line_end":330,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":25692,"byte_end":25735,"line_start":331,"line_end":331,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":25740,"byte_end":25743,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19];","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":25748,"byte_end":25788,"line_start":333,"line_end":333,"column_start":5,"column_end":45}},{"value":"/ let future_of_a_stream = async { stream::iter(stream_items) };","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":25793,"byte_end":25859,"line_start":334,"line_end":334,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":25864,"byte_end":25867,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.flatten_stream();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":25872,"byte_end":25925,"line_start":336,"line_end":336,"column_start":5,"column_end":58}},{"value":"/ let list: Vec<_> = stream.collect().await;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":25930,"byte_end":25976,"line_start":337,"line_end":337,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(list, vec![17, 18, 19]);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":25981,"byte_end":26020,"line_start":338,"line_end":338,"column_start":5,"column_end":44}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":26025,"byte_end":26034,"line_start":339,"line_end":339,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":26039,"byte_end":26046,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":27156,"byte_end":27160,"line_start":365,"line_end":365,"column_start":8,"column_end":12},"name":"fuse","qualname":"::future::future::FutureExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":132},"children":[],"decl_id":null,"docs":" Fuse a future such that `poll` will never again be called once it has\n completed. This method can be used to turn any `Future` into a\n `FusedFuture`.","sig":null,"attributes":[{"value":"/ Fuse a future such that `poll` will never again be called once it has","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":26261,"byte_end":26334,"line_start":349,"line_end":349,"column_start":5,"column_end":78}},{"value":"/ completed. This method can be used to turn any `Future` into a","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":26339,"byte_end":26405,"line_start":350,"line_end":350,"column_start":5,"column_end":71}},{"value":"/ `FusedFuture`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":26410,"byte_end":26428,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":26433,"byte_end":26436,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Normally, once a future has returned `Poll::Ready` from `poll`,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":26441,"byte_end":26508,"line_start":353,"line_end":353,"column_start":5,"column_end":72}},{"value":"/ any further calls could exhibit bad behavior such as blocking","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":26513,"byte_end":26578,"line_start":354,"line_end":354,"column_start":5,"column_end":70}},{"value":"/ forever, panicking, never returning, etc. If it is known that `poll`","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":26583,"byte_end":26655,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/ may be called too often then this method can be used to ensure that it","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":26660,"byte_end":26734,"line_start":356,"line_end":356,"column_start":5,"column_end":79}},{"value":"/ has defined semantics.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":26739,"byte_end":26765,"line_start":357,"line_end":357,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":26770,"byte_end":26773,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ If a `fuse`d future is `poll`ed after having returned `Poll::Ready`","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":26778,"byte_end":26849,"line_start":359,"line_end":359,"column_start":5,"column_end":76}},{"value":"/ previously, it will return `Poll::Pending`, from `poll` again (and will","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":26854,"byte_end":26929,"line_start":360,"line_end":360,"column_start":5,"column_end":80}},{"value":"/ continue to do so for all future calls to `poll`).","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":26934,"byte_end":26988,"line_start":361,"line_end":361,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":26993,"byte_end":26996,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ This combinator will drop the underlying future as soon as it has been","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":27001,"byte_end":27075,"line_start":363,"line_end":363,"column_start":5,"column_end":79}},{"value":"/ completed to ensure resources are reclaimed as soon as possible.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":27080,"byte_end":27148,"line_start":364,"line_end":364,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":28000,"byte_end":28007,"line_start":391,"line_end":391,"column_start":8,"column_end":15},"name":"inspect","qualname":"::future::future::FutureExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnOnce(&Self::Output)\n-> (), Self: Sized","parent":{"krate":0,"index":132},"children":[],"decl_id":null,"docs":" Do something with the output of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the output of a future before passing it on.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":27306,"byte_end":27372,"line_start":373,"line_end":373,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":27377,"byte_end":27380,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":27385,"byte_end":27460,"line_start":375,"line_end":375,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":27465,"byte_end":27538,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":27543,"byte_end":27612,"line_start":377,"line_end":377,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":27617,"byte_end":27667,"line_start":378,"line_end":378,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":27672,"byte_end":27675,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":27680,"byte_end":27694,"line_start":380,"line_end":380,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":27699,"byte_end":27702,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":27707,"byte_end":27714,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":27719,"byte_end":27760,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":27765,"byte_end":27800,"line_start":384,"line_end":384,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":27805,"byte_end":27808,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":27813,"byte_end":27842,"line_start":386,"line_end":386,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.inspect(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":27847,"byte_end":27925,"line_start":387,"line_end":387,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(new_future.await, 1);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":27930,"byte_end":27966,"line_start":388,"line_end":388,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":27971,"byte_end":27980,"line_start":389,"line_end":389,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":27985,"byte_end":27992,"line_start":390,"line_end":390,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":32402,"byte_end":32407,"line_start":517,"line_end":517,"column_start":8,"column_end":13},"name":"boxed","qualname":"::future::future::FutureExt::boxed","value":"pub fn boxed<'a>(Self) -> BoxFuture where Self: Sized + Send + 'a","parent":{"krate":0,"index":132},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":32173,"byte_end":32214,"line_start":512,"line_end":512,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":32219,"byte_end":32222,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":32227,"byte_end":32302,"line_start":514,"line_end":514,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":32307,"byte_end":32364,"line_start":515,"line_end":515,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":32369,"byte_end":32394,"line_start":516,"line_end":516,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":32867,"byte_end":32878,"line_start":531,"line_end":531,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::future::future::FutureExt::boxed_local","value":"pub fn boxed_local<'a>(Self) -> LocalBoxFuture where Self: Sized + 'a","parent":{"krate":0,"index":132},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":32566,"byte_end":32607,"line_start":524,"line_end":524,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":32612,"byte_end":32615,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":32620,"byte_end":32679,"line_start":526,"line_end":526,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":32684,"byte_end":32687,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":32692,"byte_end":32767,"line_start":528,"line_end":528,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":32772,"byte_end":32829,"line_start":529,"line_end":529,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":32834,"byte_end":32859,"line_start":530,"line_end":530,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":33168,"byte_end":33178,"line_start":540,"line_end":540,"column_start":8,"column_end":18},"name":"unit_error","qualname":"::future::future::FutureExt::unit_error","value":"pub fn unit_error(Self) -> UnitError<Self> where Self: Sized","parent":{"krate":0,"index":132},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":33035,"byte_end":33084,"line_start":538,"line_end":538,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":33089,"byte_end":33160,"line_start":539,"line_end":539,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":33463,"byte_end":33474,"line_start":549,"line_end":549,"column_start":8,"column_end":19},"name":"never_error","qualname":"::future::future::FutureExt::never_error","value":"pub fn never_error(Self) -> NeverError<Self> where Self: Sized","parent":{"krate":0,"index":132},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":33327,"byte_end":33376,"line_start":547,"line_end":547,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":33381,"byte_end":33455,"line_start":548,"line_end":548,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":33705,"byte_end":33715,"line_start":557,"line_end":557,"column_start":8,"column_end":18},"name":"poll_unpin","qualname":"::future::future::FutureExt::poll_unpin","value":"pub fn poll_unpin(&mut Self, &mut Context) -> Poll<Self::Output> where\nSelf: Unpin","parent":{"krate":0,"index":132},"children":[],"decl_id":null,"docs":" A convenience for calling `Future::poll` on `Unpin` future types.\n","sig":null,"attributes":[{"value":"/ A convenience for calling `Future::poll` on `Unpin` future types.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":33628,"byte_end":33697,"line_start":556,"line_end":556,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":35111,"byte_end":35123,"line_start":595,"line_end":595,"column_start":8,"column_end":20},"name":"now_or_never","qualname":"::future::future::FutureExt::now_or_never","value":"pub fn now_or_never(Self) -> Option<Self::Output> where Self: Sized","parent":{"krate":0,"index":132},"children":[],"decl_id":null,"docs":" Evaluates and consumes the future, returning the resulting output if\n the future is ready after the first call to `Future::poll`.","sig":null,"attributes":[{"value":"/ Evaluates and consumes the future, returning the resulting output if","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":33851,"byte_end":33923,"line_start":564,"line_end":564,"column_start":5,"column_end":77}},{"value":"/ the future is ready after the first call to `Future::poll`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":33928,"byte_end":33991,"line_start":565,"line_end":565,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":33996,"byte_end":33999,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ If `poll` instead returns `Poll::Pending`, `None` is returned.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":34004,"byte_end":34070,"line_start":567,"line_end":567,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":34075,"byte_end":34078,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ This method is useful in cases where immediacy is more important than","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":34083,"byte_end":34156,"line_start":569,"line_end":569,"column_start":5,"column_end":78}},{"value":"/ waiting for a result. It is also convenient for quickly obtaining","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":34161,"byte_end":34230,"line_start":570,"line_end":570,"column_start":5,"column_end":74}},{"value":"/ the value of a future that is known to always resolve immediately.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":34235,"byte_end":34305,"line_start":571,"line_end":571,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":34310,"byte_end":34313,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":34318,"byte_end":34332,"line_start":573,"line_end":573,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":34337,"byte_end":34340,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":34345,"byte_end":34352,"line_start":575,"line_end":575,"column_start":5,"column_end":12}},{"value":"/ # use futures::prelude::*;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":34357,"byte_end":34387,"line_start":576,"line_end":576,"column_start":5,"column_end":35}},{"value":"/ use futures::{future::ready, future::pending};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":34392,"byte_end":34442,"line_start":577,"line_end":577,"column_start":5,"column_end":55}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":34447,"byte_end":34486,"line_start":578,"line_end":578,"column_start":5,"column_end":44}},{"value":"/ let future_pending = pending::<&'static str>();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":34491,"byte_end":34542,"line_start":579,"line_end":579,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":34547,"byte_end":34550,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never(), Some(\"foobar\"));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":34555,"byte_end":34615,"line_start":581,"line_end":581,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(future_pending.now_or_never(), None);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":34620,"byte_end":34672,"line_start":582,"line_end":582,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":34677,"byte_end":34684,"line_start":583,"line_end":583,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":34689,"byte_end":34692,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ In cases where it is absolutely known that a future should always","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":34697,"byte_end":34766,"line_start":585,"line_end":585,"column_start":5,"column_end":74}},{"value":"/ resolve immediately and never return `Poll::Pending`, this method can","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":34771,"byte_end":34844,"line_start":586,"line_end":586,"column_start":5,"column_end":78}},{"value":"/ be combined with `expect()`:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":34849,"byte_end":34881,"line_start":587,"line_end":587,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":34886,"byte_end":34889,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":34894,"byte_end":34901,"line_start":589,"line_end":589,"column_start":5,"column_end":12}},{"value":"/ # use futures::{prelude::*, future::ready};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":34906,"byte_end":34953,"line_start":590,"line_end":590,"column_start":5,"column_end":52}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":34958,"byte_end":34997,"line_start":591,"line_end":591,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":35002,"byte_end":35005,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never().expect(\"Future not ready\"), \"foobar\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":35010,"byte_end":35091,"line_start":593,"line_end":593,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":35096,"byte_end":35103,"line_start":594,"line_end":594,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3499},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\into_future.rs","byte_start":66420,"byte_end":66430,"line_start":10,"line_end":10,"column_start":16,"column_end":26},"name":"IntoFuture","qualname":"::future::try_future::into_future::IntoFuture","value":"IntoFuture {  }","parent":null,"children":[{"krate":0,"index":3501}],"decl_id":null,"docs":" Future for the [`into_future`](super::TryFutureExt::into_future) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"StructVariant","id":{"krate":0,"index":3537},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\try_flatten.rs","byte_start":67415,"byte_end":67420,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"First","qualname":"::future::try_future::try_flatten::TryFlatten::First","value":"TryFlatten::First { f }","parent":{"krate":0,"index":3534},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3539},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\try_flatten.rs","byte_start":67449,"byte_end":67455,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::try_future::try_flatten::TryFlatten::Second","value":"TryFlatten::Second { f }","parent":{"krate":0,"index":3534},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3541},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\try_flatten.rs","byte_start":67484,"byte_end":67489,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::try_future::try_flatten::TryFlatten::Empty","value":"TryFlatten::Empty","parent":{"krate":0,"index":3534},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3534},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\try_flatten.rs","byte_start":67382,"byte_end":67392,"line_start":13,"line_end":13,"column_start":14,"column_end":24},"name":"TryFlatten","qualname":"::future::try_future::try_flatten::TryFlatten","value":"pub enum TryFlatten<Fut1, Fut2> {\n    First {\n        f: Fut1,\n    },\n    Second {\n        f: Fut2,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":3537},{"krate":0,"index":3539},{"krate":0,"index":3541}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3584},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\try_flatten_err.rs","byte_start":72614,"byte_end":72619,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"name":"First","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::First","value":"TryFlattenErr::First { f }","parent":{"krate":0,"index":3581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3586},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\try_flatten_err.rs","byte_start":72648,"byte_end":72654,"line_start":12,"line_end":12,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Second","value":"TryFlattenErr::Second { f }","parent":{"krate":0,"index":3581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3588},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\try_flatten_err.rs","byte_start":72683,"byte_end":72688,"line_start":13,"line_end":13,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Empty","value":"TryFlattenErr::Empty","parent":{"krate":0,"index":3581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3581},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\try_flatten_err.rs","byte_start":72578,"byte_end":72591,"line_start":10,"line_end":10,"column_start":14,"column_end":27},"name":"TryFlattenErr","qualname":"::future::try_future::try_flatten_err::TryFlattenErr","value":"pub enum TryFlattenErr<Fut1, Fut2> {\n    First {\n        f: Fut1,\n    },\n    Second {\n        f: Fut2,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":3584},{"krate":0,"index":3586},{"krate":0,"index":3588}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3627},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":45377,"byte_end":45387,"line_start":32,"line_end":32,"column_start":5,"column_end":15},"name":"TryFlatten","qualname":"::future::try_future::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":3630}],"decl_id":null,"docs":" Future for the [`try_flatten`](TryFutureExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3688},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":45635,"byte_end":45648,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"TryFlattenErr","qualname":"::future::try_future::TryFlattenErr","value":"TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":3691}],"decl_id":null,"docs":" Future for the [`try_flatten_err`](TryFutureExt::try_flatten_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3748},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":45916,"byte_end":45932,"line_start":46,"line_end":46,"column_start":5,"column_end":21},"name":"TryFlattenStream","qualname":"::future::try_future::TryFlattenStream","value":"TryFlattenStream {  }","parent":null,"children":[{"krate":0,"index":3750}],"decl_id":null,"docs":" Future for the [`try_flatten_stream`](TryFutureExt::try_flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3799},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":46520,"byte_end":46527,"line_start":63,"line_end":63,"column_start":5,"column_end":12},"name":"AndThen","qualname":"::future::try_future::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":3803}],"decl_id":null,"docs":" Future for the [`and_then`](TryFutureExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3873},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":46767,"byte_end":46773,"line_start":70,"line_end":70,"column_start":5,"column_end":11},"name":"OrElse","qualname":"::future::try_future::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":3877}],"decl_id":null,"docs":" Future for the [`or_else`](TryFutureExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3946},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":47023,"byte_end":47030,"line_start":77,"line_end":77,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::future::try_future::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":3949}],"decl_id":null,"docs":" Future for the [`err_into`](TryFutureExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4007},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":47238,"byte_end":47244,"line_start":84,"line_end":84,"column_start":5,"column_end":11},"name":"OkInto","qualname":"::future::try_future::OkInto","value":"OkInto {  }","parent":null,"children":[{"krate":0,"index":4010}],"decl_id":null,"docs":" Future for the [`ok_into`](TryFutureExt::ok_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4068},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":47463,"byte_end":47472,"line_start":91,"line_end":91,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::future::try_future::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":4071}],"decl_id":null,"docs":" Future for the [`inspect_ok`](super::TryFutureExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4129},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":47744,"byte_end":47754,"line_start":98,"line_end":98,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::future::try_future::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":4132}],"decl_id":null,"docs":" Future for the [`inspect_err`](super::TryFutureExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4190},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":48127,"byte_end":48132,"line_start":108,"line_end":108,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::future::try_future::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":4193}],"decl_id":null,"docs":" Future for the [`map_ok`](TryFutureExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4251},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":48373,"byte_end":48379,"line_start":115,"line_end":115,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::future::try_future::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":4254}],"decl_id":null,"docs":" Future for the [`map_err`](TryFutureExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4313},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":48636,"byte_end":48647,"line_start":122,"line_end":122,"column_start":5,"column_end":16},"name":"MapOkOrElse","qualname":"::future::try_future::MapOkOrElse","value":"MapOkOrElse {  }","parent":null,"children":[{"krate":0,"index":4317}],"decl_id":null,"docs":" Future for the [`map_ok_or_else`](TryFutureExt::map_ok_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4386},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":48931,"byte_end":48943,"line_start":129,"line_end":129,"column_start":5,"column_end":17},"name":"UnwrapOrElse","qualname":"::future::try_future::UnwrapOrElse","value":"UnwrapOrElse {  }","parent":null,"children":[{"krate":0,"index":4389}],"decl_id":null,"docs":" Future for the [`unwrap_or_else`](TryFutureExt::unwrap_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":277},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":49233,"byte_end":49245,"line_start":137,"line_end":137,"column_start":11,"column_end":23},"name":"TryFutureExt","qualname":"::future::try_future::TryFutureExt","value":"TryFutureExt: TryFuture","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":281},{"krate":0,"index":285},{"krate":0,"index":288},{"krate":0,"index":290},{"krate":0,"index":292},{"krate":0,"index":295},{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":306},{"krate":0,"index":307}],"decl_id":null,"docs":" Adapters specific to [`Result`]-returning futures\n","sig":null,"attributes":[{"value":"/ Adapters specific to [`Result`]-returning futures","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":49169,"byte_end":49222,"line_start":136,"line_end":136,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51955,"byte_end":51961,"line_start":217,"line_end":217,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::future::try_future::TryFutureExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where F: FnOnce(Self::Ok) -> T,\nSelf: Sized","parent":{"krate":0,"index":277},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":50583,"byte_end":50641,"line_start":179,"line_end":179,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":50646,"byte_end":50649,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Ok`](TryFuture::Ok) type of the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":50654,"byte_end":50729,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ future into a different type. It is similar to the [`Result::map`]","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":50734,"byte_end":50804,"line_start":182,"line_end":182,"column_start":5,"column_end":75}},{"value":"/ method. You can use this method to chain along a computation once the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":50809,"byte_end":50882,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ future has been resolved.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":50887,"byte_end":50916,"line_start":184,"line_end":184,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":50921,"byte_end":50924,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":50929,"byte_end":51004,"line_start":186,"line_end":186,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51009,"byte_end":51084,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51089,"byte_end":51136,"line_start":188,"line_end":188,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51141,"byte_end":51144,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51149,"byte_end":51224,"line_start":190,"line_end":190,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51229,"byte_end":51255,"line_start":191,"line_end":191,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51260,"byte_end":51263,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51268,"byte_end":51282,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51287,"byte_end":51290,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51295,"byte_end":51302,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51307,"byte_end":51345,"line_start":196,"line_end":196,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51350,"byte_end":51353,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51358,"byte_end":51399,"line_start":198,"line_end":198,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51404,"byte_end":51449,"line_start":199,"line_end":199,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51454,"byte_end":51496,"line_start":200,"line_end":200,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51501,"byte_end":51537,"line_start":201,"line_end":201,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51542,"byte_end":51551,"line_start":202,"line_end":202,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51556,"byte_end":51563,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51568,"byte_end":51571,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_ok`](TryFutureExt::map_ok) on an errored future has no","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51576,"byte_end":51648,"line_start":205,"line_end":205,"column_start":5,"column_end":77}},{"value":"/ effect:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51653,"byte_end":51664,"line_start":206,"line_end":206,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51669,"byte_end":51672,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51677,"byte_end":51684,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51689,"byte_end":51727,"line_start":209,"line_end":209,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51732,"byte_end":51735,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51740,"byte_end":51781,"line_start":211,"line_end":211,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51786,"byte_end":51832,"line_start":212,"line_end":212,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51837,"byte_end":51879,"line_start":213,"line_end":213,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51884,"byte_end":51921,"line_start":214,"line_end":214,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51926,"byte_end":51935,"line_start":215,"line_end":215,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51940,"byte_end":51947,"line_start":216,"line_end":216,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":53520,"byte_end":53534,"line_start":257,"line_end":257,"column_start":8,"column_end":22},"name":"map_ok_or_else","qualname":"::future::try_future::TryFutureExt::map_ok_or_else","value":"pub fn map_ok_or_else<T, E, F>(Self, E, F) -> MapOkOrElse<Self, F, E> where\nF: FnOnce(Self::Ok) -> T, E: FnOnce(Self::Error) -> T, Self: Sized","parent":{"krate":0,"index":277},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value, and permits for error handling resulting in the same type.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value, and permits for error handling resulting in the same type.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":52152,"byte_end":52269,"line_start":225,"line_end":225,"column_start":5,"column_end":122}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":52274,"byte_end":52277,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ This method can be used to coalesce your [`Ok`](TryFuture::Ok) type and [`Error`](TryFuture::Error) into another type,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":52282,"byte_end":52404,"line_start":227,"line_end":227,"column_start":5,"column_end":127}},{"value":"/ where that type is the same for both outcomes.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":52409,"byte_end":52459,"line_start":228,"line_end":228,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":52464,"byte_end":52467,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":52472,"byte_end":52547,"line_start":230,"line_end":230,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":52552,"byte_end":52627,"line_start":231,"line_end":231,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":52632,"byte_end":52679,"line_start":232,"line_end":232,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":52684,"byte_end":52687,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ The provided closure `e` will only be called if this future is resolved","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":52692,"byte_end":52767,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":52772,"byte_end":52847,"line_start":235,"line_end":235,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":52852,"byte_end":52899,"line_start":236,"line_end":236,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":52904,"byte_end":52907,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":52912,"byte_end":52987,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":52992,"byte_end":53018,"line_start":239,"line_end":239,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":53023,"byte_end":53026,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":53031,"byte_end":53045,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":53050,"byte_end":53053,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":53058,"byte_end":53065,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":53070,"byte_end":53108,"line_start":244,"line_end":244,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":53113,"byte_end":53116,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":53121,"byte_end":53162,"line_start":246,"line_end":246,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(5) };","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":53167,"byte_end":53212,"line_start":247,"line_end":247,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":53217,"byte_end":53278,"line_start":248,"line_end":248,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 8);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":53283,"byte_end":53315,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":53320,"byte_end":53323,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<i32, i32>(5) };","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":53328,"byte_end":53374,"line_start":251,"line_end":251,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":53379,"byte_end":53440,"line_start":252,"line_end":252,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 10);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":53445,"byte_end":53478,"line_start":253,"line_end":253,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":53483,"byte_end":53492,"line_start":254,"line_end":254,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":53497,"byte_end":53504,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":53509,"byte_end":53512,"line_start":256,"line_end":256,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":55217,"byte_end":55224,"line_start":305,"line_end":305,"column_start":8,"column_end":15},"name":"map_err","qualname":"::future::try_future::TryFutureExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where F: FnOnce(Self::Error)\n-> E, Self: Sized","parent":{"krate":0,"index":277},"children":[],"decl_id":null,"docs":" Maps this future's error value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's error value to a different value.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":53768,"byte_end":53824,"line_start":266,"line_end":266,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":53829,"byte_end":53832,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Error`](TryFuture::Error) type","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":53837,"byte_end":53911,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ of the future into a different type. It is similar to the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":53916,"byte_end":53977,"line_start":269,"line_end":269,"column_start":5,"column_end":66}},{"value":"/ [`Result::map_err`] method. You can use this method for example to","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":53982,"byte_end":54052,"line_start":270,"line_end":270,"column_start":5,"column_end":75}},{"value":"/ ensure that futures have the same [`Error`](TryFuture::Error) type when","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54057,"byte_end":54132,"line_start":271,"line_end":271,"column_start":5,"column_end":80}},{"value":"/ using [`select!`] or [`join!`].","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54137,"byte_end":54172,"line_start":272,"line_end":272,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54177,"byte_end":54180,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54185,"byte_end":54260,"line_start":274,"line_end":274,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54265,"byte_end":54340,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54345,"byte_end":54392,"line_start":276,"line_end":276,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54397,"byte_end":54400,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54405,"byte_end":54480,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54485,"byte_end":54511,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54516,"byte_end":54519,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54524,"byte_end":54538,"line_start":281,"line_end":281,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54543,"byte_end":54546,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54551,"byte_end":54558,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54563,"byte_end":54601,"line_start":284,"line_end":284,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54606,"byte_end":54609,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54614,"byte_end":54655,"line_start":286,"line_end":286,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54660,"byte_end":54706,"line_start":287,"line_end":287,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54711,"byte_end":54754,"line_start":288,"line_end":288,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54759,"byte_end":54796,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54801,"byte_end":54810,"line_start":290,"line_end":290,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54815,"byte_end":54822,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54827,"byte_end":54830,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_err`](TryFutureExt::map_err) on a successful future has","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54835,"byte_end":54908,"line_start":293,"line_end":293,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54913,"byte_end":54927,"line_start":294,"line_end":294,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54932,"byte_end":54935,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54940,"byte_end":54947,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54952,"byte_end":54990,"line_start":297,"line_end":297,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54995,"byte_end":54998,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":55003,"byte_end":55044,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":55049,"byte_end":55094,"line_start":300,"line_end":300,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":55099,"byte_end":55142,"line_start":301,"line_end":301,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":55147,"byte_end":55183,"line_start":302,"line_end":302,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":55188,"byte_end":55197,"line_start":303,"line_end":303,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":55202,"byte_end":55209,"line_start":304,"line_end":304,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":56314,"byte_end":56322,"line_start":335,"line_end":335,"column_start":8,"column_end":16},"name":"err_into","qualname":"::future::try_future::TryFutureExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":277},"children":[],"decl_id":null,"docs":" Maps this future's [`Error`](TryFuture::Error) to a new error type\n using the [`Into`](std::convert::Into) trait.","sig":null,"attributes":[{"value":"/ Maps this future's [`Error`](TryFuture::Error) to a new error type","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":55417,"byte_end":55487,"line_start":313,"line_end":313,"column_start":5,"column_end":75}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":55492,"byte_end":55541,"line_start":314,"line_end":314,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":55546,"byte_end":55549,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ This method does for futures what the `?`-operator does for","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":55554,"byte_end":55617,"line_start":316,"line_end":316,"column_start":5,"column_end":68}},{"value":"/ [`Result`]: It lets the compiler infer the type of the resulting","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":55622,"byte_end":55690,"line_start":317,"line_end":317,"column_start":5,"column_end":73}},{"value":"/ error. Just as [`map_err`](TryFutureExt::map_err), this is useful for","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":55695,"byte_end":55768,"line_start":318,"line_end":318,"column_start":5,"column_end":78}},{"value":"/ example to ensure that futures have the same [`Error`](TryFuture::Error)","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":55773,"byte_end":55849,"line_start":319,"line_end":319,"column_start":5,"column_end":81}},{"value":"/ type when using [`select!`] or [`join!`].","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":55854,"byte_end":55899,"line_start":320,"line_end":320,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":55904,"byte_end":55907,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":55912,"byte_end":55987,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":55992,"byte_end":56018,"line_start":323,"line_end":323,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":56023,"byte_end":56026,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":56031,"byte_end":56045,"line_start":325,"line_end":325,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":56050,"byte_end":56053,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":56058,"byte_end":56065,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":56070,"byte_end":56108,"line_start":328,"line_end":328,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":56113,"byte_end":56116,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":56121,"byte_end":56162,"line_start":330,"line_end":330,"column_start":5,"column_end":46}},{"value":"/ let future_err_u8 = async { Err::<(), u8>(1) };","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":56167,"byte_end":56218,"line_start":331,"line_end":331,"column_start":5,"column_end":56}},{"value":"/ let future_err_i32 = future_err_u8.err_into::<i32>();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":56223,"byte_end":56280,"line_start":332,"line_end":332,"column_start":5,"column_end":62}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":56285,"byte_end":56294,"line_start":333,"line_end":333,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":56299,"byte_end":56306,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":56618,"byte_end":56625,"line_start":345,"line_end":345,"column_start":8,"column_end":15},"name":"ok_into","qualname":"::future::try_future::TryFutureExt::ok_into","value":"pub fn ok_into<U>(Self) -> OkInto<Self, U> where Self: Sized,\nSelf::Ok: Into<U>","parent":{"krate":0,"index":277},"children":[],"decl_id":null,"docs":" Maps this future's [`Ok`](TryFuture::Ok) to a new type\n using the [`Into`](std::convert::Into) trait.\n","sig":null,"attributes":[{"value":"/ Maps this future's [`Ok`](TryFuture::Ok) to a new type","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":56498,"byte_end":56556,"line_start":343,"line_end":343,"column_start":5,"column_end":63}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":56561,"byte_end":56610,"line_start":344,"line_end":344,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":58180,"byte_end":58188,"line_start":389,"line_end":389,"column_start":8,"column_end":16},"name":"and_then","qualname":"::future::try_future::TryFutureExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnOnce(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":277},"children":[],"decl_id":null,"docs":" Executes another future after this one resolves successfully. The\n success value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future after this one resolves successfully. The","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":56799,"byte_end":56868,"line_start":353,"line_end":353,"column_start":5,"column_end":74}},{"value":"/ success value is passed to a closure to create this subsequent future.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":56873,"byte_end":56947,"line_start":354,"line_end":354,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":56952,"byte_end":56955,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":56960,"byte_end":57035,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If this future resolves to an [`Err`], panics, or is","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57040,"byte_end":57110,"line_start":357,"line_end":357,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57115,"byte_end":57180,"line_start":358,"line_end":358,"column_start":5,"column_end":70}},{"value":"/ [`Error`](TryFuture::Error) type of this future and the future","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57185,"byte_end":57251,"line_start":359,"line_end":359,"column_start":5,"column_end":71}},{"value":"/ returned by `f` have to match.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57256,"byte_end":57290,"line_start":360,"line_end":360,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57295,"byte_end":57298,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57303,"byte_end":57378,"line_start":362,"line_end":362,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57383,"byte_end":57409,"line_start":363,"line_end":363,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57414,"byte_end":57417,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57422,"byte_end":57436,"line_start":365,"line_end":365,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57441,"byte_end":57444,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57449,"byte_end":57456,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57461,"byte_end":57499,"line_start":368,"line_end":368,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57504,"byte_end":57507,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57512,"byte_end":57553,"line_start":370,"line_end":370,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57558,"byte_end":57603,"line_start":371,"line_end":371,"column_start":5,"column_end":50}},{"value":"/ let future = future.and_then(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57608,"byte_end":57683,"line_start":372,"line_end":372,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57688,"byte_end":57724,"line_start":373,"line_end":373,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57729,"byte_end":57738,"line_start":374,"line_end":374,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57743,"byte_end":57750,"line_start":375,"line_end":375,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57755,"byte_end":57758,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Calling [`and_then`](TryFutureExt::and_then) on an errored future has no","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57763,"byte_end":57839,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ effect:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57844,"byte_end":57855,"line_start":378,"line_end":378,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57860,"byte_end":57863,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57868,"byte_end":57875,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57880,"byte_end":57918,"line_start":381,"line_end":381,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57923,"byte_end":57926,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57931,"byte_end":57972,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57977,"byte_end":58023,"line_start":384,"line_end":384,"column_start":5,"column_end":51}},{"value":"/ let future = future.and_then(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":58028,"byte_end":58104,"line_start":385,"line_end":385,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":58109,"byte_end":58146,"line_start":386,"line_end":386,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":58151,"byte_end":58160,"line_start":387,"line_end":387,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":58165,"byte_end":58172,"line_start":388,"line_end":388,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59809,"byte_end":59816,"line_start":434,"line_end":434,"column_start":8,"column_end":15},"name":"or_else","qualname":"::future::try_future::TryFutureExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnOnce(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":277},"children":[],"decl_id":null,"docs":" Executes another future if this one resolves to an error. The\n error value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future if this one resolves to an error. The","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":58442,"byte_end":58507,"line_start":398,"line_end":398,"column_start":5,"column_end":70}},{"value":"/ error value is passed to a closure to create this subsequent future.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":58512,"byte_end":58584,"line_start":399,"line_end":399,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":58589,"byte_end":58592,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":58597,"byte_end":58672,"line_start":401,"line_end":401,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If this future resolves to an [`Ok`], panics, or is","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":58677,"byte_end":58747,"line_start":402,"line_end":402,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":58752,"byte_end":58817,"line_start":403,"line_end":403,"column_start":5,"column_end":70}},{"value":"/ [`Ok`](TryFuture::Ok) type of this future and the future returned by `f`","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":58822,"byte_end":58898,"line_start":404,"line_end":404,"column_start":5,"column_end":81}},{"value":"/ have to match.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":58903,"byte_end":58921,"line_start":405,"line_end":405,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":58926,"byte_end":58929,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":58934,"byte_end":59009,"line_start":407,"line_end":407,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59014,"byte_end":59040,"line_start":408,"line_end":408,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59045,"byte_end":59048,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59053,"byte_end":59067,"line_start":410,"line_end":410,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59072,"byte_end":59075,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59080,"byte_end":59087,"line_start":412,"line_end":412,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59092,"byte_end":59130,"line_start":413,"line_end":413,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59135,"byte_end":59138,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59143,"byte_end":59184,"line_start":415,"line_end":415,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59189,"byte_end":59235,"line_start":416,"line_end":416,"column_start":5,"column_end":51}},{"value":"/ let future = future.or_else(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59240,"byte_end":59315,"line_start":417,"line_end":417,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59320,"byte_end":59357,"line_start":418,"line_end":418,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59362,"byte_end":59371,"line_start":419,"line_end":419,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59376,"byte_end":59383,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59388,"byte_end":59391,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ Calling [`or_else`](TryFutureExt::or_else) on a successful future has","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59396,"byte_end":59469,"line_start":422,"line_end":422,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59474,"byte_end":59488,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59493,"byte_end":59496,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59501,"byte_end":59508,"line_start":425,"line_end":425,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59513,"byte_end":59551,"line_start":426,"line_end":426,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59556,"byte_end":59559,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59564,"byte_end":59605,"line_start":428,"line_end":428,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59610,"byte_end":59655,"line_start":429,"line_end":429,"column_start":5,"column_end":50}},{"value":"/ let future = future.or_else(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59660,"byte_end":59734,"line_start":430,"line_end":430,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59739,"byte_end":59775,"line_start":431,"line_end":431,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59780,"byte_end":59789,"line_start":432,"line_end":432,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59794,"byte_end":59801,"line_start":433,"line_end":433,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":60792,"byte_end":60802,"line_start":461,"line_end":461,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::future::try_future::TryFutureExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnOnce(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":277},"children":[],"decl_id":null,"docs":" Do something with the success value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of a future before passing it on.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":60065,"byte_end":60138,"line_start":443,"line_end":443,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":60143,"byte_end":60146,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":60151,"byte_end":60226,"line_start":445,"line_end":445,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":60231,"byte_end":60304,"line_start":446,"line_end":446,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":60309,"byte_end":60378,"line_start":447,"line_end":447,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_ok`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":60383,"byte_end":60436,"line_start":448,"line_end":448,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":60441,"byte_end":60444,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":60449,"byte_end":60463,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":60468,"byte_end":60471,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":60476,"byte_end":60483,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":60488,"byte_end":60529,"line_start":453,"line_end":453,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":60534,"byte_end":60572,"line_start":454,"line_end":454,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":60577,"byte_end":60580,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let future = async { Ok::<_, ()>(1) };","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":60585,"byte_end":60627,"line_start":456,"line_end":456,"column_start":5,"column_end":47}},{"value":"/ let new_future = future.inspect_ok(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":60632,"byte_end":60713,"line_start":457,"line_end":457,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(new_future.await, Ok(1));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":60718,"byte_end":60758,"line_start":458,"line_end":458,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":60763,"byte_end":60772,"line_start":459,"line_end":459,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":60777,"byte_end":60784,"line_start":460,"line_end":460,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":61728,"byte_end":61739,"line_start":487,"line_end":487,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::future::try_future::TryFutureExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnOnce(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":277},"children":[],"decl_id":null,"docs":" Do something with the error value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of a future before passing it on.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":61001,"byte_end":61072,"line_start":469,"line_end":469,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":61077,"byte_end":61080,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":61085,"byte_end":61160,"line_start":471,"line_end":471,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":61165,"byte_end":61238,"line_start":472,"line_end":472,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":61243,"byte_end":61312,"line_start":473,"line_end":473,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_err`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":61317,"byte_end":61371,"line_start":474,"line_end":474,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":61376,"byte_end":61379,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":61384,"byte_end":61398,"line_start":476,"line_end":476,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":61403,"byte_end":61406,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":61411,"byte_end":61418,"line_start":478,"line_end":478,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":61423,"byte_end":61464,"line_start":479,"line_end":479,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":61469,"byte_end":61507,"line_start":480,"line_end":480,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":61512,"byte_end":61515,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<(), _>(1) };","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":61520,"byte_end":61563,"line_start":482,"line_end":482,"column_start":5,"column_end":48}},{"value":"/ let new_future = future.inspect_err(|&x| println!(\"about to error: {}\", x));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":61568,"byte_end":61648,"line_start":483,"line_end":483,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(new_future.await, Err(1));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":61653,"byte_end":61694,"line_start":484,"line_end":484,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":61699,"byte_end":61708,"line_start":485,"line_end":485,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":61713,"byte_end":61720,"line_start":486,"line_end":486,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":62124,"byte_end":62135,"line_start":499,"line_end":499,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::future::try_future::TryFutureExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self, Self::Ok> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":277},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":61943,"byte_end":62018,"line_start":495,"line_end":495,"column_start":5,"column_end":80}},{"value":"/ future is another future.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":62023,"byte_end":62052,"line_start":496,"line_end":496,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":62057,"byte_end":62060,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `future.and_then(|x| x)`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":62065,"byte_end":62116,"line_start":498,"line_end":498,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":63244,"byte_end":63262,"line_start":532,"line_end":532,"column_start":8,"column_end":26},"name":"try_flatten_stream","qualname":"::future::try_future::TryFutureExt::try_flatten_stream","value":"pub fn try_flatten_stream(Self) -> TryFlattenStream<Self> where\nSelf::Ok: TryStream<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":277},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":62300,"byte_end":62375,"line_start":507,"line_end":507,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":62380,"byte_end":62403,"line_start":508,"line_end":508,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":62408,"byte_end":62411,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":62416,"byte_end":62488,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":62493,"byte_end":62566,"line_start":511,"line_end":511,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":62571,"byte_end":62585,"line_start":512,"line_end":512,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":62590,"byte_end":62593,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":62598,"byte_end":62668,"line_start":514,"line_end":514,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":62673,"byte_end":62691,"line_start":515,"line_end":515,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":62696,"byte_end":62699,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":62704,"byte_end":62718,"line_start":517,"line_end":517,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":62723,"byte_end":62726,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":62731,"byte_end":62738,"line_start":519,"line_end":519,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":62743,"byte_end":62784,"line_start":520,"line_end":520,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":62789,"byte_end":62827,"line_start":521,"line_end":521,"column_start":5,"column_end":43}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":62832,"byte_end":62878,"line_start":522,"line_end":522,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":62883,"byte_end":62886,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19].into_iter().map(Ok);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":62891,"byte_end":62951,"line_start":524,"line_end":524,"column_start":5,"column_end":65}},{"value":"/ let future_of_a_stream = async { Ok::<_, ()>(stream::iter(stream_items)) };","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":62956,"byte_end":63035,"line_start":525,"line_end":525,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":63040,"byte_end":63043,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.try_flatten_stream();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":63048,"byte_end":63105,"line_start":527,"line_end":527,"column_start":5,"column_end":62}},{"value":"/ let list = stream.try_collect::<Vec<_>>().await;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":63110,"byte_end":63162,"line_start":528,"line_end":528,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(list, Ok(vec![17, 18, 19]));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":63167,"byte_end":63210,"line_start":529,"line_end":529,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":63215,"byte_end":63224,"line_start":530,"line_end":530,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":63229,"byte_end":63236,"line_start":531,"line_end":531,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":64352,"byte_end":64366,"line_start":564,"line_end":564,"column_start":8,"column_end":22},"name":"unwrap_or_else","qualname":"::future::try_future::TryFutureExt::unwrap_or_else","value":"pub fn unwrap_or_else<F>(Self, F) -> UnwrapOrElse<Self, F> where Self: Sized,\nF: FnOnce(Self::Error) -> Self::Ok","parent":{"krate":0,"index":277},"children":[],"decl_id":null,"docs":" Unwraps this future's ouput, producing a future with this future's\n [`Ok`](TryFuture::Ok) type as its\n [`Output`](std::future::Future::Output) type.","sig":null,"attributes":[{"value":"/ Unwraps this future's ouput, producing a future with this future's","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":63522,"byte_end":63592,"line_start":542,"line_end":542,"column_start":5,"column_end":75}},{"value":"/ [`Ok`](TryFuture::Ok) type as its","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":63597,"byte_end":63634,"line_start":543,"line_end":543,"column_start":5,"column_end":42}},{"value":"/ [`Output`](std::future::Future::Output) type.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":63639,"byte_end":63688,"line_start":544,"line_end":544,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":63693,"byte_end":63696,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ If this future is resolved successfully, the returned future will","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":63701,"byte_end":63770,"line_start":546,"line_end":546,"column_start":5,"column_end":74}},{"value":"/ contain the original future's success value as output. Otherwise, the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":63775,"byte_end":63848,"line_start":547,"line_end":547,"column_start":5,"column_end":78}},{"value":"/ closure `f` is called with the error value to produce an alternate","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":63853,"byte_end":63923,"line_start":548,"line_end":548,"column_start":5,"column_end":75}},{"value":"/ success value.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":63928,"byte_end":63946,"line_start":549,"line_end":549,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":63951,"byte_end":63954,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ This method is similar to the [`Result::unwrap_or_else`] method.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":63959,"byte_end":64027,"line_start":551,"line_end":551,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":64032,"byte_end":64035,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":64040,"byte_end":64054,"line_start":553,"line_end":553,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":64059,"byte_end":64062,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":64067,"byte_end":64074,"line_start":555,"line_end":555,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":64079,"byte_end":64117,"line_start":556,"line_end":556,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":64122,"byte_end":64125,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":64130,"byte_end":64171,"line_start":558,"line_end":558,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<(), &str>(\"Boom!\") };","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":64176,"byte_end":64228,"line_start":559,"line_end":559,"column_start":5,"column_end":57}},{"value":"/ let future = future.unwrap_or_else(|_| ());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":64233,"byte_end":64280,"line_start":560,"line_end":560,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(future.await, ());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":64285,"byte_end":64318,"line_start":561,"line_end":561,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":64323,"byte_end":64332,"line_start":562,"line_end":562,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":64337,"byte_end":64344,"line_start":563,"line_end":563,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":65620,"byte_end":65631,"line_start":604,"line_end":604,"column_start":8,"column_end":19},"name":"into_future","qualname":"::future::try_future::TryFutureExt::into_future","value":"pub fn into_future(Self) -> IntoFuture<Self> where Self: Sized","parent":{"krate":0,"index":277},"children":[],"decl_id":null,"docs":" Wraps a [`TryFuture`] into a type that implements\n [`Future`](std::future::Future).","sig":null,"attributes":[{"value":"/ Wraps a [`TryFuture`] into a type that implements","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":64919,"byte_end":64972,"line_start":583,"line_end":583,"column_start":5,"column_end":58}},{"value":"/ [`Future`](std::future::Future).","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":64977,"byte_end":65013,"line_start":584,"line_end":584,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":65018,"byte_end":65021,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ [`TryFuture`]s currently do not implement the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":65026,"byte_end":65075,"line_start":586,"line_end":586,"column_start":5,"column_end":54}},{"value":"/ [`Future`](std::future::Future) trait due to limitations of the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":65080,"byte_end":65147,"line_start":587,"line_end":587,"column_start":5,"column_end":72}},{"value":"/ compiler.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":65152,"byte_end":65165,"line_start":588,"line_end":588,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":65170,"byte_end":65173,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":65178,"byte_end":65192,"line_start":590,"line_end":590,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":65197,"byte_end":65200,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":65205,"byte_end":65212,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"/ use futures::future::{Future, TryFuture, TryFutureExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":65217,"byte_end":65276,"line_start":593,"line_end":593,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":65281,"byte_end":65284,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":65289,"byte_end":65308,"line_start":595,"line_end":595,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":65313,"byte_end":65331,"line_start":596,"line_end":596,"column_start":5,"column_end":23}},{"value":"/ fn make_try_future() -> impl TryFuture<Ok = T, Error = E> { // ... }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":65336,"byte_end":65408,"line_start":597,"line_end":597,"column_start":5,"column_end":77}},{"value":"/ # async { Ok::<i32, ()>(1) }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":65413,"byte_end":65445,"line_start":598,"line_end":598,"column_start":5,"column_end":37}},{"value":"/ # }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":65450,"byte_end":65457,"line_start":599,"line_end":599,"column_start":5,"column_end":12}},{"value":"/ fn take_future(future: impl Future<Output = Result<T, E>>) { /* ... */ }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":65462,"byte_end":65538,"line_start":600,"line_end":600,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":65543,"byte_end":65546,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ take_future(make_try_future().into_future());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":65551,"byte_end":65600,"line_start":602,"line_end":602,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":65605,"byte_end":65612,"line_start":603,"line_end":603,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":65890,"byte_end":65904,"line_start":613,"line_end":613,"column_start":8,"column_end":22},"name":"try_poll_unpin","qualname":"::future::try_future::TryFutureExt::try_poll_unpin","value":"pub fn try_poll_unpin(&mut Self, &mut Context)\n-> Poll<Result<Self::Ok, Self::Error>> where Self: Unpin","parent":{"krate":0,"index":277},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]\n future types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":65787,"byte_end":65860,"line_start":611,"line_end":611,"column_start":5,"column_end":78}},{"value":"/ future types.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":65865,"byte_end":65882,"line_start":612,"line_end":612,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":4444},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":74387,"byte_end":74391,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Lazy","qualname":"::future::lazy::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":4446}],"decl_id":null,"docs":" Future for the [`lazy`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`lazy`] function.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":74253,"byte_end":74290,"line_start":5,"line_end":5,"column_start":1,"column_end":38}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":74308,"byte_end":74375,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":333},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":74932,"byte_end":74936,"line_start":34,"line_end":34,"column_start":8,"column_end":12},"name":"lazy","qualname":"::future::lazy::lazy","value":"pub fn lazy<F, R>(F) -> Lazy<F> where F: FnOnce(&mut Context) -> R","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future that allows delayed execution of a closure.","sig":null,"attributes":[{"value":"/ Creates a new future that allows delayed execution of a closure.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":74495,"byte_end":74563,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":74564,"byte_end":74567,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The provided closure is only run once the future is polled.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":74568,"byte_end":74631,"line_start":17,"line_end":17,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":74632,"byte_end":74635,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":74636,"byte_end":74650,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":74651,"byte_end":74654,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":74655,"byte_end":74662,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":74663,"byte_end":74704,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":74705,"byte_end":74729,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":74730,"byte_end":74733,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let a = future::lazy(|_| 1);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":74734,"byte_end":74766,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":74767,"byte_end":74794,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":74795,"byte_end":74798,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let b = future::lazy(|_| -> i32 {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":74799,"byte_end":74836,"line_start":28,"line_end":28,"column_start":1,"column_end":38}},{"value":"/     panic!(\"oh no!\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":74837,"byte_end":74861,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/ });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":74862,"byte_end":74869,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ drop(b); // closure is never run","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":74870,"byte_end":74906,"line_start":31,"line_end":31,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":74907,"byte_end":74916,"line_start":32,"line_end":32,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":74917,"byte_end":74924,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4450},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":75702,"byte_end":75709,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"Pending","qualname":"::future::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":4452}],"decl_id":null,"docs":" Future for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`pending()`] function.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":75563,"byte_end":75605,"line_start":6,"line_end":6,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":75623,"byte_end":75690,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":360},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":76228,"byte_end":76235,"line_start":35,"line_end":35,"column_start":8,"column_end":15},"name":"pending","qualname":"::future::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which never resolves, representing a computation that never\n finishes.","sig":null,"attributes":[{"value":"/ Creates a future which never resolves, representing a computation that never","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":75850,"byte_end":75930,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ finishes.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":75931,"byte_end":75944,"line_start":20,"line_end":20,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":75945,"byte_end":75948,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The returned future will forever return [`Poll::Pending`].","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":75949,"byte_end":76011,"line_start":22,"line_end":22,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":76012,"byte_end":76015,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":76016,"byte_end":76030,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":76031,"byte_end":76034,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":76035,"byte_end":76048,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":76049,"byte_end":76090,"line_start":27,"line_end":27,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":76091,"byte_end":76115,"line_start":28,"line_end":28,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":76116,"byte_end":76119,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let future = future::pending();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":76120,"byte_end":76155,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/ let () = future.await;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":76156,"byte_end":76182,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/ unreachable!();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":76183,"byte_end":76202,"line_start":32,"line_end":32,"column_start":1,"column_end":20}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":76203,"byte_end":76212,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":76213,"byte_end":76220,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4458},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":76972,"byte_end":76978,"line_start":15,"line_end":15,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":4456},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":76937,"byte_end":76967,"line_start":14,"line_end":14,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4461},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77045,"byte_end":77049,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":4456},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77002,"byte_end":77040,"line_start":16,"line_end":16,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4464},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77211,"byte_end":77215,"line_start":20,"line_end":20,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":4456},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77068,"byte_end":77134,"line_start":18,"line_end":18,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77139,"byte_end":77206,"line_start":19,"line_end":19,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":4456},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":76908,"byte_end":76917,"line_start":13,"line_end":13,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"pub enum MaybeDone<Fut: Future> {\n\n    /// A not-yet-completed future\n    Future(Fut),\n\n    /// The output of the completed future\n    Done(Fut::Output),\n\n    /// The empty variant after the result of a [`MaybeDone`] has been\n    /// taken using the [`take_output`](MaybeDone::take_output) method.\n    Gone,\n}","parent":null,"children":[{"krate":0,"index":4458},{"krate":0,"index":4461},{"krate":0,"index":4464}],"decl_id":null,"docs":" A future that may have completed.","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":76786,"byte_end":76823,"line_start":9,"line_end":9,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":76824,"byte_end":76827,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`maybe_done()`] function.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":76828,"byte_end":76881,"line_start":11,"line_end":11,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":386},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77736,"byte_end":77746,"line_start":42,"line_end":42,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"pub fn maybe_done<Fut: Future>(Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77275,"byte_end":77312,"line_start":25,"line_end":25,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77313,"byte_end":77316,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77317,"byte_end":77331,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77332,"byte_end":77335,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77336,"byte_end":77343,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77344,"byte_end":77385,"line_start":30,"line_end":30,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77386,"byte_end":77410,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/ use futures::pin_mut;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77411,"byte_end":77436,"line_start":32,"line_end":32,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77437,"byte_end":77440,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let future = future::maybe_done(async { 5 });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77441,"byte_end":77490,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ pin_mut!(future);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77491,"byte_end":77512,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77513,"byte_end":77565,"line_start":36,"line_end":36,"column_start":1,"column_end":53}},{"value":"/ let () = future.as_mut().await;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77566,"byte_end":77601,"line_start":37,"line_end":37,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(future.as_mut().take_output(), Some(5));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77602,"byte_end":77657,"line_start":38,"line_end":38,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77658,"byte_end":77710,"line_start":39,"line_end":39,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77711,"byte_end":77720,"line_start":40,"line_end":40,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77721,"byte_end":77728,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":78163,"byte_end":78173,"line_start":52,"line_end":52,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77865,"byte_end":77950,"line_start":47,"line_end":47,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77955,"byte_end":78026,"line_start":48,"line_end":48,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":78031,"byte_end":78104,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":78109,"byte_end":78137,"line_start":50,"line_end":50,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":78142,"byte_end":78151,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":78521,"byte_end":78532,"line_start":64,"line_end":64,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `MaybeDone` without driving it","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":78401,"byte_end":78467,"line_start":61,"line_end":61,"column_start":5,"column_end":71}},{"value":"/ towards completion.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":78472,"byte_end":78495,"line_start":62,"line_end":62,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":78500,"byte_end":78509,"line_start":63,"line_end":63,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4471},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":80131,"byte_end":80137,"line_start":15,"line_end":15,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::try_maybe_done::TryMaybeDone::Future","value":"TryMaybeDone::Future(Fut)","parent":{"krate":0,"index":4469},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":80096,"byte_end":80126,"line_start":14,"line_end":14,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4474},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":80204,"byte_end":80208,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::try_maybe_done::TryMaybeDone::Done","value":"TryMaybeDone::Done(Fut::Ok)","parent":{"krate":0,"index":4469},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":80161,"byte_end":80199,"line_start":16,"line_end":16,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4477},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":80416,"byte_end":80420,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::try_maybe_done::TryMaybeDone::Gone","value":"TryMaybeDone::Gone","parent":{"krate":0,"index":4469},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`TryMaybeDone`] has been\n taken using the [`take_output`](TryMaybeDone::take_output) method,\n or if the future returned an error.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`TryMaybeDone`] has been","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":80223,"byte_end":80292,"line_start":18,"line_end":18,"column_start":5,"column_end":74}},{"value":"/ taken using the [`take_output`](TryMaybeDone::take_output) method,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":80297,"byte_end":80367,"line_start":19,"line_end":19,"column_start":5,"column_end":75}},{"value":"/ or if the future returned an error.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":80372,"byte_end":80411,"line_start":20,"line_end":20,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":4469},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":80061,"byte_end":80073,"line_start":13,"line_end":13,"column_start":10,"column_end":22},"name":"TryMaybeDone","qualname":"::future::try_maybe_done::TryMaybeDone","value":"pub enum TryMaybeDone<Fut: TryFuture> {\n\n    /// A not-yet-completed future\n    Future(Fut),\n\n    /// The output of the completed future\n    Done(Fut::Ok),\n\n    /// The empty variant after the result of a [`TryMaybeDone`] has been\n    /// taken using the [`take_output`](TryMaybeDone::take_output) method,\n    /// or if the future returned an error.\n    Gone,\n}","parent":null,"children":[{"krate":0,"index":4471},{"krate":0,"index":4474},{"krate":0,"index":4477}],"decl_id":null,"docs":" A future that may have completed with an error.","sig":null,"attributes":[{"value":"/ A future that may have completed with an error.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":79921,"byte_end":79972,"line_start":9,"line_end":9,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":79973,"byte_end":79976,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`try_maybe_done()`] function.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":79977,"byte_end":80034,"line_start":11,"line_end":11,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":415},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":80534,"byte_end":80548,"line_start":27,"line_end":27,"column_start":8,"column_end":22},"name":"try_maybe_done","qualname":"::future::try_maybe_done::try_maybe_done","value":"pub fn try_maybe_done<Fut: TryFuture>(Fut) -> TryMaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `TryMaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `TryMaybeDone`","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":80486,"byte_end":80526,"line_start":26,"line_end":26,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":80991,"byte_end":81001,"line_start":37,"line_end":37,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<TryMaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has completed successfully and [`take_output`](TryMaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":80682,"byte_end":80767,"line_start":32,"line_end":32,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":80772,"byte_end":80843,"line_start":33,"line_end":33,"column_start":5,"column_end":76}},{"value":"/ future has completed successfully and [`take_output`](TryMaybeDone::take_output)","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":80848,"byte_end":80932,"line_start":34,"line_end":34,"column_start":5,"column_end":89}},{"value":"/ has not yet been called.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":80937,"byte_end":80965,"line_start":35,"line_end":35,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":80970,"byte_end":80979,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":81351,"byte_end":81362,"line_start":49,"line_end":49,"column_start":12,"column_end":23},"name":"take_output","qualname":"<TryMaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `TryMaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `TryMaybeDone` without driving it","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":81228,"byte_end":81297,"line_start":46,"line_end":46,"column_start":5,"column_end":74}},{"value":"/ towards completion.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":81302,"byte_end":81325,"line_start":47,"line_end":47,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":81330,"byte_end":81339,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4487},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\option.rs","byte_start":83638,"byte_end":83650,"line_start":28,"line_end":28,"column_start":16,"column_end":28},"name":"OptionFuture","qualname":"::future::option::OptionFuture","value":"OptionFuture {  }","parent":null,"children":[{"krate":0,"index":4489}],"decl_id":null,"docs":" A future representing a value which may or may not be present.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":458},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":84662,"byte_end":84668,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":460}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":84542,"byte_end":84582,"line_start":8,"line_end":8,"column_start":1,"column_end":41}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":84583,"byte_end":84650,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":463},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":85255,"byte_end":85262,"line_start":35,"line_end":35,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":84719,"byte_end":84790,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":84791,"byte_end":84794,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":84795,"byte_end":84861,"line_start":18,"line_end":18,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":84862,"byte_end":84865,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":84866,"byte_end":84880,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":84881,"byte_end":84884,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":84885,"byte_end":84892,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":84893,"byte_end":84934,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":84935,"byte_end":84968,"line_start":24,"line_end":24,"column_start":1,"column_end":34}},{"value":"/ use futures::task::{Context, Poll};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":84969,"byte_end":85008,"line_start":25,"line_end":25,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":85009,"byte_end":85012,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fn read_line(_cx: &mut Context<'_>) -> Poll<String> {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":85013,"byte_end":85070,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/     Poll::Ready(\"Hello, World!\".into())","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":85071,"byte_end":85114,"line_start":28,"line_end":28,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":85115,"byte_end":85120,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":85121,"byte_end":85124,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let read_future = poll_fn(read_line);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":85125,"byte_end":85166,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(read_future.await, \"Hello, World!\".to_owned());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":85167,"byte_end":85229,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":85230,"byte_end":85239,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":85240,"byte_end":85247,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4521},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":85982,"byte_end":85987,"line_start":8,"line_end":8,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ready`](ready()) function.\n","sig":null,"attributes":[{"value":"/ Future for the [`ready`](ready()) function.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":85831,"byte_end":85878,"line_start":5,"line_end":5,"column_start":1,"column_end":48}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":85903,"byte_end":85970,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86110,"byte_end":86120,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Ready<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the value from this immediately ready future.\n","sig":null,"attributes":[{"value":"/ Unwraps the value from this immediately ready future.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86027,"byte_end":86084,"line_start":11,"line_end":11,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86089,"byte_end":86098,"line_start":12,"line_end":12,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":497},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86786,"byte_end":86791,"line_start":47,"line_end":47,"column_start":8,"column_end":13},"name":"ready","qualname":"::future::ready::ready","value":"pub fn ready<T>(T) -> Ready<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with a value.","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with a value.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86540,"byte_end":86600,"line_start":35,"line_end":35,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86601,"byte_end":86604,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86605,"byte_end":86619,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86620,"byte_end":86623,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86624,"byte_end":86631,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86632,"byte_end":86673,"line_start":40,"line_end":40,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86674,"byte_end":86698,"line_start":41,"line_end":41,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86699,"byte_end":86702,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(1);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86703,"byte_end":86732,"line_start":43,"line_end":43,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86733,"byte_end":86760,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86761,"byte_end":86770,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86771,"byte_end":86778,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":499},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":87103,"byte_end":87105,"line_start":63,"line_end":63,"column_start":8,"column_end":10},"name":"ok","qualname":"::future::ready::ok","value":"pub fn ok<T, E>(T) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with a success value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with a success value.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86837,"byte_end":86904,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86905,"byte_end":86908,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86909,"byte_end":86923,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86924,"byte_end":86927,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86928,"byte_end":86935,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86936,"byte_end":86977,"line_start":56,"line_end":56,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86978,"byte_end":87002,"line_start":57,"line_end":57,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":87003,"byte_end":87006,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ let a = future::ok::<i32, i32>(1);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":87007,"byte_end":87045,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(a.await, Ok(1));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":87046,"byte_end":87077,"line_start":60,"line_end":60,"column_start":1,"column_end":32}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":87078,"byte_end":87087,"line_start":61,"line_end":61,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":87088,"byte_end":87095,"line_start":62,"line_end":62,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":502},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":87436,"byte_end":87439,"line_start":79,"line_end":79,"column_start":8,"column_end":11},"name":"err","qualname":"::future::ready::err","value":"pub fn err<T, E>(E) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with an error value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with an error value.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":87169,"byte_end":87235,"line_start":67,"line_end":67,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":87236,"byte_end":87239,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":87240,"byte_end":87254,"line_start":69,"line_end":69,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":87255,"byte_end":87258,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":87259,"byte_end":87266,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":87267,"byte_end":87308,"line_start":72,"line_end":72,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":87309,"byte_end":87333,"line_start":73,"line_end":73,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":87334,"byte_end":87337,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ let a = future::err::<i32, i32>(1);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":87338,"byte_end":87377,"line_start":75,"line_end":75,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(a.await, Err(1));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":87378,"byte_end":87410,"line_start":76,"line_end":76,"column_start":1,"column_end":33}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":87411,"byte_end":87420,"line_start":77,"line_end":77,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":87421,"byte_end":87428,"line_start":78,"line_end":78,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4623},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":89726,"byte_end":89730,"line_start":79,"line_end":79,"column_start":6,"column_end":10},"name":"Join","qualname":"::future::join::Join","value":"Join {  }","parent":null,"children":[{"krate":0,"index":4626},{"krate":0,"index":4627}],"decl_id":null,"docs":" Future for the [`join`](join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4668},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":89796,"byte_end":89801,"line_start":82,"line_end":82,"column_start":6,"column_end":11},"name":"Join3","qualname":"::future::join::Join3","value":"Join3 {  }","parent":null,"children":[{"krate":0,"index":4672},{"krate":0,"index":4673},{"krate":0,"index":4674}],"decl_id":null,"docs":" Future for the [`join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4725},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":89873,"byte_end":89878,"line_start":85,"line_end":85,"column_start":6,"column_end":11},"name":"Join4","qualname":"::future::join::Join4","value":"Join4 {  }","parent":null,"children":[{"krate":0,"index":4730},{"krate":0,"index":4731},{"krate":0,"index":4732},{"krate":0,"index":4733}],"decl_id":null,"docs":" Future for the [`join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4794},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":89956,"byte_end":89961,"line_start":88,"line_end":88,"column_start":6,"column_end":11},"name":"Join5","qualname":"::future::join::Join5","value":"Join5 {  }","parent":null,"children":[{"krate":0,"index":4800},{"krate":0,"index":4801},{"krate":0,"index":4802},{"krate":0,"index":4803},{"krate":0,"index":4804}],"decl_id":null,"docs":" Future for the [`join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":525},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90576,"byte_end":90580,"line_start":112,"line_end":112,"column_start":8,"column_end":12},"name":"join","qualname":"::future::join::join","value":"pub fn join<Fut1, Fut2>(Fut1, Fut2) -> Join<Fut1, Fut2> where Fut1: Future,\nFut2: Future","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":89999,"byte_end":90070,"line_start":91,"line_end":91,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90071,"byte_end":90074,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90075,"byte_end":90146,"line_start":93,"line_end":93,"column_start":1,"column_end":72}},{"value":"/ complete. The returned future will finish with a tuple of both results.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90147,"byte_end":90222,"line_start":94,"line_end":94,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90223,"byte_end":90226,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90227,"byte_end":90296,"line_start":96,"line_end":96,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90297,"byte_end":90323,"line_start":97,"line_end":97,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90324,"byte_end":90327,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90328,"byte_end":90342,"line_start":99,"line_end":99,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90343,"byte_end":90346,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90347,"byte_end":90354,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90355,"byte_end":90396,"line_start":102,"line_end":102,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90397,"byte_end":90421,"line_start":103,"line_end":103,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90422,"byte_end":90425,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90426,"byte_end":90450,"line_start":105,"line_end":105,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90451,"byte_end":90475,"line_start":106,"line_end":106,"column_start":1,"column_end":25}},{"value":"/ let pair = future::join(a, b);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90476,"byte_end":90510,"line_start":107,"line_end":107,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90511,"byte_end":90514,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, (1, 2));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90515,"byte_end":90550,"line_start":109,"line_end":109,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90551,"byte_end":90560,"line_start":110,"line_end":110,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90561,"byte_end":90568,"line_start":111,"line_end":111,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":528},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":91126,"byte_end":91131,"line_start":137,"line_end":137,"column_start":8,"column_end":13},"name":"join3","qualname":"::future::join::join3","value":"pub fn join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3) -> Join3<Fut1, Fut2, Fut3>\nwhere Fut1: Future, Fut2: Future, Fut3: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90787,"byte_end":90839,"line_start":121,"line_end":121,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90840,"byte_end":90843,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90844,"byte_end":90858,"line_start":123,"line_end":123,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90859,"byte_end":90862,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90863,"byte_end":90870,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90871,"byte_end":90912,"line_start":126,"line_end":126,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90913,"byte_end":90937,"line_start":127,"line_end":127,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90938,"byte_end":90941,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90942,"byte_end":90966,"line_start":129,"line_end":129,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90967,"byte_end":90991,"line_start":130,"line_end":130,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90992,"byte_end":91016,"line_start":131,"line_end":131,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join3(a, b, c);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":91017,"byte_end":91056,"line_start":132,"line_end":132,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":91057,"byte_end":91060,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":91061,"byte_end":91100,"line_start":134,"line_end":134,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":91101,"byte_end":91110,"line_start":135,"line_end":135,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":91111,"byte_end":91118,"line_start":136,"line_end":136,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":532},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":91714,"byte_end":91719,"line_start":167,"line_end":167,"column_start":8,"column_end":13},"name":"join4","qualname":"::future::join::join4","value":"pub fn join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> Join4<Fut1, Fut2, Fut3, Fut4> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":91344,"byte_end":91396,"line_start":150,"line_end":150,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":91397,"byte_end":91400,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":91401,"byte_end":91415,"line_start":152,"line_end":152,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":91416,"byte_end":91419,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":91420,"byte_end":91427,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":91428,"byte_end":91469,"line_start":155,"line_end":155,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":91470,"byte_end":91494,"line_start":156,"line_end":156,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":91495,"byte_end":91498,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":91499,"byte_end":91523,"line_start":158,"line_end":158,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":91524,"byte_end":91548,"line_start":159,"line_end":159,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":91549,"byte_end":91573,"line_start":160,"line_end":160,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":91574,"byte_end":91598,"line_start":161,"line_end":161,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join4(a, b, c, d);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":91599,"byte_end":91641,"line_start":162,"line_end":162,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":91642,"byte_end":91645,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":91646,"byte_end":91688,"line_start":164,"line_end":164,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":91689,"byte_end":91698,"line_start":165,"line_end":165,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":91699,"byte_end":91706,"line_start":166,"line_end":166,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":537},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":92391,"byte_end":92396,"line_start":200,"line_end":200,"column_start":8,"column_end":13},"name":"join5","qualname":"::future::join::join5","value":"pub fn join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> Join5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future, Fut5: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":91990,"byte_end":92042,"line_start":182,"line_end":182,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":92043,"byte_end":92046,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":92047,"byte_end":92061,"line_start":184,"line_end":184,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":92062,"byte_end":92065,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":92066,"byte_end":92073,"line_start":186,"line_end":186,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":92074,"byte_end":92115,"line_start":187,"line_end":187,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":92116,"byte_end":92140,"line_start":188,"line_end":188,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":92141,"byte_end":92144,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":92145,"byte_end":92169,"line_start":190,"line_end":190,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":92170,"byte_end":92194,"line_start":191,"line_end":191,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":92195,"byte_end":92219,"line_start":192,"line_end":192,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":92220,"byte_end":92244,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/ let e = async { 5 };","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":92245,"byte_end":92269,"line_start":194,"line_end":194,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join5(a, b, c, d, e);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":92270,"byte_end":92315,"line_start":195,"line_end":195,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":92316,"byte_end":92319,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4, 5));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":92320,"byte_end":92365,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":92366,"byte_end":92375,"line_start":198,"line_end":198,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":92376,"byte_end":92383,"line_start":199,"line_end":199,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":568},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join_all.rs","byte_start":93557,"byte_end":93564,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"JoinAll","qualname":"::future::join_all::JoinAll","value":"JoinAll {  }","parent":null,"children":[{"krate":0,"index":570}],"decl_id":null,"docs":" Future for the [`join_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`join_all`] function.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join_all.rs","byte_start":93436,"byte_end":93477,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join_all.rs","byte_start":93478,"byte_end":93545,"line_start":25,"line_end":25,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":574},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join_all.rs","byte_start":95204,"byte_end":95212,"line_start":82,"line_end":82,"column_start":8,"column_end":16},"name":"join_all","qualname":"::future::join_all::join_all","value":"pub fn join_all<I>(I) -> JoinAll<I::Item> where I: IntoIterator,\nI::Item: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents a collection of the outputs of the futures\n given.","sig":null,"attributes":[{"value":"/ Creates a future which represents a collection of the outputs of the futures","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join_all.rs","byte_start":93897,"byte_end":93977,"line_start":45,"line_end":45,"column_start":1,"column_end":81}},{"value":"/ given.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join_all.rs","byte_start":93978,"byte_end":93988,"line_start":46,"line_end":46,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join_all.rs","byte_start":93989,"byte_end":93992,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join_all.rs","byte_start":93993,"byte_end":94072,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join_all.rs","byte_start":94073,"byte_end":94153,"line_start":49,"line_end":49,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join_all.rs","byte_start":94154,"byte_end":94172,"line_start":50,"line_end":50,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join_all.rs","byte_start":94173,"byte_end":94176,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join_all.rs","byte_start":94177,"byte_end":94254,"line_start":52,"line_end":52,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join_all.rs","byte_start":94255,"byte_end":94312,"line_start":53,"line_end":53,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join_all.rs","byte_start":94313,"byte_end":94316,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # See Also","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join_all.rs","byte_start":94317,"byte_end":94331,"line_start":55,"line_end":55,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join_all.rs","byte_start":94332,"byte_end":94335,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ This is purposefully a very simple API for basic use-cases. In a lot of","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join_all.rs","byte_start":94336,"byte_end":94411,"line_start":57,"line_end":57,"column_start":1,"column_end":76}},{"value":"/ cases you will want to use the more powerful","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join_all.rs","byte_start":94412,"byte_end":94460,"line_start":58,"line_end":58,"column_start":1,"column_end":49}},{"value":"/ [`FuturesOrdered`][crate::stream::FuturesOrdered] APIs, or, if order does","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join_all.rs","byte_start":94461,"byte_end":94538,"line_start":59,"line_end":59,"column_start":1,"column_end":78}},{"value":"/ not matter, [`FuturesUnordered`][crate::stream::FuturesUnordered].","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join_all.rs","byte_start":94539,"byte_end":94609,"line_start":60,"line_end":60,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join_all.rs","byte_start":94610,"byte_end":94613,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ Some examples for additional functionality provided by these are:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join_all.rs","byte_start":94614,"byte_end":94683,"line_start":62,"line_end":62,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join_all.rs","byte_start":94684,"byte_end":94687,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/  * Adding new futures to the set even after it has been started.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join_all.rs","byte_start":94688,"byte_end":94756,"line_start":64,"line_end":64,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join_all.rs","byte_start":94757,"byte_end":94760,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/  * Only polling the specific futures that have been woken. In cases where","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join_all.rs","byte_start":94761,"byte_end":94838,"line_start":66,"line_end":66,"column_start":1,"column_end":78}},{"value":"/    you have a lot of futures this will result in much more efficient polling.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join_all.rs","byte_start":94839,"byte_end":94920,"line_start":67,"line_end":67,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join_all.rs","byte_start":94921,"byte_end":94924,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join_all.rs","byte_start":94925,"byte_end":94939,"line_start":69,"line_end":69,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join_all.rs","byte_start":94940,"byte_end":94943,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join_all.rs","byte_start":94944,"byte_end":94951,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join_all.rs","byte_start":94952,"byte_end":94993,"line_start":72,"line_end":72,"column_start":1,"column_end":42}},{"value":"/ use futures::future::join_all;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join_all.rs","byte_start":94994,"byte_end":95028,"line_start":73,"line_end":73,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join_all.rs","byte_start":95029,"byte_end":95032,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ async fn foo(i: u32) -> u32 { i }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join_all.rs","byte_start":95033,"byte_end":95070,"line_start":75,"line_end":75,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join_all.rs","byte_start":95071,"byte_end":95074,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![foo(1), foo(2), foo(3)];","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join_all.rs","byte_start":95075,"byte_end":95122,"line_start":77,"line_end":77,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join_all.rs","byte_start":95123,"byte_end":95126,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(join_all(futures).await, [1, 2, 3]);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join_all.rs","byte_start":95127,"byte_end":95178,"line_start":79,"line_end":79,"column_start":1,"column_end":52}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join_all.rs","byte_start":95179,"byte_end":95188,"line_start":80,"line_end":80,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join_all.rs","byte_start":95189,"byte_end":95196,"line_start":81,"line_end":81,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4875},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":96525,"byte_end":96531,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Select","qualname":"::future::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":4878}],"decl_id":null,"docs":" Future for the [`select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select()`] function.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":96387,"byte_end":96428,"line_start":6,"line_end":6,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":96429,"byte_end":96496,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":602},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":98679,"byte_end":98685,"line_start":75,"line_end":75,"column_start":8,"column_end":14},"name":"select","qualname":"::future::select::select","value":"pub fn select<A, B>(A, B) -> Select<A, B> where A: Future + Unpin, B: Future +\nUnpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":96622,"byte_end":96692,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":96693,"byte_end":96696,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":96697,"byte_end":96775,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":96776,"byte_end":96852,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":96853,"byte_end":96925,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":96926,"byte_end":96929,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":96930,"byte_end":97002,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":97003,"byte_end":97031,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":97032,"byte_end":97035,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":97036,"byte_end":97103,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ output type you can use the `Either::factor_first` method to","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":97104,"byte_end":97168,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":97169,"byte_end":97219,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":97220,"byte_end":97223,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":97224,"byte_end":97238,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":97239,"byte_end":97242,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ A simple example","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":97243,"byte_end":97263,"line_start":30,"line_end":30,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":97264,"byte_end":97267,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":97268,"byte_end":97275,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":97276,"byte_end":97317,"line_start":33,"line_end":33,"column_start":1,"column_end":42}},{"value":"/ use futures::future::{self, Either};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":97318,"byte_end":97358,"line_start":34,"line_end":34,"column_start":1,"column_end":41}},{"value":"/ use futures::pin_mut;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":97359,"byte_end":97384,"line_start":35,"line_end":35,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":97385,"byte_end":97388,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // These two futures have different types even though their outputs have the same type","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":97389,"byte_end":97479,"line_start":37,"line_end":37,"column_start":1,"column_end":91}},{"value":"/ let future1 = async { 1 };","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":97480,"byte_end":97510,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/ let future2 = async { 2 };","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":97511,"byte_end":97541,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":97542,"byte_end":97545,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // 'select' requires Future + Unpin bounds","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":97546,"byte_end":97592,"line_start":41,"line_end":41,"column_start":1,"column_end":47}},{"value":"/ pin_mut!(future1);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":97593,"byte_end":97615,"line_start":42,"line_end":42,"column_start":1,"column_end":23}},{"value":"/ pin_mut!(future2);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":97616,"byte_end":97638,"line_start":43,"line_end":43,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":97639,"byte_end":97642,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ let value = match future::select(future1, future2).await {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":97643,"byte_end":97705,"line_start":45,"line_end":45,"column_start":1,"column_end":63}},{"value":"/     Either::Left((value1, _)) => value1, // `value1` is resolved from `future1`","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":97706,"byte_end":97789,"line_start":46,"line_end":46,"column_start":1,"column_end":84}},{"value":"/                                          // `_` represents `future2`","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":97790,"byte_end":97862,"line_start":47,"line_end":47,"column_start":1,"column_end":73}},{"value":"/     Either::Right((value2, _)) => value2, // `value2` is resolved from `future2`","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":97863,"byte_end":97947,"line_start":48,"line_end":48,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future1`","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":97948,"byte_end":98021,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"/ };","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":98022,"byte_end":98028,"line_start":50,"line_end":50,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":98029,"byte_end":98032,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ assert!(value == 1 || value == 2);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":98033,"byte_end":98071,"line_start":52,"line_end":52,"column_start":1,"column_end":39}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":98072,"byte_end":98081,"line_start":53,"line_end":53,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":98082,"byte_end":98089,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":98090,"byte_end":98093,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ A more complex example","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":98094,"byte_end":98120,"line_start":56,"line_end":56,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":98121,"byte_end":98124,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":98125,"byte_end":98132,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":98133,"byte_end":98192,"line_start":59,"line_end":59,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":98193,"byte_end":98196,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's join implemented on top of select","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":98197,"byte_end":98250,"line_start":61,"line_end":61,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":98251,"byte_end":98254,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ fn join<A, B>(a: A, b: B) -> impl Future<Output=(A::Output, B::Output)>","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":98255,"byte_end":98330,"line_start":63,"line_end":63,"column_start":1,"column_end":76}},{"value":"/     where A: Future + Unpin,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":98331,"byte_end":98363,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"/           B: Future + Unpin,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":98364,"byte_end":98396,"line_start":65,"line_end":65,"column_start":1,"column_end":33}},{"value":"/ {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":98397,"byte_end":98402,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"/     future::select(a, b).then(|either| {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":98403,"byte_end":98447,"line_start":67,"line_end":67,"column_start":1,"column_end":45}},{"value":"/         match either {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":98448,"byte_end":98474,"line_start":68,"line_end":68,"column_start":1,"column_end":27}},{"value":"/             Either::Left((x, b)) => b.map(move |y| (x, y)).left_future(),","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":98475,"byte_end":98552,"line_start":69,"line_end":69,"column_start":1,"column_end":78}},{"value":"/             Either::Right((y, a)) => a.map(move |x| (x, y)).right_future(),","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":98553,"byte_end":98632,"line_start":70,"line_end":70,"column_start":1,"column_end":80}},{"value":"/         }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":98633,"byte_end":98646,"line_start":71,"line_end":71,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":98647,"byte_end":98657,"line_start":72,"line_end":72,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":98658,"byte_end":98663,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":98664,"byte_end":98671,"line_start":74,"line_end":74,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4883},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select_all.rs","byte_start":100037,"byte_end":100046,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"SelectAll","qualname":"::future::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":4885}],"decl_id":null,"docs":" Future for the [`select_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_all`] function.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select_all.rs","byte_start":99897,"byte_end":99940,"line_start":9,"line_end":9,"column_start":1,"column_end":44}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select_all.rs","byte_start":99958,"byte_end":100025,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":629},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select_all.rs","byte_start":100826,"byte_end":100836,"line_start":33,"line_end":33,"column_start":8,"column_end":18},"name":"select_all","qualname":"::future::select_all::select_all","value":"pub fn select_all<I>(I) -> SelectAll<I::Item> where I: IntoIterator,\nI::Item: Future + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select over a list of futures.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select_all.rs","byte_start":100124,"byte_end":100190,"line_start":18,"line_end":18,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select_all.rs","byte_start":100191,"byte_end":100194,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready. Upon","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select_all.rs","byte_start":100195,"byte_end":100275,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ completion the item resolved will be returned, along with the index of the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select_all.rs","byte_start":100276,"byte_end":100354,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ future that was ready and the list of all the remaining futures.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select_all.rs","byte_start":100355,"byte_end":100423,"line_start":22,"line_end":22,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select_all.rs","byte_start":100424,"byte_end":100427,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ There are no guarantees provided on the order of the list with the remaining","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select_all.rs","byte_start":100428,"byte_end":100508,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ futures. They might be swapped around, reversed, or completely random.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select_all.rs","byte_start":100509,"byte_end":100583,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select_all.rs","byte_start":100584,"byte_end":100587,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select_all.rs","byte_start":100588,"byte_end":100665,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select_all.rs","byte_start":100666,"byte_end":100723,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select_all.rs","byte_start":100724,"byte_end":100727,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select_all.rs","byte_start":100728,"byte_end":100740,"line_start":30,"line_end":30,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select_all.rs","byte_start":100741,"byte_end":100744,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select_all.rs","byte_start":100745,"byte_end":100818,"line_start":32,"line_end":32,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":4959},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":104790,"byte_end":104797,"line_start":94,"line_end":94,"column_start":6,"column_end":13},"name":"TryJoin","qualname":"::future::try_join::TryJoin","value":"TryJoin {  }","parent":null,"children":[{"krate":0,"index":4962},{"krate":0,"index":4963}],"decl_id":null,"docs":" Future for the [`try_join`](try_join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5004},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":104867,"byte_end":104875,"line_start":97,"line_end":97,"column_start":6,"column_end":14},"name":"TryJoin3","qualname":"::future::try_join::TryJoin3","value":"TryJoin3 {  }","parent":null,"children":[{"krate":0,"index":5008},{"krate":0,"index":5009},{"krate":0,"index":5010}],"decl_id":null,"docs":" Future for the [`try_join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5061},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":104951,"byte_end":104959,"line_start":100,"line_end":100,"column_start":6,"column_end":14},"name":"TryJoin4","qualname":"::future::try_join::TryJoin4","value":"TryJoin4 {  }","parent":null,"children":[{"krate":0,"index":5066},{"krate":0,"index":5067},{"krate":0,"index":5068},{"krate":0,"index":5069}],"decl_id":null,"docs":" Future for the [`try_join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5130},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":105041,"byte_end":105049,"line_start":103,"line_end":103,"column_start":6,"column_end":14},"name":"TryJoin5","qualname":"::future::try_join::TryJoin5","value":"TryJoin5 {  }","parent":null,"children":[{"krate":0,"index":5136},{"krate":0,"index":5137},{"krate":0,"index":5138},{"krate":0,"index":5139},{"krate":0,"index":5140}],"decl_id":null,"docs":" Future for the [`try_join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":657},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":106321,"byte_end":106329,"line_start":148,"line_end":148,"column_start":8,"column_end":16},"name":"try_join","qualname":"::future::try_join::try_join","value":"pub fn try_join<Fut1, Fut2>(Fut1, Fut2) -> TryJoin<Fut1, Fut2> where\nFut1: TryFuture, Fut2: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete or\n for one to produce an error.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete or","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":105087,"byte_end":105160,"line_start":106,"line_end":106,"column_start":1,"column_end":74}},{"value":"/ for one to produce an error.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":105161,"byte_end":105193,"line_start":107,"line_end":107,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":105194,"byte_end":105197,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":105198,"byte_end":105269,"line_start":109,"line_end":109,"column_start":1,"column_end":72}},{"value":"/ complete. If successful, the returned future will finish with a tuple of","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":105270,"byte_end":105346,"line_start":110,"line_end":110,"column_start":1,"column_end":77}},{"value":"/ both results. If unsuccesful, it will complete with the first error","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":105347,"byte_end":105418,"line_start":111,"line_end":111,"column_start":1,"column_end":72}},{"value":"/ encountered.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":105419,"byte_end":105435,"line_start":112,"line_end":112,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":105436,"byte_end":105439,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":105440,"byte_end":105509,"line_start":114,"line_end":114,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":105510,"byte_end":105536,"line_start":115,"line_end":115,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":105537,"byte_end":105540,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":105541,"byte_end":105555,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":105556,"byte_end":105559,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ When used on multiple futures that return [`Ok`], `try_join` will return","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":105560,"byte_end":105636,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/ [`Ok`] of a tuple of the values:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":105637,"byte_end":105673,"line_start":120,"line_end":120,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":105674,"byte_end":105677,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":105678,"byte_end":105685,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":105686,"byte_end":105727,"line_start":123,"line_end":123,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":105728,"byte_end":105752,"line_start":124,"line_end":124,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":105753,"byte_end":105756,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":105757,"byte_end":105802,"line_start":126,"line_end":126,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":105803,"byte_end":105848,"line_start":127,"line_end":127,"column_start":1,"column_end":46}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":105849,"byte_end":105887,"line_start":128,"line_end":128,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":105888,"byte_end":105891,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Ok((1, 2)));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":105892,"byte_end":105931,"line_start":130,"line_end":130,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":105932,"byte_end":105941,"line_start":131,"line_end":131,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":105942,"byte_end":105949,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":105950,"byte_end":105953,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ If one of the futures resolves to an error, `try_join` will return","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":105954,"byte_end":106024,"line_start":134,"line_end":134,"column_start":1,"column_end":71}},{"value":"/ that error:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":106025,"byte_end":106040,"line_start":135,"line_end":135,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":106041,"byte_end":106044,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":106045,"byte_end":106052,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":106053,"byte_end":106094,"line_start":138,"line_end":138,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":106095,"byte_end":106119,"line_start":139,"line_end":139,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":106120,"byte_end":106123,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":106124,"byte_end":106169,"line_start":141,"line_end":141,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Err::<i32, i32>(2));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":106170,"byte_end":106216,"line_start":142,"line_end":142,"column_start":1,"column_end":47}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":106217,"byte_end":106255,"line_start":143,"line_end":143,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":106256,"byte_end":106259,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Err(2));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":106260,"byte_end":106295,"line_start":145,"line_end":145,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":106296,"byte_end":106305,"line_start":146,"line_end":146,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":106306,"byte_end":106313,"line_start":147,"line_end":147,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":660},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":106922,"byte_end":106931,"line_start":172,"line_end":172,"column_start":8,"column_end":17},"name":"try_join3","qualname":"::future::try_join::try_join3","value":"pub fn try_join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3)\n-> TryJoin3<Fut1, Fut2, Fut3> where Fut1: TryFuture, Fut2: TryFuture<Error =\nFut1::Error>, Fut3: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":106504,"byte_end":106564,"line_start":156,"line_end":156,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":106565,"byte_end":106568,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":106569,"byte_end":106583,"line_start":158,"line_end":158,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":106584,"byte_end":106587,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":106588,"byte_end":106595,"line_start":160,"line_end":160,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":106596,"byte_end":106637,"line_start":161,"line_end":161,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":106638,"byte_end":106662,"line_start":162,"line_end":162,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":106663,"byte_end":106666,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":106667,"byte_end":106712,"line_start":164,"line_end":164,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":106713,"byte_end":106758,"line_start":165,"line_end":165,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":106759,"byte_end":106804,"line_start":166,"line_end":166,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join3(a, b, c);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":106805,"byte_end":106848,"line_start":167,"line_end":167,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":106849,"byte_end":106852,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3)));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":106853,"byte_end":106896,"line_start":169,"line_end":169,"column_start":1,"column_end":44}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":106897,"byte_end":106906,"line_start":170,"line_end":170,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":106907,"byte_end":106914,"line_start":171,"line_end":171,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":664},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":107671,"byte_end":107680,"line_start":202,"line_end":202,"column_start":8,"column_end":17},"name":"try_join4","qualname":"::future::try_join::try_join4","value":"pub fn try_join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> TryJoin4<Fut1, Fut2, Fut3, Fut4> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":107201,"byte_end":107261,"line_start":185,"line_end":185,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":107262,"byte_end":107265,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":107266,"byte_end":107280,"line_start":187,"line_end":187,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":107281,"byte_end":107284,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":107285,"byte_end":107292,"line_start":189,"line_end":189,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":107293,"byte_end":107334,"line_start":190,"line_end":190,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":107335,"byte_end":107359,"line_start":191,"line_end":191,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":107360,"byte_end":107363,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":107364,"byte_end":107409,"line_start":193,"line_end":193,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":107410,"byte_end":107455,"line_start":194,"line_end":194,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":107456,"byte_end":107501,"line_start":195,"line_end":195,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":107502,"byte_end":107547,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join4(a, b, c, d);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":107548,"byte_end":107594,"line_start":197,"line_end":197,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":107595,"byte_end":107598,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4)));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":107599,"byte_end":107645,"line_start":199,"line_end":199,"column_start":1,"column_end":47}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":107646,"byte_end":107655,"line_start":200,"line_end":200,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":107656,"byte_end":107663,"line_start":201,"line_end":201,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":669},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":108554,"byte_end":108563,"line_start":235,"line_end":235,"column_start":8,"column_end":17},"name":"try_join5","qualname":"::future::try_join::try_join5","value":"pub fn try_join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> TryJoin5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>, Fut5: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":108032,"byte_end":108092,"line_start":217,"line_end":217,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":108093,"byte_end":108096,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":108097,"byte_end":108111,"line_start":219,"line_end":219,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":108112,"byte_end":108115,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":108116,"byte_end":108123,"line_start":221,"line_end":221,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":108124,"byte_end":108165,"line_start":222,"line_end":222,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":108166,"byte_end":108190,"line_start":223,"line_end":223,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":108191,"byte_end":108194,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":108195,"byte_end":108240,"line_start":225,"line_end":225,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":108241,"byte_end":108286,"line_start":226,"line_end":226,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":108287,"byte_end":108332,"line_start":227,"line_end":227,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":108333,"byte_end":108378,"line_start":228,"line_end":228,"column_start":1,"column_end":46}},{"value":"/ let e = future::ready(Ok::<i32, i32>(5));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":108379,"byte_end":108424,"line_start":229,"line_end":229,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join5(a, b, c, d, e);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":108425,"byte_end":108474,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":108475,"byte_end":108478,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4, 5)));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":108479,"byte_end":108528,"line_start":232,"line_end":232,"column_start":1,"column_end":50}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":108529,"byte_end":108538,"line_start":233,"line_end":233,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":108539,"byte_end":108546,"line_start":234,"line_end":234,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":711},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join_all.rs","byte_start":109949,"byte_end":109959,"line_start":32,"line_end":32,"column_start":12,"column_end":22},"name":"TryJoinAll","qualname":"::future::try_join_all::TryJoinAll","value":"TryJoinAll {  }","parent":null,"children":[{"krate":0,"index":713}],"decl_id":null,"docs":" Future for the [`try_join_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_join_all`] function.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join_all.rs","byte_start":109824,"byte_end":109869,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join_all.rs","byte_start":109870,"byte_end":109937,"line_start":31,"line_end":31,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":717},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join_all.rs","byte_start":111578,"byte_end":111590,"line_start":90,"line_end":90,"column_start":8,"column_end":20},"name":"try_join_all","qualname":"::future::try_join_all::try_join_all","value":"pub fn try_join_all<I>(I) -> TryJoinAll<I::Item> where I: IntoIterator,\nI::Item: TryFuture","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents either a collection of the results of the\n futures given or an error.","sig":null,"attributes":[{"value":"/ Creates a future which represents either a collection of the results of the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join_all.rs","byte_start":110329,"byte_end":110408,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ futures given or an error.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join_all.rs","byte_start":110409,"byte_end":110439,"line_start":53,"line_end":53,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join_all.rs","byte_start":110440,"byte_end":110443,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join_all.rs","byte_start":110444,"byte_end":110523,"line_start":55,"line_end":55,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join_all.rs","byte_start":110524,"byte_end":110604,"line_start":56,"line_end":56,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join_all.rs","byte_start":110605,"byte_end":110623,"line_start":57,"line_end":57,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join_all.rs","byte_start":110624,"byte_end":110627,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ If any future returns an error then all other futures will be canceled and","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join_all.rs","byte_start":110628,"byte_end":110706,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/ an error will be returned immediately. If all futures complete successfully,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join_all.rs","byte_start":110707,"byte_end":110787,"line_start":60,"line_end":60,"column_start":1,"column_end":81}},{"value":"/ however, then the returned future will succeed with a `Vec` of all the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join_all.rs","byte_start":110788,"byte_end":110862,"line_start":61,"line_end":61,"column_start":1,"column_end":75}},{"value":"/ successful results.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join_all.rs","byte_start":110863,"byte_end":110886,"line_start":62,"line_end":62,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join_all.rs","byte_start":110887,"byte_end":110890,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join_all.rs","byte_start":110891,"byte_end":110968,"line_start":64,"line_end":64,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join_all.rs","byte_start":110969,"byte_end":111026,"line_start":65,"line_end":65,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join_all.rs","byte_start":111027,"byte_end":111030,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join_all.rs","byte_start":111031,"byte_end":111045,"line_start":67,"line_end":67,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join_all.rs","byte_start":111046,"byte_end":111049,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join_all.rs","byte_start":111050,"byte_end":111057,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join_all.rs","byte_start":111058,"byte_end":111099,"line_start":70,"line_end":70,"column_start":1,"column_end":42}},{"value":"/ use futures::future::{self, try_join_all};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join_all.rs","byte_start":111100,"byte_end":111146,"line_start":71,"line_end":71,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join_all.rs","byte_start":111147,"byte_end":111150,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join_all.rs","byte_start":111151,"byte_end":111174,"line_start":73,"line_end":73,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join_all.rs","byte_start":111175,"byte_end":111209,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(2),","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join_all.rs","byte_start":111210,"byte_end":111244,"line_start":75,"line_end":75,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join_all.rs","byte_start":111245,"byte_end":111279,"line_start":76,"line_end":76,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join_all.rs","byte_start":111280,"byte_end":111286,"line_start":77,"line_end":77,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join_all.rs","byte_start":111287,"byte_end":111290,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Ok(vec![1, 2, 3]));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join_all.rs","byte_start":111291,"byte_end":111354,"line_start":79,"line_end":79,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join_all.rs","byte_start":111355,"byte_end":111358,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join_all.rs","byte_start":111359,"byte_end":111382,"line_start":81,"line_end":81,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join_all.rs","byte_start":111383,"byte_end":111417,"line_start":82,"line_end":82,"column_start":1,"column_end":35}},{"value":"/     future::err::<u32, u32>(2),","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join_all.rs","byte_start":111418,"byte_end":111453,"line_start":83,"line_end":83,"column_start":1,"column_end":36}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join_all.rs","byte_start":111454,"byte_end":111488,"line_start":84,"line_end":84,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join_all.rs","byte_start":111489,"byte_end":111495,"line_start":85,"line_end":85,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join_all.rs","byte_start":111496,"byte_end":111499,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Err(2));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join_all.rs","byte_start":111500,"byte_end":111552,"line_start":87,"line_end":87,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join_all.rs","byte_start":111553,"byte_end":111562,"line_start":88,"line_end":88,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join_all.rs","byte_start":111563,"byte_end":111570,"line_start":89,"line_end":89,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5211},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":113419,"byte_end":113428,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"TrySelect","qualname":"::future::try_select::TrySelect","value":"TrySelect {  }","parent":null,"children":[{"krate":0,"index":5214}],"decl_id":null,"docs":" Future for the [`try_select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_select()`] function.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":113277,"byte_end":113322,"line_start":6,"line_end":6,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":113323,"byte_end":113390,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":745},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":115013,"byte_end":115023,"line_start":50,"line_end":50,"column_start":8,"column_end":18},"name":"try_select","qualname":"::future::try_select::try_select","value":"pub fn try_select<A, B>(A, B) -> TrySelect<A, B> where A: TryFuture + Unpin,\nB: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":113522,"byte_end":113592,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":113593,"byte_end":113596,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":113597,"byte_end":113675,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":113676,"byte_end":113752,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":113753,"byte_end":113825,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":113826,"byte_end":113829,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":113830,"byte_end":113902,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":113903,"byte_end":113931,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":113932,"byte_end":113935,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":113936,"byte_end":114003,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ success/error type you can use the `Either::factor_first` method to","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":114004,"byte_end":114075,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":114076,"byte_end":114126,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":114127,"byte_end":114130,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":114131,"byte_end":114145,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":114146,"byte_end":114149,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":114150,"byte_end":114157,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt, TryFuture, TryFutureExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":114158,"byte_end":114242,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":114243,"byte_end":114246,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's try_join implemented on top of select","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":114247,"byte_end":114304,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":114305,"byte_end":114308,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ fn try_join<A, B, E>(a: A, b: B) -> impl TryFuture<Ok=(A::Ok, B::Ok), Error=E>","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":114309,"byte_end":114391,"line_start":35,"line_end":35,"column_start":1,"column_end":83}},{"value":"/      where A: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":114392,"byte_end":114449,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/            B: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":114450,"byte_end":114507,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/            E: 'static,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":114508,"byte_end":114534,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":114535,"byte_end":114540,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/     future::try_select(a, b).then(|res| -> Box<dyn Future<Output = Result<_, _>> + Unpin> {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":114541,"byte_end":114636,"line_start":40,"line_end":40,"column_start":1,"column_end":96}},{"value":"/         match res {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":114637,"byte_end":114660,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/             Ok(Either::Left((x, b))) => Box::new(b.map_ok(move |y| (x, y))),","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":114661,"byte_end":114741,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/             Ok(Either::Right((y, a))) => Box::new(a.map_ok(move |x| (x, y))),","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":114742,"byte_end":114823,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/             Err(Either::Left((e, _))) => Box::new(future::err(e)),","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":114824,"byte_end":114894,"line_start":44,"line_end":44,"column_start":1,"column_end":71}},{"value":"/             Err(Either::Right((e, _))) => Box::new(future::err(e)),","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":114895,"byte_end":114966,"line_start":45,"line_end":45,"column_start":1,"column_end":72}},{"value":"/         }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":114967,"byte_end":114980,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":114981,"byte_end":114991,"line_start":47,"line_end":47,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":114992,"byte_end":114997,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":114998,"byte_end":115005,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5219},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select_ok.rs","byte_start":116512,"byte_end":116520,"line_start":12,"line_end":12,"column_start":12,"column_end":20},"name":"SelectOk","qualname":"::future::select_ok::SelectOk","value":"SelectOk {  }","parent":null,"children":[{"krate":0,"index":5221}],"decl_id":null,"docs":" Future for the [`select_ok`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_ok`] function.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select_ok.rs","byte_start":116373,"byte_end":116415,"line_start":9,"line_end":9,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select_ok.rs","byte_start":116433,"byte_end":116500,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":770},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select_ok.rs","byte_start":117242,"byte_end":117251,"line_start":31,"line_end":31,"column_start":8,"column_end":17},"name":"select_ok","qualname":"::future::select_ok::select_ok","value":"pub fn select_ok<I>(I) -> SelectOk<I::Item> where I: IntoIterator,\nI::Item: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select the first successful future over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select the first successful future over a list of futures.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select_ok.rs","byte_start":116597,"byte_end":116691,"line_start":18,"line_end":18,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select_ok.rs","byte_start":116692,"byte_end":116695,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready and Ok. Unlike","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select_ok.rs","byte_start":116696,"byte_end":116785,"line_start":20,"line_end":20,"column_start":1,"column_end":90}},{"value":"/ `select_all`, this will only return the first successful completion, or the last","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select_ok.rs","byte_start":116786,"byte_end":116870,"line_start":21,"line_end":21,"column_start":1,"column_end":85}},{"value":"/ failure. This is useful in contexts where any success is desired and failures","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select_ok.rs","byte_start":116871,"byte_end":116952,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/ are ignored, unless all the futures fail.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select_ok.rs","byte_start":116953,"byte_end":116998,"line_start":23,"line_end":23,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select_ok.rs","byte_start":116999,"byte_end":117002,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/  This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select_ok.rs","byte_start":117003,"byte_end":117081,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select_ok.rs","byte_start":117082,"byte_end":117139,"line_start":26,"line_end":26,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select_ok.rs","byte_start":117140,"byte_end":117143,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select_ok.rs","byte_start":117144,"byte_end":117156,"line_start":28,"line_end":28,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select_ok.rs","byte_start":117157,"byte_end":117160,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select_ok.rs","byte_start":117161,"byte_end":117234,"line_start":30,"line_end":30,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5228},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":119520,"byte_end":119524,"line_start":13,"line_end":13,"column_start":5,"column_end":9},"name":"Left","qualname":"::future::either::Either::Left","value":"Either::Left(A)","parent":{"krate":0,"index":5225},"children":[],"decl_id":null,"docs":" First branch of the type\n","sig":null,"attributes":[{"value":"/ First branch of the type","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":119487,"byte_end":119515,"line_start":12,"line_end":12,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5231},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":119580,"byte_end":119585,"line_start":15,"line_end":15,"column_start":5,"column_end":10},"name":"Right","qualname":"::future::either::Either::Right","value":"Either::Right(B)","parent":{"krate":0,"index":5225},"children":[],"decl_id":null,"docs":" Second branch of the type\n","sig":null,"attributes":[{"value":"/ Second branch of the type","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":119546,"byte_end":119575,"line_start":14,"line_end":14,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":5225},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":119468,"byte_end":119474,"line_start":11,"line_end":11,"column_start":10,"column_end":16},"name":"Either","qualname":"::future::either::Either","value":"pub enum Either<A, B> {\n\n    /// First branch of the type\n    Left(A),\n\n    /// Second branch of the type\n    Right(B),\n}","parent":null,"children":[{"krate":0,"index":5228},{"krate":0,"index":5231}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single\n type.\n","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":119324,"byte_end":119424,"line_start":8,"line_end":8,"column_start":1,"column_end":101}},{"value":"/ type.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":119425,"byte_end":119434,"line_start":9,"line_end":9,"column_start":1,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":120139,"byte_end":120151,"line_start":33,"line_end":33,"column_start":12,"column_end":24},"name":"factor_first","qualname":"<Either<(T, A), (T, B)>>::factor_first","value":"pub fn factor_first(Self) -> (T, Either<A, B>)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":119991,"byte_end":120049,"line_start":30,"line_end":30,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":120054,"byte_end":120057,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the first element of the pairs.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":120062,"byte_end":120127,"line_start":32,"line_end":32,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":808},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":120531,"byte_end":120544,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"factor_second","qualname":"<Either<(A, T), (B, T)>>::factor_second","value":"pub fn factor_second(Self) -> (Either<A, B>, T)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":120382,"byte_end":120440,"line_start":42,"line_end":42,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":120445,"byte_end":120448,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the second element of the pairs.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":120453,"byte_end":120519,"line_start":44,"line_end":44,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":811},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":120832,"byte_end":120842,"line_start":55,"line_end":55,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Either<T, T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extract the value of an either over two equivalent types.\n","sig":null,"attributes":[{"value":"/ Extract the value of an either over two equivalent types.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":120759,"byte_end":120820,"line_start":54,"line_end":54,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":9298},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5528305,"byte_end":5528314,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"Abortable","qualname":"::future::abortable::Abortable","value":"Abortable {  }","parent":null,"children":[{"krate":0,"index":9300},{"krate":0,"index":9301}],"decl_id":null,"docs":" A future which can be remotely short-circuited using an `AbortHandle`.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5257},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5529215,"byte_end":5529218,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<Abortable<Fut>>::new","value":"pub fn new(Fut, AbortRegistration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future using an existing `AbortRegistration`.\n `AbortRegistration`s can be acquired through `AbortHandle::new`.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future using an existing `AbortRegistration`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5528448,"byte_end":5528523,"line_start":22,"line_end":22,"column_start":5,"column_end":80}},{"value":"/ `AbortRegistration`s can be acquired through `AbortHandle::new`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5528528,"byte_end":5528596,"line_start":23,"line_end":23,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5528601,"byte_end":5528604,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ When `abort` is called on the handle tied to `reg` or if `abort` has","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5528609,"byte_end":5528681,"line_start":25,"line_end":25,"column_start":5,"column_end":77}},{"value":"/ already been called, the future will complete immediately without making","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5528686,"byte_end":5528762,"line_start":26,"line_end":26,"column_start":5,"column_end":81}},{"value":"/ any further progress.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5528767,"byte_end":5528792,"line_start":27,"line_end":27,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5528797,"byte_end":5528800,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5528805,"byte_end":5528817,"line_start":29,"line_end":29,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5528822,"byte_end":5528825,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5528830,"byte_end":5528837,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5528842,"byte_end":5528883,"line_start":32,"line_end":32,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{Abortable, AbortHandle, Aborted};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5528888,"byte_end":5528947,"line_start":33,"line_end":33,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5528952,"byte_end":5528955,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5528960,"byte_end":5529029,"line_start":35,"line_end":35,"column_start":5,"column_end":74}},{"value":"/ let future = Abortable::new(async { 2 }, abort_registration);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5529034,"byte_end":5529099,"line_start":36,"line_end":36,"column_start":5,"column_end":70}},{"value":"/ abort_handle.abort();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5529104,"byte_end":5529129,"line_start":37,"line_end":37,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(future.await, Err(Aborted));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5529134,"byte_end":5529177,"line_start":38,"line_end":38,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5529182,"byte_end":5529191,"line_start":39,"line_end":39,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5529196,"byte_end":5529203,"line_start":40,"line_end":40,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5276},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5529541,"byte_end":5529558,"line_start":53,"line_end":53,"column_start":12,"column_end":29},"name":"AbortRegistration","qualname":"::future::abortable::AbortRegistration","value":"AbortRegistration {  }","parent":null,"children":[{"krate":0,"index":5277}],"decl_id":null,"docs":" A registration handle for a `Abortable` future.\n Values of this type can be acquired from `AbortHandle::new` and are used\n in calls to `Abortable::new`.\n","sig":null,"attributes":[{"value":"/ A registration handle for a `Abortable` future.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5529350,"byte_end":5529401,"line_start":49,"line_end":49,"column_start":1,"column_end":52}},{"value":"/ Values of this type can be acquired from `AbortHandle::new` and are used","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5529402,"byte_end":5529478,"line_start":50,"line_end":50,"column_start":1,"column_end":77}},{"value":"/ in calls to `Abortable::new`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5529479,"byte_end":5529512,"line_start":51,"line_end":51,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":5280},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5529665,"byte_end":5529676,"line_start":59,"line_end":59,"column_start":12,"column_end":23},"name":"AbortHandle","qualname":"::future::abortable::AbortHandle","value":"AbortHandle {  }","parent":null,"children":[{"krate":0,"index":5281}],"decl_id":null,"docs":" A handle to a `Abortable` future.\n","sig":null,"attributes":[{"value":"/ A handle to a `Abortable` future.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5529592,"byte_end":5529629,"line_start":57,"line_end":57,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":5259},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5530346,"byte_end":5530354,"line_start":81,"line_end":81,"column_start":12,"column_end":20},"name":"new_pair","qualname":"<AbortHandle>::new_pair","value":"pub fn new_pair() -> (Self, AbortRegistration)","parent":null,"children":[],"decl_id":null,"docs":" Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used\n to abort a running future.","sig":null,"attributes":[{"value":"/ Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5529733,"byte_end":5529807,"line_start":64,"line_end":64,"column_start":5,"column_end":79}},{"value":"/ to abort a running future.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5529812,"byte_end":5529842,"line_start":65,"line_end":65,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5529847,"byte_end":5529850,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with a call to `Abortable::new`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5529855,"byte_end":5529923,"line_start":67,"line_end":67,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5529928,"byte_end":5529931,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5529936,"byte_end":5529948,"line_start":69,"line_end":69,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5529953,"byte_end":5529956,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5529961,"byte_end":5529968,"line_start":71,"line_end":71,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5529973,"byte_end":5530014,"line_start":72,"line_end":72,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{Abortable, AbortHandle, Aborted};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5530019,"byte_end":5530078,"line_start":73,"line_end":73,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5530083,"byte_end":5530086,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5530091,"byte_end":5530160,"line_start":75,"line_end":75,"column_start":5,"column_end":74}},{"value":"/ let future = Abortable::new(async { 2 }, abort_registration);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5530165,"byte_end":5530230,"line_start":76,"line_end":76,"column_start":5,"column_end":70}},{"value":"/ abort_handle.abort();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5530235,"byte_end":5530260,"line_start":77,"line_end":77,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(future.await, Err(Aborted));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5530265,"byte_end":5530308,"line_start":78,"line_end":78,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5530313,"byte_end":5530322,"line_start":79,"line_end":79,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5530327,"byte_end":5530334,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":5260},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5531250,"byte_end":5531259,"line_start":113,"line_end":113,"column_start":8,"column_end":17},"name":"abortable","qualname":"::future::abortable::abortable","value":"pub fn abortable<Fut>(Fut) -> (Abortable<Fut>, AbortHandle) where Fut: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future and a `AbortHandle` which can be used to stop it.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future and a `AbortHandle` which can be used to stop it.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5530881,"byte_end":5530967,"line_start":106,"line_end":106,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5530968,"byte_end":5530971,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ This function is a convenient (but less flexible) alternative to calling","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5530972,"byte_end":5531048,"line_start":108,"line_end":108,"column_start":1,"column_end":77}},{"value":"/ `AbortHandle::new` and `Abortable::new` manually.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5531049,"byte_end":5531102,"line_start":109,"line_end":109,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5531103,"byte_end":5531106,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5531107,"byte_end":5531184,"line_start":111,"line_end":111,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5531185,"byte_end":5531242,"line_start":112,"line_end":112,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":5291},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5531563,"byte_end":5531570,"line_start":125,"line_end":125,"column_start":12,"column_end":19},"name":"Aborted","qualname":"::future::abortable::Aborted","value":"","parent":null,"children":[],"decl_id":null,"docs":" Indicator that the `Abortable` future was aborted.\n","sig":null,"attributes":[{"value":"/ Indicator that the `Abortable` future was aborted.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5531452,"byte_end":5531506,"line_start":123,"line_end":123,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":5269},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5533183,"byte_end":5533188,"line_start":172,"line_end":172,"column_start":12,"column_end":17},"name":"abort","qualname":"<AbortHandle>::abort","value":"pub fn abort(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Abort the `Abortable` future associated with this handle.","sig":null,"attributes":[{"value":"/ Abort the `Abortable` future associated with this handle.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5532819,"byte_end":5532880,"line_start":166,"line_end":166,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5532885,"byte_end":5532888,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ Notifies the Abortable future associated with this handle that it","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5532893,"byte_end":5532962,"line_start":168,"line_end":168,"column_start":5,"column_end":74}},{"value":"/ should abort. Note that if the future is currently being polled on","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5532967,"byte_end":5533037,"line_start":169,"line_end":169,"column_start":5,"column_end":75}},{"value":"/ another thread, it will not immediately stop running. Instead, it will","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5533042,"byte_end":5533116,"line_start":170,"line_end":170,"column_start":5,"column_end":79}},{"value":"/ continue to run until its poll method returns.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5533121,"byte_end":5533171,"line_start":171,"line_end":171,"column_start":5,"column_end":55}}]},{"kind":"Mod","id":{"krate":0,"index":837},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","parent":null,"children":[{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":1771},{"krate":0,"index":1772},{"krate":0,"index":1773},{"krate":0,"index":1774},{"krate":0,"index":1775},{"krate":0,"index":1776},{"krate":0,"index":1777},{"krate":0,"index":1778},{"krate":0,"index":1779},{"krate":0,"index":1780},{"krate":0,"index":1781},{"krate":0,"index":1782},{"krate":0,"index":1783},{"krate":0,"index":1784},{"krate":0,"index":1785},{"krate":0,"index":1786},{"krate":0,"index":1787},{"krate":0,"index":1788},{"krate":0,"index":1789},{"krate":0,"index":1790},{"krate":0,"index":1791},{"krate":0,"index":1792},{"krate":0,"index":1793},{"krate":0,"index":1794},{"krate":0,"index":1795},{"krate":0,"index":1796},{"krate":0,"index":1797},{"krate":0,"index":1798},{"krate":0,"index":1799},{"krate":0,"index":1800},{"krate":0,"index":1801},{"krate":0,"index":1802},{"krate":0,"index":1803},{"krate":0,"index":1804},{"krate":0,"index":1805},{"krate":0,"index":1806},{"krate":0,"index":1807},{"krate":0,"index":2319},{"krate":0,"index":2320},{"krate":0,"index":2321},{"krate":0,"index":2322},{"krate":0,"index":2323},{"krate":0,"index":2324},{"krate":0,"index":2325},{"krate":0,"index":2326},{"krate":0,"index":2327},{"krate":0,"index":2328},{"krate":0,"index":2329},{"krate":0,"index":2330},{"krate":0,"index":2331},{"krate":0,"index":2332},{"krate":0,"index":2333},{"krate":0,"index":2334},{"krate":0,"index":2335},{"krate":0,"index":2336},{"krate":0,"index":2337},{"krate":0,"index":2338},{"krate":0,"index":2339},{"krate":0,"index":2340},{"krate":0,"index":2341},{"krate":0,"index":2342},{"krate":0,"index":2343},{"krate":0,"index":2344},{"krate":0,"index":2345},{"krate":0,"index":2360},{"krate":0,"index":2361},{"krate":0,"index":2362},{"krate":0,"index":2363},{"krate":0,"index":2383},{"krate":0,"index":2384},{"krate":0,"index":2385},{"krate":0,"index":2386},{"krate":0,"index":2410},{"krate":0,"index":2411},{"krate":0,"index":2412},{"krate":0,"index":2413},{"krate":0,"index":2437},{"krate":0,"index":2438},{"krate":0,"index":2439},{"krate":0,"index":2440},{"krate":0,"index":2464},{"krate":0,"index":2465},{"krate":0,"index":2466},{"krate":0,"index":2467},{"krate":0,"index":2491},{"krate":0,"index":2492},{"krate":0,"index":2493},{"krate":0,"index":2494},{"krate":0,"index":2517},{"krate":0,"index":2518},{"krate":0,"index":2519},{"krate":0,"index":2520},{"krate":0,"index":2554},{"krate":0,"index":2555},{"krate":0,"index":2556},{"krate":0,"index":2557},{"krate":0,"index":2593},{"krate":0,"index":2594},{"krate":0,"index":2595},{"krate":0,"index":8343},{"krate":0,"index":8418},{"krate":0,"index":8419},{"krate":0,"index":8649},{"krate":0,"index":8650},{"krate":0,"index":8699},{"krate":0,"index":8700},{"krate":0,"index":8701},{"krate":0,"index":2596}],"decl_id":null,"docs":" Asynchronous streams.","sig":null,"attributes":[{"value":"! Asynchronous streams.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":127106,"byte_end":127131,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":127132,"byte_end":127135,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":127136,"byte_end":127161,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":127162,"byte_end":127165,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! - The [`Stream`] trait, for objects that can asynchronously produce a","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":127166,"byte_end":127239,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"!   sequence of values.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":127240,"byte_end":127265,"line_start":6,"line_end":6,"column_start":1,"column_end":26}},{"value":"! - The [`StreamExt`] and [`TryStreamExt`] trait, which provides adapters for","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":127266,"byte_end":127345,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"!   chaining and composing streams.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":127346,"byte_end":127383,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"! - Top-level stream constructors like [`iter`](iter()) which creates a","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":127384,"byte_end":127457,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"!   stream from an iterator.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":127458,"byte_end":127488,"line_start":10,"line_end":10,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":5311},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\chain.rs","byte_start":180933,"byte_end":180938,"line_start":11,"line_end":11,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":5314},{"krate":0,"index":5315}],"decl_id":null,"docs":" Stream for the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5360},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\collect.rs","byte_start":183107,"byte_end":183114,"line_start":13,"line_end":13,"column_start":16,"column_end":23},"name":"Collect","qualname":"::stream::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":5363},{"krate":0,"index":5364}],"decl_id":null,"docs":" Future for the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5411},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\unzip.rs","byte_start":184577,"byte_end":184582,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Unzip","qualname":"::stream::stream::unzip::Unzip","value":"Unzip {  }","parent":null,"children":[{"krate":0,"index":5415},{"krate":0,"index":5416},{"krate":0,"index":5417}],"decl_id":null,"docs":" Future for the [`unzip`](super::StreamExt::unzip) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5469},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\concat.rs","byte_start":186497,"byte_end":186503,"line_start":12,"line_end":12,"column_start":16,"column_end":22},"name":"Concat","qualname":"::stream::stream::concat::Concat","value":"Concat {  }","parent":null,"children":[{"krate":0,"index":5471},{"krate":0,"index":5472}],"decl_id":null,"docs":" Future for the [`concat`](super::StreamExt::concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5509},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\cycle.rs","byte_start":188258,"byte_end":188263,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Cycle","qualname":"::stream::stream::cycle::Cycle","value":"Cycle {  }","parent":null,"children":[{"krate":0,"index":5511},{"krate":0,"index":5512}],"decl_id":null,"docs":" Stream for the [`cycle`](super::StreamExt::cycle) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5549},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\enumerate.rs","byte_start":189943,"byte_end":189952,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"name":"Enumerate","qualname":"::stream::stream::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":5551},{"krate":0,"index":5552}],"decl_id":null,"docs":" Stream for the [`enumerate`](super::StreamExt::enumerate) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5588},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\filter.rs","byte_start":191640,"byte_end":191646,"line_start":15,"line_end":15,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":5592},{"krate":0,"index":5593},{"krate":0,"index":5594},{"krate":0,"index":5595}],"decl_id":null,"docs":" Stream for the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5653},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\filter_map.rs","byte_start":195152,"byte_end":195161,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":5657},{"krate":0,"index":5658},{"krate":0,"index":5659}],"decl_id":null,"docs":" Stream for the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5721},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\flatten.rs","byte_start":198232,"byte_end":198239,"line_start":13,"line_end":13,"column_start":16,"column_end":23},"name":"Flatten","qualname":"::stream::stream::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":5724},{"krate":0,"index":5725}],"decl_id":null,"docs":" Stream for the [`flatten`](super::StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5769},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":132186,"byte_end":132193,"line_start":60,"line_end":60,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::stream::stream::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":5771}],"decl_id":null,"docs":" Stream for the [`flatten`](StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5822},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\fold.rs","byte_start":200056,"byte_end":200060,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Fold","qualname":"::stream::stream::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":5827},{"krate":0,"index":5828},{"krate":0,"index":5829},{"krate":0,"index":5830}],"decl_id":null,"docs":" Future for the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5891},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\for_each.rs","byte_start":202623,"byte_end":202630,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"ForEach","qualname":"::stream::stream::for_each::ForEach","value":"ForEach {  }","parent":null,"children":[{"krate":0,"index":5895},{"krate":0,"index":5896},{"krate":0,"index":5897}],"decl_id":null,"docs":" Future for the [`for_each`](super::StreamExt::for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5953},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\fuse.rs","byte_start":204656,"byte_end":204660,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":5955},{"krate":0,"index":5956}],"decl_id":null,"docs":" Stream for the [`fuse`](super::StreamExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1208},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\fuse.rs","byte_start":205112,"byte_end":205119,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"is_done","qualname":"<Fuse<St>>::is_done","value":"pub fn is_done(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the underlying stream has finished or not.","sig":null,"attributes":[{"value":"/ Returns whether the underlying stream has finished or not.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\fuse.rs","byte_start":204843,"byte_end":204905,"line_start":25,"line_end":25,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\fuse.rs","byte_start":204910,"byte_end":204913,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then all future calls to poll are","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\fuse.rs","byte_start":204918,"byte_end":204986,"line_start":27,"line_end":27,"column_start":5,"column_end":73}},{"value":"/ guaranteed to return `None`. If this returns `false`, then the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\fuse.rs","byte_start":204991,"byte_end":205057,"line_start":28,"line_end":28,"column_start":5,"column_end":71}},{"value":"/ underlying stream is still in use.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\fuse.rs","byte_start":205062,"byte_end":205100,"line_start":29,"line_end":29,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":5992},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":206501,"byte_end":206513,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"StreamFuture","qualname":"::stream::stream::into_future::StreamFuture","value":"StreamFuture {  }","parent":null,"children":[{"krate":0,"index":5994}],"decl_id":null,"docs":" Future for the [`into_future`](super::StreamExt::into_future) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`into_future`](super::StreamExt::into_future) method.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":206331,"byte_end":206404,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":206422,"byte_end":206489,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1232},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":207076,"byte_end":207083,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamFuture<St>>::get_ref","value":"pub fn get_ref(&Self) -> Option<&St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":206684,"byte_end":206757,"line_start":20,"line_end":20,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":206762,"byte_end":206779,"line_start":21,"line_end":21,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":206784,"byte_end":206787,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":206792,"byte_end":206873,"line_start":23,"line_end":23,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":206878,"byte_end":206960,"line_start":24,"line_end":24,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":206965,"byte_end":207044,"line_start":25,"line_end":25,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":207049,"byte_end":207064,"line_start":26,"line_end":26,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1233},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":207694,"byte_end":207701,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamFuture<St>>::get_mut","value":"pub fn get_mut(&mut Self) -> Option<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":207148,"byte_end":207215,"line_start":31,"line_end":31,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":207220,"byte_end":207251,"line_start":32,"line_end":32,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":207256,"byte_end":207259,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":207264,"byte_end":207337,"line_start":34,"line_end":34,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":207342,"byte_end":207397,"line_start":35,"line_end":35,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":207402,"byte_end":207405,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":207410,"byte_end":207491,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":207496,"byte_end":207578,"line_start":38,"line_end":38,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":207583,"byte_end":207662,"line_start":39,"line_end":39,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":207667,"byte_end":207682,"line_start":40,"line_end":40,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1234},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":208327,"byte_end":208338,"line_start":55,"line_end":55,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<StreamFuture<St>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Option<Pin<&mut St>>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":207774,"byte_end":207848,"line_start":45,"line_end":45,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":207853,"byte_end":207884,"line_start":46,"line_end":46,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":207889,"byte_end":207892,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":207897,"byte_end":207970,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":207975,"byte_end":208030,"line_start":49,"line_end":49,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":208035,"byte_end":208038,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":208043,"byte_end":208124,"line_start":51,"line_end":51,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":208129,"byte_end":208211,"line_start":52,"line_end":52,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":208216,"byte_end":208295,"line_start":53,"line_end":53,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":208300,"byte_end":208315,"line_start":54,"line_end":54,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1235},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":208971,"byte_end":208981,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamFuture<St>>::into_inner","value":"pub fn into_inner(Self) -> Option<St>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":208451,"byte_end":208513,"line_start":59,"line_end":59,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":208518,"byte_end":208521,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":208526,"byte_end":208598,"line_start":61,"line_end":61,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":208603,"byte_end":208674,"line_start":62,"line_end":62,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":208679,"byte_end":208682,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":208687,"byte_end":208768,"line_start":64,"line_end":64,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":208773,"byte_end":208855,"line_start":65,"line_end":65,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":208860,"byte_end":208939,"line_start":66,"line_end":66,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":208944,"byte_end":208959,"line_start":67,"line_end":67,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6001},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":133313,"byte_end":133320,"line_start":97,"line_end":97,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::stream::stream::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":6004}],"decl_id":null,"docs":" Stream for the [`inspect`](StreamExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6067},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\map.rs","byte_start":210028,"byte_end":210031,"line_start":15,"line_end":15,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":6070},{"krate":0,"index":6071}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6120},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":133681,"byte_end":133688,"line_start":108,"line_end":108,"column_start":5,"column_end":12},"name":"FlatMap","qualname":"::stream::stream::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":6124}],"decl_id":null,"docs":" Stream for the [`flat_map`](StreamExt::flat_map) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6199},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\next.rs","byte_start":211758,"byte_end":211762,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":6202}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\next.rs","byte_start":211602,"byte_end":211661,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\next.rs","byte_start":211679,"byte_end":211746,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6207},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\select_next_some.rs","byte_start":212793,"byte_end":212807,"line_start":12,"line_end":12,"column_start":12,"column_end":26},"name":"SelectNextSome","qualname":"::stream::stream::select_next_some::SelectNextSome","value":"SelectNextSome {  }","parent":null,"children":[{"krate":0,"index":6210}],"decl_id":null,"docs":" Future for the [`select_next_some`](super::StreamExt::select_next_some)\n method.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_next_some`](super::StreamExt::select_next_some)","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\select_next_some.rs","byte_start":212609,"byte_end":212684,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ method.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\select_next_some.rs","byte_start":212685,"byte_end":212696,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\select_next_some.rs","byte_start":212714,"byte_end":212781,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6220},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\peek.rs","byte_start":214342,"byte_end":214350,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"name":"Peekable","qualname":"::stream::stream::peek::Peekable","value":"Peekable {  }","parent":null,"children":[{"krate":0,"index":6222},{"krate":0,"index":6223}],"decl_id":null,"docs":" A `Stream` that implements a `peek` method.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1345},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\peek.rs","byte_start":214823,"byte_end":214827,"line_start":39,"line_end":39,"column_start":12,"column_end":16},"name":"peek","qualname":"<Peekable<St>>::peek","value":"pub fn peek(Pin<&mut Self>) -> Peek<, St>","parent":null,"children":[],"decl_id":null,"docs":" Produces a `Peek` future which retrieves a reference to the next item\n in the stream, or `None` if the underlying stream terminates.\n","sig":null,"attributes":[{"value":"/ Produces a `Peek` future which retrieves a reference to the next item","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\peek.rs","byte_start":214668,"byte_end":214741,"line_start":37,"line_end":37,"column_start":5,"column_end":78}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\peek.rs","byte_start":214746,"byte_end":214811,"line_start":38,"line_end":38,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1346},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\peek.rs","byte_start":215152,"byte_end":215161,"line_start":47,"line_end":47,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<Peekable<St>>::poll_peek","value":"pub fn poll_peek(Pin<&mut Self>, &mut Context) -> Poll<Option<&St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a reference to the next item in the stream.","sig":null,"attributes":[{"value":"/ Peek retrieves a reference to the next item in the stream.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\peek.rs","byte_start":214914,"byte_end":214976,"line_start":43,"line_end":43,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\peek.rs","byte_start":214981,"byte_end":214984,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ This method polls the underlying stream and return either a reference","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\peek.rs","byte_start":214989,"byte_end":215062,"line_start":45,"line_end":45,"column_start":5,"column_end":78}},{"value":"/ to the next item if the stream is ready or passes through any errors.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\peek.rs","byte_start":215067,"byte_end":215140,"line_start":46,"line_end":46,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":6259},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\peek.rs","byte_start":216883,"byte_end":216887,"line_start":108,"line_end":108,"column_start":16,"column_end":20},"name":"Peek","qualname":"::stream::stream::peek::Peek","value":"Peek {  }","parent":null,"children":[{"krate":0,"index":6262}],"decl_id":null,"docs":" Future for the [`Peekable::peek()`](self::Peekable::peek) function from [`Peekable`]\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6305},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\skip.rs","byte_start":218195,"byte_end":218199,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":6307},{"krate":0,"index":6308}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6344},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\skip_while.rs","byte_start":220101,"byte_end":220110,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":6348},{"krate":0,"index":6349},{"krate":0,"index":6350},{"krate":0,"index":6351},{"krate":0,"index":6352}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6418},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take.rs","byte_start":223754,"byte_end":223758,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":6420},{"krate":0,"index":6421}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6457},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_while.rs","byte_start":225849,"byte_end":225858,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":6461},{"krate":0,"index":6462},{"krate":0,"index":6463},{"krate":0,"index":6464},{"krate":0,"index":6465}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6526},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":229466,"byte_end":229475,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"name":"TakeUntil","qualname":"::stream::stream::take_until::TakeUntil","value":"TakeUntil {  }","parent":null,"children":[{"krate":0,"index":6529},{"krate":0,"index":6530},{"krate":0,"index":6531},{"krate":0,"index":6532}],"decl_id":null,"docs":" Stream for the [`take_until`](super::StreamExt::take_until) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1504},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":230855,"byte_end":230866,"line_start":64,"line_end":64,"column_start":12,"column_end":23},"name":"take_future","qualname":"<TakeUntil<St, Fut>>::take_future","value":"pub fn take_future(&mut Self) -> Option<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Extract the stopping future out of the combinator.\n The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.\n Taking out the future means the combinator will be yielding\n elements from the wrapped stream without ever stopping it.\n","sig":null,"attributes":[{"value":"/ Extract the stopping future out of the combinator.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":230555,"byte_end":230609,"line_start":60,"line_end":60,"column_start":5,"column_end":59}},{"value":"/ The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":230614,"byte_end":230708,"line_start":61,"line_end":61,"column_start":5,"column_end":99}},{"value":"/ Taking out the future means the combinator will be yielding","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":230713,"byte_end":230776,"line_start":62,"line_end":62,"column_start":5,"column_end":68}},{"value":"/ elements from the wrapped stream without ever stopping it.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":230781,"byte_end":230843,"line_start":63,"line_end":63,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1505},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":232150,"byte_end":232161,"line_start":108,"line_end":108,"column_start":12,"column_end":23},"name":"take_result","qualname":"<TakeUntil<St, Fut>>::take_result","value":"pub fn take_result(&mut Self) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Once the stopping future is resolved, this method can be used\n to extract the value returned by the stopping future.","sig":null,"attributes":[{"value":"/ Once the stopping future is resolved, this method can be used","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":231003,"byte_end":231068,"line_start":72,"line_end":72,"column_start":5,"column_end":70}},{"value":"/ to extract the value returned by the stopping future.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":231073,"byte_end":231130,"line_start":73,"line_end":73,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":231135,"byte_end":231138,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ This may be used to retrieve arbitrary data from the stopping","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":231143,"byte_end":231208,"line_start":75,"line_end":75,"column_start":5,"column_end":70}},{"value":"/ future, for example a reason why the stream was stopped.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":231213,"byte_end":231273,"line_start":76,"line_end":76,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":231278,"byte_end":231281,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` if the future isn't resolved yet,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":231286,"byte_end":231354,"line_start":78,"line_end":78,"column_start":5,"column_end":73}},{"value":"/ or if the result was already taken out.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":231359,"byte_end":231402,"line_start":79,"line_end":79,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":231407,"byte_end":231410,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":231415,"byte_end":231429,"line_start":81,"line_end":81,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":231434,"byte_end":231437,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":231442,"byte_end":231449,"line_start":83,"line_end":83,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":231454,"byte_end":231495,"line_start":84,"line_end":84,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":231500,"byte_end":231524,"line_start":85,"line_end":85,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":231529,"byte_end":231572,"line_start":86,"line_end":86,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":231577,"byte_end":231605,"line_start":87,"line_end":87,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":231610,"byte_end":231613,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":231618,"byte_end":231656,"line_start":89,"line_end":89,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":231661,"byte_end":231664,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":231669,"byte_end":231687,"line_start":91,"line_end":91,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":231692,"byte_end":231734,"line_start":92,"line_end":92,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":231739,"byte_end":231754,"line_start":93,"line_end":93,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":231759,"byte_end":231778,"line_start":94,"line_end":94,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":231783,"byte_end":231808,"line_start":95,"line_end":95,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":231813,"byte_end":231829,"line_start":96,"line_end":96,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(\"reason\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":231834,"byte_end":231867,"line_start":97,"line_end":97,"column_start":5,"column_end":38}},{"value":"/     }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":231872,"byte_end":231881,"line_start":98,"line_end":98,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":231886,"byte_end":231893,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":231898,"byte_end":231901,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.take_until(stop_fut);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":231906,"byte_end":231955,"line_start":101,"line_end":101,"column_start":5,"column_end":54}},{"value":"/ let _ = stream.by_ref().collect::<Vec<_>>().await;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":231960,"byte_end":232014,"line_start":102,"line_end":102,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":232019,"byte_end":232022,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ let result = stream.take_result().unwrap();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":232027,"byte_end":232074,"line_start":104,"line_end":104,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(result, \"reason\");","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":232079,"byte_end":232112,"line_start":105,"line_end":105,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":232117,"byte_end":232126,"line_start":106,"line_end":106,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":232131,"byte_end":232138,"line_start":107,"line_end":107,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1506},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":232337,"byte_end":232347,"line_start":114,"line_end":114,"column_start":12,"column_end":22},"name":"is_stopped","qualname":"<TakeUntil<St, Fut>>::is_stopped","value":"pub fn is_stopped(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the stream was stopped yet by the stopping future\n being resolved.\n","sig":null,"attributes":[{"value":"/ Whether the stream was stopped yet by the stopping future","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":232240,"byte_end":232301,"line_start":112,"line_end":112,"column_start":5,"column_end":66}},{"value":"/ being resolved.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":232306,"byte_end":232325,"line_start":113,"line_end":113,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":6583},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\then.rs","byte_start":234279,"byte_end":234283,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Then","qualname":"::stream::stream::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":6587},{"krate":0,"index":6588},{"krate":0,"index":6589}],"decl_id":null,"docs":" Stream for the [`then`](super::StreamExt::then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6651},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":236960,"byte_end":236963,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"Zip","qualname":"::stream::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":6654},{"krate":0,"index":6655},{"krate":0,"index":6656},{"krate":0,"index":6657}],"decl_id":null,"docs":" Stream for the [`zip`](super::StreamExt::zip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1570},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":237538,"byte_end":237545,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Zip<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":237430,"byte_end":237504,"line_start":32,"line_end":32,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":237509,"byte_end":237526,"line_start":33,"line_end":33,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1571},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":237901,"byte_end":237908,"line_start":43,"line_end":43,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Zip<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":237639,"byte_end":237707,"line_start":38,"line_end":38,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":237712,"byte_end":237743,"line_start":39,"line_end":39,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":237748,"byte_end":237751,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":237756,"byte_end":237829,"line_start":41,"line_end":41,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":237834,"byte_end":237889,"line_start":42,"line_end":42,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1572},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":238283,"byte_end":238294,"line_start":52,"line_end":52,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Zip<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":238014,"byte_end":238089,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":238094,"byte_end":238125,"line_start":48,"line_end":48,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":238130,"byte_end":238133,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":238138,"byte_end":238211,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":238216,"byte_end":238271,"line_start":51,"line_end":51,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1573},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":238700,"byte_end":238710,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Zip<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":238464,"byte_end":238527,"line_start":57,"line_end":57,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":238532,"byte_end":238535,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":238540,"byte_end":238612,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":238617,"byte_end":238688,"line_start":60,"line_end":60,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":6706},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\chunks.rs","byte_start":241552,"byte_end":241558,"line_start":16,"line_end":16,"column_start":16,"column_end":22},"name":"Chunks","qualname":"::stream::stream::chunks::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":6708},{"krate":0,"index":6709},{"krate":0,"index":6710}],"decl_id":null,"docs":" Stream for the [`chunks`](super::StreamExt::chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6754},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\ready_chunks.rs","byte_start":244678,"byte_end":244689,"line_start":15,"line_end":15,"column_start":16,"column_end":27},"name":"ReadyChunks","qualname":"::stream::stream::ready_chunks::ReadyChunks","value":"ReadyChunks {  }","parent":null,"children":[{"krate":0,"index":6756},{"krate":0,"index":6757},{"krate":0,"index":6758}],"decl_id":null,"docs":" Stream for the [`ready_chunks`](super::StreamExt::ready_chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6797},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\scan.rs","byte_start":248169,"byte_end":248173,"line_start":19,"line_end":19,"column_start":16,"column_end":20},"name":"Scan","qualname":"::stream::stream::scan::Scan","value":"Scan {  }","parent":null,"children":[{"krate":0,"index":6802},{"krate":0,"index":6803},{"krate":0,"index":6804}],"decl_id":null,"docs":" Stream for the [`scan`](super::StreamExt::scan) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9252},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\buffer_unordered.rs","byte_start":5533777,"byte_end":5533792,"line_start":15,"line_end":15,"column_start":16,"column_end":31},"name":"BufferUnordered","qualname":"::stream::stream::buffer_unordered::BufferUnordered","value":"BufferUnordered {  }","parent":null,"children":[{"krate":0,"index":9254},{"krate":0,"index":9255},{"krate":0,"index":9256}],"decl_id":null,"docs":" Stream for the [`buffer_unordered`](super::StreamExt::buffer_unordered)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9211},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\buffered.rs","byte_start":5537126,"byte_end":5537134,"line_start":15,"line_end":15,"column_start":16,"column_end":24},"name":"Buffered","qualname":"::stream::stream::buffered::Buffered","value":"Buffered {  }","parent":null,"children":[{"krate":0,"index":9213},{"krate":0,"index":9214},{"krate":0,"index":9215}],"decl_id":null,"docs":" Stream for the [`buffered`](super::StreamExt::buffered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9150},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\for_each_concurrent.rs","byte_start":5540196,"byte_end":5540213,"line_start":14,"line_end":14,"column_start":16,"column_end":33},"name":"ForEachConcurrent","qualname":"::stream::stream::for_each_concurrent::ForEachConcurrent","value":"ForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":9154},{"krate":0,"index":9155},{"krate":0,"index":9156},{"krate":0,"index":9157}],"decl_id":null,"docs":" Future for the [`for_each_concurrent`](super::StreamExt::for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":1692},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":137003,"byte_end":137012,"line_start":210,"line_end":210,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":1693},{"krate":0,"index":1694},{"krate":0,"index":1695},{"krate":0,"index":1698},{"krate":0,"index":1699},{"krate":0,"index":1702},{"krate":0,"index":1706},{"krate":0,"index":1709},{"krate":0,"index":1711},{"krate":0,"index":1716},{"krate":0,"index":1717},{"krate":0,"index":1718},{"krate":0,"index":1722},{"krate":0,"index":1723},{"krate":0,"index":1726},{"krate":0,"index":1731},{"krate":0,"index":1734},{"krate":0,"index":1737},{"krate":0,"index":1739},{"krate":0,"index":1742},{"krate":0,"index":1746},{"krate":0,"index":1747},{"krate":0,"index":1748},{"krate":0,"index":1749},{"krate":0,"index":1750},{"krate":0,"index":1752},{"krate":0,"index":1754},{"krate":0,"index":1755},{"krate":0,"index":1756},{"krate":0,"index":1758},{"krate":0,"index":1760},{"krate":0,"index":1761},{"krate":0,"index":1762},{"krate":0,"index":1763},{"krate":0,"index":1765},{"krate":0,"index":1767},{"krate":0,"index":1769},{"krate":0,"index":1770}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":136892,"byte_end":136966,"line_start":208,"line_end":208,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":136967,"byte_end":136992,"line_start":209,"line_end":209,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1693},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":137922,"byte_end":137926,"line_start":234,"line_end":234,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::stream::StreamExt::next","value":"pub fn next(&mut Self) -> Next<, Self> where Self: Unpin","parent":{"krate":0,"index":1692},"children":[],"decl_id":null,"docs":" Creates a future that resolves to the next item in the stream.","sig":null,"attributes":[{"value":"/ Creates a future that resolves to the next item in the stream.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":137027,"byte_end":137093,"line_start":211,"line_end":211,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":137098,"byte_end":137101,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":137106,"byte_end":137174,"line_start":213,"line_end":213,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":137179,"byte_end":137254,"line_start":214,"line_end":214,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":137259,"byte_end":137334,"line_start":215,"line_end":215,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":137339,"byte_end":137393,"line_start":216,"line_end":216,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":137398,"byte_end":137473,"line_start":217,"line_end":217,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":137478,"byte_end":137488,"line_start":218,"line_end":218,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":137493,"byte_end":137496,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":137501,"byte_end":137515,"line_start":220,"line_end":220,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":137520,"byte_end":137523,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":137528,"byte_end":137535,"line_start":222,"line_end":222,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":137540,"byte_end":137581,"line_start":223,"line_end":223,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":137586,"byte_end":137629,"line_start":224,"line_end":224,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":137634,"byte_end":137637,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":137642,"byte_end":137683,"line_start":226,"line_end":226,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":137688,"byte_end":137691,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":137696,"byte_end":137741,"line_start":228,"line_end":228,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":137746,"byte_end":137791,"line_start":229,"line_end":229,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":137796,"byte_end":137841,"line_start":230,"line_end":230,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":137846,"byte_end":137888,"line_start":231,"line_end":231,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":137893,"byte_end":137902,"line_start":232,"line_end":232,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":137907,"byte_end":137914,"line_start":233,"line_end":233,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1694},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":139165,"byte_end":139176,"line_start":269,"line_end":269,"column_start":8,"column_end":19},"name":"into_future","qualname":"::stream::stream::StreamExt::into_future","value":"pub fn into_future(Self) -> StreamFuture<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":1692},"children":[],"decl_id":null,"docs":" Converts this stream into a future of `(next_item, tail_of_stream)`.\n If the stream terminates, then the next item is [`None`].","sig":null,"attributes":[{"value":"/ Converts this stream into a future of `(next_item, tail_of_stream)`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":138068,"byte_end":138140,"line_start":241,"line_end":241,"column_start":5,"column_end":77}},{"value":"/ If the stream terminates, then the next item is [`None`].","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":138145,"byte_end":138206,"line_start":242,"line_end":242,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":138211,"byte_end":138214,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ The returned future can be used to compose streams and futures together","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":138219,"byte_end":138294,"line_start":244,"line_end":244,"column_start":5,"column_end":80}},{"value":"/ by placing everything into the \"world of futures\".","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":138299,"byte_end":138353,"line_start":245,"line_end":245,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":138358,"byte_end":138361,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_future` moves the stream, the [`Stream`] type","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":138366,"byte_end":138439,"line_start":247,"line_end":247,"column_start":5,"column_end":78}},{"value":"/ must be [`Unpin`]. If you want to use `into_future` with a","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":138444,"byte_end":138506,"line_start":248,"line_end":248,"column_start":5,"column_end":67}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":138511,"byte_end":138586,"line_start":249,"line_end":249,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":138591,"byte_end":138645,"line_start":250,"line_end":250,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":138650,"byte_end":138725,"line_start":251,"line_end":251,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":138730,"byte_end":138740,"line_start":252,"line_end":252,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":138745,"byte_end":138748,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":138753,"byte_end":138767,"line_start":254,"line_end":254,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":138772,"byte_end":138775,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":138780,"byte_end":138787,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":138792,"byte_end":138833,"line_start":257,"line_end":257,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":138838,"byte_end":138881,"line_start":258,"line_end":258,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":138886,"byte_end":138889,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":138894,"byte_end":138931,"line_start":260,"line_end":260,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":138936,"byte_end":138939,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":138944,"byte_end":138996,"line_start":262,"line_end":262,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(1), item);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":139001,"byte_end":139031,"line_start":263,"line_end":263,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":139036,"byte_end":139039,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":139044,"byte_end":139096,"line_start":265,"line_end":265,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(2), item);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":139101,"byte_end":139131,"line_start":266,"line_end":266,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":139136,"byte_end":139145,"line_start":267,"line_end":267,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":139150,"byte_end":139157,"line_start":268,"line_end":268,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1695},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":140177,"byte_end":140180,"line_start":299,"line_end":299,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::stream::StreamExt::map","value":"pub fn map<T, F>(Self, F) -> Map<Self, F> where F: FnMut(Self::Item) -> T,\nSelf: Sized","parent":{"krate":0,"index":1692},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":139341,"byte_end":139416,"line_start":276,"line_end":276,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":139421,"byte_end":139444,"line_start":277,"line_end":277,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":139449,"byte_end":139452,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":139457,"byte_end":139529,"line_start":279,"line_end":279,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":139534,"byte_end":139598,"line_start":280,"line_end":280,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":139603,"byte_end":139640,"line_start":281,"line_end":281,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":139645,"byte_end":139648,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":139653,"byte_end":139729,"line_start":283,"line_end":283,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":139734,"byte_end":139805,"line_start":284,"line_end":284,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":139810,"byte_end":139831,"line_start":285,"line_end":285,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":139836,"byte_end":139839,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":139844,"byte_end":139858,"line_start":287,"line_end":287,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":139863,"byte_end":139866,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":139871,"byte_end":139878,"line_start":289,"line_end":289,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":139883,"byte_end":139924,"line_start":290,"line_end":290,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":139929,"byte_end":139972,"line_start":291,"line_end":291,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":139977,"byte_end":139980,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":139985,"byte_end":140022,"line_start":293,"line_end":293,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.map(|x| x + 3);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":140027,"byte_end":140066,"line_start":294,"line_end":294,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":140071,"byte_end":140074,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":140079,"byte_end":140143,"line_start":296,"line_end":296,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":140148,"byte_end":140157,"line_start":297,"line_end":297,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":140162,"byte_end":140169,"line_start":298,"line_end":298,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1698},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":141740,"byte_end":141749,"line_start":345,"line_end":345,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::stream::stream::StreamExt::enumerate","value":"pub fn enumerate(Self) -> Enumerate<Self> where Self: Sized","parent":{"krate":0,"index":1692},"children":[],"decl_id":null,"docs":" Creates a stream which gives the current iteration count as well as\n the next value.","sig":null,"attributes":[{"value":"/ Creates a stream which gives the current iteration count as well as","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":140347,"byte_end":140418,"line_start":307,"line_end":307,"column_start":5,"column_end":76}},{"value":"/ the next value.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":140423,"byte_end":140442,"line_start":308,"line_end":308,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":140447,"byte_end":140450,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ The stream returned yields pairs `(i, val)`, where `i` is the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":140455,"byte_end":140520,"line_start":310,"line_end":310,"column_start":5,"column_end":70}},{"value":"/ current index of iteration and `val` is the value returned by the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":140525,"byte_end":140594,"line_start":311,"line_end":311,"column_start":5,"column_end":74}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":140599,"byte_end":140610,"line_start":312,"line_end":312,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":140615,"byte_end":140618,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ `enumerate()` keeps its count as a [`usize`]. If you want to count by a","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":140623,"byte_end":140698,"line_start":314,"line_end":314,"column_start":5,"column_end":80}},{"value":"/ different sized integer, the [`zip`](StreamExt::zip) function provides similar","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":140703,"byte_end":140785,"line_start":315,"line_end":315,"column_start":5,"column_end":87}},{"value":"/ functionality.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":140790,"byte_end":140808,"line_start":316,"line_end":316,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":140813,"byte_end":140816,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":140821,"byte_end":140844,"line_start":318,"line_end":318,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":140849,"byte_end":140852,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so enumerating more than","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":140857,"byte_end":140932,"line_start":320,"line_end":320,"column_start":5,"column_end":80}},{"value":"/ [`prim@usize::max_value()`] elements either produces the wrong result or panics. If","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":140937,"byte_end":141024,"line_start":321,"line_end":321,"column_start":5,"column_end":92}},{"value":"/ debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":141029,"byte_end":141085,"line_start":322,"line_end":322,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":141090,"byte_end":141093,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":141098,"byte_end":141110,"line_start":324,"line_end":324,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":141115,"byte_end":141118,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ The returned stream might panic if the to-be-returned index would","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":141123,"byte_end":141192,"line_start":326,"line_end":326,"column_start":5,"column_end":74}},{"value":"/ overflow a [`usize`].","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":141197,"byte_end":141222,"line_start":327,"line_end":327,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":141227,"byte_end":141230,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":141235,"byte_end":141249,"line_start":329,"line_end":329,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":141254,"byte_end":141257,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":141262,"byte_end":141269,"line_start":331,"line_end":331,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":141274,"byte_end":141315,"line_start":332,"line_end":332,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":141320,"byte_end":141363,"line_start":333,"line_end":333,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":141368,"byte_end":141371,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec!['a', 'b', 'c']);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":141376,"byte_end":141427,"line_start":335,"line_end":335,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":141432,"byte_end":141435,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.enumerate();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":141440,"byte_end":141480,"line_start":337,"line_end":337,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":141485,"byte_end":141488,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some((0, 'a')));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":141493,"byte_end":141545,"line_start":339,"line_end":339,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((1, 'b')));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":141550,"byte_end":141602,"line_start":340,"line_end":340,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((2, 'c')));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":141607,"byte_end":141659,"line_start":341,"line_end":341,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":141664,"byte_end":141706,"line_start":342,"line_end":342,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":141711,"byte_end":141720,"line_start":343,"line_end":343,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":141725,"byte_end":141732,"line_start":344,"line_end":344,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1699},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":142978,"byte_end":142984,"line_start":378,"line_end":378,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::stream::StreamExt::filter","value":"pub fn filter<Fut, F>(Self, F) -> Filter<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":1692},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n asynchronous predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":141893,"byte_end":141965,"line_start":352,"line_end":352,"column_start":5,"column_end":77}},{"value":"/ asynchronous predicate.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":141970,"byte_end":141997,"line_start":353,"line_end":353,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":142002,"byte_end":142005,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":142010,"byte_end":142085,"line_start":355,"line_end":355,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate returns a `Future` which","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":142090,"byte_end":142161,"line_start":356,"line_end":356,"column_start":5,"column_end":76}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":142166,"byte_end":142238,"line_start":357,"line_end":357,"column_start":5,"column_end":77}},{"value":"/ predicate returns a `Future` which resolves to `false`, then the value","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":142243,"byte_end":142317,"line_start":358,"line_end":358,"column_start":5,"column_end":79}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":142322,"byte_end":142380,"line_start":359,"line_end":359,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":142385,"byte_end":142388,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":142393,"byte_end":142469,"line_start":361,"line_end":361,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":142474,"byte_end":142548,"line_start":362,"line_end":362,"column_start":5,"column_end":79}},{"value":"/ standard library.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":142553,"byte_end":142574,"line_start":363,"line_end":363,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":142579,"byte_end":142582,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":142587,"byte_end":142601,"line_start":365,"line_end":365,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":142606,"byte_end":142609,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":142614,"byte_end":142621,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":142626,"byte_end":142667,"line_start":368,"line_end":368,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":142672,"byte_end":142696,"line_start":369,"line_end":369,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":142701,"byte_end":142744,"line_start":370,"line_end":370,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":142749,"byte_end":142752,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":142757,"byte_end":142795,"line_start":372,"line_end":372,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter(|x| future::ready(x % 2 == 0));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":142800,"byte_end":142861,"line_start":373,"line_end":373,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":142866,"byte_end":142869,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![2, 4, 6, 8, 10], evens.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":142874,"byte_end":142944,"line_start":375,"line_end":375,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":142949,"byte_end":142958,"line_start":376,"line_end":376,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":142963,"byte_end":142970,"line_start":377,"line_end":377,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1702},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":144309,"byte_end":144319,"line_start":412,"line_end":412,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::stream::StreamExt::filter_map","value":"pub fn filter_map<Fut, T, F>(Self, F) -> FilterMap<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = Option<T>>, Self: Sized","parent":{"krate":0,"index":1692},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":143212,"byte_end":143287,"line_start":387,"line_end":387,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided asynchronous closure.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":143292,"byte_end":143368,"line_start":388,"line_end":388,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":143373,"byte_end":143376,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":143381,"byte_end":143456,"line_start":390,"line_end":390,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":143461,"byte_end":143536,"line_start":391,"line_end":391,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":143541,"byte_end":143617,"line_start":392,"line_end":392,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":143622,"byte_end":143687,"line_start":393,"line_end":393,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":143692,"byte_end":143695,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":143700,"byte_end":143776,"line_start":395,"line_end":395,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":143781,"byte_end":143855,"line_start":396,"line_end":396,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":143860,"byte_end":143885,"line_start":397,"line_end":397,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":143890,"byte_end":143893,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":143898,"byte_end":143912,"line_start":399,"line_end":399,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":143917,"byte_end":143924,"line_start":400,"line_end":400,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":143929,"byte_end":143970,"line_start":401,"line_end":401,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":143975,"byte_end":144018,"line_start":402,"line_end":402,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":144023,"byte_end":144026,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":144031,"byte_end":144069,"line_start":404,"line_end":404,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter_map(|x| async move {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":144074,"byte_end":144124,"line_start":405,"line_end":405,"column_start":5,"column_end":55}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":144129,"byte_end":144180,"line_start":406,"line_end":406,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":144185,"byte_end":144192,"line_start":407,"line_end":407,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":144197,"byte_end":144200,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![3, 5, 7, 9, 11], evens.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":144205,"byte_end":144275,"line_start":409,"line_end":409,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":144280,"byte_end":144289,"line_start":410,"line_end":410,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":144294,"byte_end":144301,"line_start":411,"line_end":411,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1706},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":145348,"byte_end":145352,"line_start":443,"line_end":443,"column_start":8,"column_end":12},"name":"then","qualname":"::stream::stream::StreamExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where F: FnMut(Self::Item)\n-> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":1692},"children":[],"decl_id":null,"docs":" Computes from this stream's items new items of a different type using\n an asynchronous closure.","sig":null,"attributes":[{"value":"/ Computes from this stream's items new items of a different type using","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":144551,"byte_end":144624,"line_start":421,"line_end":421,"column_start":5,"column_end":78}},{"value":"/ an asynchronous closure.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":144629,"byte_end":144657,"line_start":422,"line_end":422,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":144662,"byte_end":144665,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will be called with an `Item` once a value is","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":144670,"byte_end":144744,"line_start":424,"line_end":424,"column_start":5,"column_end":79}},{"value":"/ ready, it returns a future which will then be run to completion","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":144749,"byte_end":144816,"line_start":425,"line_end":425,"column_start":5,"column_end":72}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":144821,"byte_end":144866,"line_start":426,"line_end":426,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":144871,"byte_end":144874,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":144879,"byte_end":144955,"line_start":428,"line_end":428,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":144960,"byte_end":144986,"line_start":429,"line_end":429,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":144991,"byte_end":144994,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":144999,"byte_end":145013,"line_start":431,"line_end":431,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":145018,"byte_end":145021,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":145026,"byte_end":145033,"line_start":433,"line_end":433,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":145038,"byte_end":145079,"line_start":434,"line_end":434,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":145084,"byte_end":145127,"line_start":435,"line_end":435,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":145132,"byte_end":145135,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":145140,"byte_end":145177,"line_start":437,"line_end":437,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.then(|x| async move { x + 3 });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":145182,"byte_end":145237,"line_start":438,"line_end":438,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":145242,"byte_end":145245,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":145250,"byte_end":145314,"line_start":440,"line_end":440,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":145319,"byte_end":145328,"line_start":441,"line_end":441,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":145333,"byte_end":145340,"line_start":442,"line_end":442,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1709},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":146286,"byte_end":146293,"line_start":477,"line_end":477,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::stream::StreamExt::collect","value":"pub fn collect<C: Default + Extend<Self::Item>>(Self) -> Collect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":1692},"children":[],"decl_id":null,"docs":" Transforms a stream into a collection, returning a\n future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Transforms a stream into a collection, returning a","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":145561,"byte_end":145615,"line_start":452,"line_end":452,"column_start":5,"column_end":59}},{"value":"/ future representing the result of that computation.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":145620,"byte_end":145675,"line_start":453,"line_end":453,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":145680,"byte_end":145683,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":145688,"byte_end":145756,"line_start":455,"line_end":455,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":145761,"byte_end":145764,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":145769,"byte_end":145783,"line_start":457,"line_end":457,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":145788,"byte_end":145791,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":145796,"byte_end":145803,"line_start":459,"line_end":459,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":145808,"byte_end":145849,"line_start":460,"line_end":460,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":145854,"byte_end":145885,"line_start":461,"line_end":461,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":145890,"byte_end":145925,"line_start":462,"line_end":462,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":145930,"byte_end":145950,"line_start":463,"line_end":463,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":145955,"byte_end":145958,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":145963,"byte_end":146000,"line_start":465,"line_end":465,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":146005,"byte_end":146008,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":146013,"byte_end":146040,"line_start":467,"line_end":467,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":146045,"byte_end":146069,"line_start":468,"line_end":468,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(i).unwrap();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":146074,"byte_end":146116,"line_start":469,"line_end":469,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":146121,"byte_end":146130,"line_start":470,"line_end":470,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":146135,"byte_end":146142,"line_start":471,"line_end":471,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":146147,"byte_end":146150,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ let output = rx.collect::<Vec<i32>>().await;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":146155,"byte_end":146203,"line_start":473,"line_end":473,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4, 5]);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":146208,"byte_end":146252,"line_start":474,"line_end":474,"column_start":5,"column_end":49}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":146257,"byte_end":146266,"line_start":475,"line_end":475,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":146271,"byte_end":146278,"line_start":476,"line_end":476,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1711},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":147412,"byte_end":147417,"line_start":514,"line_end":514,"column_start":8,"column_end":13},"name":"unzip","qualname":"::stream::stream::StreamExt::unzip","value":"pub fn unzip<A, B, FromA, FromB>(Self) -> Unzip<Self, FromA, FromB> where\nFromA: Default + Extend<A>, FromB: Default + Extend<B>, Self: Sized +\nStream<Item = (A, B)>","parent":{"krate":0,"index":1692},"children":[],"decl_id":null,"docs":" Converts a stream of pairs into a future, which\n resolves to pair of containers.","sig":null,"attributes":[{"value":"/ Converts a stream of pairs into a future, which","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":146451,"byte_end":146502,"line_start":484,"line_end":484,"column_start":5,"column_end":56}},{"value":"/ resolves to pair of containers.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":146507,"byte_end":146542,"line_start":485,"line_end":485,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":146547,"byte_end":146550,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ `unzip()` produces a future, which resolves to two","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":146555,"byte_end":146609,"line_start":487,"line_end":487,"column_start":5,"column_end":59}},{"value":"/ collections: one from the left elements of the pairs,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":146614,"byte_end":146671,"line_start":488,"line_end":488,"column_start":5,"column_end":62}},{"value":"/ and one from the right elements.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":146676,"byte_end":146712,"line_start":489,"line_end":489,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":146717,"byte_end":146720,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":146725,"byte_end":146793,"line_start":491,"line_end":491,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":146798,"byte_end":146801,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":146806,"byte_end":146820,"line_start":493,"line_end":493,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":146825,"byte_end":146828,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":146833,"byte_end":146840,"line_start":495,"line_end":495,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":146845,"byte_end":146886,"line_start":496,"line_end":496,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":146891,"byte_end":146922,"line_start":497,"line_end":497,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":146927,"byte_end":146962,"line_start":498,"line_end":498,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":146967,"byte_end":146987,"line_start":499,"line_end":499,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":146992,"byte_end":146995,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":147000,"byte_end":147037,"line_start":501,"line_end":501,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":147042,"byte_end":147045,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":147050,"byte_end":147077,"line_start":503,"line_end":503,"column_start":5,"column_end":32}},{"value":"/     tx.unbounded_send((1, 2)).unwrap();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":147082,"byte_end":147125,"line_start":504,"line_end":504,"column_start":5,"column_end":48}},{"value":"/     tx.unbounded_send((3, 4)).unwrap();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":147130,"byte_end":147173,"line_start":505,"line_end":505,"column_start":5,"column_end":48}},{"value":"/     tx.unbounded_send((5, 6)).unwrap();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":147178,"byte_end":147221,"line_start":506,"line_end":506,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":147226,"byte_end":147233,"line_start":507,"line_end":507,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":147238,"byte_end":147241,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ let (o1, o2): (Vec<_>, Vec<_>) = rx.unzip().await;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":147246,"byte_end":147300,"line_start":509,"line_end":509,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(o1, vec![1, 3, 5]);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":147305,"byte_end":147339,"line_start":510,"line_end":510,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(o2, vec![2, 4, 6]);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":147344,"byte_end":147378,"line_start":511,"line_end":511,"column_start":5,"column_end":39}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":147383,"byte_end":147392,"line_start":512,"line_end":512,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":147397,"byte_end":147404,"line_start":513,"line_end":513,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1716},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":148713,"byte_end":148719,"line_start":555,"line_end":555,"column_start":8,"column_end":14},"name":"concat","qualname":"::stream::stream::StreamExt::concat","value":"pub fn concat(Self) -> Concat<Self> where Self: Sized,\nSelf::Item: Extend<<<Self as Stream>::Item as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":1692},"children":[],"decl_id":null,"docs":" Concatenate all items of a stream into a single extendable\n destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Concatenate all items of a stream into a single extendable","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":147678,"byte_end":147740,"line_start":523,"line_end":523,"column_start":5,"column_end":67}},{"value":"/ destination, returning a future representing the end result.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":147745,"byte_end":147809,"line_start":524,"line_end":524,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":147814,"byte_end":147817,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":147822,"byte_end":147886,"line_start":526,"line_end":526,"column_start":5,"column_end":69}},{"value":"/ of all the subsequent results of the stream. If the stream is","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":147891,"byte_end":147956,"line_start":527,"line_end":527,"column_start":5,"column_end":70}},{"value":"/ empty, the default value will be returned.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":147961,"byte_end":148007,"line_start":528,"line_end":528,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":148012,"byte_end":148015,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":148020,"byte_end":148069,"line_start":530,"line_end":530,"column_start":5,"column_end":54}},{"value":"/ [`Extend`](std::iter::Extend) trait.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":148074,"byte_end":148114,"line_start":531,"line_end":531,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":148119,"byte_end":148122,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":148127,"byte_end":148141,"line_start":533,"line_end":533,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":148146,"byte_end":148149,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":148154,"byte_end":148161,"line_start":535,"line_end":535,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":148166,"byte_end":148207,"line_start":536,"line_end":536,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":148212,"byte_end":148243,"line_start":537,"line_end":537,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":148248,"byte_end":148283,"line_start":538,"line_end":538,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":148288,"byte_end":148308,"line_start":539,"line_end":539,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":148313,"byte_end":148316,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":148321,"byte_end":148358,"line_start":541,"line_end":541,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":148363,"byte_end":148366,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":148371,"byte_end":148398,"line_start":543,"line_end":543,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":148403,"byte_end":148434,"line_start":544,"line_end":544,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":148439,"byte_end":148465,"line_start":545,"line_end":545,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(vec![n + 1, n + 2, n + 3]).unwrap();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":148470,"byte_end":148536,"line_start":546,"line_end":546,"column_start":5,"column_end":71}},{"value":"/     }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":148541,"byte_end":148550,"line_start":547,"line_end":547,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":148555,"byte_end":148562,"line_start":548,"line_end":548,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":148567,"byte_end":148570,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ let result = rx.concat().await;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":148575,"byte_end":148610,"line_start":550,"line_end":550,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":148615,"byte_end":148618,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, vec![7, 8, 9, 4, 5, 6, 1, 2, 3]);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":148623,"byte_end":148679,"line_start":552,"line_end":552,"column_start":5,"column_end":61}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":148684,"byte_end":148693,"line_start":553,"line_end":553,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":148698,"byte_end":148705,"line_start":554,"line_end":554,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1717},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":149783,"byte_end":149788,"line_start":586,"line_end":586,"column_start":8,"column_end":13},"name":"cycle","qualname":"::stream::stream::StreamExt::cycle","value":"pub fn cycle(Self) -> Cycle<Self> where Self: Sized + Clone","parent":{"krate":0,"index":1692},"children":[],"decl_id":null,"docs":" Repeats a stream endlessly.","sig":null,"attributes":[{"value":"/ Repeats a stream endlessly.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":148949,"byte_end":148980,"line_start":563,"line_end":563,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":148985,"byte_end":148988,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":148993,"byte_end":149060,"line_start":565,"line_end":565,"column_start":5,"column_end":72}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":149065,"byte_end":149137,"line_start":566,"line_end":566,"column_start":5,"column_end":77}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":149142,"byte_end":149199,"line_start":567,"line_end":567,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":149204,"byte_end":149207,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":149212,"byte_end":149226,"line_start":569,"line_end":569,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":149231,"byte_end":149234,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":149239,"byte_end":149246,"line_start":571,"line_end":571,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":149251,"byte_end":149292,"line_start":572,"line_end":572,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":149297,"byte_end":149340,"line_start":573,"line_end":573,"column_start":5,"column_end":48}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":149345,"byte_end":149367,"line_start":574,"line_end":574,"column_start":5,"column_end":27}},{"value":"/ let mut s = stream::iter(a.iter()).cycle();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":149372,"byte_end":149419,"line_start":575,"line_end":575,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":149424,"byte_end":149427,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":149432,"byte_end":149473,"line_start":577,"line_end":577,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":149478,"byte_end":149519,"line_start":578,"line_end":578,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":149524,"byte_end":149565,"line_start":579,"line_end":579,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":149570,"byte_end":149611,"line_start":580,"line_end":580,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":149616,"byte_end":149657,"line_start":581,"line_end":581,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":149662,"byte_end":149703,"line_start":582,"line_end":582,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":149708,"byte_end":149749,"line_start":583,"line_end":583,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":149754,"byte_end":149763,"line_start":584,"line_end":584,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":149768,"byte_end":149775,"line_start":585,"line_end":585,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1718},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":150738,"byte_end":150742,"line_start":613,"line_end":613,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::stream::StreamExt::fold","value":"pub fn fold<T, Fut, F>(Self, T, F) -> Fold<Self, Fut, T, F> where\nF: FnMut(T, Self::Item) -> Fut, Fut: Future<Output = T>, Self: Sized","parent":{"krate":0,"index":1692},"children":[],"decl_id":null,"docs":" Execute an accumulating asynchronous computation over a stream,\n collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Execute an accumulating asynchronous computation over a stream,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":149923,"byte_end":149990,"line_start":593,"line_end":593,"column_start":5,"column_end":72}},{"value":"/ collecting all the values into one final result.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":149995,"byte_end":150047,"line_start":594,"line_end":594,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":150052,"byte_end":150055,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":150060,"byte_end":150130,"line_start":596,"line_end":596,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":150135,"byte_end":150211,"line_start":597,"line_end":597,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":150216,"byte_end":150292,"line_start":598,"line_end":598,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":150297,"byte_end":150367,"line_start":599,"line_end":599,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":150372,"byte_end":150398,"line_start":600,"line_end":600,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":150403,"byte_end":150406,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":150411,"byte_end":150425,"line_start":602,"line_end":602,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":150430,"byte_end":150433,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":150438,"byte_end":150445,"line_start":604,"line_end":604,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":150450,"byte_end":150491,"line_start":605,"line_end":605,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":150496,"byte_end":150539,"line_start":606,"line_end":606,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":150544,"byte_end":150547,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..6);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":150552,"byte_end":150595,"line_start":608,"line_end":608,"column_start":5,"column_end":48}},{"value":"/ let sum = number_stream.fold(0, |acc, x| async move { acc + x });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":150600,"byte_end":150669,"line_start":609,"line_end":609,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(sum.await, 15);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":150674,"byte_end":150704,"line_start":610,"line_end":610,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":150709,"byte_end":150718,"line_start":611,"line_end":611,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":150723,"byte_end":150730,"line_start":612,"line_end":612,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1722},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151936,"byte_end":151943,"line_start":653,"line_end":653,"column_start":8,"column_end":15},"name":"flatten","qualname":"::stream::stream::StreamExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Item: Stream, Self: Sized","parent":{"krate":0,"index":1692},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":150977,"byte_end":151042,"line_start":622,"line_end":622,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151047,"byte_end":151050,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151055,"byte_end":151069,"line_start":624,"line_end":624,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151074,"byte_end":151077,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151082,"byte_end":151089,"line_start":626,"line_end":626,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151094,"byte_end":151135,"line_start":627,"line_end":627,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151140,"byte_end":151171,"line_start":628,"line_end":628,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151176,"byte_end":151211,"line_start":629,"line_end":629,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151216,"byte_end":151236,"line_start":630,"line_end":630,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151241,"byte_end":151244,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151249,"byte_end":151288,"line_start":632,"line_end":632,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151293,"byte_end":151332,"line_start":633,"line_end":633,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151337,"byte_end":151376,"line_start":634,"line_end":634,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151381,"byte_end":151384,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151389,"byte_end":151416,"line_start":636,"line_end":636,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(1).unwrap();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151421,"byte_end":151460,"line_start":637,"line_end":637,"column_start":5,"column_end":44}},{"value":"/     tx1.unbounded_send(2).unwrap();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151465,"byte_end":151504,"line_start":638,"line_end":638,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151509,"byte_end":151516,"line_start":639,"line_end":639,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151521,"byte_end":151548,"line_start":640,"line_end":640,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(3).unwrap();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151553,"byte_end":151592,"line_start":641,"line_end":641,"column_start":5,"column_end":44}},{"value":"/     tx2.unbounded_send(4).unwrap();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151597,"byte_end":151636,"line_start":642,"line_end":642,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151641,"byte_end":151648,"line_start":643,"line_end":643,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151653,"byte_end":151680,"line_start":644,"line_end":644,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(rx1).unwrap();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151685,"byte_end":151726,"line_start":645,"line_end":645,"column_start":5,"column_end":46}},{"value":"/     tx3.unbounded_send(rx2).unwrap();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151731,"byte_end":151772,"line_start":646,"line_end":646,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151777,"byte_end":151784,"line_start":647,"line_end":647,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151789,"byte_end":151792,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ let output = rx3.flatten().collect::<Vec<i32>>().await;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151797,"byte_end":151856,"line_start":649,"line_end":649,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151861,"byte_end":151902,"line_start":650,"line_end":650,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151907,"byte_end":151916,"line_start":651,"line_end":651,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151921,"byte_end":151928,"line_start":652,"line_end":652,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1723},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":153205,"byte_end":153213,"line_start":686,"line_end":686,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::stream::stream::StreamExt::flat_map","value":"pub fn flat_map<U, F>(Self, F) -> FlatMap<Self, U, F> where\nF: FnMut(Self::Item) -> U, U: Stream, Self: Sized","parent":{"krate":0,"index":1692},"children":[],"decl_id":null,"docs":" Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","sig":null,"attributes":[{"value":"/ Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":152120,"byte_end":152192,"line_start":661,"line_end":661,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":152197,"byte_end":152200,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ [`StreamExt::map`] is very useful, but if it produces a `Stream` instead,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":152205,"byte_end":152282,"line_start":663,"line_end":663,"column_start":5,"column_end":82}},{"value":"/ you would have to chain combinators like `.map(f).flatten()` while this","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":152287,"byte_end":152362,"line_start":664,"line_end":664,"column_start":5,"column_end":80}},{"value":"/ combinator provides ability to write `.flat_map(f)` instead of chaining.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":152367,"byte_end":152443,"line_start":665,"line_end":665,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":152448,"byte_end":152451,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ The provided closure which produce inner streams is executed over all elements","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":152456,"byte_end":152538,"line_start":667,"line_end":667,"column_start":5,"column_end":87}},{"value":"/ of stream as last inner stream is terminated and next stream item is available.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":152543,"byte_end":152626,"line_start":668,"line_end":668,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":152631,"byte_end":152634,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":152639,"byte_end":152715,"line_start":670,"line_end":670,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `flat_map` methods in the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":152720,"byte_end":152796,"line_start":671,"line_end":671,"column_start":5,"column_end":81}},{"value":"/ standard library.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":152801,"byte_end":152822,"line_start":672,"line_end":672,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":152827,"byte_end":152830,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":152835,"byte_end":152849,"line_start":674,"line_end":674,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":152854,"byte_end":152857,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":152862,"byte_end":152869,"line_start":676,"line_end":676,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":152874,"byte_end":152915,"line_start":677,"line_end":677,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":152920,"byte_end":152963,"line_start":678,"line_end":678,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":152968,"byte_end":152971,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":152976,"byte_end":153013,"line_start":680,"line_end":680,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.flat_map(|x| stream::iter(vec![x + 3; x]));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":153018,"byte_end":153085,"line_start":681,"line_end":681,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":153090,"byte_end":153093,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 5, 6, 6, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":153098,"byte_end":153171,"line_start":683,"line_end":683,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":153176,"byte_end":153185,"line_start":684,"line_end":684,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":153190,"byte_end":153197,"line_start":685,"line_end":685,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1726},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":154196,"byte_end":154200,"line_start":719,"line_end":719,"column_start":8,"column_end":12},"name":"scan","qualname":"::stream::stream::StreamExt::scan","value":"pub fn scan<S, B, Fut, F>(Self, S, F) -> Scan<Self, S, Fut, F> where\nF: FnMut(&mut S, Self::Item) -> Fut, Fut: Future<Output = Option<B>>,\nSelf: Sized","parent":{"krate":0,"index":1692},"children":[],"decl_id":null,"docs":" Combinator similar to [`StreamExt::fold`] that holds internal state\n and produces a new stream.","sig":null,"attributes":[{"value":"/ Combinator similar to [`StreamExt::fold`] that holds internal state","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":153387,"byte_end":153458,"line_start":695,"line_end":695,"column_start":5,"column_end":76}},{"value":"/ and produces a new stream.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":153463,"byte_end":153493,"line_start":696,"line_end":696,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":153498,"byte_end":153501,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ Accepts initial state and closure which will be applied to each element","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":153506,"byte_end":153581,"line_start":698,"line_end":698,"column_start":5,"column_end":80}},{"value":"/ of the stream until provided closure returns `None`. Once `None` is","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":153586,"byte_end":153657,"line_start":699,"line_end":699,"column_start":5,"column_end":76}},{"value":"/ returned, stream will be terminated.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":153662,"byte_end":153702,"line_start":700,"line_end":700,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":153707,"byte_end":153710,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":153715,"byte_end":153729,"line_start":702,"line_end":702,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":153734,"byte_end":153737,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":153742,"byte_end":153749,"line_start":704,"line_end":704,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":153754,"byte_end":153795,"line_start":705,"line_end":705,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":153800,"byte_end":153824,"line_start":706,"line_end":706,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":153829,"byte_end":153872,"line_start":707,"line_end":707,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":153877,"byte_end":153880,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":153885,"byte_end":153923,"line_start":709,"line_end":709,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":153928,"byte_end":153931,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.scan(0, |state, x| {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":153936,"byte_end":153980,"line_start":711,"line_end":711,"column_start":5,"column_end":49}},{"value":"/     *state += x;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":153985,"byte_end":154005,"line_start":712,"line_end":712,"column_start":5,"column_end":25}},{"value":"/     future::ready(if *state < 10 { Some(x) } else { None })","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":154010,"byte_end":154073,"line_start":713,"line_end":713,"column_start":5,"column_end":68}},{"value":"/ });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":154078,"byte_end":154085,"line_start":714,"line_end":714,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":154090,"byte_end":154093,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":154098,"byte_end":154162,"line_start":716,"line_end":716,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":154167,"byte_end":154176,"line_start":717,"line_end":717,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":154181,"byte_end":154188,"line_start":718,"line_end":718,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1731},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":155224,"byte_end":155234,"line_start":750,"line_end":750,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::stream::StreamExt::skip_while","value":"pub fn skip_while<Fut, F>(Self, F) -> SkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":1692},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":154446,"byte_end":154520,"line_start":728,"line_end":728,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":154525,"byte_end":154548,"line_start":729,"line_end":729,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":154553,"byte_end":154556,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::skip_while`, will skip elements on the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":154561,"byte_end":154634,"line_start":731,"line_end":731,"column_start":5,"column_end":78}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":154639,"byte_end":154711,"line_start":732,"line_end":732,"column_start":5,"column_end":77}},{"value":"/ returns `false`, all future elements will be returned from the underlying","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":154716,"byte_end":154793,"line_start":733,"line_end":733,"column_start":5,"column_end":82}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":154798,"byte_end":154809,"line_start":734,"line_end":734,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":154814,"byte_end":154817,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":154822,"byte_end":154836,"line_start":736,"line_end":736,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":154841,"byte_end":154844,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":154849,"byte_end":154856,"line_start":738,"line_end":738,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":154861,"byte_end":154902,"line_start":739,"line_end":739,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":154907,"byte_end":154931,"line_start":740,"line_end":740,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":154936,"byte_end":154979,"line_start":741,"line_end":741,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":154984,"byte_end":154987,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":154992,"byte_end":155030,"line_start":743,"line_end":743,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":155035,"byte_end":155038,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.skip_while(|x| future::ready(*x <= 5));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":155043,"byte_end":155106,"line_start":745,"line_end":745,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":155111,"byte_end":155114,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":155119,"byte_end":155190,"line_start":747,"line_end":747,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":155195,"byte_end":155204,"line_start":748,"line_end":748,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":155209,"byte_end":155216,"line_start":749,"line_end":749,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1734},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":156223,"byte_end":156233,"line_start":780,"line_end":780,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::stream::StreamExt::take_while","value":"pub fn take_while<Fut, F>(Self, F) -> TakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":1692},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided asynchronous predicate","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":155468,"byte_end":155544,"line_start":759,"line_end":759,"column_start":5,"column_end":81}},{"value":"/ resolves to `true`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":155549,"byte_end":155572,"line_start":760,"line_end":760,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":155577,"byte_end":155580,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":155585,"byte_end":155660,"line_start":762,"line_end":762,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":155665,"byte_end":155737,"line_start":763,"line_end":763,"column_start":5,"column_end":77}},{"value":"/ returns `false`, it will always return that the stream is done.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":155742,"byte_end":155809,"line_start":764,"line_end":764,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":155814,"byte_end":155817,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":155822,"byte_end":155836,"line_start":766,"line_end":766,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":155841,"byte_end":155844,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":155849,"byte_end":155856,"line_start":768,"line_end":768,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":155861,"byte_end":155902,"line_start":769,"line_end":769,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":155907,"byte_end":155931,"line_start":770,"line_end":770,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":155936,"byte_end":155979,"line_start":771,"line_end":771,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":155984,"byte_end":155987,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":155992,"byte_end":156030,"line_start":773,"line_end":773,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":156035,"byte_end":156038,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_while(|x| future::ready(*x <= 5));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":156043,"byte_end":156106,"line_start":775,"line_end":775,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":156111,"byte_end":156114,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":156119,"byte_end":156189,"line_start":777,"line_end":777,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":156194,"byte_end":156203,"line_start":778,"line_end":778,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":156208,"byte_end":156215,"line_start":779,"line_end":779,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1737},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":157749,"byte_end":157759,"line_start":825,"line_end":825,"column_start":8,"column_end":18},"name":"take_until","qualname":"::stream::stream::StreamExt::take_until","value":"pub fn take_until<Fut>(Self, Fut) -> TakeUntil<Self, Fut> where Fut: Future,\nSelf: Sized","parent":{"krate":0,"index":1692},"children":[],"decl_id":null,"docs":" Take elements from this stream until the provided future resolves.","sig":null,"attributes":[{"value":"/ Take elements from this stream until the provided future resolves.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":156467,"byte_end":156537,"line_start":789,"line_end":789,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":156542,"byte_end":156545,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ This function will take elements from the stream until the provided","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":156550,"byte_end":156621,"line_start":791,"line_end":791,"column_start":5,"column_end":76}},{"value":"/ stopping future `fut` resolves. Once the `fut` future becomes ready,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":156626,"byte_end":156698,"line_start":792,"line_end":792,"column_start":5,"column_end":77}},{"value":"/ this stream combinator will always return that the stream is done.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":156703,"byte_end":156773,"line_start":793,"line_end":793,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":156778,"byte_end":156781,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ The stopping future may return any type. Once the stream is stopped","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":156786,"byte_end":156857,"line_start":795,"line_end":795,"column_start":5,"column_end":76}},{"value":"/ the result of the stopping future may be aceessed with `TakeUntil::take_result()`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":156862,"byte_end":156948,"line_start":796,"line_end":796,"column_start":5,"column_end":91}},{"value":"/ The stream may also be resumed with `TakeUntil::take_future()`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":156953,"byte_end":157020,"line_start":797,"line_end":797,"column_start":5,"column_end":72}},{"value":"/ See the documentation of [`TakeUntil`] for more information.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":157025,"byte_end":157089,"line_start":798,"line_end":798,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":157094,"byte_end":157097,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":157102,"byte_end":157116,"line_start":800,"line_end":800,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":157121,"byte_end":157124,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":157129,"byte_end":157136,"line_start":802,"line_end":802,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":157141,"byte_end":157182,"line_start":803,"line_end":803,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":157187,"byte_end":157211,"line_start":804,"line_end":804,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":157216,"byte_end":157259,"line_start":805,"line_end":805,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":157264,"byte_end":157292,"line_start":806,"line_end":806,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":157297,"byte_end":157300,"line_start":807,"line_end":807,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":157305,"byte_end":157343,"line_start":808,"line_end":808,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":157348,"byte_end":157351,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":157356,"byte_end":157374,"line_start":810,"line_end":810,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":157379,"byte_end":157421,"line_start":811,"line_end":811,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":157426,"byte_end":157441,"line_start":812,"line_end":812,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":157446,"byte_end":157465,"line_start":813,"line_end":813,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":157470,"byte_end":157495,"line_start":814,"line_end":814,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":157500,"byte_end":157516,"line_start":815,"line_end":815,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(())","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":157521,"byte_end":157548,"line_start":816,"line_end":816,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":157553,"byte_end":157562,"line_start":817,"line_end":817,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":157567,"byte_end":157574,"line_start":818,"line_end":818,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":157579,"byte_end":157582,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_until(stop_fut);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":157587,"byte_end":157632,"line_start":820,"line_end":820,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":157637,"byte_end":157640,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":157645,"byte_end":157715,"line_start":822,"line_end":822,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":157720,"byte_end":157729,"line_start":823,"line_end":823,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":157734,"byte_end":157741,"line_start":824,"line_end":824,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1739},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158966,"byte_end":158974,"line_start":866,"line_end":866,"column_start":8,"column_end":16},"name":"for_each","qualname":"::stream::stream::StreamExt::for_each","value":"pub fn for_each<Fut, F>(Self, F) -> ForEach<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":1692},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":157908,"byte_end":157979,"line_start":833,"line_end":833,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":157984,"byte_end":158027,"line_start":834,"line_end":834,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158032,"byte_end":158035,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158040,"byte_end":158115,"line_start":836,"line_end":836,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158120,"byte_end":158190,"line_start":837,"line_end":837,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158195,"byte_end":158233,"line_start":838,"line_end":838,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158238,"byte_end":158241,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ The returned value is a `Future` where the `Output` type is `()`; it is","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158246,"byte_end":158321,"line_start":840,"line_end":840,"column_start":5,"column_end":80}},{"value":"/ executed entirely for its side effects.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158326,"byte_end":158369,"line_start":841,"line_end":841,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158374,"byte_end":158377,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ To process each item in the stream and produce another stream instead","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158382,"byte_end":158455,"line_start":843,"line_end":843,"column_start":5,"column_end":78}},{"value":"/ of a single future, use `then` instead.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158460,"byte_end":158503,"line_start":844,"line_end":844,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158508,"byte_end":158511,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158516,"byte_end":158530,"line_start":846,"line_end":846,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158535,"byte_end":158538,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158543,"byte_end":158550,"line_start":848,"line_end":848,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158555,"byte_end":158596,"line_start":849,"line_end":849,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158601,"byte_end":158625,"line_start":850,"line_end":850,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158630,"byte_end":158673,"line_start":851,"line_end":851,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158678,"byte_end":158681,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158686,"byte_end":158704,"line_start":853,"line_end":853,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158709,"byte_end":158712,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158717,"byte_end":158722,"line_start":855,"line_end":855,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(1).take(3).for_each(|item| {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158727,"byte_end":158788,"line_start":856,"line_end":856,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158793,"byte_end":158815,"line_start":857,"line_end":857,"column_start":5,"column_end":27}},{"value":"/         future::ready(())","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158820,"byte_end":158849,"line_start":858,"line_end":858,"column_start":5,"column_end":34}},{"value":"/     });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158854,"byte_end":158865,"line_start":859,"line_end":859,"column_start":5,"column_end":16}},{"value":"/     fut.await;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158870,"byte_end":158888,"line_start":860,"line_end":860,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158893,"byte_end":158898,"line_start":861,"line_end":861,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158903,"byte_end":158906,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158911,"byte_end":158932,"line_start":863,"line_end":863,"column_start":5,"column_end":26}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158937,"byte_end":158946,"line_start":864,"line_end":864,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158951,"byte_end":158958,"line_start":865,"line_end":865,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1742},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":161180,"byte_end":161199,"line_start":922,"line_end":922,"column_start":8,"column_end":27},"name":"for_each_concurrent","qualname":"::stream::stream::StreamExt::for_each_concurrent","value":"pub fn for_each_concurrent<Fut, F,\n                           impl Into<Option<usize>>: Into<Option<usize>>>(Self,\n                                                                          impl Into<Option<usize>>,\n                                                                          F)\n-> ForEachConcurrent<Self, Fut, F> where F: FnMut(Self::Item) -> Fut,\nFut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":1692},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":159193,"byte_end":159264,"line_start":875,"line_end":875,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":159269,"byte_end":159343,"line_start":876,"line_end":876,"column_start":5,"column_end":79}},{"value":"/ available.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":159348,"byte_end":159362,"line_start":877,"line_end":877,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":159367,"byte_end":159370,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/ This is similar to [`StreamExt::for_each`], but the futures","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":159375,"byte_end":159438,"line_start":879,"line_end":879,"column_start":5,"column_end":68}},{"value":"/ produced by the closure are run concurrently (but not in parallel--","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":159443,"byte_end":159514,"line_start":880,"line_end":880,"column_start":5,"column_end":76}},{"value":"/ this combinator does not introduce any threads).","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":159519,"byte_end":159571,"line_start":881,"line_end":881,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":159576,"byte_end":159579,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":159584,"byte_end":159659,"line_start":883,"line_end":883,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":159664,"byte_end":159734,"line_start":884,"line_end":884,"column_start":5,"column_end":75}},{"value":"/ concurrently with the other futures produced by the closure.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":159739,"byte_end":159803,"line_start":885,"line_end":885,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":159808,"byte_end":159811,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ The first argument is an optional limit on the number of concurrent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":159816,"byte_end":159887,"line_start":887,"line_end":887,"column_start":5,"column_end":76}},{"value":"/ futures. If this limit is not `None`, no more than `limit` futures","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":159892,"byte_end":159962,"line_start":888,"line_end":888,"column_start":5,"column_end":75}},{"value":"/ will be run concurrently. The `limit` argument is of type","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":159967,"byte_end":160028,"line_start":889,"line_end":889,"column_start":5,"column_end":66}},{"value":"/ `Into<Option<usize>>`, and so can be provided as either `None`,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":160033,"byte_end":160100,"line_start":890,"line_end":890,"column_start":5,"column_end":72}},{"value":"/ `Some(10)`, or just `10`. Note: a limit of zero is interpreted as","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":160105,"byte_end":160174,"line_start":891,"line_end":891,"column_start":5,"column_end":74}},{"value":"/ no limit at all, and will have the same result as passing in `None`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":160179,"byte_end":160251,"line_start":892,"line_end":892,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":160256,"byte_end":160259,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":160264,"byte_end":160339,"line_start":894,"line_end":894,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":160344,"byte_end":160401,"line_start":895,"line_end":895,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":160406,"byte_end":160409,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":160414,"byte_end":160428,"line_start":897,"line_end":897,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":160433,"byte_end":160436,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":160441,"byte_end":160448,"line_start":899,"line_end":899,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":160453,"byte_end":160494,"line_start":900,"line_end":900,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":160499,"byte_end":160533,"line_start":901,"line_end":901,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":160538,"byte_end":160581,"line_start":902,"line_end":902,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":160586,"byte_end":160589,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":160594,"byte_end":160634,"line_start":904,"line_end":904,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":160639,"byte_end":160679,"line_start":905,"line_end":905,"column_start":5,"column_end":45}},{"value":"/ let (tx3, rx3) = oneshot::channel();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":160684,"byte_end":160724,"line_start":906,"line_end":906,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":160729,"byte_end":160732,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ let fut = stream::iter(vec![rx1, rx2, rx3]).for_each_concurrent(","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":160737,"byte_end":160805,"line_start":908,"line_end":908,"column_start":5,"column_end":73}},{"value":"/     /* limit */ 2,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":160810,"byte_end":160832,"line_start":909,"line_end":909,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":160837,"byte_end":160862,"line_start":910,"line_end":910,"column_start":5,"column_end":30}},{"value":"/         rx.await.unwrap();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":160867,"byte_end":160897,"line_start":911,"line_end":911,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":160902,"byte_end":160911,"line_start":912,"line_end":912,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":160916,"byte_end":160922,"line_start":913,"line_end":913,"column_start":5,"column_end":11}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":160927,"byte_end":160953,"line_start":914,"line_end":914,"column_start":5,"column_end":31}},{"value":"/ tx2.send(()).unwrap();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":160958,"byte_end":160984,"line_start":915,"line_end":915,"column_start":5,"column_end":31}},{"value":"/ tx3.send(()).unwrap();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":160989,"byte_end":161015,"line_start":916,"line_end":916,"column_start":5,"column_end":31}},{"value":"/ fut.await;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":161020,"byte_end":161034,"line_start":917,"line_end":917,"column_start":5,"column_end":19}},{"value":"/ # })","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":161039,"byte_end":161047,"line_start":918,"line_end":918,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":161052,"byte_end":161059,"line_start":919,"line_end":919,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":161147,"byte_end":161172,"line_start":921,"line_end":921,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1746},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":162024,"byte_end":162028,"line_start":951,"line_end":951,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::stream::StreamExt::take","value":"pub fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":1692},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":161516,"byte_end":161587,"line_start":935,"line_end":935,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":161592,"byte_end":161595,"line_start":936,"line_end":936,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":161600,"byte_end":161673,"line_start":937,"line_end":937,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":161678,"byte_end":161713,"line_start":938,"line_end":938,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":161718,"byte_end":161721,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":161726,"byte_end":161740,"line_start":940,"line_end":940,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":161745,"byte_end":161748,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":161753,"byte_end":161760,"line_start":942,"line_end":942,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":161765,"byte_end":161806,"line_start":943,"line_end":943,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":161811,"byte_end":161854,"line_start":944,"line_end":944,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":161859,"byte_end":161862,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).take(3);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":161867,"byte_end":161913,"line_start":946,"line_end":946,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":161918,"byte_end":161921,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":161926,"byte_end":161990,"line_start":948,"line_end":948,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":161995,"byte_end":162004,"line_start":949,"line_end":949,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":162009,"byte_end":162016,"line_start":950,"line_end":950,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1747},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":162693,"byte_end":162697,"line_start":974,"line_end":974,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::stream::StreamExt::skip","value":"pub fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":1692},"children":[],"decl_id":null,"docs":" Creates a new stream which skips `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream which skips `n` items of the underlying stream.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":162166,"byte_end":162238,"line_start":958,"line_end":958,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":162243,"byte_end":162246,"line_start":959,"line_end":959,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been skipped from this stream then it will always","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":162251,"byte_end":162324,"line_start":960,"line_end":960,"column_start":5,"column_end":78}},{"value":"/ return the remaining items on this stream.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":162329,"byte_end":162375,"line_start":961,"line_end":961,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":162380,"byte_end":162383,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":162388,"byte_end":162402,"line_start":963,"line_end":963,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":162407,"byte_end":162410,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":162415,"byte_end":162422,"line_start":965,"line_end":965,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":162427,"byte_end":162468,"line_start":966,"line_end":966,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":162473,"byte_end":162516,"line_start":967,"line_end":967,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":162521,"byte_end":162524,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).skip(5);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":162529,"byte_end":162575,"line_start":969,"line_end":969,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":162580,"byte_end":162583,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":162588,"byte_end":162659,"line_start":971,"line_end":971,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":162664,"byte_end":162673,"line_start":972,"line_end":972,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":162678,"byte_end":162685,"line_start":973,"line_end":973,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1748},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":164318,"byte_end":164322,"line_start":1020,"line_end":1020,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::stream::StreamExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":1692},"children":[],"decl_id":null,"docs":" Fuse a stream such that [`poll_next`](Stream::poll_next) will never\n again be called once it has finished. This method can be used to turn\n any `Stream` into a `FusedStream`.","sig":null,"attributes":[{"value":"/ Fuse a stream such that [`poll_next`](Stream::poll_next) will never","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":162835,"byte_end":162906,"line_start":981,"line_end":981,"column_start":5,"column_end":76}},{"value":"/ again be called once it has finished. This method can be used to turn","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":162911,"byte_end":162984,"line_start":982,"line_end":982,"column_start":5,"column_end":78}},{"value":"/ any `Stream` into a `FusedStream`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":162989,"byte_end":163027,"line_start":983,"line_end":983,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":163032,"byte_end":163035,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/ Normally, once a stream has returned [`None`] from","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":163040,"byte_end":163094,"line_start":985,"line_end":985,"column_start":5,"column_end":59}},{"value":"/ [`poll_next`](Stream::poll_next) any further calls could exhibit bad","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":163099,"byte_end":163171,"line_start":986,"line_end":986,"column_start":5,"column_end":77}},{"value":"/ behavior such as block forever, panic, never return, etc. If it is known","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":163176,"byte_end":163252,"line_start":987,"line_end":987,"column_start":5,"column_end":81}},{"value":"/ that [`poll_next`](Stream::poll_next) may be called after stream","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":163257,"byte_end":163325,"line_start":988,"line_end":988,"column_start":5,"column_end":73}},{"value":"/ has already finished, then this method can be used to ensure that it has","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":163330,"byte_end":163406,"line_start":989,"line_end":989,"column_start":5,"column_end":81}},{"value":"/ defined semantics.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":163411,"byte_end":163433,"line_start":990,"line_end":990,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":163438,"byte_end":163441,"line_start":991,"line_end":991,"column_start":5,"column_end":8}},{"value":"/ The [`poll_next`](Stream::poll_next) method of a `fuse`d stream","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":163446,"byte_end":163513,"line_start":992,"line_end":992,"column_start":5,"column_end":72}},{"value":"/ is guaranteed to return [`None`] after the underlying stream has","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":163518,"byte_end":163586,"line_start":993,"line_end":993,"column_start":5,"column_end":73}},{"value":"/ finished.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":163591,"byte_end":163604,"line_start":994,"line_end":994,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":163609,"byte_end":163612,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":163617,"byte_end":163631,"line_start":996,"line_end":996,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":163636,"byte_end":163639,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":163644,"byte_end":163651,"line_start":998,"line_end":998,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::block_on_stream;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":163656,"byte_end":163699,"line_start":999,"line_end":999,"column_start":5,"column_end":48}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":163704,"byte_end":163747,"line_start":1000,"line_end":1000,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":163752,"byte_end":163780,"line_start":1001,"line_end":1001,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":163785,"byte_end":163788,"line_start":1002,"line_end":1002,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":163793,"byte_end":163811,"line_start":1003,"line_end":1003,"column_start":5,"column_end":23}},{"value":"/ let stream = stream::poll_fn(|_| {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":163816,"byte_end":163854,"line_start":1004,"line_end":1004,"column_start":5,"column_end":43}},{"value":"/     x += 1;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":163859,"byte_end":163874,"line_start":1005,"line_end":1005,"column_start":5,"column_end":20}},{"value":"/     match x {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":163879,"byte_end":163896,"line_start":1006,"line_end":1006,"column_start":5,"column_end":22}},{"value":"/         0..=2 => Poll::Ready(Some(x)),","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":163901,"byte_end":163943,"line_start":1007,"line_end":1007,"column_start":5,"column_end":47}},{"value":"/         3 => Poll::Ready(None),","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":163948,"byte_end":163983,"line_start":1008,"line_end":1008,"column_start":5,"column_end":40}},{"value":"/         _ => panic!(\"should not happen\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":163988,"byte_end":164032,"line_start":1009,"line_end":1009,"column_start":5,"column_end":49}},{"value":"/     }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":164037,"byte_end":164046,"line_start":1010,"line_end":1010,"column_start":5,"column_end":14}},{"value":"/ }).fuse();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":164051,"byte_end":164065,"line_start":1011,"line_end":1011,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":164070,"byte_end":164073,"line_start":1012,"line_end":1012,"column_start":5,"column_end":8}},{"value":"/ let mut iter = block_on_stream(stream);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":164078,"byte_end":164121,"line_start":1013,"line_end":1013,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some(1), iter.next());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":164126,"byte_end":164163,"line_start":1014,"line_end":1014,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Some(2), iter.next());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":164168,"byte_end":164205,"line_start":1015,"line_end":1015,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":164210,"byte_end":164244,"line_start":1016,"line_end":1016,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":164249,"byte_end":164283,"line_start":1017,"line_end":1017,"column_start":5,"column_end":39}},{"value":"/ // ...","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":164288,"byte_end":164298,"line_start":1018,"line_end":1018,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":164303,"byte_end":164310,"line_start":1019,"line_end":1019,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1749},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":165251,"byte_end":165257,"line_start":1053,"line_end":1053,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::stream::stream::StreamExt::by_ref","value":"pub fn by_ref(&mut Self) -> &mut Self","parent":{"krate":0,"index":1692},"children":[],"decl_id":null,"docs":" Borrows a stream, rather than consuming it.","sig":null,"attributes":[{"value":"/ Borrows a stream, rather than consuming it.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":164447,"byte_end":164494,"line_start":1027,"line_end":1027,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":164499,"byte_end":164502,"line_start":1028,"line_end":1028,"column_start":5,"column_end":8}},{"value":"/ This is useful to allow applying stream adaptors while still retaining","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":164507,"byte_end":164581,"line_start":1029,"line_end":1029,"column_start":5,"column_end":79}},{"value":"/ ownership of the original stream.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":164586,"byte_end":164623,"line_start":1030,"line_end":1030,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":164628,"byte_end":164631,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":164636,"byte_end":164650,"line_start":1032,"line_end":1032,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":164655,"byte_end":164658,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":164663,"byte_end":164670,"line_start":1034,"line_end":1034,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":164675,"byte_end":164716,"line_start":1035,"line_end":1035,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":164721,"byte_end":164764,"line_start":1036,"line_end":1036,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":164769,"byte_end":164772,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..5);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":164777,"byte_end":164817,"line_start":1038,"line_end":1038,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":164822,"byte_end":164825,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ let sum = stream.by_ref()","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":164830,"byte_end":164859,"line_start":1040,"line_end":1040,"column_start":5,"column_end":34}},{"value":"/                 .take(2)","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":164864,"byte_end":164892,"line_start":1041,"line_end":1041,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":164897,"byte_end":164954,"line_start":1042,"line_end":1042,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":164959,"byte_end":164986,"line_start":1043,"line_end":1043,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 3);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":164991,"byte_end":165014,"line_start":1044,"line_end":1044,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":165019,"byte_end":165022,"line_start":1045,"line_end":1045,"column_start":5,"column_end":8}},{"value":"/ // You can use the stream again","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":165027,"byte_end":165062,"line_start":1046,"line_end":1046,"column_start":5,"column_end":40}},{"value":"/ let sum = stream.take(2)","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":165067,"byte_end":165095,"line_start":1047,"line_end":1047,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":165100,"byte_end":165157,"line_start":1048,"line_end":1048,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":165162,"byte_end":165189,"line_start":1049,"line_end":1049,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 7);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":165194,"byte_end":165217,"line_start":1050,"line_end":1050,"column_start":5,"column_end":28}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":165222,"byte_end":165231,"line_start":1051,"line_end":1051,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":165236,"byte_end":165243,"line_start":1052,"line_end":1052,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1750},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":167404,"byte_end":167409,"line_start":1110,"line_end":1110,"column_start":8,"column_end":13},"name":"boxed","qualname":"::stream::stream::StreamExt::boxed","value":"pub fn boxed<'a>(Self) -> BoxStream where Self: Sized + Send + 'a","parent":{"krate":0,"index":1692},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":167175,"byte_end":167216,"line_start":1105,"line_end":1105,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":167221,"byte_end":167224,"line_start":1106,"line_end":1106,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":167229,"byte_end":167304,"line_start":1107,"line_end":1107,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":167309,"byte_end":167366,"line_start":1108,"line_end":1108,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":167371,"byte_end":167396,"line_start":1109,"line_end":1109,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1752},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":167865,"byte_end":167876,"line_start":1124,"line_end":1124,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::stream::stream::StreamExt::boxed_local","value":"pub fn boxed_local<'a>(Self) -> LocalBoxStream where Self: Sized + 'a","parent":{"krate":0,"index":1692},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":167564,"byte_end":167605,"line_start":1117,"line_end":1117,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":167610,"byte_end":167613,"line_start":1118,"line_end":1118,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":167618,"byte_end":167677,"line_start":1119,"line_end":1119,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":167682,"byte_end":167685,"line_start":1120,"line_end":1120,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":167690,"byte_end":167765,"line_start":1121,"line_end":1121,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":167770,"byte_end":167827,"line_start":1122,"line_end":1122,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":167832,"byte_end":167857,"line_start":1123,"line_end":1123,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1754},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":168813,"byte_end":168821,"line_start":1145,"line_end":1145,"column_start":8,"column_end":16},"name":"buffered","qualname":"::stream::stream::StreamExt::buffered","value":"pub fn buffered(Self, usize) -> Buffered<Self> where Self::Item: Future,\nSelf: Sized","parent":{"krate":0,"index":1692},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures.","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":168029,"byte_end":168092,"line_start":1131,"line_end":1131,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":168097,"byte_end":168100,"line_start":1132,"line_end":1132,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":168105,"byte_end":168180,"line_start":1133,"line_end":1133,"column_start":5,"column_end":80}},{"value":"/ will buffer up to at most `n` futures and then return the outputs in the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":168185,"byte_end":168261,"line_start":1134,"line_end":1134,"column_start":5,"column_end":81}},{"value":"/ same order as the underlying stream. No more than `n` futures will be","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":168266,"byte_end":168339,"line_start":1135,"line_end":1135,"column_start":5,"column_end":78}},{"value":"/ buffered at any point in time, and less than `n` may also be buffered","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":168344,"byte_end":168417,"line_start":1136,"line_end":1136,"column_start":5,"column_end":78}},{"value":"/ depending on the state of each future.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":168422,"byte_end":168464,"line_start":1137,"line_end":1137,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":168469,"byte_end":168472,"line_start":1138,"line_end":1138,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":168477,"byte_end":168542,"line_start":1139,"line_end":1139,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":168547,"byte_end":168550,"line_start":1140,"line_end":1140,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":168555,"byte_end":168630,"line_start":1141,"line_end":1141,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":168635,"byte_end":168692,"line_start":1142,"line_end":1142,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":168780,"byte_end":168805,"line_start":1144,"line_end":1144,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1755},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":170545,"byte_end":170561,"line_start":1190,"line_end":1190,"column_start":8,"column_end":24},"name":"buffer_unordered","qualname":"::stream::stream::StreamExt::buffer_unordered","value":"pub fn buffer_unordered(Self, usize) -> BufferUnordered<Self> where\nSelf::Item: Future, Self: Sized","parent":{"krate":0,"index":1692},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures (unordered).","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures (unordered).","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":169015,"byte_end":169090,"line_start":1153,"line_end":1153,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":169095,"byte_end":169098,"line_start":1154,"line_end":1154,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":169103,"byte_end":169178,"line_start":1155,"line_end":1155,"column_start":5,"column_end":80}},{"value":"/ will buffer up to `n` futures and then return the outputs in the order","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":169183,"byte_end":169257,"line_start":1156,"line_end":1156,"column_start":5,"column_end":79}},{"value":"/ in which they complete. No more than `n` futures will be buffered at","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":169262,"byte_end":169334,"line_start":1157,"line_end":1157,"column_start":5,"column_end":77}},{"value":"/ any point in time, and less than `n` may also be buffered depending on","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":169339,"byte_end":169413,"line_start":1158,"line_end":1158,"column_start":5,"column_end":79}},{"value":"/ the state of each future.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":169418,"byte_end":169447,"line_start":1159,"line_end":1159,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":169452,"byte_end":169455,"line_start":1160,"line_end":1160,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":169460,"byte_end":169525,"line_start":1161,"line_end":1161,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":169530,"byte_end":169533,"line_start":1162,"line_end":1162,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":169538,"byte_end":169613,"line_start":1163,"line_end":1163,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":169618,"byte_end":169675,"line_start":1164,"line_end":1164,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":169680,"byte_end":169683,"line_start":1165,"line_end":1165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":169688,"byte_end":169702,"line_start":1166,"line_end":1166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":169707,"byte_end":169710,"line_start":1167,"line_end":1167,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":169715,"byte_end":169722,"line_start":1168,"line_end":1168,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":169727,"byte_end":169768,"line_start":1169,"line_end":1169,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":169773,"byte_end":169807,"line_start":1170,"line_end":1170,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":169812,"byte_end":169855,"line_start":1171,"line_end":1171,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":169860,"byte_end":169863,"line_start":1172,"line_end":1172,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":169868,"byte_end":169918,"line_start":1173,"line_end":1173,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":169923,"byte_end":169973,"line_start":1174,"line_end":1174,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":169978,"byte_end":169981,"line_start":1175,"line_end":1175,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![recv_one, recv_two]);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":169986,"byte_end":170053,"line_start":1176,"line_end":1176,"column_start":5,"column_end":72}},{"value":"/ let mut buffered = stream_of_futures.buffer_unordered(10);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":170058,"byte_end":170120,"line_start":1177,"line_end":1177,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":170125,"byte_end":170128,"line_start":1178,"line_end":1178,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":170133,"byte_end":170158,"line_start":1179,"line_end":1179,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":170163,"byte_end":170217,"line_start":1180,"line_end":1180,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":170222,"byte_end":170225,"line_start":1181,"line_end":1181,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":170230,"byte_end":170255,"line_start":1182,"line_end":1182,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":170260,"byte_end":170314,"line_start":1183,"line_end":1183,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":170319,"byte_end":170322,"line_start":1184,"line_end":1184,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":170327,"byte_end":170371,"line_start":1185,"line_end":1185,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":170376,"byte_end":170412,"line_start":1186,"line_end":1186,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":170417,"byte_end":170424,"line_start":1187,"line_end":1187,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":170512,"byte_end":170537,"line_start":1189,"line_end":1189,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1756},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":171457,"byte_end":171460,"line_start":1220,"line_end":1220,"column_start":8,"column_end":11},"name":"zip","qualname":"::stream::stream::StreamExt::zip","value":"pub fn zip<St>(Self, St) -> Zip<Self, St> where St: Stream, Self: Sized","parent":{"krate":0,"index":1692},"children":[],"decl_id":null,"docs":" An adapter for zipping two streams together.","sig":null,"attributes":[{"value":"/ An adapter for zipping two streams together.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":170769,"byte_end":170817,"line_start":1198,"line_end":1198,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":170822,"byte_end":170825,"line_start":1199,"line_end":1199,"column_start":5,"column_end":8}},{"value":"/ The zipped stream waits for both streams to produce an item, and then","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":170830,"byte_end":170903,"line_start":1200,"line_end":1200,"column_start":5,"column_end":78}},{"value":"/ returns that pair. If either stream ends then the zipped stream will","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":170908,"byte_end":170980,"line_start":1201,"line_end":1201,"column_start":5,"column_end":77}},{"value":"/ also end.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":170985,"byte_end":170998,"line_start":1202,"line_end":1202,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":171003,"byte_end":171006,"line_start":1203,"line_end":1203,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":171011,"byte_end":171025,"line_start":1204,"line_end":1204,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":171030,"byte_end":171033,"line_start":1205,"line_end":1205,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":171038,"byte_end":171045,"line_start":1206,"line_end":1206,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":171050,"byte_end":171091,"line_start":1207,"line_end":1207,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":171096,"byte_end":171139,"line_start":1208,"line_end":1208,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":171144,"byte_end":171147,"line_start":1209,"line_end":1209,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":171152,"byte_end":171190,"line_start":1210,"line_end":1210,"column_start":5,"column_end":43}},{"value":"/ let stream2 = stream::iter(5..=10);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":171195,"byte_end":171234,"line_start":1211,"line_end":1211,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":171239,"byte_end":171242,"line_start":1212,"line_end":1212,"column_start":5,"column_end":8}},{"value":"/ let vec = stream1.zip(stream2)","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":171247,"byte_end":171281,"line_start":1213,"line_end":1213,"column_start":5,"column_end":39}},{"value":"/                  .collect::<Vec<_>>()","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":171286,"byte_end":171327,"line_start":1214,"line_end":1214,"column_start":5,"column_end":46}},{"value":"/                  .await;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":171332,"byte_end":171360,"line_start":1215,"line_end":1215,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(vec![(1, 5), (2, 6), (3, 7)], vec);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":171365,"byte_end":171415,"line_start":1216,"line_end":1216,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":171420,"byte_end":171429,"line_start":1217,"line_end":1217,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":171434,"byte_end":171441,"line_start":1218,"line_end":1218,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":171446,"byte_end":171449,"line_start":1219,"line_end":1219,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1758},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":172368,"byte_end":172373,"line_start":1251,"line_end":1251,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::stream::StreamExt::chain","value":"pub fn chain<St>(Self, St) -> Chain<Self, St> where St: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":1692},"children":[],"decl_id":null,"docs":" Adapter for chaining two streams.","sig":null,"attributes":[{"value":"/ Adapter for chaining two streams.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":171641,"byte_end":171678,"line_start":1228,"line_end":1228,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":171683,"byte_end":171686,"line_start":1229,"line_end":1229,"column_start":5,"column_end":8}},{"value":"/ The resulting stream emits elements from the first stream, and when","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":171691,"byte_end":171762,"line_start":1230,"line_end":1230,"column_start":5,"column_end":76}},{"value":"/ first stream reaches the end, emits the elements from the second stream.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":171767,"byte_end":171843,"line_start":1231,"line_end":1231,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":171848,"byte_end":171851,"line_start":1232,"line_end":1232,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":171856,"byte_end":171863,"line_start":1233,"line_end":1233,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":171868,"byte_end":171909,"line_start":1234,"line_end":1234,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":171914,"byte_end":171957,"line_start":1235,"line_end":1235,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":171962,"byte_end":171965,"line_start":1236,"line_end":1236,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(vec![Ok(10), Err(false)]);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":171970,"byte_end":172027,"line_start":1237,"line_end":1237,"column_start":5,"column_end":62}},{"value":"/ let stream2 = stream::iter(vec![Err(true), Ok(20)]);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":172032,"byte_end":172088,"line_start":1238,"line_end":1238,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":172093,"byte_end":172096,"line_start":1239,"line_end":1239,"column_start":5,"column_end":8}},{"value":"/ let stream = stream1.chain(stream2);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":172101,"byte_end":172141,"line_start":1240,"line_end":1240,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":172146,"byte_end":172149,"line_start":1241,"line_end":1241,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = stream.collect().await;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":172154,"byte_end":172202,"line_start":1242,"line_end":1242,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(result, vec![","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":172207,"byte_end":172235,"line_start":1243,"line_end":1243,"column_start":5,"column_end":33}},{"value":"/     Ok(10),","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":172240,"byte_end":172255,"line_start":1244,"line_end":1244,"column_start":5,"column_end":20}},{"value":"/     Err(false),","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":172260,"byte_end":172279,"line_start":1245,"line_end":1245,"column_start":5,"column_end":24}},{"value":"/     Err(true),","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":172284,"byte_end":172302,"line_start":1246,"line_end":1246,"column_start":5,"column_end":23}},{"value":"/     Ok(20),","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":172307,"byte_end":172322,"line_start":1247,"line_end":1247,"column_start":5,"column_end":20}},{"value":"/ ]);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":172327,"byte_end":172334,"line_start":1248,"line_end":1248,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":172339,"byte_end":172348,"line_start":1249,"line_end":1249,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":172353,"byte_end":172360,"line_start":1250,"line_end":1250,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1760},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":172711,"byte_end":172719,"line_start":1262,"line_end":1262,"column_start":8,"column_end":16},"name":"peekable","qualname":"::stream::stream::StreamExt::peekable","value":"pub fn peekable(Self) -> Peekable<Self> where Self: Sized","parent":{"krate":0,"index":1692},"children":[],"decl_id":null,"docs":" Creates a new stream which exposes a `peek` method.","sig":null,"attributes":[{"value":"/ Creates a new stream which exposes a `peek` method.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":172565,"byte_end":172620,"line_start":1259,"line_end":1259,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":172625,"byte_end":172628,"line_start":1260,"line_end":1260,"column_start":5,"column_end":8}},{"value":"/ Calling `peek` returns a reference to the next item in the stream.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":172633,"byte_end":172703,"line_start":1261,"line_end":1261,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1761},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":173754,"byte_end":173760,"line_start":1288,"line_end":1288,"column_start":8,"column_end":14},"name":"chunks","qualname":"::stream::stream::StreamExt::chunks","value":"pub fn chunks(Self, usize) -> Chunks<Self> where Self: Sized","parent":{"krate":0,"index":1692},"children":[],"decl_id":null,"docs":" An adaptor for chunking up items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up items of the stream inside a vector.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":172852,"byte_end":172919,"line_start":1269,"line_end":1269,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":172924,"byte_end":172927,"line_start":1270,"line_end":1270,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull items from this stream and buffer","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":172932,"byte_end":173006,"line_start":1271,"line_end":1271,"column_start":5,"column_end":79}},{"value":"/ them into a local vector. At most `capacity` items will get buffered","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":173011,"byte_end":173083,"line_start":1272,"line_end":1272,"column_start":5,"column_end":77}},{"value":"/ before they're yielded from the returned stream.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":173088,"byte_end":173140,"line_start":1273,"line_end":1273,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":173145,"byte_end":173148,"line_start":1274,"line_end":1274,"column_start":5,"column_end":8}},{"value":"/ Note that the vectors returned from this iterator may not always have","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":173153,"byte_end":173226,"line_start":1275,"line_end":1275,"column_start":5,"column_end":78}},{"value":"/ `capacity` elements. If the underlying stream ended and only a partial","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":173231,"byte_end":173305,"line_start":1276,"line_end":1276,"column_start":5,"column_end":79}},{"value":"/ vector was created, it'll be returned. Additionally if an error happens","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":173310,"byte_end":173385,"line_start":1277,"line_end":1277,"column_start":5,"column_end":80}},{"value":"/ from the underlying stream then the currently buffered items will be","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":173390,"byte_end":173462,"line_start":1278,"line_end":1278,"column_start":5,"column_end":77}},{"value":"/ yielded.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":173467,"byte_end":173479,"line_start":1279,"line_end":1279,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":173484,"byte_end":173487,"line_start":1280,"line_end":1280,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":173492,"byte_end":173567,"line_start":1281,"line_end":1281,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":173572,"byte_end":173629,"line_start":1282,"line_end":1282,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":173634,"byte_end":173637,"line_start":1283,"line_end":1283,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":173642,"byte_end":173654,"line_start":1284,"line_end":1284,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":173659,"byte_end":173662,"line_start":1285,"line_end":1285,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":173667,"byte_end":173716,"line_start":1286,"line_end":1286,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":173721,"byte_end":173746,"line_start":1287,"line_end":1287,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1762},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":174869,"byte_end":174881,"line_start":1314,"line_end":1314,"column_start":8,"column_end":20},"name":"ready_chunks","qualname":"::stream::stream::StreamExt::ready_chunks","value":"pub fn ready_chunks(Self, usize) -> ReadyChunks<Self> where Self: Sized","parent":{"krate":0,"index":1692},"children":[],"decl_id":null,"docs":" An adaptor for chunking up ready items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up ready items of the stream inside a vector.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":173933,"byte_end":174006,"line_start":1295,"line_end":1295,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":174011,"byte_end":174014,"line_start":1296,"line_end":1296,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull ready items from this stream and","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":174019,"byte_end":174092,"line_start":1297,"line_end":1297,"column_start":5,"column_end":78}},{"value":"/ buffer them into a local vector. At most `capacity` items will get","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":174097,"byte_end":174167,"line_start":1298,"line_end":1298,"column_start":5,"column_end":75}},{"value":"/ buffered before they're yielded from the returned stream. If underlying","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":174172,"byte_end":174247,"line_start":1299,"line_end":1299,"column_start":5,"column_end":80}},{"value":"/ stream returns `Poll::Pending`, and collected chunk is not empty, it will","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":174252,"byte_end":174329,"line_start":1300,"line_end":1300,"column_start":5,"column_end":82}},{"value":"/ be immediately returned.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":174334,"byte_end":174362,"line_start":1301,"line_end":1301,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":174367,"byte_end":174370,"line_start":1302,"line_end":1302,"column_start":5,"column_end":8}},{"value":"/ If the underlying stream ended and only a partial vector was created,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":174375,"byte_end":174448,"line_start":1303,"line_end":1303,"column_start":5,"column_end":78}},{"value":"/ it'll be returned. Additionally if an error happens from the underlying","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":174453,"byte_end":174528,"line_start":1304,"line_end":1304,"column_start":5,"column_end":80}},{"value":"/ stream then the currently buffered items will be yielded.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":174533,"byte_end":174594,"line_start":1305,"line_end":1305,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":174599,"byte_end":174602,"line_start":1306,"line_end":1306,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":174607,"byte_end":174682,"line_start":1307,"line_end":1307,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":174687,"byte_end":174744,"line_start":1308,"line_end":1308,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":174749,"byte_end":174752,"line_start":1309,"line_end":1309,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":174757,"byte_end":174769,"line_start":1310,"line_end":1310,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":174774,"byte_end":174777,"line_start":1311,"line_end":1311,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":174782,"byte_end":174831,"line_start":1312,"line_end":1312,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":174836,"byte_end":174861,"line_start":1313,"line_end":1313,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1763},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":177111,"byte_end":177118,"line_start":1367,"line_end":1367,"column_start":8,"column_end":15},"name":"inspect","qualname":"::stream::stream::StreamExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnMut(&Self::Item) ->\n(), Self: Sized","parent":{"krate":0,"index":1692},"children":[],"decl_id":null,"docs":" Do something with each item of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with each item of this stream, afterwards passing it on.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":176808,"byte_end":176881,"line_start":1362,"line_end":1362,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":176886,"byte_end":176889,"line_start":1363,"line_end":1363,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Iterator::inspect` method in the standard","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":176894,"byte_end":176963,"line_start":1364,"line_end":1364,"column_start":5,"column_end":74}},{"value":"/ library where it allows easily inspecting each value as it passes","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":176968,"byte_end":177037,"line_start":1365,"line_end":1365,"column_start":5,"column_end":74}},{"value":"/ through the stream, for example to debug what's going on.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":177042,"byte_end":177103,"line_start":1366,"line_end":1366,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1765},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":177574,"byte_end":177585,"line_start":1380,"line_end":1380,"column_start":8,"column_end":19},"name":"left_stream","qualname":"::stream::stream::StreamExt::left_stream","value":"pub fn left_stream<B>(Self) -> Either<Self, B> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":1692},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the left-hand variant","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":177295,"byte_end":177370,"line_start":1375,"line_end":1375,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":177375,"byte_end":177396,"line_start":1376,"line_end":1376,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":177401,"byte_end":177404,"line_start":1377,"line_end":1377,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_stream` method to write `if`","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":177409,"byte_end":177489,"line_start":1378,"line_end":1378,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":177494,"byte_end":177566,"line_start":1379,"line_end":1379,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1767},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":178038,"byte_end":178050,"line_start":1393,"line_end":1393,"column_start":8,"column_end":20},"name":"right_stream","qualname":"::stream::stream::StreamExt::right_stream","value":"pub fn right_stream<B>(Self) -> Either<B, Self> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":1692},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the right-hand variant","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":177759,"byte_end":177835,"line_start":1388,"line_end":1388,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":177840,"byte_end":177861,"line_start":1389,"line_end":1389,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":177866,"byte_end":177869,"line_start":1390,"line_end":1390,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_stream` method to write `if`","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":177874,"byte_end":177953,"line_start":1391,"line_end":1391,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":177958,"byte_end":178030,"line_start":1392,"line_end":1392,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1769},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":178326,"byte_end":178341,"line_start":1403,"line_end":1403,"column_start":8,"column_end":23},"name":"poll_next_unpin","qualname":"::stream::stream::StreamExt::poll_next_unpin","value":"pub fn poll_next_unpin(&mut Self, &mut Context) -> Poll<Option<Self::Item>>\nwhere Self: Unpin","parent":{"krate":0,"index":1692},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Stream::poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Stream::poll_next`] on [`Unpin`]","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":178225,"byte_end":178296,"line_start":1401,"line_end":1401,"column_start":5,"column_end":76}},{"value":"/ stream types.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":178301,"byte_end":178318,"line_start":1402,"line_end":1402,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1770},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":180442,"byte_end":180458,"line_start":1458,"line_end":1458,"column_start":8,"column_end":24},"name":"select_next_some","qualname":"::stream::stream::StreamExt::select_next_some","value":"pub fn select_next_some(&mut Self) -> SelectNextSome<, Self> where\nSelf: Unpin + FusedStream","parent":{"krate":0,"index":1692},"children":[],"decl_id":null,"docs":" Returns a [`Future`] that resolves when the next item in this stream is\n ready.","sig":null,"attributes":[{"value":"/ Returns a [`Future`] that resolves when the next item in this stream is","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":178488,"byte_end":178563,"line_start":1410,"line_end":1410,"column_start":5,"column_end":80}},{"value":"/ ready.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":178568,"byte_end":178578,"line_start":1411,"line_end":1411,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":178583,"byte_end":178586,"line_start":1412,"line_end":1412,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`][StreamExt::next] method, but it won't","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":178591,"byte_end":178664,"line_start":1413,"line_end":1413,"column_start":5,"column_end":78}},{"value":"/ resolve to [`None`] if used on an empty [`Stream`]. Instead, the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":178669,"byte_end":178737,"line_start":1414,"line_end":1414,"column_start":5,"column_end":73}},{"value":"/ returned future type will return `true` from","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":178742,"byte_end":178790,"line_start":1415,"line_end":1415,"column_start":5,"column_end":53}},{"value":"/ [`FusedFuture::is_terminated`][] when the [`Stream`] is empty, allowing","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":178795,"byte_end":178870,"line_start":1416,"line_end":1416,"column_start":5,"column_end":80}},{"value":"/ [`select_next_some`][StreamExt::select_next_some] to be easily used with","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":178875,"byte_end":178951,"line_start":1417,"line_end":1417,"column_start":5,"column_end":81}},{"value":"/ the [`select!`] macro.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":178956,"byte_end":178982,"line_start":1418,"line_end":1418,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":178987,"byte_end":178990,"line_start":1419,"line_end":1419,"column_start":5,"column_end":8}},{"value":"/ If the future is polled after this [`Stream`] is empty it will panic.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":178995,"byte_end":179068,"line_start":1420,"line_end":1420,"column_start":5,"column_end":78}},{"value":"/ Using the future with a [`FusedFuture`][]-aware primitive like the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":179073,"byte_end":179143,"line_start":1421,"line_end":1421,"column_start":5,"column_end":75}},{"value":"/ [`select!`] macro will prevent this.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":179148,"byte_end":179188,"line_start":1422,"line_end":1422,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":179193,"byte_end":179196,"line_start":1423,"line_end":1423,"column_start":5,"column_end":8}},{"value":"/ [`FusedFuture`]: futures_core::future::FusedFuture","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":179201,"byte_end":179255,"line_start":1424,"line_end":1424,"column_start":5,"column_end":59}},{"value":"/ [`FusedFuture::is_terminated`]: futures_core::future::FusedFuture::is_terminated","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":179260,"byte_end":179344,"line_start":1425,"line_end":1425,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":179349,"byte_end":179352,"line_start":1426,"line_end":1426,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":179357,"byte_end":179371,"line_start":1427,"line_end":1427,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":179376,"byte_end":179379,"line_start":1428,"line_end":1428,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":179384,"byte_end":179391,"line_start":1429,"line_end":1429,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":179396,"byte_end":179437,"line_start":1430,"line_end":1430,"column_start":5,"column_end":46}},{"value":"/ use futures::{future, select};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":179442,"byte_end":179476,"line_start":1431,"line_end":1431,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{StreamExt, FuturesUnordered};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":179481,"byte_end":179536,"line_start":1432,"line_end":1432,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":179541,"byte_end":179544,"line_start":1433,"line_end":1433,"column_start":5,"column_end":8}},{"value":"/ let mut fut = future::ready(1);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":179549,"byte_end":179584,"line_start":1434,"line_end":1434,"column_start":5,"column_end":40}},{"value":"/ let mut async_tasks = FuturesUnordered::new();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":179589,"byte_end":179639,"line_start":1435,"line_end":1435,"column_start":5,"column_end":55}},{"value":"/ let mut total = 0;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":179644,"byte_end":179666,"line_start":1436,"line_end":1436,"column_start":5,"column_end":27}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":179671,"byte_end":179681,"line_start":1437,"line_end":1437,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":179686,"byte_end":179703,"line_start":1438,"line_end":1438,"column_start":5,"column_end":22}},{"value":"/         num = fut => {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":179708,"byte_end":179734,"line_start":1439,"line_end":1439,"column_start":5,"column_end":31}},{"value":"/             // First, the `ready` future completes.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":179739,"byte_end":179794,"line_start":1440,"line_end":1440,"column_start":5,"column_end":60}},{"value":"/             total += num;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":179799,"byte_end":179828,"line_start":1441,"line_end":1441,"column_start":5,"column_end":34}},{"value":"/             // Then we spawn a new task onto `async_tasks`,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":179833,"byte_end":179896,"line_start":1442,"line_end":1442,"column_start":5,"column_end":68}},{"value":"/             async_tasks.push(async { 5 });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":179901,"byte_end":179947,"line_start":1443,"line_end":1443,"column_start":5,"column_end":51}},{"value":"/         },","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":179952,"byte_end":179966,"line_start":1444,"line_end":1444,"column_start":5,"column_end":19}},{"value":"/         // On the next iteration of the loop, the task we spawned","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":179971,"byte_end":180040,"line_start":1445,"line_end":1445,"column_start":5,"column_end":74}},{"value":"/         // completes.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":180045,"byte_end":180070,"line_start":1446,"line_end":1446,"column_start":5,"column_end":30}},{"value":"/         num = async_tasks.select_next_some() => {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":180075,"byte_end":180128,"line_start":1447,"line_end":1447,"column_start":5,"column_end":58}},{"value":"/             total += num;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":180133,"byte_end":180162,"line_start":1448,"line_end":1448,"column_start":5,"column_end":34}},{"value":"/         }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":180167,"byte_end":180180,"line_start":1449,"line_end":1449,"column_start":5,"column_end":18}},{"value":"/         // Finally, both the `ready` future and `async_tasks` have","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":180185,"byte_end":180255,"line_start":1450,"line_end":1450,"column_start":5,"column_end":75}},{"value":"/         // finished, so we enter the `complete` branch.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":180260,"byte_end":180319,"line_start":1451,"line_end":1451,"column_start":5,"column_end":64}},{"value":"/         complete => break,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":180324,"byte_end":180354,"line_start":1452,"line_end":1452,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":180359,"byte_end":180368,"line_start":1453,"line_end":1453,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":180373,"byte_end":180378,"line_start":1454,"line_end":1454,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(total, 6);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":180383,"byte_end":180408,"line_start":1455,"line_end":1455,"column_start":5,"column_end":30}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":180413,"byte_end":180422,"line_start":1456,"line_end":1456,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":180427,"byte_end":180434,"line_start":1457,"line_end":1457,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6968},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\and_then.rs","byte_start":287763,"byte_end":287770,"line_start":14,"line_end":14,"column_start":16,"column_end":23},"name":"AndThen","qualname":"::stream::try_stream::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":6972},{"krate":0,"index":6973},{"krate":0,"index":6974}],"decl_id":null,"docs":" Stream for the [`and_then`](super::TryStreamExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7032},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":251940,"byte_end":251947,"line_start":25,"line_end":25,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::stream::try_stream::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":7035}],"decl_id":null,"docs":" Stream for the [`err_into`](super::TryStreamExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7101},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":252195,"byte_end":252204,"line_start":32,"line_end":32,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::stream::try_stream::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":7104}],"decl_id":null,"docs":" Stream for the [`inspect_ok`](super::TryStreamExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7170},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":252505,"byte_end":252515,"line_start":39,"line_end":39,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::stream::try_stream::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":7173}],"decl_id":null,"docs":" Stream for the [`inspect_err`](super::TryStreamExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7241},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\into_stream.rs","byte_start":290571,"byte_end":290581,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"IntoStream","qualname":"::stream::try_stream::into_stream::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":7243}],"decl_id":null,"docs":" Stream for the [`into_stream`](super::TryStreamExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7279},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":252941,"byte_end":252946,"line_start":50,"line_end":50,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::stream::try_stream::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":7282}],"decl_id":null,"docs":" Stream for the [`map_ok`](super::TryStreamExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7348},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":253223,"byte_end":253229,"line_start":57,"line_end":57,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::stream::try_stream::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":7351}],"decl_id":null,"docs":" Stream for the [`map_err`](super::TryStreamExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7414},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\or_else.rs","byte_start":291952,"byte_end":291958,"line_start":14,"line_end":14,"column_start":16,"column_end":22},"name":"OrElse","qualname":"::stream::try_stream::or_else::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":7418},{"krate":0,"index":7419},{"krate":0,"index":7420}],"decl_id":null,"docs":" Stream for the [`or_else`](super::TryStreamExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7475},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_next.rs","byte_start":294854,"byte_end":294861,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":7478}],"decl_id":null,"docs":" Future for the [`try_next`](super::TryStreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::TryStreamExt::try_next) method.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_next.rs","byte_start":294687,"byte_end":294757,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_next.rs","byte_start":294775,"byte_end":294842,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7483},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_for_each.rs","byte_start":295969,"byte_end":295979,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"TryForEach","qualname":"::stream::try_stream::try_for_each::TryForEach","value":"TryForEach {  }","parent":null,"children":[{"krate":0,"index":7487},{"krate":0,"index":7488},{"krate":0,"index":7489}],"decl_id":null,"docs":" Future for the [`try_for_each`](super::TryStreamExt::try_for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7540},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_filter.rs","byte_start":297922,"byte_end":297931,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"TryFilter","qualname":"::stream::try_stream::try_filter::TryFilter","value":"TryFilter {  }","parent":null,"children":[{"krate":0,"index":7544},{"krate":0,"index":7545},{"krate":0,"index":7546},{"krate":0,"index":7547}],"decl_id":null,"docs":" Stream for the [`try_filter`](super::TryStreamExt::try_filter)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7605},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":301171,"byte_end":301183,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TryFilterMap","qualname":"::stream::try_stream::try_filter_map::TryFilterMap","value":"TryFilterMap {  }","parent":null,"children":[{"krate":0,"index":7609},{"krate":0,"index":7610},{"krate":0,"index":7611}],"decl_id":null,"docs":" Stream for the [`try_filter_map`](super::TryStreamExt::try_filter_map)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7671},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_flatten.rs","byte_start":304235,"byte_end":304245,"line_start":13,"line_end":13,"column_start":16,"column_end":26},"name":"TryFlatten","qualname":"::stream::try_stream::try_flatten::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":7673},{"krate":0,"index":7674}],"decl_id":null,"docs":" Stream for the [`try_flatten`](super::TryStreamExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7717},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_collect.rs","byte_start":306423,"byte_end":306433,"line_start":13,"line_end":13,"column_start":16,"column_end":26},"name":"TryCollect","qualname":"::stream::try_stream::try_collect::TryCollect","value":"TryCollect {  }","parent":null,"children":[{"krate":0,"index":7720},{"krate":0,"index":7721}],"decl_id":null,"docs":" Future for the [`try_collect`](super::TryStreamExt::try_collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7764},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_concat.rs","byte_start":307838,"byte_end":307847,"line_start":12,"line_end":12,"column_start":16,"column_end":25},"name":"TryConcat","qualname":"::stream::try_stream::try_concat::TryConcat","value":"TryConcat {  }","parent":null,"children":[{"krate":0,"index":7766},{"krate":0,"index":7767}],"decl_id":null,"docs":" Future for the [`try_concat`](super::TryStreamExt::try_concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7799},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_fold.rs","byte_start":309294,"byte_end":309301,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"TryFold","qualname":"::stream::try_stream::try_fold::TryFold","value":"TryFold {  }","parent":null,"children":[{"krate":0,"index":7804},{"krate":0,"index":7805},{"krate":0,"index":7806},{"krate":0,"index":7807}],"decl_id":null,"docs":" Future for the [`try_fold`](super::TryStreamExt::try_fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2171},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":313804,"byte_end":313814,"line_start":58,"line_end":58,"column_start":8,"column_end":18},"name":"try_unfold","qualname":"::stream::try_stream::try_unfold::try_unfold","value":"pub fn try_unfold<T, F, Fut, Item>(T, F) -> TryUnfold<T, F, Fut> where\nF: FnMut(T) -> Fut, Fut: TryFuture<Ok = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","sig":null,"attributes":[{"value":"/ Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":311947,"byte_end":312023,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":312024,"byte_end":312027,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `TryStream::try_fold()` adapter: while","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":312028,"byte_end":312104,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/ `TryStream::try_fold()` reduces a `TryStream` to one single value,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":312105,"byte_end":312175,"line_start":12,"line_end":12,"column_start":1,"column_end":71}},{"value":"/ `try_unfold()` creates a `TryStream` from a seed value.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":312176,"byte_end":312235,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":312236,"byte_end":312239,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ `try_unfold()` will call the provided closure with the provided seed, then","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":312240,"byte_end":312318,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ wait for the returned `TryFuture` to complete with `(a, b)`. It will then","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":312319,"byte_end":312396,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ yield the value `a`, and use `b` as the next internal state.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":312397,"byte_end":312461,"line_start":17,"line_end":17,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":312462,"byte_end":312465,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(TryFuture)`, then the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":312466,"byte_end":312538,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/ `try_unfold()` will stop producing items and return `Poll::Ready(None)` in","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":312539,"byte_end":312617,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ future calls to `poll()`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":312618,"byte_end":312647,"line_start":21,"line_end":21,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":312648,"byte_end":312651,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ In case of error generated by the returned `TryFuture`, the error will be","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":312652,"byte_end":312729,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/ returned by the `TryStream`. The `TryStream` will then yield","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":312730,"byte_end":312794,"line_start":24,"line_end":24,"column_start":1,"column_end":65}},{"value":"/ `Poll::Ready(None)` in future calls to `poll()`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":312795,"byte_end":312847,"line_start":25,"line_end":25,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":312848,"byte_end":312851,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":312852,"byte_end":312929,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":312930,"byte_end":313002,"line_start":28,"line_end":28,"column_start":1,"column_end":73}},{"value":"/ `TryFuture` using other library functions working on futures, and","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":313003,"byte_end":313072,"line_start":29,"line_end":29,"column_start":1,"column_end":70}},{"value":"/ `try_unfold()` will turn it into a `TryStream` by repeating the operation.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":313073,"byte_end":313151,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":313152,"byte_end":313155,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":313156,"byte_end":313169,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":313170,"byte_end":313173,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":313174,"byte_end":313181,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":313182,"byte_end":313215,"line_start":35,"line_end":35,"column_start":1,"column_end":34}},{"value":"/ # struct SomeError;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":313216,"byte_end":313239,"line_start":36,"line_end":36,"column_start":1,"column_end":24}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":313240,"byte_end":313281,"line_start":37,"line_end":37,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":313282,"byte_end":313328,"line_start":38,"line_end":38,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":313329,"byte_end":313332,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::try_unfold(0, |state| async move {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":313333,"byte_end":313392,"line_start":40,"line_end":40,"column_start":1,"column_end":60}},{"value":"/     if state < 0 {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":313393,"byte_end":313415,"line_start":41,"line_end":41,"column_start":1,"column_end":23}},{"value":"/         return Err(SomeError);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":313416,"byte_end":313450,"line_start":42,"line_end":42,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":313451,"byte_end":313460,"line_start":43,"line_end":43,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":313461,"byte_end":313464,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/     if state <= 2 {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":313465,"byte_end":313488,"line_start":45,"line_end":45,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":313489,"byte_end":313528,"line_start":46,"line_end":46,"column_start":1,"column_end":40}},{"value":"/         let yielded = state * 2;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":313529,"byte_end":313565,"line_start":47,"line_end":47,"column_start":1,"column_end":37}},{"value":"/         Ok(Some((yielded, next_state)))","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":313566,"byte_end":313609,"line_start":48,"line_end":48,"column_start":1,"column_end":44}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":313610,"byte_end":313626,"line_start":49,"line_end":49,"column_start":1,"column_end":17}},{"value":"/         Ok(None)","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":313627,"byte_end":313647,"line_start":50,"line_end":50,"column_start":1,"column_end":21}},{"value":"/     }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":313648,"byte_end":313657,"line_start":51,"line_end":51,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":313658,"byte_end":313665,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":313666,"byte_end":313669,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ let result: Result<Vec<i32>, _> = stream.try_collect().await;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":313670,"byte_end":313735,"line_start":54,"line_end":54,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(result, Ok(vec![0, 2, 4]));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":313736,"byte_end":313778,"line_start":55,"line_end":55,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":313779,"byte_end":313788,"line_start":56,"line_end":56,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":313789,"byte_end":313796,"line_start":57,"line_end":57,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7868},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":314160,"byte_end":314169,"line_start":73,"line_end":73,"column_start":16,"column_end":25},"name":"TryUnfold","qualname":"::stream::try_stream::try_unfold::TryUnfold","value":"TryUnfold {  }","parent":null,"children":[{"krate":0,"index":7872},{"krate":0,"index":7873},{"krate":0,"index":7874}],"decl_id":null,"docs":" Stream for the [`try_unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7925},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":316139,"byte_end":316151,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TrySkipWhile","qualname":"::stream::try_stream::try_skip_while::TrySkipWhile","value":"TrySkipWhile {  }","parent":null,"children":[{"krate":0,"index":7929},{"krate":0,"index":7930},{"krate":0,"index":7931},{"krate":0,"index":7932},{"krate":0,"index":7933}],"decl_id":null,"docs":" Stream for the [`try_skip_while`](super::TryStreamExt::try_skip_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7994},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_take_while.rs","byte_start":319823,"byte_end":319835,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TryTakeWhile","qualname":"::stream::try_stream::try_take_while::TryTakeWhile","value":"TryTakeWhile {  }","parent":null,"children":[{"krate":0,"index":7998},{"krate":0,"index":7999},{"krate":0,"index":8000},{"krate":0,"index":8001},{"krate":0,"index":8002}],"decl_id":null,"docs":" Stream for the [`try_take_while`](super::TryStreamExt::try_take_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9111},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_buffer_unordered.rs","byte_start":5543890,"byte_end":5543908,"line_start":16,"line_end":16,"column_start":16,"column_end":34},"name":"TryBufferUnordered","qualname":"::stream::try_stream::try_buffer_unordered::TryBufferUnordered","value":"TryBufferUnordered {  }","parent":null,"children":[{"krate":0,"index":9113},{"krate":0,"index":9114},{"krate":0,"index":9115}],"decl_id":null,"docs":" Stream for the\n [`try_buffer_unordered`](super::TryStreamExt::try_buffer_unordered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9067},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_buffered.rs","byte_start":5546489,"byte_end":5546500,"line_start":15,"line_end":15,"column_start":16,"column_end":27},"name":"TryBuffered","qualname":"::stream::try_stream::try_buffered::TryBuffered","value":"TryBuffered {  }","parent":null,"children":[{"krate":0,"index":9069},{"krate":0,"index":9070},{"krate":0,"index":9071}],"decl_id":null,"docs":" Stream for the [`try_buffered`](super::TryStreamExt::try_buffered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9001},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_for_each_concurrent.rs","byte_start":5549055,"byte_end":5549075,"line_start":16,"line_end":16,"column_start":16,"column_end":36},"name":"TryForEachConcurrent","qualname":"::stream::try_stream::try_for_each_concurrent::TryForEachConcurrent","value":"TryForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":9005},{"krate":0,"index":9006},{"krate":0,"index":9007},{"krate":0,"index":9008}],"decl_id":null,"docs":" Future for the\n [`try_for_each_concurrent`](super::TryStreamExt::try_for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":2267},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":256183,"byte_end":256195,"line_start":144,"line_end":144,"column_start":11,"column_end":23},"name":"TryStreamExt","qualname":"::stream::try_stream::TryStreamExt","value":"TryStreamExt: TryStream","parent":null,"children":[{"krate":0,"index":2268},{"krate":0,"index":2270},{"krate":0,"index":2273},{"krate":0,"index":2276},{"krate":0,"index":2279},{"krate":0,"index":2282},{"krate":0,"index":2284},{"krate":0,"index":2286},{"krate":0,"index":2287},{"krate":0,"index":2288},{"krate":0,"index":2291},{"krate":0,"index":2294},{"krate":0,"index":2297},{"krate":0,"index":2301},{"krate":0,"index":2303},{"krate":0,"index":2306},{"krate":0,"index":2310},{"krate":0,"index":2311},{"krate":0,"index":2315},{"krate":0,"index":2316},{"krate":0,"index":2317},{"krate":0,"index":2318}],"decl_id":null,"docs":" Adapters specific to `Result`-returning streams\n","sig":null,"attributes":[{"value":"/ Adapters specific to `Result`-returning streams","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":256121,"byte_end":256172,"line_start":143,"line_end":143,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2268},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":256737,"byte_end":256745,"line_start":162,"line_end":162,"column_start":8,"column_end":16},"name":"err_into","qualname":"::stream::try_stream::TryStreamExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":2267},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which converts the error type\n into the one provided.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which converts the error type","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":256213,"byte_end":256287,"line_start":145,"line_end":145,"column_start":5,"column_end":79}},{"value":"/ into the one provided.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":256292,"byte_end":256318,"line_start":146,"line_end":146,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":256323,"byte_end":256326,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":256331,"byte_end":256345,"line_start":148,"line_end":148,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":256350,"byte_end":256353,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":256358,"byte_end":256365,"line_start":150,"line_end":150,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":256370,"byte_end":256411,"line_start":151,"line_end":151,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":256416,"byte_end":256462,"line_start":152,"line_end":152,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":256467,"byte_end":256470,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":256475,"byte_end":256495,"line_start":154,"line_end":154,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(()), Err(5i32)])","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":256500,"byte_end":256545,"line_start":155,"line_end":155,"column_start":5,"column_end":50}},{"value":"/         .err_into::<i64>();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":256550,"byte_end":256581,"line_start":156,"line_end":156,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":256586,"byte_end":256589,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":256594,"byte_end":256648,"line_start":158,"line_end":158,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(5i64));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":256653,"byte_end":256704,"line_start":159,"line_end":159,"column_start":5,"column_end":56}},{"value":"/ # })","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":256709,"byte_end":256717,"line_start":160,"line_end":160,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":256722,"byte_end":256729,"line_start":161,"line_end":161,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2270},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":257441,"byte_end":257447,"line_start":187,"line_end":187,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::stream::try_stream::TryStreamExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where Self: Sized,\nF: FnMut(Self::Ok) -> T","parent":{"krate":0,"index":2267},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the success value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the success value","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":256921,"byte_end":256994,"line_start":170,"line_end":170,"column_start":5,"column_end":78}},{"value":"/ using the provided closure.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":256999,"byte_end":257030,"line_start":171,"line_end":171,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":257035,"byte_end":257038,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":257043,"byte_end":257057,"line_start":173,"line_end":173,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":257062,"byte_end":257065,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":257070,"byte_end":257077,"line_start":175,"line_end":175,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":257082,"byte_end":257123,"line_start":176,"line_end":176,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":257128,"byte_end":257174,"line_start":177,"line_end":177,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":257179,"byte_end":257182,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":257187,"byte_end":257207,"line_start":179,"line_end":179,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":257212,"byte_end":257253,"line_start":180,"line_end":180,"column_start":5,"column_end":46}},{"value":"/         .map_ok(|x| x + 2);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":257258,"byte_end":257289,"line_start":181,"line_end":181,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":257294,"byte_end":257297,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(7)));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":257302,"byte_end":257355,"line_start":183,"line_end":183,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(0));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":257360,"byte_end":257408,"line_start":184,"line_end":184,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":257413,"byte_end":257421,"line_start":185,"line_end":185,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":257426,"byte_end":257433,"line_start":186,"line_end":186,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2273},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":258156,"byte_end":258163,"line_start":212,"line_end":212,"column_start":8,"column_end":15},"name":"map_err","qualname":"::stream::try_stream::TryStreamExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where Self: Sized,\nF: FnMut(Self::Error) -> E","parent":{"krate":0,"index":2267},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the error value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the error value","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":257637,"byte_end":257708,"line_start":195,"line_end":195,"column_start":5,"column_end":76}},{"value":"/ using the provided closure.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":257713,"byte_end":257744,"line_start":196,"line_end":196,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":257749,"byte_end":257752,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":257757,"byte_end":257771,"line_start":198,"line_end":198,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":257776,"byte_end":257779,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":257784,"byte_end":257791,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":257796,"byte_end":257837,"line_start":201,"line_end":201,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":257842,"byte_end":257888,"line_start":202,"line_end":202,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":257893,"byte_end":257896,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":257901,"byte_end":257921,"line_start":204,"line_end":204,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":257926,"byte_end":257967,"line_start":205,"line_end":205,"column_start":5,"column_end":46}},{"value":"/         .map_err(|x| x + 2);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":257972,"byte_end":258004,"line_start":206,"line_end":206,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":258009,"byte_end":258012,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(5)));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":258017,"byte_end":258070,"line_start":208,"line_end":208,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(2));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":258075,"byte_end":258123,"line_start":209,"line_end":209,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":258128,"byte_end":258136,"line_start":210,"line_end":210,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":258141,"byte_end":258148,"line_start":211,"line_end":211,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2276},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":259768,"byte_end":259776,"line_start":258,"line_end":258,"column_start":8,"column_end":16},"name":"and_then","qualname":"::stream::try_stream::TryStreamExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":2267},"children":[],"decl_id":null,"docs":" Chain on a computation for when a value is ready, passing the successful\n results to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a value is ready, passing the successful","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":258355,"byte_end":258431,"line_start":220,"line_end":220,"column_start":5,"column_end":81}},{"value":"/ results to the provided closure `f`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":258436,"byte_end":258476,"line_start":221,"line_end":221,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":258481,"byte_end":258484,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work when the next successful","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":258489,"byte_end":258565,"line_start":223,"line_end":223,"column_start":5,"column_end":81}},{"value":"/ value on a stream is ready. The closure provided will be yielded a value","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":258570,"byte_end":258646,"line_start":224,"line_end":224,"column_start":5,"column_end":81}},{"value":"/ when ready, and the returned future will then be run to completion to","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":258651,"byte_end":258724,"line_start":225,"line_end":225,"column_start":5,"column_end":78}},{"value":"/ produce the next value on this stream.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":258729,"byte_end":258771,"line_start":226,"line_end":226,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":258776,"byte_end":258779,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ Any errors produced by this stream will not be passed to the closure,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":258784,"byte_end":258857,"line_start":228,"line_end":228,"column_start":5,"column_end":78}},{"value":"/ and will be passed through.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":258862,"byte_end":258893,"line_start":229,"line_end":229,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":258898,"byte_end":258901,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `TryFuture` trait","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":258906,"byte_end":258980,"line_start":231,"line_end":231,"column_start":5,"column_end":79}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":258985,"byte_end":259059,"line_start":232,"line_end":232,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":259064,"byte_end":259080,"line_start":233,"line_end":233,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":259085,"byte_end":259088,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":259093,"byte_end":259164,"line_start":235,"line_end":235,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":259169,"byte_end":259195,"line_start":236,"line_end":236,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":259200,"byte_end":259203,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ To process the entire stream and return a single future representing","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":259208,"byte_end":259280,"line_start":238,"line_end":238,"column_start":5,"column_end":77}},{"value":"/ success or error, use `try_for_each` instead.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":259285,"byte_end":259334,"line_start":239,"line_end":239,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":259339,"byte_end":259342,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":259347,"byte_end":259361,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":259366,"byte_end":259369,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":259374,"byte_end":259381,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":259386,"byte_end":259417,"line_start":244,"line_end":244,"column_start":5,"column_end":36}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":259422,"byte_end":259446,"line_start":245,"line_end":245,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":259451,"byte_end":259489,"line_start":246,"line_end":246,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":259494,"byte_end":259497,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel::<Result<i32, ()>>(1);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":259502,"byte_end":259558,"line_start":248,"line_end":248,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":259563,"byte_end":259566,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ let rx = rx.and_then(|result| {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":259571,"byte_end":259606,"line_start":250,"line_end":250,"column_start":5,"column_end":40}},{"value":"/     future::ok(if result % 2 == 0 {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":259611,"byte_end":259650,"line_start":251,"line_end":251,"column_start":5,"column_end":44}},{"value":"/         Some(result)","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":259655,"byte_end":259679,"line_start":252,"line_end":252,"column_start":5,"column_end":29}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":259684,"byte_end":259700,"line_start":253,"line_end":253,"column_start":5,"column_end":21}},{"value":"/         None","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":259705,"byte_end":259721,"line_start":254,"line_end":254,"column_start":5,"column_end":21}},{"value":"/     })","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":259726,"byte_end":259736,"line_start":255,"line_end":255,"column_start":5,"column_end":15}},{"value":"/ });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":259741,"byte_end":259748,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":259753,"byte_end":259760,"line_start":257,"line_end":257,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2279},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":260928,"byte_end":260935,"line_start":284,"line_end":284,"column_start":8,"column_end":15},"name":"or_else","qualname":"::stream::try_stream::TryStreamExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnMut(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":2267},"children":[],"decl_id":null,"docs":" Chain on a computation for when an error happens, passing the\n erroneous result to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when an error happens, passing the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":260029,"byte_end":260094,"line_start":267,"line_end":267,"column_start":5,"column_end":70}},{"value":"/ erroneous result to the provided closure `f`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":260099,"byte_end":260148,"line_start":268,"line_end":268,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":260153,"byte_end":260156,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work and attempt to recover from","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":260161,"byte_end":260240,"line_start":270,"line_end":270,"column_start":5,"column_end":84}},{"value":"/ an error if one happens. The closure provided will be yielded an error","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":260245,"byte_end":260319,"line_start":271,"line_end":271,"column_start":5,"column_end":79}},{"value":"/ when one appears, and the returned future will then be run to completion","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":260324,"byte_end":260400,"line_start":272,"line_end":272,"column_start":5,"column_end":81}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":260405,"byte_end":260450,"line_start":273,"line_end":273,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":260455,"byte_end":260458,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ Any successful values produced by this stream will not be passed to the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":260463,"byte_end":260538,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/ closure, and will be passed through.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":260543,"byte_end":260583,"line_start":276,"line_end":276,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":260588,"byte_end":260591,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the [`TryFuture`](futures_core::future::TryFuture) trait","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":260596,"byte_end":260705,"line_start":278,"line_end":278,"column_start":5,"column_end":114}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":260710,"byte_end":260784,"line_start":279,"line_end":279,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":260789,"byte_end":260805,"line_start":280,"line_end":280,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":260810,"byte_end":260813,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":260818,"byte_end":260889,"line_start":282,"line_end":282,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":260894,"byte_end":260920,"line_start":283,"line_end":283,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2282},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":261487,"byte_end":261497,"line_start":299,"line_end":299,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::stream::try_stream::TryStreamExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnMut(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":2267},"children":[],"decl_id":null,"docs":" Do something with the success value of this stream, afterwards passing\n it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of this stream, afterwards passing","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":261184,"byte_end":261258,"line_start":293,"line_end":293,"column_start":5,"column_end":79}},{"value":"/ it on.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":261263,"byte_end":261273,"line_start":294,"line_end":294,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":261278,"byte_end":261281,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":261286,"byte_end":261356,"line_start":296,"line_end":296,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the success value as it passes through the stream, for","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":261361,"byte_end":261437,"line_start":297,"line_end":297,"column_start":5,"column_end":81}},{"value":"/ example to debug what's going on.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":261442,"byte_end":261479,"line_start":298,"line_end":298,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2284},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":261986,"byte_end":261997,"line_start":312,"line_end":312,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::stream::try_stream::TryStreamExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnMut(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":2267},"children":[],"decl_id":null,"docs":" Do something with the error value of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of this stream, afterwards passing it on.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":261695,"byte_end":261774,"line_start":307,"line_end":307,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":261779,"byte_end":261782,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":261787,"byte_end":261857,"line_start":309,"line_end":309,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the error value as it passes through the stream, for","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":261862,"byte_end":261936,"line_start":310,"line_end":310,"column_start":5,"column_end":79}},{"value":"/ example to debug what's going on.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":261941,"byte_end":261978,"line_start":311,"line_end":311,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2286},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":262918,"byte_end":262929,"line_start":341,"line_end":341,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::stream::try_stream::TryStreamExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":2267},"children":[],"decl_id":null,"docs":" Wraps a [`TryStream`] into a type that implements\n [`Stream`](futures_core::stream::Stream)","sig":null,"attributes":[{"value":"/ Wraps a [`TryStream`] into a type that implements","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":262200,"byte_end":262253,"line_start":320,"line_end":320,"column_start":5,"column_end":58}},{"value":"/ [`Stream`](futures_core::stream::Stream)","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":262258,"byte_end":262302,"line_start":321,"line_end":321,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":262307,"byte_end":262310,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ [`TryStream`]s currently do not implement the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":262315,"byte_end":262364,"line_start":323,"line_end":323,"column_start":5,"column_end":54}},{"value":"/ [`Stream`](futures_core::stream::Stream) trait because of limitations","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":262369,"byte_end":262442,"line_start":324,"line_end":324,"column_start":5,"column_end":78}},{"value":"/ of the compiler.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":262447,"byte_end":262467,"line_start":325,"line_end":325,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":262472,"byte_end":262475,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":262480,"byte_end":262494,"line_start":327,"line_end":327,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":262499,"byte_end":262502,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":262507,"byte_end":262514,"line_start":329,"line_end":329,"column_start":5,"column_end":12}},{"value":"/ use futures::stream::{Stream, TryStream, TryStreamExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":262519,"byte_end":262578,"line_start":330,"line_end":330,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":262583,"byte_end":262586,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":262591,"byte_end":262610,"line_start":332,"line_end":332,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":262615,"byte_end":262633,"line_start":333,"line_end":333,"column_start":5,"column_end":23}},{"value":"/ fn make_try_stream() -> impl TryStream<Ok = T, Error = E> { // ... }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":262638,"byte_end":262710,"line_start":334,"line_end":334,"column_start":5,"column_end":77}},{"value":"/ # futures::stream::empty()","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":262715,"byte_end":262745,"line_start":335,"line_end":335,"column_start":5,"column_end":35}},{"value":"/ # }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":262750,"byte_end":262757,"line_start":336,"line_end":336,"column_start":5,"column_end":12}},{"value":"/ fn take_stream(stream: impl Stream<Item = Result<T, E>>) { /* ... */ }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":262762,"byte_end":262836,"line_start":337,"line_end":337,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":262841,"byte_end":262844,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ take_stream(make_try_stream().into_stream());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":262849,"byte_end":262898,"line_start":339,"line_end":339,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":262903,"byte_end":262910,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2287},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":263824,"byte_end":263832,"line_start":368,"line_end":368,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::try_stream::TryStreamExt::try_next","value":"pub fn try_next(&mut Self) -> TryNext<, Self> where Self: Unpin","parent":{"krate":0,"index":2267},"children":[],"decl_id":null,"docs":" Creates a future that attempts to resolve the next item in the stream.\n If an error is encountered before the next item, the error is returned\n instead.","sig":null,"attributes":[{"value":"/ Creates a future that attempts to resolve the next item in the stream.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":263085,"byte_end":263159,"line_start":348,"line_end":348,"column_start":5,"column_end":79}},{"value":"/ If an error is encountered before the next item, the error is returned","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":263164,"byte_end":263238,"line_start":349,"line_end":349,"column_start":5,"column_end":79}},{"value":"/ instead.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":263243,"byte_end":263255,"line_start":350,"line_end":350,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":263260,"byte_end":263263,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Stream::next` combinator, but returns a","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":263268,"byte_end":263335,"line_start":352,"line_end":352,"column_start":5,"column_end":72}},{"value":"/ `Result<Option<T>, E>` rather than an `Option<Result<T, E>>`, making","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":263340,"byte_end":263412,"line_start":353,"line_end":353,"column_start":5,"column_end":77}},{"value":"/ for easy use with the `?` operator.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":263417,"byte_end":263456,"line_start":354,"line_end":354,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":263461,"byte_end":263464,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":263469,"byte_end":263483,"line_start":356,"line_end":356,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":263488,"byte_end":263491,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":263496,"byte_end":263503,"line_start":358,"line_end":358,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":263508,"byte_end":263549,"line_start":359,"line_end":359,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":263554,"byte_end":263600,"line_start":360,"line_end":360,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":263605,"byte_end":263608,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(()), Err(())]);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":263613,"byte_end":263670,"line_start":362,"line_end":362,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":263675,"byte_end":263678,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":263683,"byte_end":263737,"line_start":364,"line_end":364,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(()));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":263742,"byte_end":263791,"line_start":365,"line_end":365,"column_start":5,"column_end":54}},{"value":"/ # })","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":263796,"byte_end":263804,"line_start":366,"line_end":366,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":263809,"byte_end":263816,"line_start":367,"line_end":367,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2288},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":265184,"byte_end":265196,"line_start":408,"line_end":408,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::stream::try_stream::TryStreamExt::try_for_each","value":"pub fn try_for_each<Fut, F>(Self, F) -> TryForEach<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Ok = (), Error = ()>, Self: Sized","parent":{"krate":0,"index":2267},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided\n asynchronous closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":263999,"byte_end":264068,"line_start":375,"line_end":375,"column_start":5,"column_end":74}},{"value":"/ asynchronous closure for each element on the stream.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":264073,"byte_end":264129,"line_start":376,"line_end":376,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":264134,"byte_end":264137,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ The provided closure will be called for each item this stream produces,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":264142,"byte_end":264217,"line_start":378,"line_end":378,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":264222,"byte_end":264292,"line_start":379,"line_end":379,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":264297,"byte_end":264335,"line_start":380,"line_end":380,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":264340,"byte_end":264343,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ The returned value is a [`Future`](futures_core::future::Future) where the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":264348,"byte_end":264426,"line_start":382,"line_end":382,"column_start":5,"column_end":83}},{"value":"/ [`Output`](futures_core::future::Future::Output) type is","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":264431,"byte_end":264491,"line_start":383,"line_end":383,"column_start":5,"column_end":65}},{"value":"/ `Result<(), Self::Error>`. If any of the intermediate","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":264496,"byte_end":264553,"line_start":384,"line_end":384,"column_start":5,"column_end":62}},{"value":"/ futures or the stream returns an error, this future will return","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":264558,"byte_end":264625,"line_start":385,"line_end":385,"column_start":5,"column_end":72}},{"value":"/ immediately with an error.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":264630,"byte_end":264660,"line_start":386,"line_end":386,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":264665,"byte_end":264668,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":264673,"byte_end":264687,"line_start":388,"line_end":388,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":264692,"byte_end":264695,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":264700,"byte_end":264707,"line_start":390,"line_end":390,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":264712,"byte_end":264753,"line_start":391,"line_end":391,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":264758,"byte_end":264782,"line_start":392,"line_end":392,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":264787,"byte_end":264833,"line_start":393,"line_end":393,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":264838,"byte_end":264841,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0i32;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":264846,"byte_end":264867,"line_start":395,"line_end":395,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":264872,"byte_end":264875,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":264880,"byte_end":264885,"line_start":397,"line_end":397,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(Ok(1)).try_for_each(|item| {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":264890,"byte_end":264951,"line_start":398,"line_end":398,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":264956,"byte_end":264978,"line_start":399,"line_end":399,"column_start":5,"column_end":27}},{"value":"/         future::ready(if x == 3 { Err(()) } else { Ok(()) })","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":264983,"byte_end":265047,"line_start":400,"line_end":400,"column_start":5,"column_end":69}},{"value":"/     });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":265052,"byte_end":265063,"line_start":401,"line_end":401,"column_start":5,"column_end":16}},{"value":"/     assert_eq!(fut.await, Err(()));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":265068,"byte_end":265107,"line_start":402,"line_end":402,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":265112,"byte_end":265117,"line_start":403,"line_end":403,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":265122,"byte_end":265125,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":265130,"byte_end":265151,"line_start":405,"line_end":405,"column_start":5,"column_end":26}},{"value":"/ # })","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":265156,"byte_end":265164,"line_start":406,"line_end":406,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":265169,"byte_end":265176,"line_start":407,"line_end":407,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2291},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":266209,"byte_end":266223,"line_start":438,"line_end":438,"column_start":8,"column_end":22},"name":"try_skip_while","qualname":"::stream::try_stream::TryStreamExt::try_skip_while","value":"pub fn try_skip_while<Fut, F>(Self, F) -> TrySkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":2267},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":265460,"byte_end":265534,"line_start":417,"line_end":417,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":265539,"byte_end":265562,"line_start":418,"line_end":418,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":265567,"byte_end":265570,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":265575,"byte_end":265606,"line_start":420,"line_end":420,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::skip_while`](crate::stream::StreamExt::skip_while) but exits","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":265611,"byte_end":265688,"line_start":421,"line_end":421,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":265693,"byte_end":265722,"line_start":422,"line_end":422,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":265727,"byte_end":265730,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":265735,"byte_end":265749,"line_start":424,"line_end":424,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":265754,"byte_end":265757,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":265762,"byte_end":265769,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":265774,"byte_end":265815,"line_start":427,"line_end":427,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":265820,"byte_end":265844,"line_start":428,"line_end":428,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":265849,"byte_end":265895,"line_start":429,"line_end":429,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":265900,"byte_end":265903,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(3), Ok(2)]);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":265908,"byte_end":265977,"line_start":431,"line_end":431,"column_start":5,"column_end":74}},{"value":"/ let stream = stream.try_skip_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":265982,"byte_end":266052,"line_start":432,"line_end":432,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":266057,"byte_end":266060,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":266065,"byte_end":266132,"line_start":434,"line_end":434,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![3, 2]));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":266137,"byte_end":266176,"line_start":435,"line_end":435,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":266181,"byte_end":266189,"line_start":436,"line_end":436,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":266194,"byte_end":266201,"line_start":437,"line_end":437,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2294},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":267256,"byte_end":267270,"line_start":468,"line_end":468,"column_start":8,"column_end":22},"name":"try_take_while","qualname":"::stream::try_stream::TryStreamExt::try_take_while","value":"pub fn try_take_while<Fut, F>(Self, F) -> TryTakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":2267},"children":[],"decl_id":null,"docs":" Take elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements on this stream while the provided asynchronous predicate","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":266500,"byte_end":266574,"line_start":447,"line_end":447,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":266579,"byte_end":266602,"line_start":448,"line_end":448,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":266607,"byte_end":266610,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":266615,"byte_end":266646,"line_start":450,"line_end":450,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::take_while`](crate::stream::StreamExt::take_while) but exits","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":266651,"byte_end":266728,"line_start":451,"line_end":451,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":266733,"byte_end":266762,"line_start":452,"line_end":452,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":266767,"byte_end":266770,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":266775,"byte_end":266789,"line_start":454,"line_end":454,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":266794,"byte_end":266797,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":266802,"byte_end":266809,"line_start":456,"line_end":456,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":266814,"byte_end":266855,"line_start":457,"line_end":457,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":266860,"byte_end":266884,"line_start":458,"line_end":458,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":266889,"byte_end":266935,"line_start":459,"line_end":459,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":266940,"byte_end":266943,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2), Ok(3), Ok(2)]);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":266948,"byte_end":267024,"line_start":461,"line_end":461,"column_start":5,"column_end":81}},{"value":"/ let stream = stream.try_take_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":267029,"byte_end":267099,"line_start":462,"line_end":462,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":267104,"byte_end":267107,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":267112,"byte_end":267179,"line_start":464,"line_end":464,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![1, 2]));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":267184,"byte_end":267223,"line_start":465,"line_end":465,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":267228,"byte_end":267236,"line_start":466,"line_end":466,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":267241,"byte_end":267248,"line_start":467,"line_end":467,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2297},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":269178,"byte_end":269201,"line_start":520,"line_end":520,"column_start":8,"column_end":31},"name":"try_for_each_concurrent","qualname":"::stream::try_stream::TryStreamExt::try_for_each_concurrent","value":"pub fn try_for_each_concurrent<Fut, F,\n                               impl Into<Option<usize>>: Into<Option<usize>>>(Self,\n                                                                              impl Into<Option<usize>>,\n                                                                              F)\n-> TryForEachConcurrent<Self, Fut, F> where F: FnMut(Self::Ok) -> Fut,\nFut: Future<Output = Result<(), Self::Error>>, Self: Sized","parent":{"krate":0,"index":2267},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available, exiting as soon as an error occurs.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided asynchronous","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":267496,"byte_end":267578,"line_start":477,"line_end":477,"column_start":5,"column_end":87}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":267583,"byte_end":267657,"line_start":478,"line_end":478,"column_start":5,"column_end":79}},{"value":"/ available, exiting as soon as an error occurs.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":267662,"byte_end":267712,"line_start":479,"line_end":479,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":267717,"byte_end":267720,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ This is similar to","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":267725,"byte_end":267747,"line_start":481,"line_end":481,"column_start":5,"column_end":27}},{"value":"/ [`StreamExt::for_each_concurrent`](crate::stream::StreamExt::for_each_concurrent),","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":267752,"byte_end":267838,"line_start":482,"line_end":482,"column_start":5,"column_end":91}},{"value":"/ but will resolve to an error immediately if the underlying stream or the provided","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":267843,"byte_end":267928,"line_start":483,"line_end":483,"column_start":5,"column_end":90}},{"value":"/ closure return an error.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":267933,"byte_end":267961,"line_start":484,"line_end":484,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":267966,"byte_end":267969,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":267974,"byte_end":268049,"line_start":486,"line_end":486,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":268054,"byte_end":268111,"line_start":487,"line_end":487,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":268116,"byte_end":268119,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":268124,"byte_end":268138,"line_start":489,"line_end":489,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":268143,"byte_end":268146,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":268151,"byte_end":268158,"line_start":491,"line_end":491,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":268163,"byte_end":268204,"line_start":492,"line_end":492,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":268209,"byte_end":268243,"line_start":493,"line_end":493,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":268248,"byte_end":268305,"line_start":494,"line_end":494,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":268310,"byte_end":268313,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":268318,"byte_end":268358,"line_start":496,"line_end":496,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":268363,"byte_end":268403,"line_start":497,"line_end":497,"column_start":5,"column_end":45}},{"value":"/ let (_tx3, rx3) = oneshot::channel();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":268408,"byte_end":268449,"line_start":498,"line_end":498,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":268454,"byte_end":268457,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![rx1, rx2, rx3]);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":268462,"byte_end":268513,"line_start":500,"line_end":500,"column_start":5,"column_end":56}},{"value":"/ let fut = stream.map(Ok).try_for_each_concurrent(","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":268518,"byte_end":268571,"line_start":501,"line_end":501,"column_start":5,"column_end":58}},{"value":"/     /* limit */ 2,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":268576,"byte_end":268598,"line_start":502,"line_end":502,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":268603,"byte_end":268628,"line_start":503,"line_end":503,"column_start":5,"column_end":30}},{"value":"/         let res: Result<(), oneshot::Canceled> = rx.await;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":268633,"byte_end":268695,"line_start":504,"line_end":504,"column_start":5,"column_end":67}},{"value":"/         res","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":268700,"byte_end":268715,"line_start":505,"line_end":505,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":268720,"byte_end":268729,"line_start":506,"line_end":506,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":268734,"byte_end":268740,"line_start":507,"line_end":507,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":268745,"byte_end":268748,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":268753,"byte_end":268779,"line_start":509,"line_end":509,"column_start":5,"column_end":31}},{"value":"/ // Drop the second sender so that `rx2` resolves to `Canceled`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":268784,"byte_end":268851,"line_start":510,"line_end":510,"column_start":5,"column_end":72}},{"value":"/ drop(tx2);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":268856,"byte_end":268870,"line_start":511,"line_end":511,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":268875,"byte_end":268878,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ // The final result is an error because the second future","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":268883,"byte_end":268944,"line_start":513,"line_end":513,"column_start":5,"column_end":66}},{"value":"/ // resulted in an error.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":268949,"byte_end":268977,"line_start":514,"line_end":514,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Err(oneshot::Canceled), fut.await);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":268982,"byte_end":269032,"line_start":515,"line_end":515,"column_start":5,"column_end":55}},{"value":"/ # })","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":269037,"byte_end":269045,"line_start":516,"line_end":516,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":269050,"byte_end":269057,"line_start":517,"line_end":517,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":269145,"byte_end":269170,"line_start":519,"line_end":519,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2301},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":270650,"byte_end":270661,"line_start":567,"line_end":567,"column_start":8,"column_end":19},"name":"try_collect","qualname":"::stream::try_stream::TryStreamExt::try_collect","value":"pub fn try_collect<C: Default + Extend<Self::Ok>>(Self) -> TryCollect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":2267},"children":[],"decl_id":null,"docs":" Attempt to transform a stream into a collection,\n returning a future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Attempt to transform a stream into a collection,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":269611,"byte_end":269663,"line_start":537,"line_end":537,"column_start":5,"column_end":57}},{"value":"/ returning a future representing the result of that computation.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":269668,"byte_end":269735,"line_start":538,"line_end":538,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":269740,"byte_end":269743,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ This combinator will collect all successful results of this stream and","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":269748,"byte_end":269822,"line_start":540,"line_end":540,"column_start":5,"column_end":79}},{"value":"/ collect them into the specified collection type. If an error happens then all","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":269827,"byte_end":269908,"line_start":541,"line_end":541,"column_start":5,"column_end":86}},{"value":"/ collected elements will be dropped and the error will be returned.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":269913,"byte_end":269983,"line_start":542,"line_end":542,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":269988,"byte_end":269991,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":269996,"byte_end":270064,"line_start":544,"line_end":544,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":270069,"byte_end":270072,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":270077,"byte_end":270091,"line_start":546,"line_end":546,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":270096,"byte_end":270099,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":270104,"byte_end":270111,"line_start":548,"line_end":548,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":270116,"byte_end":270157,"line_start":549,"line_end":549,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":270162,"byte_end":270193,"line_start":550,"line_end":550,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":270198,"byte_end":270236,"line_start":551,"line_end":551,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":270241,"byte_end":270261,"line_start":552,"line_end":552,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":270266,"byte_end":270269,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":270274,"byte_end":270311,"line_start":554,"line_end":554,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":270316,"byte_end":270319,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":270324,"byte_end":270351,"line_start":556,"line_end":556,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":270356,"byte_end":270380,"line_start":557,"line_end":557,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(Ok(i)).unwrap();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":270385,"byte_end":270431,"line_start":558,"line_end":558,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":270436,"byte_end":270445,"line_start":559,"line_end":559,"column_start":5,"column_end":14}},{"value":"/     tx.unbounded_send(Err(6)).unwrap();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":270450,"byte_end":270493,"line_start":560,"line_end":560,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":270498,"byte_end":270505,"line_start":561,"line_end":561,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":270510,"byte_end":270513,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = rx.try_collect().await;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":270518,"byte_end":270581,"line_start":563,"line_end":563,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(output, Err(6));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":270586,"byte_end":270617,"line_start":564,"line_end":564,"column_start":5,"column_end":36}},{"value":"/ # })","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":270622,"byte_end":270630,"line_start":565,"line_end":565,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":270635,"byte_end":270642,"line_start":566,"line_end":566,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2303},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":272132,"byte_end":272142,"line_start":604,"line_end":604,"column_start":8,"column_end":18},"name":"try_filter","qualname":"::stream::try_stream::TryStreamExt::try_filter","value":"pub fn try_filter<Fut, F>(Self, F) -> TryFilter<Self, Fut, F> where\nFut: Future<Output = bool>, F: FnMut(&Self::Ok) -> Fut, Self: Sized","parent":{"krate":0,"index":2267},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream according to the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":270844,"byte_end":270917,"line_start":574,"line_end":574,"column_start":5,"column_end":78}},{"value":"/ provided asynchronous closure.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":270922,"byte_end":270956,"line_start":575,"line_end":575,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":270961,"byte_end":270964,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":270969,"byte_end":271044,"line_start":577,"line_end":577,"column_start":5,"column_end":80}},{"value":"/ will be run on them. If the predicate returns a `Future` which resolves","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":271049,"byte_end":271124,"line_start":578,"line_end":578,"column_start":5,"column_end":80}},{"value":"/ to `true`, then the stream will yield the value, but if the predicate","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":271129,"byte_end":271202,"line_start":579,"line_end":579,"column_start":5,"column_end":78}},{"value":"/ return a `Future` which resolves to `false`, then the value will be","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":271207,"byte_end":271278,"line_start":580,"line_end":580,"column_start":5,"column_end":76}},{"value":"/ discarded and the next value will be produced.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":271283,"byte_end":271333,"line_start":581,"line_end":581,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":271338,"byte_end":271341,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":271346,"byte_end":271417,"line_start":583,"line_end":583,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":271422,"byte_end":271425,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":271430,"byte_end":271506,"line_start":585,"line_end":585,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":271511,"byte_end":271581,"line_start":586,"line_end":586,"column_start":5,"column_end":75}},{"value":"/ the standard library.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":271586,"byte_end":271611,"line_start":587,"line_end":587,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":271616,"byte_end":271619,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":271624,"byte_end":271638,"line_start":589,"line_end":589,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":271643,"byte_end":271650,"line_start":590,"line_end":590,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":271655,"byte_end":271696,"line_start":591,"line_end":591,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":271701,"byte_end":271725,"line_start":592,"line_end":592,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":271730,"byte_end":271787,"line_start":593,"line_end":593,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":271792,"byte_end":271795,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(2i32), Ok(3i32), Err(\"error\")]);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":271800,"byte_end":271880,"line_start":595,"line_end":595,"column_start":5,"column_end":85}},{"value":"/ let mut evens = stream.try_filter(|x| {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":271885,"byte_end":271928,"line_start":596,"line_end":596,"column_start":5,"column_end":48}},{"value":"/     future::ready(x % 2 == 0)","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":271933,"byte_end":271966,"line_start":597,"line_end":597,"column_start":5,"column_end":38}},{"value":"/ });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":271971,"byte_end":271978,"line_start":598,"line_end":598,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":271983,"byte_end":271986,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens.next().await, Some(Ok(2)));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":271991,"byte_end":272039,"line_start":600,"line_end":600,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(evens.next().await, Some(Err(\"error\")));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":272044,"byte_end":272099,"line_start":601,"line_end":601,"column_start":5,"column_end":60}},{"value":"/ # })","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":272104,"byte_end":272112,"line_start":602,"line_end":602,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":272117,"byte_end":272124,"line_start":603,"line_end":603,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2306},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":273769,"byte_end":273783,"line_start":645,"line_end":645,"column_start":8,"column_end":22},"name":"try_filter_map","qualname":"::stream::try_stream::TryStreamExt::try_filter_map","value":"pub fn try_filter_map<Fut, F, T>(Self, F) -> TryFilterMap<Self, Fut, F> where\nFut: TryFuture<Ok = Option<T>, Error = Option<T>>, F: FnMut(Self::Ok) -> Fut,\nSelf: Sized","parent":{"krate":0,"index":2267},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream while\n simultaneously mapping them to a different type according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream while","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":272393,"byte_end":272455,"line_start":613,"line_end":613,"column_start":5,"column_end":67}},{"value":"/ simultaneously mapping them to a different type according to the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":272460,"byte_end":272528,"line_start":614,"line_end":614,"column_start":5,"column_end":73}},{"value":"/ provided asynchronous closure.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":272533,"byte_end":272567,"line_start":615,"line_end":615,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":272572,"byte_end":272575,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":272580,"byte_end":272655,"line_start":617,"line_end":617,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":272660,"byte_end":272735,"line_start":618,"line_end":618,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":272740,"byte_end":272816,"line_start":619,"line_end":619,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":272821,"byte_end":272886,"line_start":620,"line_end":620,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":272891,"byte_end":272894,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":272899,"byte_end":272970,"line_start":622,"line_end":622,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":272975,"byte_end":272978,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":272983,"byte_end":273059,"line_start":624,"line_end":624,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":273064,"byte_end":273138,"line_start":625,"line_end":625,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":273143,"byte_end":273168,"line_start":626,"line_end":626,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":273173,"byte_end":273176,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":273181,"byte_end":273195,"line_start":628,"line_end":628,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":273200,"byte_end":273207,"line_start":629,"line_end":629,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":273212,"byte_end":273253,"line_start":630,"line_end":630,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":273258,"byte_end":273315,"line_start":631,"line_end":631,"column_start":5,"column_end":62}},{"value":"/ use futures::pin_mut;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":273320,"byte_end":273345,"line_start":632,"line_end":632,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":273350,"byte_end":273353,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(6i32), Err(\"error\")]);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":273358,"byte_end":273428,"line_start":634,"line_end":634,"column_start":5,"column_end":75}},{"value":"/ let halves = stream.try_filter_map(|x| async move {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":273433,"byte_end":273488,"line_start":635,"line_end":635,"column_start":5,"column_end":60}},{"value":"/     let ret = if x % 2 == 0 { Some(x / 2) } else { None };","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":273493,"byte_end":273555,"line_start":636,"line_end":636,"column_start":5,"column_end":67}},{"value":"/     Ok(ret)","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":273560,"byte_end":273575,"line_start":637,"line_end":637,"column_start":5,"column_end":20}},{"value":"/ });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":273580,"byte_end":273587,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":273592,"byte_end":273595,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ pin_mut!(halves);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":273600,"byte_end":273621,"line_start":640,"line_end":640,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(halves.next().await, Some(Ok(3)));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":273626,"byte_end":273675,"line_start":641,"line_end":641,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(halves.next().await, Some(Err(\"error\")));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":273680,"byte_end":273736,"line_start":642,"line_end":642,"column_start":5,"column_end":61}},{"value":"/ # })","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":273741,"byte_end":273749,"line_start":643,"line_end":643,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":273754,"byte_end":273761,"line_start":644,"line_end":644,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2310},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":275475,"byte_end":275486,"line_start":692,"line_end":692,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::stream::try_stream::TryStreamExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self> where Self::Ok: TryStream,\n<Self::Ok as TryStream>::Error: From<Self::Error>, Self: Sized","parent":{"krate":0,"index":2267},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":274060,"byte_end":274125,"line_start":654,"line_end":654,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":274130,"byte_end":274133,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ If this stream's elements are themselves streams then this combinator","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":274138,"byte_end":274211,"line_start":656,"line_end":656,"column_start":5,"column_end":78}},{"value":"/ will flatten out the entire stream to one long chain of elements. Any","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":274216,"byte_end":274289,"line_start":657,"line_end":657,"column_start":5,"column_end":78}},{"value":"/ errors are passed through without looking at them, but otherwise each","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":274294,"byte_end":274367,"line_start":658,"line_end":658,"column_start":5,"column_end":78}},{"value":"/ individual stream will get exhausted before moving on to the next.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":274372,"byte_end":274442,"line_start":659,"line_end":659,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":274447,"byte_end":274450,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":274455,"byte_end":274469,"line_start":661,"line_end":661,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":274474,"byte_end":274477,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":274482,"byte_end":274489,"line_start":663,"line_end":663,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":274494,"byte_end":274535,"line_start":664,"line_end":664,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":274540,"byte_end":274571,"line_start":665,"line_end":665,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":274576,"byte_end":274627,"line_start":666,"line_end":666,"column_start":5,"column_end":56}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":274632,"byte_end":274652,"line_start":667,"line_end":667,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":274657,"byte_end":274660,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":274665,"byte_end":274704,"line_start":669,"line_end":669,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":274709,"byte_end":274748,"line_start":670,"line_end":670,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":274753,"byte_end":274792,"line_start":671,"line_end":671,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":274797,"byte_end":274800,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":274805,"byte_end":274832,"line_start":673,"line_end":673,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(Ok(1)).unwrap();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":274837,"byte_end":274880,"line_start":674,"line_end":674,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":274885,"byte_end":274892,"line_start":675,"line_end":675,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":274897,"byte_end":274924,"line_start":676,"line_end":676,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(Ok(2)).unwrap();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":274929,"byte_end":274972,"line_start":677,"line_end":677,"column_start":5,"column_end":48}},{"value":"/     tx2.unbounded_send(Err(3)).unwrap();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":274977,"byte_end":275021,"line_start":678,"line_end":678,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":275026,"byte_end":275033,"line_start":679,"line_end":679,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":275038,"byte_end":275065,"line_start":680,"line_end":680,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(Ok(rx1)).unwrap();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":275070,"byte_end":275115,"line_start":681,"line_end":681,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Ok(rx2)).unwrap();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":275120,"byte_end":275165,"line_start":682,"line_end":682,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Err(4)).unwrap();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":275170,"byte_end":275214,"line_start":683,"line_end":683,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":275219,"byte_end":275226,"line_start":684,"line_end":684,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":275231,"byte_end":275234,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ let mut stream = rx3.try_flatten();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":275239,"byte_end":275278,"line_start":686,"line_end":686,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(1)));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":275283,"byte_end":275332,"line_start":687,"line_end":687,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(2)));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":275337,"byte_end":275386,"line_start":688,"line_end":688,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Err(3)));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":275391,"byte_end":275441,"line_start":689,"line_end":689,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":275446,"byte_end":275455,"line_start":690,"line_end":690,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":275460,"byte_end":275467,"line_start":691,"line_end":691,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2311},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":277078,"byte_end":277086,"line_start":731,"line_end":731,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::stream::try_stream::TryStreamExt::try_fold","value":"pub fn try_fold<T, Fut, F>(Self, T, F) -> TryFold<Self, Fut, T, F> where\nF: FnMut(T, Self::Ok) -> Fut, Fut: TryFuture<Ok = T, Error = T>, Self: Sized","parent":{"krate":0,"index":2267},"children":[],"decl_id":null,"docs":" Attempt to execute an accumulating asynchronous computation over a\n stream, collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Attempt to execute an accumulating asynchronous computation over a","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":275791,"byte_end":275861,"line_start":703,"line_end":703,"column_start":5,"column_end":75}},{"value":"/ stream, collecting all the values into one final result.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":275866,"byte_end":275926,"line_start":704,"line_end":704,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":275931,"byte_end":275934,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":275939,"byte_end":276009,"line_start":706,"line_end":706,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":276014,"byte_end":276090,"line_start":707,"line_end":707,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":276095,"byte_end":276171,"line_start":708,"line_end":708,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":276176,"byte_end":276246,"line_start":709,"line_end":709,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":276251,"byte_end":276277,"line_start":710,"line_end":710,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":276282,"byte_end":276285,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`fold`](crate::stream::StreamExt::fold), but will","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":276290,"byte_end":276370,"line_start":712,"line_end":712,"column_start":5,"column_end":85}},{"value":"/ exit early if an error is encountered in either the stream or the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":276375,"byte_end":276444,"line_start":713,"line_end":713,"column_start":5,"column_end":74}},{"value":"/ provided closure.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":276449,"byte_end":276470,"line_start":714,"line_end":714,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":276475,"byte_end":276478,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":276483,"byte_end":276497,"line_start":716,"line_end":716,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":276502,"byte_end":276505,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":276510,"byte_end":276517,"line_start":718,"line_end":718,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":276522,"byte_end":276563,"line_start":719,"line_end":719,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":276568,"byte_end":276614,"line_start":720,"line_end":720,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":276619,"byte_end":276622,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2)]);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":276627,"byte_end":276696,"line_start":722,"line_end":722,"column_start":5,"column_end":74}},{"value":"/ let sum = number_stream.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":276701,"byte_end":276778,"line_start":723,"line_end":723,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(sum.await, Ok(3));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":276783,"byte_end":276816,"line_start":724,"line_end":724,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":276821,"byte_end":276824,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ let number_stream_with_err = stream::iter(vec![Ok::<i32, i32>(1), Err(2), Ok(1)]);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":276829,"byte_end":276915,"line_start":726,"line_end":726,"column_start":5,"column_end":91}},{"value":"/ let sum = number_stream_with_err.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":276920,"byte_end":277006,"line_start":727,"line_end":727,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(sum.await, Err(2));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":277011,"byte_end":277045,"line_start":728,"line_end":728,"column_start":5,"column_end":39}},{"value":"/ # })","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":277050,"byte_end":277058,"line_start":729,"line_end":729,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":277063,"byte_end":277070,"line_start":730,"line_end":730,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2315},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":278612,"byte_end":278622,"line_start":774,"line_end":774,"column_start":8,"column_end":18},"name":"try_concat","qualname":"::stream::try_stream::TryStreamExt::try_concat","value":"pub fn try_concat(Self) -> TryConcat<Self> where Self: Sized,\nSelf::Ok: Extend<<<Self as TryStream>::Ok as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":2267},"children":[],"decl_id":null,"docs":" Attempt to concatenate all items of a stream into a single\n extendable destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Attempt to concatenate all items of a stream into a single","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":277366,"byte_end":277428,"line_start":740,"line_end":740,"column_start":5,"column_end":67}},{"value":"/ extendable destination, returning a future representing the end result.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":277433,"byte_end":277508,"line_start":741,"line_end":741,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":277513,"byte_end":277516,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents of all","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":277521,"byte_end":277592,"line_start":743,"line_end":743,"column_start":5,"column_end":76}},{"value":"/ the subsequent successful results of the stream. If the stream is empty,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":277597,"byte_end":277673,"line_start":744,"line_end":744,"column_start":5,"column_end":81}},{"value":"/ the default value will be returned.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":277678,"byte_end":277717,"line_start":745,"line_end":745,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":277722,"byte_end":277725,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the [`Extend`](std::iter::Extend) trait.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":277730,"byte_end":277816,"line_start":747,"line_end":747,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":277821,"byte_end":277824,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`concat`](crate::stream::StreamExt::concat), but will","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":277829,"byte_end":277913,"line_start":749,"line_end":749,"column_start":5,"column_end":89}},{"value":"/ exit early if an error is encountered in the stream.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":277918,"byte_end":277974,"line_start":750,"line_end":750,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":277979,"byte_end":277982,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":277987,"byte_end":278001,"line_start":752,"line_end":752,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":278006,"byte_end":278009,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":278014,"byte_end":278021,"line_start":754,"line_end":754,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":278026,"byte_end":278067,"line_start":755,"line_end":755,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":278072,"byte_end":278103,"line_start":756,"line_end":756,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":278108,"byte_end":278146,"line_start":757,"line_end":757,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":278151,"byte_end":278171,"line_start":758,"line_end":758,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":278176,"byte_end":278179,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded::<Result<Vec<i32>, ()>>();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":278184,"byte_end":278245,"line_start":760,"line_end":760,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":278250,"byte_end":278253,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":278258,"byte_end":278285,"line_start":762,"line_end":762,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":278290,"byte_end":278321,"line_start":763,"line_end":763,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":278326,"byte_end":278352,"line_start":764,"line_end":764,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(Ok(vec![n + 1, n + 2, n + 3])).unwrap();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":278357,"byte_end":278427,"line_start":765,"line_end":765,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":278432,"byte_end":278441,"line_start":766,"line_end":766,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":278446,"byte_end":278453,"line_start":767,"line_end":767,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":278458,"byte_end":278461,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ let result = rx.try_concat().await;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":278466,"byte_end":278505,"line_start":769,"line_end":769,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":278510,"byte_end":278513,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, Ok(vec![7, 8, 9, 4, 5, 6, 1, 2, 3]));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":278518,"byte_end":278578,"line_start":771,"line_end":771,"column_start":5,"column_end":65}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":278583,"byte_end":278592,"line_start":772,"line_end":772,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":278597,"byte_end":278604,"line_start":773,"line_end":773,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2316},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":281388,"byte_end":281408,"line_start":841,"line_end":841,"column_start":8,"column_end":28},"name":"try_buffer_unordered","qualname":"::stream::try_stream::TryStreamExt::try_buffer_unordered","value":"pub fn try_buffer_unordered(Self, usize) -> TryBufferUnordered<Self> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":2267},"children":[],"decl_id":null,"docs":" Attempt to execute several futures from a stream concurrently (unordered).","sig":null,"attributes":[{"value":"/ Attempt to execute several futures from a stream concurrently (unordered).","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":278876,"byte_end":278954,"line_start":782,"line_end":782,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":278959,"byte_end":278962,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ This stream's `Ok` type must be a [`TryFuture`](futures_core::future::TryFuture) with an `Error` type","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":278967,"byte_end":279072,"line_start":784,"line_end":784,"column_start":5,"column_end":110}},{"value":"/ that matches the stream's `Error` type.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":279077,"byte_end":279120,"line_start":785,"line_end":785,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":279125,"byte_end":279128,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ This adaptor will buffer up to `n` futures and then return their","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":279133,"byte_end":279201,"line_start":787,"line_end":787,"column_start":5,"column_end":73}},{"value":"/ outputs in the order in which they complete. If the underlying stream","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":279206,"byte_end":279279,"line_start":788,"line_end":788,"column_start":5,"column_end":78}},{"value":"/ returns an error, it will be immediately propagated.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":279284,"byte_end":279340,"line_start":789,"line_end":789,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":279345,"byte_end":279348,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of results, each containing either","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":279353,"byte_end":279428,"line_start":791,"line_end":791,"column_start":5,"column_end":80}},{"value":"/ an error or a future's output. An error can be produced either by the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":279433,"byte_end":279506,"line_start":792,"line_end":792,"column_start":5,"column_end":78}},{"value":"/ underlying stream itself or by one of the futures it yielded.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":279511,"byte_end":279576,"line_start":793,"line_end":793,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":279581,"byte_end":279584,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":279589,"byte_end":279664,"line_start":795,"line_end":795,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":279669,"byte_end":279726,"line_start":796,"line_end":796,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":279731,"byte_end":279734,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":279739,"byte_end":279753,"line_start":798,"line_end":798,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":279758,"byte_end":279761,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ Results are returned in the order of completion:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":279766,"byte_end":279818,"line_start":800,"line_end":800,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":279823,"byte_end":279830,"line_start":801,"line_end":801,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":279835,"byte_end":279876,"line_start":802,"line_end":802,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":279881,"byte_end":279915,"line_start":803,"line_end":803,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":279920,"byte_end":279977,"line_start":804,"line_end":804,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":279982,"byte_end":279985,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":279990,"byte_end":280040,"line_start":806,"line_end":806,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":280045,"byte_end":280095,"line_start":807,"line_end":807,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":280100,"byte_end":280103,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![Ok(recv_one), Ok(recv_two)]);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":280108,"byte_end":280183,"line_start":809,"line_end":809,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":280188,"byte_end":280191,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":280196,"byte_end":280262,"line_start":811,"line_end":811,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":280267,"byte_end":280270,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":280275,"byte_end":280300,"line_start":813,"line_end":813,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":280305,"byte_end":280359,"line_start":814,"line_end":814,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":280364,"byte_end":280367,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":280372,"byte_end":280397,"line_start":816,"line_end":816,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":280402,"byte_end":280456,"line_start":817,"line_end":817,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":280461,"byte_end":280464,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":280469,"byte_end":280513,"line_start":819,"line_end":819,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":280518,"byte_end":280554,"line_start":820,"line_end":820,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":280559,"byte_end":280566,"line_start":821,"line_end":821,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":280571,"byte_end":280574,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ Errors from the underlying stream itself are propagated:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":280579,"byte_end":280639,"line_start":823,"line_end":823,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":280644,"byte_end":280651,"line_start":824,"line_end":824,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":280656,"byte_end":280697,"line_start":825,"line_end":825,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":280702,"byte_end":280733,"line_start":826,"line_end":826,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":280738,"byte_end":280789,"line_start":827,"line_end":827,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":280794,"byte_end":280797,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ let (sink, stream_of_futures) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":280802,"byte_end":280856,"line_start":829,"line_end":829,"column_start":5,"column_end":59}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":280861,"byte_end":280927,"line_start":830,"line_end":830,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":280932,"byte_end":280935,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Ok(async { Ok(7i32) }))?;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":280940,"byte_end":280989,"line_start":832,"line_end":832,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(7i32)));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":280994,"byte_end":281048,"line_start":833,"line_end":833,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":281053,"byte_end":281056,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Err(\"error in the stream\"))?;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":281061,"byte_end":281114,"line_start":835,"line_end":835,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buffered.next().await, Some(Err(\"error in the stream\")));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":281119,"byte_end":281191,"line_start":836,"line_end":836,"column_start":5,"column_end":77}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":281196,"byte_end":281255,"line_start":837,"line_end":837,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":281260,"byte_end":281267,"line_start":838,"line_end":838,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":281355,"byte_end":281380,"line_start":840,"line_end":840,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2317},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":284433,"byte_end":284445,"line_start":917,"line_end":917,"column_start":8,"column_end":20},"name":"try_buffered","qualname":"::stream::try_stream::TryStreamExt::try_buffered","value":"pub fn try_buffered(Self, usize) -> TryBuffered<Self> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":2267},"children":[],"decl_id":null,"docs":" Attempt to execute several futures from a stream concurrently.","sig":null,"attributes":[{"value":"/ Attempt to execute several futures from a stream concurrently.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":281685,"byte_end":281751,"line_start":851,"line_end":851,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":281756,"byte_end":281759,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ This stream's `Ok` type must be a [`TryFuture`](futures_core::future::TryFuture) with an `Error` type","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":281764,"byte_end":281869,"line_start":853,"line_end":853,"column_start":5,"column_end":110}},{"value":"/ that matches the stream's `Error` type.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":281874,"byte_end":281917,"line_start":854,"line_end":854,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":281922,"byte_end":281925,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ This adaptor will buffer up to `n` futures and then return their","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":281930,"byte_end":281998,"line_start":856,"line_end":856,"column_start":5,"column_end":73}},{"value":"/ outputs in the order. If the underlying stream returns an error, it will","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":282003,"byte_end":282079,"line_start":857,"line_end":857,"column_start":5,"column_end":81}},{"value":"/ be immediately propagated.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":282084,"byte_end":282114,"line_start":858,"line_end":858,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":282119,"byte_end":282122,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of results, each containing either","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":282127,"byte_end":282202,"line_start":860,"line_end":860,"column_start":5,"column_end":80}},{"value":"/ an error or a future's output. An error can be produced either by the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":282207,"byte_end":282280,"line_start":861,"line_end":861,"column_start":5,"column_end":78}},{"value":"/ underlying stream itself or by one of the futures it yielded.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":282285,"byte_end":282350,"line_start":862,"line_end":862,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":282355,"byte_end":282358,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":282363,"byte_end":282438,"line_start":864,"line_end":864,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":282443,"byte_end":282500,"line_start":865,"line_end":865,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":282505,"byte_end":282508,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":282513,"byte_end":282527,"line_start":867,"line_end":867,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":282532,"byte_end":282535,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ Results are returned in the order of addition:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":282540,"byte_end":282590,"line_start":869,"line_end":869,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":282595,"byte_end":282602,"line_start":870,"line_end":870,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":282607,"byte_end":282648,"line_start":871,"line_end":871,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":282653,"byte_end":282687,"line_start":872,"line_end":872,"column_start":5,"column_end":39}},{"value":"/ use futures::future::lazy;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":282692,"byte_end":282722,"line_start":873,"line_end":873,"column_start":5,"column_end":35}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":282727,"byte_end":282784,"line_start":874,"line_end":874,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":282789,"byte_end":282792,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":282797,"byte_end":282847,"line_start":876,"line_end":876,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":282852,"byte_end":282902,"line_start":877,"line_end":877,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":282907,"byte_end":282910,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/ let mut buffered = lazy(move |cx| {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":282915,"byte_end":282954,"line_start":879,"line_end":879,"column_start":5,"column_end":44}},{"value":"/     let stream_of_futures = stream::iter(vec![Ok(recv_one), Ok(recv_two)]);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":282959,"byte_end":283038,"line_start":880,"line_end":880,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":283043,"byte_end":283046,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/     let mut buffered = stream_of_futures.try_buffered(10);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":283051,"byte_end":283113,"line_start":882,"line_end":882,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":283118,"byte_end":283121,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/     assert!(buffered.try_poll_next_unpin(cx).is_pending());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":283126,"byte_end":283189,"line_start":884,"line_end":884,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":283194,"byte_end":283197,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/     send_two.send(2i32)?;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":283202,"byte_end":283231,"line_start":886,"line_end":886,"column_start":5,"column_end":34}},{"value":"/     assert!(buffered.try_poll_next_unpin(cx).is_pending());","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":283236,"byte_end":283299,"line_start":887,"line_end":887,"column_start":5,"column_end":68}},{"value":"/     Ok::<_, i32>(buffered)","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":283304,"byte_end":283334,"line_start":888,"line_end":888,"column_start":5,"column_end":35}},{"value":"/ }).await?;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":283339,"byte_end":283353,"line_start":889,"line_end":889,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":283358,"byte_end":283361,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":283366,"byte_end":283391,"line_start":891,"line_end":891,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":283396,"byte_end":283450,"line_start":892,"line_end":892,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":283455,"byte_end":283509,"line_start":893,"line_end":893,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":283514,"byte_end":283517,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":283522,"byte_end":283566,"line_start":895,"line_end":895,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":283571,"byte_end":283607,"line_start":896,"line_end":896,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":283612,"byte_end":283619,"line_start":897,"line_end":897,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":283624,"byte_end":283627,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ Errors from the underlying stream itself are propagated:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":283632,"byte_end":283692,"line_start":899,"line_end":899,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":283697,"byte_end":283704,"line_start":900,"line_end":900,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":283709,"byte_end":283750,"line_start":901,"line_end":901,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":283755,"byte_end":283786,"line_start":902,"line_end":902,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":283791,"byte_end":283842,"line_start":903,"line_end":903,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":283847,"byte_end":283850,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/ let (sink, stream_of_futures) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":283855,"byte_end":283909,"line_start":905,"line_end":905,"column_start":5,"column_end":59}},{"value":"/ let mut buffered = stream_of_futures.try_buffered(10);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":283914,"byte_end":283972,"line_start":906,"line_end":906,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":283977,"byte_end":283980,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Ok(async { Ok(7i32) }))?;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":283985,"byte_end":284034,"line_start":908,"line_end":908,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(7i32)));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":284039,"byte_end":284093,"line_start":909,"line_end":909,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":284098,"byte_end":284101,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Err(\"error in the stream\"))?;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":284106,"byte_end":284159,"line_start":911,"line_end":911,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buffered.next().await, Some(Err(\"error in the stream\")));","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":284164,"byte_end":284236,"line_start":912,"line_end":912,"column_start":5,"column_end":77}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":284241,"byte_end":284300,"line_start":913,"line_end":913,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":284305,"byte_end":284312,"line_start":914,"line_end":914,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":284400,"byte_end":284425,"line_start":916,"line_end":916,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2318},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":284807,"byte_end":284826,"line_start":929,"line_end":929,"column_start":8,"column_end":27},"name":"try_poll_next_unpin","qualname":"::stream::try_stream::TryStreamExt::try_poll_next_unpin","value":"pub fn try_poll_next_unpin(&mut Self, &mut Context)\n-> Poll<Option<Result<Self::Ok, Self::Error>>> where Self: Unpin","parent":{"krate":0,"index":2267},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":284699,"byte_end":284777,"line_start":927,"line_end":927,"column_start":5,"column_end":83}},{"value":"/ stream types.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":284782,"byte_end":284799,"line_start":928,"line_end":928,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":8162},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\iter.rs","byte_start":323342,"byte_end":323346,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":8164}],"decl_id":null,"docs":" Stream for the [`iter`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`] function.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\iter.rs","byte_start":323220,"byte_end":323257,"line_start":5,"line_end":5,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\iter.rs","byte_start":323282,"byte_end":323330,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2353},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\iter.rs","byte_start":323864,"byte_end":323868,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"pub fn iter<I>(I) -> Iter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\iter.rs","byte_start":323398,"byte_end":323462,"line_start":14,"line_end":14,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\iter.rs","byte_start":323463,"byte_end":323491,"line_start":15,"line_end":15,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\iter.rs","byte_start":323492,"byte_end":323495,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\iter.rs","byte_start":323496,"byte_end":323569,"line_start":17,"line_end":17,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\iter.rs","byte_start":323570,"byte_end":323625,"line_start":18,"line_end":18,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\iter.rs","byte_start":323626,"byte_end":323629,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\iter.rs","byte_start":323630,"byte_end":323637,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\iter.rs","byte_start":323638,"byte_end":323679,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\iter.rs","byte_start":323680,"byte_end":323723,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\iter.rs","byte_start":323724,"byte_end":323727,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::iter(vec![17, 19]);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\iter.rs","byte_start":323728,"byte_end":323772,"line_start":24,"line_end":24,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(vec![17, 19], stream.collect::<Vec<i32>>().await);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\iter.rs","byte_start":323773,"byte_end":323838,"line_start":25,"line_end":25,"column_start":1,"column_end":66}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\iter.rs","byte_start":323839,"byte_end":323848,"line_start":26,"line_end":26,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\iter.rs","byte_start":323849,"byte_end":323856,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8171},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat.rs","byte_start":324517,"byte_end":324523,"line_start":8,"line_end":8,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":8173}],"decl_id":null,"docs":" Stream for the [`repeat`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`repeat`] function.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat.rs","byte_start":324393,"byte_end":324432,"line_start":5,"line_end":5,"column_start":1,"column_end":40}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat.rs","byte_start":324457,"byte_end":324505,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2371},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat.rs","byte_start":325047,"byte_end":325053,"line_start":26,"line_end":26,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"pub fn repeat<T>(T) -> Repeat<T> where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a stream which produces the same item repeatedly.","sig":null,"attributes":[{"value":"/ Create a stream which produces the same item repeatedly.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat.rs","byte_start":324545,"byte_end":324605,"line_start":12,"line_end":12,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat.rs","byte_start":324606,"byte_end":324609,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat.rs","byte_start":324610,"byte_end":324677,"line_start":14,"line_end":14,"column_start":1,"column_end":68}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat.rs","byte_start":324678,"byte_end":324750,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat.rs","byte_start":324751,"byte_end":324808,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat.rs","byte_start":324809,"byte_end":324812,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat.rs","byte_start":324813,"byte_end":324820,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat.rs","byte_start":324821,"byte_end":324862,"line_start":19,"line_end":19,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat.rs","byte_start":324863,"byte_end":324906,"line_start":20,"line_end":20,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat.rs","byte_start":324907,"byte_end":324910,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::repeat(9);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat.rs","byte_start":324911,"byte_end":324946,"line_start":22,"line_end":22,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(vec![9, 9, 9], stream.take(3).collect::<Vec<i32>>().await);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat.rs","byte_start":324947,"byte_end":325021,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat.rs","byte_start":325022,"byte_end":325031,"line_start":24,"line_end":24,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat.rs","byte_start":325032,"byte_end":325039,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8180},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":325993,"byte_end":326003,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"RepeatWith","qualname":"::stream::repeat_with::RepeatWith","value":"RepeatWith {  }","parent":null,"children":[{"krate":0,"index":8182}],"decl_id":null,"docs":" An stream that repeats elements of type `A` endlessly by\n applying the provided closure `F: FnMut() -> A`.","sig":null,"attributes":[{"value":"/ An stream that repeats elements of type `A` endlessly by","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":325691,"byte_end":325751,"line_start":5,"line_end":5,"column_start":1,"column_end":61}},{"value":"/ applying the provided closure `F: FnMut() -> A`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":325752,"byte_end":325804,"line_start":6,"line_end":6,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":325805,"byte_end":325808,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`repeat_with()`] function.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":325809,"byte_end":325872,"line_start":8,"line_end":8,"column_start":1,"column_end":64}},{"value":"/ See its documentation for more.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":325873,"byte_end":325908,"line_start":9,"line_end":9,"column_start":1,"column_end":36}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":325933,"byte_end":325981,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2407},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":328291,"byte_end":328302,"line_start":91,"line_end":91,"column_start":8,"column_end":19},"name":"repeat_with","qualname":"::stream::repeat_with::repeat_with","value":"pub fn repeat_with<A, F: FnMut() -> A>(F) -> RepeatWith<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that repeats elements of type `A` endlessly by\n applying the provided closure, the repeater, `F: FnMut() -> A`.","sig":null,"attributes":[{"value":"/ Creates a new stream that repeats elements of type `A` endlessly by","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":326519,"byte_end":326590,"line_start":37,"line_end":37,"column_start":1,"column_end":72}},{"value":"/ applying the provided closure, the repeater, `F: FnMut() -> A`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":326591,"byte_end":326658,"line_start":38,"line_end":38,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":326659,"byte_end":326662,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ The `repeat_with()` function calls the repeater over and over again.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":326663,"byte_end":326735,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":326736,"byte_end":326739,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Infinite stream like `repeat_with()` are often used with adapters like","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":326740,"byte_end":326814,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ [`stream.take()`], in order to make them finite.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":326815,"byte_end":326867,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":326868,"byte_end":326871,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ If the element type of the stream you need implements [`Clone`], and","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":326872,"byte_end":326944,"line_start":45,"line_end":45,"column_start":1,"column_end":73}},{"value":"/ it is OK to keep the source element in memory, you should instead use","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":326945,"byte_end":327018,"line_start":46,"line_end":46,"column_start":1,"column_end":74}},{"value":"/ the [`stream.repeat()`] function.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":327019,"byte_end":327056,"line_start":47,"line_end":47,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":327057,"byte_end":327060,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":327061,"byte_end":327075,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":327076,"byte_end":327079,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":327080,"byte_end":327096,"line_start":51,"line_end":51,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":327097,"byte_end":327100,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":327101,"byte_end":327108,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":327109,"byte_end":327150,"line_start":54,"line_end":54,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":327151,"byte_end":327194,"line_start":55,"line_end":55,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":327195,"byte_end":327198,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ // let's assume we have some value of a type that is not `Clone`","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":327199,"byte_end":327267,"line_start":57,"line_end":57,"column_start":1,"column_end":69}},{"value":"/ // or which don't want to have in memory just yet because it is expensive:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":327268,"byte_end":327346,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/ #[derive(PartialEq, Debug)]","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":327347,"byte_end":327378,"line_start":59,"line_end":59,"column_start":1,"column_end":32}},{"value":"/ struct Expensive;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":327379,"byte_end":327400,"line_start":60,"line_end":60,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":327401,"byte_end":327404,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ // a particular value forever:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":327405,"byte_end":327439,"line_start":62,"line_end":62,"column_start":1,"column_end":35}},{"value":"/ let mut things = stream::repeat_with(|| Expensive);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":327440,"byte_end":327495,"line_start":63,"line_end":63,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":327496,"byte_end":327499,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":327500,"byte_end":327553,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":327554,"byte_end":327607,"line_start":66,"line_end":66,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":327608,"byte_end":327661,"line_start":67,"line_end":67,"column_start":1,"column_end":54}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":327662,"byte_end":327671,"line_start":68,"line_end":68,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":327672,"byte_end":327679,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":327680,"byte_end":327683,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Using mutation and going finite:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":327684,"byte_end":327720,"line_start":71,"line_end":71,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":327721,"byte_end":327724,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":327725,"byte_end":327736,"line_start":73,"line_end":73,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":327737,"byte_end":327778,"line_start":74,"line_end":74,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":327779,"byte_end":327822,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":327823,"byte_end":327826,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ // From the zeroth to the third power of two:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":327827,"byte_end":327876,"line_start":77,"line_end":77,"column_start":1,"column_end":50}},{"value":"/ let mut curr = 1;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":327877,"byte_end":327898,"line_start":78,"line_end":78,"column_start":1,"column_end":22}},{"value":"/ let mut pow2 = stream::repeat_with(|| { let tmp = curr; curr *= 2; tmp })","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":327899,"byte_end":327976,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/                     .take(4);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":327977,"byte_end":328010,"line_start":80,"line_end":80,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":328011,"byte_end":328014,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(1), pow2.next().await);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":328015,"byte_end":328058,"line_start":82,"line_end":82,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(2), pow2.next().await);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":328059,"byte_end":328102,"line_start":83,"line_end":83,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(4), pow2.next().await);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":328103,"byte_end":328146,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(8), pow2.next().await);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":328147,"byte_end":328190,"line_start":85,"line_end":85,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":328191,"byte_end":328194,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ // ... and now we're done","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":328195,"byte_end":328224,"line_start":87,"line_end":87,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(None, pow2.next().await);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":328225,"byte_end":328265,"line_start":88,"line_end":88,"column_start":1,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":328266,"byte_end":328275,"line_start":89,"line_end":89,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":328276,"byte_end":328283,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8189},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\empty.rs","byte_start":328644,"byte_end":328649,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":8191}],"decl_id":null,"docs":" Stream for the [`empty`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`] function.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\empty.rs","byte_start":328528,"byte_end":328566,"line_start":6,"line_end":6,"column_start":1,"column_end":39}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\empty.rs","byte_start":328584,"byte_end":328632,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2422},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\empty.rs","byte_start":328817,"byte_end":328822,"line_start":16,"line_end":16,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"pub fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which contains no elements.","sig":null,"attributes":[{"value":"/ Creates a stream which contains no elements.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\empty.rs","byte_start":328687,"byte_end":328735,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\empty.rs","byte_start":328736,"byte_end":328739,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Ready(None)` when polled.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\empty.rs","byte_start":328740,"byte_end":328809,"line_start":15,"line_end":15,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":2451},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\once.rs","byte_start":329870,"byte_end":329874,"line_start":19,"line_end":19,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"pub fn once<Fut: Future>(Fut) -> Once<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream of a single element.","sig":null,"attributes":[{"value":"/ Creates a stream of a single element.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\once.rs","byte_start":329563,"byte_end":329604,"line_start":8,"line_end":8,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\once.rs","byte_start":329605,"byte_end":329608,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\once.rs","byte_start":329609,"byte_end":329616,"line_start":10,"line_end":10,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\once.rs","byte_start":329617,"byte_end":329658,"line_start":11,"line_end":11,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\once.rs","byte_start":329659,"byte_end":329702,"line_start":12,"line_end":12,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\once.rs","byte_start":329703,"byte_end":329706,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::once(async { 17 });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\once.rs","byte_start":329707,"byte_end":329751,"line_start":14,"line_end":14,"column_start":1,"column_end":45}},{"value":"/ let collected = stream.collect::<Vec<i32>>().await;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\once.rs","byte_start":329752,"byte_end":329807,"line_start":15,"line_end":15,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\once.rs","byte_start":329808,"byte_end":329844,"line_start":16,"line_end":16,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\once.rs","byte_start":329845,"byte_end":329854,"line_start":17,"line_end":17,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\once.rs","byte_start":329855,"byte_end":329862,"line_start":18,"line_end":18,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8200},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\once.rs","byte_start":330103,"byte_end":330107,"line_start":27,"line_end":27,"column_start":16,"column_end":20},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":8202}],"decl_id":null,"docs":" A stream which emits single element and then EOF.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8231},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\pending.rs","byte_start":331257,"byte_end":331264,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":8233}],"decl_id":null,"docs":" Stream for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending()`] function.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\pending.rs","byte_start":331137,"byte_end":331179,"line_start":6,"line_end":6,"column_start":1,"column_end":43}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\pending.rs","byte_start":331197,"byte_end":331245,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2476},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\pending.rs","byte_start":331440,"byte_end":331447,"line_start":16,"line_end":16,"column_start":8,"column_end":15},"name":"pending","qualname":"::stream::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which never returns any elements.","sig":null,"attributes":[{"value":"/ Creates a stream which never returns any elements.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\pending.rs","byte_start":331308,"byte_end":331362,"line_start":13,"line_end":13,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\pending.rs","byte_start":331363,"byte_end":331366,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Pending` when polled.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\pending.rs","byte_start":331367,"byte_end":331432,"line_start":15,"line_end":15,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":2501},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":332241,"byte_end":332247,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::stream::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":2503}],"decl_id":null,"docs":" Stream for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`poll_fn`] function.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":332140,"byte_end":332180,"line_start":8,"line_end":8,"column_start":1,"column_end":41}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":332181,"byte_end":332229,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2509},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":332935,"byte_end":332942,"line_start":40,"line_end":40,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::stream::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) ->\nPoll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream wrapping a function returning `Poll<Option<T>>`.","sig":null,"attributes":[{"value":"/ Creates a new stream wrapping a function returning `Poll<Option<T>>`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":332447,"byte_end":332520,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":332521,"byte_end":332524,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Polling the returned stream calls the wrapped function.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":332525,"byte_end":332584,"line_start":24,"line_end":24,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":332585,"byte_end":332588,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":332589,"byte_end":332603,"line_start":26,"line_end":26,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":332604,"byte_end":332607,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":332608,"byte_end":332615,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/ use futures::stream::poll_fn;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":332616,"byte_end":332649,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"/ use futures::task::Poll;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":332650,"byte_end":332678,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":332679,"byte_end":332682,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let mut counter = 1usize;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":332683,"byte_end":332712,"line_start":32,"line_end":32,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":332713,"byte_end":332716,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let read_stream = poll_fn(move |_| -> Poll<Option<String>> {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":332717,"byte_end":332781,"line_start":34,"line_end":34,"column_start":1,"column_end":65}},{"value":"/     if counter == 0 { return Poll::Ready(None); }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":332782,"byte_end":332835,"line_start":35,"line_end":35,"column_start":1,"column_end":54}},{"value":"/     counter -= 1;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":332836,"byte_end":332857,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/     Poll::Ready(Some(\"Hello, World!\".to_owned()))","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":332858,"byte_end":332911,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":332912,"byte_end":332919,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":332920,"byte_end":332927,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8244},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":333613,"byte_end":333619,"line_start":11,"line_end":11,"column_start":16,"column_end":22},"name":"Select","qualname":"::stream::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":8247},{"krate":0,"index":8248},{"krate":0,"index":8249}],"decl_id":null,"docs":" Stream for the [`select()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2532},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":334223,"byte_end":334229,"line_start":30,"line_end":30,"column_start":8,"column_end":14},"name":"select","qualname":"::stream::select::select","value":"pub fn select<St1, St2>(St1, St2) -> Select<St1, St2> where St1: Stream,\nSt2: Stream<Item = St1::Item>","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. Each\n stream will be polled in a round-robin fashion, and whenever a stream is\n ready to yield an item that item is yielded.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. Each","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":333747,"byte_end":333815,"line_start":20,"line_end":20,"column_start":1,"column_end":69}},{"value":"/ stream will be polled in a round-robin fashion, and whenever a stream is","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":333816,"byte_end":333892,"line_start":21,"line_end":21,"column_start":1,"column_end":77}},{"value":"/ ready to yield an item that item is yielded.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":333893,"byte_end":333941,"line_start":22,"line_end":22,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":333942,"byte_end":333945,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ After one of the two input stream completes, the remaining one will be","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":333946,"byte_end":334020,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":334021,"byte_end":334090,"line_start":25,"line_end":25,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":334091,"byte_end":334118,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":334119,"byte_end":334122,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":334123,"byte_end":334194,"line_start":28,"line_end":28,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":334195,"byte_end":334215,"line_start":29,"line_end":29,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2538},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":334608,"byte_end":334615,"line_start":44,"line_end":44,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Select<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":334500,"byte_end":334574,"line_start":42,"line_end":42,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":334579,"byte_end":334596,"line_start":43,"line_end":43,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2539},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":334971,"byte_end":334978,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Select<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":334709,"byte_end":334777,"line_start":48,"line_end":48,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":334782,"byte_end":334813,"line_start":49,"line_end":49,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":334818,"byte_end":334821,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":334826,"byte_end":334899,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":334904,"byte_end":334959,"line_start":52,"line_end":52,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2540},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":335353,"byte_end":335364,"line_start":62,"line_end":62,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Select<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":335084,"byte_end":335159,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":335164,"byte_end":335195,"line_start":58,"line_end":58,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":335200,"byte_end":335203,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":335208,"byte_end":335281,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":335286,"byte_end":335341,"line_start":61,"line_end":61,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2541},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":335770,"byte_end":335780,"line_start":71,"line_end":71,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Select<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":335534,"byte_end":335597,"line_start":67,"line_end":67,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":335602,"byte_end":335605,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":335610,"byte_end":335682,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":335687,"byte_end":335758,"line_start":70,"line_end":70,"column_start":5,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":2570},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":339021,"byte_end":339027,"line_start":49,"line_end":49,"column_start":8,"column_end":14},"name":"unfold","qualname":"::stream::unfold::unfold","value":"pub fn unfold<T, F, Fut, Item>(T, F) -> Unfold<T, F, Fut> where F: FnMut(T) ->\nFut, Fut: Future<Output = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Stream` from a seed and a closure returning a `Future`.","sig":null,"attributes":[{"value":"/ Creates a `Stream` from a seed and a closure returning a `Future`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":337579,"byte_end":337649,"line_start":10,"line_end":10,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":337650,"byte_end":337653,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `Stream::fold()` adapter: while","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":337654,"byte_end":337723,"line_start":12,"line_end":12,"column_start":1,"column_end":70}},{"value":"/ `Stream::fold()` reduces a `Stream` to one single value, `unfold()` creates a","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":337724,"byte_end":337805,"line_start":13,"line_end":13,"column_start":1,"column_end":82}},{"value":"/ `Stream` from a seed value.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":337806,"byte_end":337837,"line_start":14,"line_end":14,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":337838,"byte_end":337841,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `unfold()` will call the provided closure with the provided seed, then wait","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":337842,"byte_end":337921,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ for the returned `Future` to complete with `(a, b)`. It will then yield the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":337922,"byte_end":338001,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ value `a`, and use `b` as the next internal state.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":338002,"byte_end":338056,"line_start":18,"line_end":18,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":338057,"byte_end":338060,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(Future)`, then the `unfold()`","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":338061,"byte_end":338141,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ will stop producing items and return `Poll::Ready(None)` in future","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":338142,"byte_end":338212,"line_start":21,"line_end":21,"column_start":1,"column_end":71}},{"value":"/ calls to `poll()`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":338213,"byte_end":338235,"line_start":22,"line_end":22,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":338236,"byte_end":338239,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":338240,"byte_end":338317,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":338318,"byte_end":338390,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/ `Future` using other library functions working on futures, and `unfold()`","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":338391,"byte_end":338468,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ will turn it into a `Stream` by repeating the operation.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":338469,"byte_end":338529,"line_start":27,"line_end":27,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":338530,"byte_end":338533,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":338534,"byte_end":338547,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":338548,"byte_end":338551,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":338552,"byte_end":338559,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":338560,"byte_end":338601,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":338602,"byte_end":338645,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":338646,"byte_end":338649,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::unfold(0, |state| async move {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":338650,"byte_end":338705,"line_start":35,"line_end":35,"column_start":1,"column_end":56}},{"value":"/     if state <= 2 {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":338706,"byte_end":338729,"line_start":36,"line_end":36,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":338730,"byte_end":338769,"line_start":37,"line_end":37,"column_start":1,"column_end":40}},{"value":"/         let yielded = state  * 2;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":338770,"byte_end":338807,"line_start":38,"line_end":38,"column_start":1,"column_end":38}},{"value":"/         Some((yielded, next_state))","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":338808,"byte_end":338847,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":338848,"byte_end":338864,"line_start":40,"line_end":40,"column_start":1,"column_end":17}},{"value":"/         None","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":338865,"byte_end":338881,"line_start":41,"line_end":41,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":338882,"byte_end":338891,"line_start":42,"line_end":42,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":338892,"byte_end":338899,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":338900,"byte_end":338903,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ let result = stream.collect::<Vec<i32>>().await;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":338904,"byte_end":338956,"line_start":45,"line_end":45,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(result, vec![0, 2, 4]);","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":338957,"byte_end":338995,"line_start":46,"line_end":46,"column_start":1,"column_end":39}},{"value":"/ # });","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":338996,"byte_end":339005,"line_start":47,"line_end":47,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":339006,"byte_end":339013,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8290},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":339369,"byte_end":339375,"line_start":63,"line_end":63,"column_start":16,"column_end":22},"name":"Unfold","qualname":"::stream::unfold::Unfold","value":"Unfold {  }","parent":null,"children":[{"krate":0,"index":8294},{"krate":0,"index":8295}],"decl_id":null,"docs":" Stream for the [`unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":5483266,"byte_end":5483275,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8381},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5556443,"byte_end":5556457,"line_start":98,"line_end":98,"column_start":12,"column_end":26},"name":"FuturesOrdered","qualname":"::stream::futures_ordered::FuturesOrdered","value":"FuturesOrdered {  }","parent":null,"children":[{"krate":0,"index":8383},{"krate":0,"index":8384},{"krate":0,"index":8385},{"krate":0,"index":8386}],"decl_id":null,"docs":" An unbounded queue of futures.","sig":null,"attributes":[{"value":"/ An unbounded queue of futures.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5554377,"byte_end":5554411,"line_start":62,"line_end":62,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5554412,"byte_end":5554415,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ This \"combinator\" is similar to `FuturesUnordered`, but it imposes an order","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5554416,"byte_end":5554495,"line_start":64,"line_end":64,"column_start":1,"column_end":80}},{"value":"/ on top of the set of futures. While futures in the set will race to","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5554496,"byte_end":5554567,"line_start":65,"line_end":65,"column_start":1,"column_end":72}},{"value":"/ completion in parallel, results will only be returned in the order their","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5554568,"byte_end":5554644,"line_start":66,"line_end":66,"column_start":1,"column_end":77}},{"value":"/ originating futures were added to the queue.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5554645,"byte_end":5554693,"line_start":67,"line_end":67,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5554694,"byte_end":5554697,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Futures are pushed into this queue and their realized values are yielded in","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5554698,"byte_end":5554777,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/ order. This structure is optimized to manage a large number of futures.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5554778,"byte_end":5554853,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ Futures managed by `FuturesOrdered` will only be polled when they generate","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5554854,"byte_end":5554932,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/ notifications. This reduces the required amount of work needed to coordinate","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5554933,"byte_end":5555013,"line_start":72,"line_end":72,"column_start":1,"column_end":81}},{"value":"/ large numbers of futures.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5555014,"byte_end":5555043,"line_start":73,"line_end":73,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5555044,"byte_end":5555047,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ When a `FuturesOrdered` is first created, it does not contain any futures.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5555048,"byte_end":5555126,"line_start":75,"line_end":75,"column_start":1,"column_end":79}},{"value":"/ Calling `poll` in this state will result in `Poll::Ready(None))` to be","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5555127,"byte_end":5555201,"line_start":76,"line_end":76,"column_start":1,"column_end":75}},{"value":"/ returned. Futures are submitted to the queue using `push`; however, the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5555202,"byte_end":5555277,"line_start":77,"line_end":77,"column_start":1,"column_end":76}},{"value":"/ future will **not** be polled at this point. `FuturesOrdered` will only","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5555278,"byte_end":5555353,"line_start":78,"line_end":78,"column_start":1,"column_end":76}},{"value":"/ poll managed futures when `FuturesOrdered::poll` is called. As such, it","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5555354,"byte_end":5555429,"line_start":79,"line_end":79,"column_start":1,"column_end":76}},{"value":"/ is important to call `poll` after pushing new futures.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5555430,"byte_end":5555488,"line_start":80,"line_end":80,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5555489,"byte_end":5555492,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ If `FuturesOrdered::poll` returns `Poll::Ready(None)` this means that","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5555493,"byte_end":5555566,"line_start":82,"line_end":82,"column_start":1,"column_end":74}},{"value":"/ the queue is currently not managing any futures. A future may be submitted","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5555567,"byte_end":5555645,"line_start":83,"line_end":83,"column_start":1,"column_end":79}},{"value":"/ to the queue at a later time. At that point, a call to","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5555646,"byte_end":5555704,"line_start":84,"line_end":84,"column_start":1,"column_end":59}},{"value":"/ `FuturesOrdered::poll` will either return the future's resolved value","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5555705,"byte_end":5555778,"line_start":85,"line_end":85,"column_start":1,"column_end":74}},{"value":"/ **or** `Poll::Pending` if the future has not yet completed. When","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5555779,"byte_end":5555847,"line_start":86,"line_end":86,"column_start":1,"column_end":69}},{"value":"/ multiple futures are submitted to the queue, `FuturesOrdered::poll` will","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5555848,"byte_end":5555924,"line_start":87,"line_end":87,"column_start":1,"column_end":77}},{"value":"/ return `Poll::Pending` until the first future completes, even if","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5555925,"byte_end":5555993,"line_start":88,"line_end":88,"column_start":1,"column_end":69}},{"value":"/ some of the later futures have already completed.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5555994,"byte_end":5556047,"line_start":89,"line_end":89,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5556048,"byte_end":5556051,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made `FuturesOrdered` via the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5556052,"byte_end":5556118,"line_start":91,"line_end":91,"column_start":1,"column_end":67}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty queue","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5556119,"byte_end":5556198,"line_start":92,"line_end":92,"column_start":1,"column_end":80}},{"value":"/ with the `FuturesOrdered::new` constructor.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5556199,"byte_end":5556246,"line_start":93,"line_end":93,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5556247,"byte_end":5556250,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5556251,"byte_end":5556324,"line_start":95,"line_end":95,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5556325,"byte_end":5556382,"line_start":96,"line_end":96,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5556383,"byte_end":5556431,"line_start":97,"line_end":97,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":8391},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5556965,"byte_end":5556968,"line_start":112,"line_end":112,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesOrdered<Fut>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `FuturesOrdered`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `FuturesOrdered`","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5556745,"byte_end":5556789,"line_start":108,"line_end":108,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5556794,"byte_end":5556797,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ The returned `FuturesOrdered` does not contain any futures and, in this","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5556802,"byte_end":5556877,"line_start":110,"line_end":110,"column_start":5,"column_end":80}},{"value":"/ state, `FuturesOrdered::poll_next` will return `Poll::Ready(None)`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5556882,"byte_end":5556953,"line_start":111,"line_end":111,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":8392},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5557465,"byte_end":5557468,"line_start":126,"line_end":126,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesOrdered<Fut>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the queue.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5557192,"byte_end":5557249,"line_start":121,"line_end":121,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5557254,"byte_end":5557257,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures, both","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5557262,"byte_end":5557325,"line_start":123,"line_end":123,"column_start":5,"column_end":68}},{"value":"/ those currently processing and those that have completed but","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5557330,"byte_end":5557394,"line_start":124,"line_end":124,"column_start":5,"column_end":69}},{"value":"/ which are waiting for earlier futures to complete.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5557399,"byte_end":5557453,"line_start":125,"line_end":125,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":8393},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5557626,"byte_end":5557634,"line_start":131,"line_end":131,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesOrdered<Fut>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the queue contains no futures\n","sig":null,"attributes":[{"value":"/ Returns `true` if the queue contains no futures","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5557563,"byte_end":5557614,"line_start":130,"line_end":130,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":8394},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5558058,"byte_end":5558062,"line_start":141,"line_end":141,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesOrdered<Fut>>::push","value":"pub fn push(&mut Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the queue.","sig":null,"attributes":[{"value":"/ Push a future into the queue.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5557739,"byte_end":5557772,"line_start":135,"line_end":135,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5557777,"byte_end":5557780,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ This function submits the given future to the internal set for managing.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5557785,"byte_end":5557861,"line_start":137,"line_end":137,"column_start":5,"column_end":81}},{"value":"/ This function will not call `poll` on the submitted future. The caller","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5557866,"byte_end":5557940,"line_start":138,"line_end":138,"column_start":5,"column_end":79}},{"value":"/ must ensure that `FuturesOrdered::poll` is called in order to receive","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5557945,"byte_end":5558018,"line_start":139,"line_end":139,"column_start":5,"column_end":78}},{"value":"/ task notifications.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5558023,"byte_end":5558046,"line_start":140,"line_end":140,"column_start":5,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":8419},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"futures_unordered","qualname":"::stream::futures_unordered","value":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","parent":null,"children":[{"krate":0,"index":8420},{"krate":0,"index":8421},{"krate":0,"index":8422},{"krate":0,"index":8423},{"krate":0,"index":8424},{"krate":0,"index":8425},{"krate":0,"index":8426},{"krate":0,"index":8427},{"krate":0,"index":8428},{"krate":0,"index":8429},{"krate":0,"index":8430},{"krate":0,"index":8431},{"krate":0,"index":8432},{"krate":0,"index":8433},{"krate":0,"index":8434},{"krate":0,"index":8435},{"krate":0,"index":8436},{"krate":0,"index":8437},{"krate":0,"index":11326},{"krate":0,"index":8438},{"krate":0,"index":8439},{"krate":0,"index":11330},{"krate":0,"index":8440},{"krate":0,"index":8441},{"krate":0,"index":8442},{"krate":0,"index":8443},{"krate":0,"index":8444},{"krate":0,"index":11338},{"krate":0,"index":8445},{"krate":0,"index":11340},{"krate":0,"index":8446},{"krate":0,"index":11342},{"krate":0,"index":8447},{"krate":0,"index":11344},{"krate":0,"index":8448},{"krate":0,"index":11346},{"krate":0,"index":8449},{"krate":0,"index":8450},{"krate":0,"index":8451},{"krate":0,"index":8452},{"krate":0,"index":8453},{"krate":0,"index":8454},{"krate":0,"index":8455},{"krate":0,"index":8461},{"krate":0,"index":8499},{"krate":0,"index":8500},{"krate":0,"index":11366},{"krate":0,"index":8501},{"krate":0,"index":11368},{"krate":0,"index":8502},{"krate":0,"index":8503},{"krate":0,"index":8504},{"krate":0,"index":8544},{"krate":0,"index":8545},{"krate":0,"index":8581},{"krate":0,"index":8582},{"krate":0,"index":8583},{"krate":0,"index":8584},{"krate":0,"index":8585},{"krate":0,"index":8590},{"krate":0,"index":8592},{"krate":0,"index":8594},{"krate":0,"index":8596},{"krate":0,"index":8598},{"krate":0,"index":8600},{"krate":0,"index":8603},{"krate":0,"index":8618},{"krate":0,"index":8631},{"krate":0,"index":8634},{"krate":0,"index":8637},{"krate":0,"index":8642},{"krate":0,"index":8645}],"decl_id":null,"docs":" An unbounded set of futures.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":129997,"byte_end":130022,"line_start":100,"line_end":100,"column_start":5,"column_end":30}},{"value":"! An unbounded set of futures.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5560460,"byte_end":5560492,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5560493,"byte_end":5560496,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5560497,"byte_end":5560572,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"! library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5560573,"byte_end":5560630,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":8702},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\iter.rs","byte_start":5586797,"byte_end":5586807,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"IterPinMut","qualname":"::stream::futures_unordered::iter::IterPinMut","value":"IterPinMut {  }","parent":null,"children":[{"krate":0,"index":8705},{"krate":0,"index":8706},{"krate":0,"index":8707}],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\iter.rs","byte_start":5586726,"byte_end":5586785,"line_start":8,"line_end":8,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":8712},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\iter.rs","byte_start":5587043,"byte_end":5587050,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::stream::futures_unordered::iter::IterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\iter.rs","byte_start":5586972,"byte_end":5587031,"line_start":16,"line_end":16,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":8721},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\iter.rs","byte_start":5587192,"byte_end":5587202,"line_start":21,"line_end":21,"column_start":12,"column_end":22},"name":"IterPinRef","qualname":"::stream::futures_unordered::iter::IterPinRef","value":"IterPinRef {  }","parent":null,"children":[{"krate":0,"index":8724},{"krate":0,"index":8725},{"krate":0,"index":8726},{"krate":0,"index":8727}],"decl_id":null,"docs":" Immutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all futures in the unordered set.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\iter.rs","byte_start":5587119,"byte_end":5587180,"line_start":20,"line_end":20,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":8732},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\iter.rs","byte_start":5587489,"byte_end":5587493,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::futures_unordered::iter::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Immutable iterator over all the futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all the futures in the unordered set.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\iter.rs","byte_start":5587412,"byte_end":5587477,"line_start":29,"line_end":29,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":8585},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5563344,"byte_end":5563360,"line_start":71,"line_end":71,"column_start":12,"column_end":28},"name":"FuturesUnordered","qualname":"::stream::futures_unordered::FuturesUnordered","value":"FuturesUnordered {  }","parent":null,"children":[{"krate":0,"index":8587},{"krate":0,"index":8588},{"krate":0,"index":8589}],"decl_id":null,"docs":" A set of futures which may complete in any order.","sig":null,"attributes":[{"value":"/ A set of futures which may complete in any order.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5562249,"byte_end":5562302,"line_start":50,"line_end":50,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5562303,"byte_end":5562306,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ This structure is optimized to manage a large number of futures.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5562307,"byte_end":5562375,"line_start":52,"line_end":52,"column_start":1,"column_end":69}},{"value":"/ Futures managed by [`FuturesUnordered`] will only be polled when they","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5562376,"byte_end":5562449,"line_start":53,"line_end":53,"column_start":1,"column_end":74}},{"value":"/ generate wake-up notifications. This reduces the required amount of work","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5562450,"byte_end":5562526,"line_start":54,"line_end":54,"column_start":1,"column_end":77}},{"value":"/ needed to poll large numbers of futures.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5562527,"byte_end":5562571,"line_start":55,"line_end":55,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5562572,"byte_end":5562575,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`FuturesUnordered`] can be filled by [`collect`](Iterator::collect)ing an","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5562576,"byte_end":5562654,"line_start":57,"line_end":57,"column_start":1,"column_end":79}},{"value":"/ iterator of futures into a [`FuturesUnordered`], or by","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5562655,"byte_end":5562713,"line_start":58,"line_end":58,"column_start":1,"column_end":59}},{"value":"/ [`push`](FuturesUnordered::push)ing futures onto an existing","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5562714,"byte_end":5562778,"line_start":59,"line_end":59,"column_start":1,"column_end":65}},{"value":"/ [`FuturesUnordered`]. When new futures are added,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5562779,"byte_end":5562832,"line_start":60,"line_end":60,"column_start":1,"column_end":54}},{"value":"/ [`poll_next`](Stream::poll_next) must be called in order to begin receiving","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5562833,"byte_end":5562912,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ wake-ups for new futures.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5562913,"byte_end":5562942,"line_start":62,"line_end":62,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5562943,"byte_end":5562946,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made [`FuturesUnordered`] via the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5562947,"byte_end":5563017,"line_start":64,"line_end":64,"column_start":1,"column_end":71}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty set","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5563018,"byte_end":5563095,"line_start":65,"line_end":65,"column_start":1,"column_end":78}},{"value":"/ with the [`FuturesUnordered::new`] constructor.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5563096,"byte_end":5563147,"line_start":66,"line_end":66,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5563148,"byte_end":5563151,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5563152,"byte_end":5563225,"line_start":68,"line_end":68,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5563226,"byte_end":5563283,"line_start":69,"line_end":69,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5563284,"byte_end":5563332,"line_start":70,"line_end":70,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":8605},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5566001,"byte_end":5566004,"line_start":136,"line_end":136,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesUnordered<Fut>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty [`FuturesUnordered`].","sig":null,"attributes":[{"value":"/ Constructs a new, empty [`FuturesUnordered`].","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5565730,"byte_end":5565779,"line_start":131,"line_end":131,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5565784,"byte_end":5565787,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ The returned [`FuturesUnordered`] does not contain any futures.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5565792,"byte_end":5565859,"line_start":133,"line_end":133,"column_start":5,"column_end":72}},{"value":"/ In this state, [`FuturesUnordered::poll_next`](Stream::poll_next) will","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5565864,"byte_end":5565938,"line_start":134,"line_end":134,"column_start":5,"column_end":79}},{"value":"/ return [`Poll::Ready(None)`](Poll::Ready).","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5565943,"byte_end":5565989,"line_start":135,"line_end":135,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":8606},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5566999,"byte_end":5567002,"line_start":164,"line_end":164,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesUnordered<Fut>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the set.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5566861,"byte_end":5566916,"line_start":161,"line_end":161,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5566921,"byte_end":5566924,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5566929,"byte_end":5566987,"line_start":163,"line_end":163,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":8607},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5567166,"byte_end":5567174,"line_start":170,"line_end":170,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesUnordered<Fut>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no futures.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no futures.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5567104,"byte_end":5567154,"line_start":169,"line_end":169,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":8608},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5567757,"byte_end":5567761,"line_start":182,"line_end":182,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesUnordered<Fut>>::push","value":"pub fn push(&Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the set.","sig":null,"attributes":[{"value":"/ Push a future into the set.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5567387,"byte_end":5567418,"line_start":176,"line_end":176,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5567423,"byte_end":5567426,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ This method adds the given future to the set. This method will not","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5567431,"byte_end":5567501,"line_start":178,"line_end":178,"column_start":5,"column_end":75}},{"value":"/ call [`poll`](core::future::Future::poll) on the submitted future. The caller must","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5567506,"byte_end":5567592,"line_start":179,"line_end":179,"column_start":5,"column_end":91}},{"value":"/ ensure that [`FuturesUnordered::poll_next`](Stream::poll_next) is called","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5567597,"byte_end":5567673,"line_start":180,"line_end":180,"column_start":5,"column_end":81}},{"value":"/ in order to receive wake-up notifications for the given future.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5567678,"byte_end":5567745,"line_start":181,"line_end":181,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":8609},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5569036,"byte_end":5569040,"line_start":210,"line_end":210,"column_start":12,"column_end":16},"name":"iter","qualname":"<FuturesUnordered<Fut>>::iter","value":"pub fn iter(&Self) -> Iter<, Fut> where Fut: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each future in the set.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5568954,"byte_end":5569024,"line_start":209,"line_end":209,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":8611},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5569584,"byte_end":5569592,"line_start":227,"line_end":227,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<FuturesUnordered<Fut>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, Fut> where Fut: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5569503,"byte_end":5569572,"line_start":226,"line_end":226,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":8612},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5569782,"byte_end":5569794,"line_start":232,"line_end":232,"column_start":12,"column_end":24},"name":"iter_pin_mut","qualname":"<FuturesUnordered<Fut>>::iter_pin_mut","value":"pub fn iter_pin_mut(Pin<&mut Self>) -> IterPinMut<, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5569701,"byte_end":5569770,"line_start":231,"line_end":231,"column_start":5,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":8667},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5598798,"byte_end":5598807,"line_start":26,"line_end":26,"column_start":12,"column_end":21},"name":"SelectAll","qualname":"::stream::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":8669}],"decl_id":null,"docs":" An unbounded set of streams","sig":null,"attributes":[{"value":"/ An unbounded set of streams","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5598174,"byte_end":5598205,"line_start":13,"line_end":13,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5598206,"byte_end":5598209,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This \"combinator\" provides the ability to maintain a set of streams","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5598210,"byte_end":5598281,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ and drive them all to completion.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5598282,"byte_end":5598319,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5598320,"byte_end":5598323,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Streams are pushed into this set and their realized values are","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5598324,"byte_end":5598390,"line_start":18,"line_end":18,"column_start":1,"column_end":67}},{"value":"/ yielded as they become ready. Streams will only be polled when they","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5598391,"byte_end":5598462,"line_start":19,"line_end":19,"column_start":1,"column_end":72}},{"value":"/ generate notifications. This allows to coordinate a large number of streams.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5598463,"byte_end":5598543,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5598544,"byte_end":5598547,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made `SelectAll` via the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5598548,"byte_end":5598609,"line_start":22,"line_end":22,"column_start":1,"column_end":62}},{"value":"/ `select_all` function in the `stream` module, or you can start with an","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5598610,"byte_end":5598684,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ empty set with the `SelectAll::new` constructor.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5598685,"byte_end":5598737,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5598738,"byte_end":5598786,"line_start":25,"line_end":25,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":8675},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5599264,"byte_end":5599267,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<SelectAll<St>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `SelectAll`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `SelectAll`","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5599064,"byte_end":5599103,"line_start":37,"line_end":37,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5599108,"byte_end":5599111,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ The returned `SelectAll` does not contain any streams and, in this","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5599116,"byte_end":5599186,"line_start":39,"line_end":39,"column_start":5,"column_end":75}},{"value":"/ state, `SelectAll::poll` will return `Poll::Ready(None)`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5599191,"byte_end":5599252,"line_start":40,"line_end":40,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":8676},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5599477,"byte_end":5599480,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"len","qualname":"<SelectAll<St>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of streams contained in the set.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5599339,"byte_end":5599394,"line_start":45,"line_end":45,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5599399,"byte_end":5599402,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight streams.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5599407,"byte_end":5599465,"line_start":47,"line_end":47,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":8677},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5599596,"byte_end":5599604,"line_start":53,"line_end":53,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SelectAll<St>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no streams\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no streams","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5599535,"byte_end":5599584,"line_start":52,"line_end":52,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":8678},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5599966,"byte_end":5599970,"line_start":63,"line_end":63,"column_start":12,"column_end":16},"name":"push","qualname":"<SelectAll<St>>::push","value":"pub fn push(&mut Self, St)","parent":null,"children":[],"decl_id":null,"docs":" Push a stream into the set.","sig":null,"attributes":[{"value":"/ Push a stream into the set.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5599663,"byte_end":5599694,"line_start":57,"line_end":57,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5599699,"byte_end":5599702,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ This function submits the given stream to the set for managing. This","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5599707,"byte_end":5599779,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ function will not call `poll` on the submitted stream. The caller must","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5599784,"byte_end":5599858,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"/ ensure that `SelectAll::poll` is called in order to receive task","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5599863,"byte_end":5599931,"line_start":61,"line_end":61,"column_start":5,"column_end":73}},{"value":"/ notifications.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5599936,"byte_end":5599954,"line_start":62,"line_end":62,"column_start":5,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":8689},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5601732,"byte_end":5601742,"line_start":117,"line_end":117,"column_start":8,"column_end":18},"name":"select_all","qualname":"::stream::select_all::select_all","value":"pub fn select_all<I>(I) -> SelectAll<I::Item> where I: IntoIterator,\nI::Item: Stream + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Convert a list of streams into a `Stream` of results from the streams.","sig":null,"attributes":[{"value":"/ Convert a list of streams into a `Stream` of results from the streams.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5601111,"byte_end":5601185,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5601186,"byte_end":5601189,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ This essentially takes a list of streams (e.g. a vector, an iterator, etc.)","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5601190,"byte_end":5601269,"line_start":107,"line_end":107,"column_start":1,"column_end":80}},{"value":"/ and bundles them together into a single stream.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5601270,"byte_end":5601321,"line_start":108,"line_end":108,"column_start":1,"column_end":52}},{"value":"/ The stream will yield items as they become available on the underlying","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5601322,"byte_end":5601396,"line_start":109,"line_end":109,"column_start":1,"column_end":75}},{"value":"/ streams internally, in the order they become available.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5601397,"byte_end":5601456,"line_start":110,"line_end":110,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5601457,"byte_end":5601460,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ Note that the returned set can also be used to dynamically push more","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5601461,"byte_end":5601533,"line_start":112,"line_end":112,"column_start":1,"column_end":73}},{"value":"/ futures into the set as they become available.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5601534,"byte_end":5601584,"line_start":113,"line_end":113,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5601585,"byte_end":5601588,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5601589,"byte_end":5601666,"line_start":115,"line_end":115,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5601667,"byte_end":5601724,"line_start":116,"line_end":116,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":2602},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","parent":null,"children":[{"krate":0,"index":2603},{"krate":0,"index":2604},{"krate":0,"index":2605},{"krate":0,"index":2606},{"krate":0,"index":2607},{"krate":0,"index":2608},{"krate":0,"index":2609},{"krate":0,"index":2610},{"krate":0,"index":2611},{"krate":0,"index":2612},{"krate":0,"index":2613},{"krate":0,"index":2614},{"krate":0,"index":2615},{"krate":0,"index":2616},{"krate":0,"index":8741},{"krate":0,"index":8742},{"krate":0,"index":8743},{"krate":0,"index":8744},{"krate":0,"index":8745},{"krate":0,"index":8746},{"krate":0,"index":2617},{"krate":0,"index":2637},{"krate":0,"index":2638},{"krate":0,"index":2639}],"decl_id":null,"docs":" Tools for working with tasks.","sig":null,"attributes":[{"value":"! Tools for working with tasks.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":340969,"byte_end":341002,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":341003,"byte_end":341006,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains:","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":341007,"byte_end":341032,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":341033,"byte_end":341036,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! - [`Spawn`], a trait for spawning new tasks.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":341037,"byte_end":341085,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"! - [`Context`], a context of an asynchronous task,","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":341086,"byte_end":341139,"line_start":6,"line_end":6,"column_start":1,"column_end":54}},{"value":"!   including a handle for waking up the task.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":341140,"byte_end":341188,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"! - [`Waker`], a handle for waking up a task.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":341189,"byte_end":341236,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":341237,"byte_end":341240,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! The remaining types and traits in the module are used for implementing","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":341241,"byte_end":341315,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"! executors or dealing with synchronization issues around task wakeup.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":341316,"byte_end":341388,"line_start":11,"line_end":11,"column_start":1,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":2631},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":342578,"byte_end":342586,"line_start":20,"line_end":20,"column_start":11,"column_end":19},"name":"SpawnExt","qualname":"::task::spawn::SpawnExt","value":"SpawnExt: Spawn","parent":null,"children":[{"krate":0,"index":2632}],"decl_id":null,"docs":" Extension trait for `Spawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `Spawn`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":342535,"byte_end":342567,"line_start":19,"line_end":19,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2632},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":343583,"byte_end":343588,"line_start":46,"line_end":46,"column_start":8,"column_end":13},"name":"spawn","qualname":"::task::spawn::SpawnExt::spawn","value":"pub fn spawn<Fut>(&Self, Fut) -> Result<(), SpawnError> where\nFut: Future<Output = ()> + Send + 'static","parent":{"krate":0,"index":2631},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":342600,"byte_end":342665,"line_start":21,"line_end":21,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":342670,"byte_end":342685,"line_start":22,"line_end":22,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":342690,"byte_end":342693,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":342698,"byte_end":342768,"line_start":24,"line_end":24,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":342773,"byte_end":342792,"line_start":25,"line_end":25,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":342797,"byte_end":342800,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":342805,"byte_end":342874,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":342879,"byte_end":342952,"line_start":28,"line_end":28,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":342957,"byte_end":342996,"line_start":29,"line_end":29,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":343001,"byte_end":343004,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":343009,"byte_end":343075,"line_start":31,"line_end":31,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":343080,"byte_end":343146,"line_start":32,"line_end":32,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":343151,"byte_end":343222,"line_start":33,"line_end":33,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":343227,"byte_end":343283,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":343288,"byte_end":343291,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":343296,"byte_end":343303,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::ThreadPool;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":343308,"byte_end":343346,"line_start":37,"line_end":37,"column_start":5,"column_end":43}},{"value":"/ use futures::task::SpawnExt;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":343351,"byte_end":343383,"line_start":38,"line_end":38,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":343388,"byte_end":343391,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ let executor = ThreadPool::new().unwrap();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":343396,"byte_end":343442,"line_start":40,"line_end":40,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":343447,"byte_end":343450,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":343455,"byte_end":343492,"line_start":42,"line_end":42,"column_start":5,"column_end":42}},{"value":"/ executor.spawn(future).unwrap();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":343497,"byte_end":343533,"line_start":43,"line_end":43,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":343538,"byte_end":343545,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":343550,"byte_end":343575,"line_start":45,"line_end":45,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":2634},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":345342,"byte_end":345355,"line_start":97,"line_end":97,"column_start":11,"column_end":24},"name":"LocalSpawnExt","qualname":"::task::spawn::LocalSpawnExt","value":"LocalSpawnExt: LocalSpawn","parent":null,"children":[{"krate":0,"index":2635}],"decl_id":null,"docs":" Extension trait for `LocalSpawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `LocalSpawn`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":345294,"byte_end":345331,"line_start":96,"line_end":96,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2635},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":346398,"byte_end":346409,"line_start":124,"line_end":124,"column_start":8,"column_end":19},"name":"spawn_local","qualname":"::task::spawn::LocalSpawnExt::spawn_local","value":"pub fn spawn_local<Fut>(&Self, Fut) -> Result<(), SpawnError> where\nFut: Future<Output = ()> + 'static","parent":{"krate":0,"index":2634},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":345374,"byte_end":345439,"line_start":98,"line_end":98,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":345444,"byte_end":345459,"line_start":99,"line_end":99,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":345464,"byte_end":345467,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":345472,"byte_end":345542,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":345547,"byte_end":345566,"line_start":102,"line_end":102,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":345571,"byte_end":345574,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":345579,"byte_end":345648,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":345653,"byte_end":345726,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":345731,"byte_end":345770,"line_start":106,"line_end":106,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":345775,"byte_end":345778,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":345783,"byte_end":345849,"line_start":108,"line_end":108,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":345854,"byte_end":345920,"line_start":109,"line_end":109,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":345925,"byte_end":345996,"line_start":110,"line_end":110,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":346001,"byte_end":346057,"line_start":111,"line_end":111,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":346062,"byte_end":346065,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":346070,"byte_end":346077,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::LocalPool;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":346082,"byte_end":346119,"line_start":114,"line_end":114,"column_start":5,"column_end":42}},{"value":"/ use futures::task::LocalSpawnExt;","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":346124,"byte_end":346161,"line_start":115,"line_end":115,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":346166,"byte_end":346169,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let executor = LocalPool::new();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":346174,"byte_end":346210,"line_start":117,"line_end":117,"column_start":5,"column_end":41}},{"value":"/ let spawner = executor.spawner();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":346215,"byte_end":346252,"line_start":118,"line_end":118,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":346257,"byte_end":346260,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":346265,"byte_end":346302,"line_start":120,"line_end":120,"column_start":5,"column_end":42}},{"value":"/ spawner.spawn_local(future).unwrap();","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":346307,"byte_end":346348,"line_start":121,"line_end":121,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":346353,"byte_end":346360,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":346365,"byte_end":346390,"line_start":123,"line_end":123,"column_start":5,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":2640},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\never.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"never","qualname":"::never","value":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\never.rs","parent":null,"children":[{"krate":0,"index":2641}],"decl_id":null,"docs":" This module contains the `Never` type.","sig":null,"attributes":[{"value":"! This module contains the `Never` type.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\never.rs","byte_start":347814,"byte_end":347856,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\never.rs","byte_start":347857,"byte_end":347860,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Values of this type can never be created and will never exist.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\never.rs","byte_start":347861,"byte_end":347927,"line_start":3,"line_end":3,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":2641},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\never.rs","byte_start":348564,"byte_end":348569,"line_start":18,"line_end":18,"column_start":10,"column_end":15},"name":"Never","qualname":"::never::Never","value":"core::convert::Infallible","parent":null,"children":[],"decl_id":null,"docs":" A type with no possible values.","sig":null,"attributes":[{"value":"/ A type with no possible values.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\never.rs","byte_start":347929,"byte_end":347964,"line_start":5,"line_end":5,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\never.rs","byte_start":347965,"byte_end":347968,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is used to indicate values which can never be created, such as the","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\never.rs","byte_start":347969,"byte_end":348044,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ error type of infallible futures.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\never.rs","byte_start":348045,"byte_end":348082,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\never.rs","byte_start":348083,"byte_end":348086,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This type is a stable equivalent to the `!` type from `std`.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\never.rs","byte_start":348087,"byte_end":348151,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\never.rs","byte_start":348152,"byte_end":348155,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is currently an alias for [`std::convert::Infallible`], but in","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\never.rs","byte_start":348156,"byte_end":348227,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ the future it may be an alias for [`!`][never].","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\never.rs","byte_start":348228,"byte_end":348279,"line_start":13,"line_end":13,"column_start":1,"column_end":52}},{"value":"/ See [\"Future compatibility\" section of `std::convert::Infallible`][infallible] for more.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\never.rs","byte_start":348280,"byte_end":348372,"line_start":14,"line_end":14,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\never.rs","byte_start":348373,"byte_end":348376,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [never]: https://doc.rust-lang.org/nightly/std/primitive.never.html","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\never.rs","byte_start":348377,"byte_end":348448,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/ [infallible]: https://doc.rust-lang.org/nightly/std/convert/enum.Infallible.html#future-compatibility","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\never.rs","byte_start":348449,"byte_end":348554,"line_start":17,"line_end":17,"column_start":1,"column_end":106}}]},{"kind":"Mod","id":{"krate":0,"index":2642},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lock\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"lock","qualname":"::lock","value":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lock\\mod.rs","parent":null,"children":[],"decl_id":null,"docs":" Futures-powered synchronization primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","byte_start":12273,"byte_end":12298,"line_start":342,"line_end":342,"column_start":1,"column_end":26}},{"value":"! Futures-powered synchronization primitives.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lock\\mod.rs","byte_start":348600,"byte_end":348647,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lock\\mod.rs","byte_start":348648,"byte_end":348651,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lock\\mod.rs","byte_start":348652,"byte_end":348727,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"! library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lock\\mod.rs","byte_start":348728,"byte_end":348785,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":2648},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":349535,"byte_end":349542,"line_start":4,"line_end":4,"column_start":11,"column_end":18},"name":"FnOnce1","qualname":"::fns::FnOnce1","value":"FnOnce1<A>","parent":null,"children":[{"krate":0,"index":2650},{"krate":0,"index":2651}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2650},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":349557,"byte_end":349563,"line_start":5,"line_end":5,"column_start":10,"column_end":16},"name":"Output","qualname":"::fns::FnOnce1::Output","value":"type Output;","parent":{"krate":0,"index":2648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2651},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":349572,"byte_end":349581,"line_start":6,"line_end":6,"column_start":8,"column_end":17},"name":"call_once","qualname":"::fns::FnOnce1::call_once","value":"pub fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":2648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2658},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":349773,"byte_end":349779,"line_start":19,"line_end":19,"column_start":11,"column_end":17},"name":"FnMut1","qualname":"::fns::FnMut1","value":"FnMut1<A>: FnOnce1<A>","parent":null,"children":[{"krate":0,"index":2660}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2660},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":349804,"byte_end":349812,"line_start":20,"line_end":20,"column_start":8,"column_end":16},"name":"call_mut","qualname":"::fns::FnMut1::call_mut","value":"pub fn call_mut(&mut Self, A) -> Self::Output","parent":{"krate":0,"index":2658},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2675},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":351116,"byte_end":351120,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"OkFn","qualname":"::fns::OkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8765},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":351476,"byte_end":351483,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"ChainFn","qualname":"::fns::ChainFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8786},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":352217,"byte_end":352230,"line_start":127,"line_end":127,"column_start":12,"column_end":25},"name":"MergeResultFn","qualname":"::fns::MergeResultFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8802},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":352572,"byte_end":352581,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"InspectFn","qualname":"::fns::InspectFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8817},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":353530,"byte_end":353537,"line_start":179,"line_end":179,"column_start":12,"column_end":19},"name":"MapOkFn","qualname":"::fns::MapOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8832},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":354248,"byte_end":354256,"line_start":211,"line_end":211,"column_start":12,"column_end":20},"name":"MapErrFn","qualname":"::fns::MapErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8847},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":354976,"byte_end":354987,"line_start":243,"line_end":243,"column_start":12,"column_end":23},"name":"InspectOkFn","qualname":"::fns::InspectOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8859},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":355805,"byte_end":355817,"line_start":275,"line_end":275,"column_start":12,"column_end":24},"name":"InspectErrFn","qualname":"::fns::InspectErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8871},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":356898,"byte_end":356912,"line_start":312,"line_end":312,"column_start":12,"column_end":26},"name":"UnwrapOrElseFn","qualname":"::fns::UnwrapOrElseFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2839},"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":357671,"byte_end":357677,"line_start":343,"line_end":343,"column_start":12,"column_end":18},"name":"IntoFn","qualname":"::fns::IntoFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\flatten.rs","byte_start":35943,"byte_end":35950,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\flatten.rs","byte_start":36080,"byte_end":36087,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\flatten.rs","byte_start":36318,"byte_end":36325,"line_start":38,"line_end":38,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\flatten.rs","byte_start":37107,"byte_end":37114,"line_start":62,"line_end":62,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\flatten.rs","byte_start":37345,"byte_end":37352,"line_start":74,"line_end":74,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":40424,"byte_end":40428,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":40535,"byte_end":40539,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":42268,"byte_end":42272,"line_start":74,"line_end":74,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":42385,"byte_end":42389,"line_start":80,"line_end":80,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\map.rs","byte_start":43368,"byte_end":43371,"line_start":25,"line_end":25,"column_start":14,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\map.rs","byte_start":43540,"byte_end":43543,"line_start":32,"line_end":32,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\map.rs","byte_start":43805,"byte_end":43808,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":19169,"byte_end":19170,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\into_future.rs","byte_start":66493,"byte_end":66503,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\into_future.rs","byte_start":66654,"byte_end":66664,"line_start":23,"line_end":23,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\into_future.rs","byte_start":66775,"byte_end":66785,"line_start":27,"line_end":27,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":217},{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\try_flatten.rs","byte_start":67517,"byte_end":67527,"line_start":20,"line_end":20,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\try_flatten.rs","byte_start":67657,"byte_end":67667,"line_start":26,"line_end":26,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\try_flatten.rs","byte_start":67914,"byte_end":67924,"line_start":38,"line_end":38,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":243},{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\try_flatten.rs","byte_start":68946,"byte_end":68956,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\try_flatten.rs","byte_start":69203,"byte_end":69213,"line_start":79,"line_end":79,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":250},{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\try_flatten_err.rs","byte_start":72716,"byte_end":72729,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\try_flatten_err.rs","byte_start":72859,"byte_end":72872,"line_start":23,"line_end":23,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\try_flatten_err.rs","byte_start":73119,"byte_end":73132,"line_start":35,"line_end":35,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":49161,"byte_end":49164,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":74483,"byte_end":74487,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":75060,"byte_end":75064,"line_start":40,"line_end":40,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":75196,"byte_end":75200,"line_start":46,"line_end":46,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":343},{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":75777,"byte_end":75784,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":76335,"byte_end":76342,"line_start":41,"line_end":41,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":364},{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":76487,"byte_end":76494,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":76521,"byte_end":76528,"line_start":52,"line_end":52,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77256,"byte_end":77265,"line_start":23,"line_end":23,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77844,"byte_end":77853,"line_start":46,"line_end":46,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":390},{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":78951,"byte_end":78960,"line_start":78,"line_end":78,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":79161,"byte_end":79170,"line_start":87,"line_end":87,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":397},{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":80464,"byte_end":80476,"line_start":24,"line_end":24,"column_start":40,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":80658,"byte_end":80670,"line_start":31,"line_end":31,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":419},{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":81783,"byte_end":81795,"line_start":63,"line_end":63,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":81999,"byte_end":82011,"line_start":72,"line_end":72,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":426},{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\option.rs","byte_start":83733,"byte_end":83745,"line_start":34,"line_end":34,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":442},{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\option.rs","byte_start":84082,"byte_end":84094,"line_start":48,"line_end":48,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\option.rs","byte_start":84281,"byte_end":84293,"line_start":57,"line_end":57,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":84705,"byte_end":84711,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":85381,"byte_end":85387,"line_start":42,"line_end":42,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":85529,"byte_end":85535,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":472},{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86012,"byte_end":86017,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":487}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86196,"byte_end":86201,"line_start":18,"line_end":18,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86233,"byte_end":86238,"line_start":20,"line_end":20,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86335,"byte_end":86340,"line_start":26,"line_end":26,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":495},{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join_all.rs","byte_start":93654,"byte_end":93661,"line_start":33,"line_end":33,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":573}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join_all.rs","byte_start":95424,"byte_end":95431,"line_start":91,"line_end":91,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":578},{"krate":0,"index":579}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join_all.rs","byte_start":96128,"byte_end":96135,"line_start":118,"line_end":118,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":583}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":96605,"byte_end":96611,"line_start":13,"line_end":13,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":98853,"byte_end":98859,"line_start":81,"line_end":81,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":608},{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":99562,"byte_end":99568,"line_start":103,"line_end":103,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":613}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select_all.rs","byte_start":100105,"byte_end":100114,"line_start":16,"line_end":16,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select_all.rs","byte_start":101094,"byte_end":101103,"line_start":44,"line_end":44,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":633},{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select_all.rs","byte_start":101809,"byte_end":101818,"line_start":65,"line_end":65,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":638}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join_all.rs","byte_start":110055,"byte_end":110065,"line_start":39,"line_end":39,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":716}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join_all.rs","byte_start":111827,"byte_end":111837,"line_start":101,"line_end":101,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":721},{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join_all.rs","byte_start":113010,"byte_end":113020,"line_start":138,"line_end":138,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":726}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":113502,"byte_end":113511,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":115217,"byte_end":115226,"line_start":56,"line_end":56,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":751},{"krate":0,"index":752}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select_ok.rs","byte_start":116579,"byte_end":116587,"line_start":16,"line_end":16,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select_ok.rs","byte_start":117557,"byte_end":117565,"line_start":42,"line_end":42,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":774},{"krate":0,"index":775}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select_ok.rs","byte_start":119009,"byte_end":119017,"line_start":79,"line_end":79,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":779}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":119617,"byte_end":119623,"line_start":18,"line_end":18,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":798}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":119962,"byte_end":119968,"line_start":29,"line_end":29,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":803}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":120353,"byte_end":120359,"line_start":41,"line_end":41,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":808}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":120740,"byte_end":120746,"line_start":53,"line_end":53,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":811}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":120987,"byte_end":120993,"line_start":63,"line_end":63,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":815},{"krate":0,"index":816}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":121332,"byte_end":121338,"line_start":78,"line_end":78,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":820}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":121614,"byte_end":121620,"line_start":91,"line_end":91,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":824},{"krate":0,"index":825}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":121972,"byte_end":121978,"line_start":106,"line_end":106,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":829}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5528409,"byte_end":5528418,"line_start":21,"line_end":21,"column_start":11,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5257}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5529715,"byte_end":5529726,"line_start":63,"line_end":63,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5259}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5531595,"byte_end":5531602,"line_start":127,"line_end":127,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5263}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5531818,"byte_end":5531827,"line_start":136,"line_end":136,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5266},{"krate":0,"index":5267}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5532801,"byte_end":5532812,"line_start":165,"line_end":165,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5269}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\chain.rs","byte_start":181130,"byte_end":181135,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":878}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\chain.rs","byte_start":181392,"byte_end":181397,"line_start":32,"line_end":32,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\chain.rs","byte_start":181602,"byte_end":181607,"line_start":41,"line_end":41,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\collect.rs","byte_start":183220,"byte_end":183227,"line_start":20,"line_end":20,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":907},{"krate":0,"index":908}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\collect.rs","byte_start":183525,"byte_end":183532,"line_start":33,"line_end":33,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":912}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\collect.rs","byte_start":183708,"byte_end":183715,"line_start":42,"line_end":42,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":916},{"krate":0,"index":917}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\unzip.rs","byte_start":184739,"byte_end":184744,"line_start":21,"line_end":21,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":937},{"krate":0,"index":938}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\unzip.rs","byte_start":185218,"byte_end":185223,"line_start":39,"line_end":39,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":945}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\unzip.rs","byte_start":185473,"byte_end":185478,"line_start":49,"line_end":49,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":952},{"krate":0,"index":953}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\concat.rs","byte_start":186604,"byte_end":186610,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":970}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\concat.rs","byte_start":186877,"byte_end":186883,"line_start":32,"line_end":32,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":973},{"krate":0,"index":974}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\concat.rs","byte_start":187658,"byte_end":187664,"line_start":61,"line_end":61,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":977}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\cycle.rs","byte_start":188341,"byte_end":188346,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":992}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\cycle.rs","byte_start":188535,"byte_end":188540,"line_start":31,"line_end":31,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":997}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\cycle.rs","byte_start":189289,"byte_end":189294,"line_start":59,"line_end":59,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1000}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\enumerate.rs","byte_start":190042,"byte_end":190051,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1014},{"krate":0,"index":5584},{"krate":0,"index":5585},{"krate":0,"index":5586},{"krate":0,"index":5587}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\enumerate.rs","byte_start":190270,"byte_end":190279,"line_start":31,"line_end":31,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1017}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\enumerate.rs","byte_start":190397,"byte_end":190406,"line_start":37,"line_end":37,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1022}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\filter.rs","byte_start":191870,"byte_end":191876,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1041}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\filter.rs","byte_start":192349,"byte_end":192355,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1047},{"krate":0,"index":5649},{"krate":0,"index":5650},{"krate":0,"index":5651},{"krate":0,"index":5652}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\filter.rs","byte_start":192733,"byte_end":192739,"line_start":60,"line_end":60,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1052}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\filter.rs","byte_start":193088,"byte_end":193094,"line_start":71,"line_end":71,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1060}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\filter_map.rs","byte_start":195311,"byte_end":195320,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1079}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\filter_map.rs","byte_start":195617,"byte_end":195626,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1084},{"krate":0,"index":5710},{"krate":0,"index":5711},{"krate":0,"index":5712},{"krate":0,"index":5713}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\filter_map.rs","byte_start":195905,"byte_end":195914,"line_start":49,"line_end":49,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1090}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\filter_map.rs","byte_start":196191,"byte_end":196200,"line_start":59,"line_end":59,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1096},{"krate":0,"index":1097},{"krate":0,"index":1098}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\flatten.rs","byte_start":198345,"byte_end":198352,"line_start":21,"line_end":21,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1113},{"krate":0,"index":5763},{"krate":0,"index":5764},{"krate":0,"index":5765},{"krate":0,"index":5766}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\flatten.rs","byte_start":198521,"byte_end":198528,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1116}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\flatten.rs","byte_start":198720,"byte_end":198727,"line_start":39,"line_end":39,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1119},{"krate":0,"index":1120}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\fold.rs","byte_start":200241,"byte_end":200245,"line_start":22,"line_end":22,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1138}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\fold.rs","byte_start":200601,"byte_end":200605,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1144}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\fold.rs","byte_start":200923,"byte_end":200927,"line_start":52,"line_end":52,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1150}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\fold.rs","byte_start":201174,"byte_end":201178,"line_start":62,"line_end":62,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1156},{"krate":0,"index":1157}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\for_each.rs","byte_start":202779,"byte_end":202786,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1177}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\for_each.rs","byte_start":203079,"byte_end":203086,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1182}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\for_each.rs","byte_start":203362,"byte_end":203369,"line_start":48,"line_end":48,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1187}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\for_each.rs","byte_start":203620,"byte_end":203627,"line_start":58,"line_end":58,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1192},{"krate":0,"index":1193}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\fuse.rs","byte_start":204740,"byte_end":204744,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1207},{"krate":0,"index":1208},{"krate":0,"index":5988},{"krate":0,"index":5989},{"krate":0,"index":5990},{"krate":0,"index":5991}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\fuse.rs","byte_start":205241,"byte_end":205245,"line_start":37,"line_end":37,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1211}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\fuse.rs","byte_start":205343,"byte_end":205347,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1216}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":206572,"byte_end":206584,"line_start":15,"line_end":15,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1231},{"krate":0,"index":1232},{"krate":0,"index":1233},{"krate":0,"index":1234},{"krate":0,"index":1235}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":209074,"byte_end":209086,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1238}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":209206,"byte_end":209218,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1241},{"krate":0,"index":1242}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\map.rs","byte_start":210126,"byte_end":210129,"line_start":22,"line_end":22,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1259}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\map.rs","byte_start":210344,"byte_end":210347,"line_start":33,"line_end":33,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1263},{"krate":0,"index":6112},{"krate":0,"index":6113},{"krate":0,"index":6114},{"krate":0,"index":6115}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\map.rs","byte_start":210516,"byte_end":210519,"line_start":41,"line_end":41,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1267}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\map.rs","byte_start":210693,"byte_end":210696,"line_start":50,"line_end":50,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1271},{"krate":0,"index":1272},{"krate":0,"index":1274}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\next.rs","byte_start":211843,"byte_end":211847,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\next.rs","byte_start":211898,"byte_end":211902,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1293}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\next.rs","byte_start":212053,"byte_end":212057,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1296}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\next.rs","byte_start":212196,"byte_end":212200,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1299},{"krate":0,"index":1300}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\select_next_some.rs","byte_start":212874,"byte_end":212888,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1316}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\select_next_some.rs","byte_start":213039,"byte_end":213053,"line_start":22,"line_end":22,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":1319}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\select_next_some.rs","byte_start":213197,"byte_end":213211,"line_start":28,"line_end":28,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1322},{"krate":0,"index":1323}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\peek.rs","byte_start":214466,"byte_end":214474,"line_start":27,"line_end":27,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1344},{"krate":0,"index":6255},{"krate":0,"index":6256},{"krate":0,"index":6257},{"krate":0,"index":6258},{"krate":0,"index":1345},{"krate":0,"index":1346}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\peek.rs","byte_start":215651,"byte_end":215659,"line_start":65,"line_end":65,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1349}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\peek.rs","byte_start":215801,"byte_end":215809,"line_start":71,"line_end":71,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1352},{"krate":0,"index":1353},{"krate":0,"index":1354}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\peek.rs","byte_start":216989,"byte_end":216993,"line_start":113,"line_end":113,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1357}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\peek.rs","byte_start":217264,"byte_end":217268,"line_start":125,"line_end":125,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1360}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\peek.rs","byte_start":217379,"byte_end":217383,"line_start":131,"line_end":131,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1364},{"krate":0,"index":1365}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\skip.rs","byte_start":218293,"byte_end":218297,"line_start":20,"line_end":20,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1381},{"krate":0,"index":6340},{"krate":0,"index":6341},{"krate":0,"index":6342},{"krate":0,"index":6343}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\skip.rs","byte_start":218521,"byte_end":218525,"line_start":31,"line_end":31,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1384}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\skip.rs","byte_start":218643,"byte_end":218647,"line_start":37,"line_end":37,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1387},{"krate":0,"index":1388},{"krate":0,"index":1389}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\skip_while.rs","byte_start":220350,"byte_end":220359,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1407}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\skip_while.rs","byte_start":220811,"byte_end":220820,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1412},{"krate":0,"index":6409},{"krate":0,"index":6410},{"krate":0,"index":6411},{"krate":0,"index":6412}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\skip_while.rs","byte_start":221227,"byte_end":221236,"line_start":59,"line_end":59,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1417}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\skip_while.rs","byte_start":221496,"byte_end":221505,"line_start":69,"line_end":69,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1422},{"krate":0,"index":1423},{"krate":0,"index":1424}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take.rs","byte_start":223852,"byte_end":223856,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1439},{"krate":0,"index":6453},{"krate":0,"index":6454},{"krate":0,"index":6455},{"krate":0,"index":6456}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take.rs","byte_start":224062,"byte_end":224066,"line_start":32,"line_end":32,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1442},{"krate":0,"index":1443},{"krate":0,"index":1444}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take.rs","byte_start":225060,"byte_end":225064,"line_start":73,"line_end":73,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1447}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_while.rs","byte_start":226087,"byte_end":226096,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1465}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_while.rs","byte_start":226544,"byte_end":226553,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1470},{"krate":0,"index":6522},{"krate":0,"index":6523},{"krate":0,"index":6524},{"krate":0,"index":6525}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_while.rs","byte_start":226953,"byte_end":226962,"line_start":59,"line_end":59,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1475},{"krate":0,"index":1476},{"krate":0,"index":1477}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_while.rs","byte_start":228516,"byte_end":228525,"line_start":111,"line_end":111,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1482}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":229921,"byte_end":229930,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1499}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":230257,"byte_end":230266,"line_start":44,"line_end":44,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1503},{"krate":0,"index":6579},{"krate":0,"index":6580},{"krate":0,"index":6581},{"krate":0,"index":6582},{"krate":0,"index":1504},{"krate":0,"index":1505},{"krate":0,"index":1506}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":232440,"byte_end":232449,"line_start":119,"line_end":119,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1510},{"krate":0,"index":1511},{"krate":0,"index":1512}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":233481,"byte_end":233490,"line_start":158,"line_end":158,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1516}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\then.rs","byte_start":234432,"byte_end":234436,"line_start":23,"line_end":23,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1534}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\then.rs","byte_start":234726,"byte_end":234730,"line_start":36,"line_end":36,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1539},{"krate":0,"index":6640},{"krate":0,"index":6641},{"krate":0,"index":6642},{"krate":0,"index":6643}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\then.rs","byte_start":235027,"byte_end":235031,"line_start":51,"line_end":51,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1544}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\then.rs","byte_start":235269,"byte_end":235273,"line_start":61,"line_end":61,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1549},{"krate":0,"index":1550},{"krate":0,"index":1551}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":237190,"byte_end":237193,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1569},{"krate":0,"index":1570},{"krate":0,"index":1571},{"krate":0,"index":1572},{"krate":0,"index":1573}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":238836,"byte_end":238839,"line_start":66,"line_end":66,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1577}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":239030,"byte_end":239033,"line_start":74,"line_end":74,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1581},{"krate":0,"index":1582},{"krate":0,"index":1583}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\chunks.rs","byte_start":241745,"byte_end":241751,"line_start":24,"line_end":24,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1600},{"krate":0,"index":1601},{"krate":0,"index":6745},{"krate":0,"index":6746},{"krate":0,"index":6747},{"krate":0,"index":6748}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\chunks.rs","byte_start":242254,"byte_end":242260,"line_start":43,"line_end":43,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1604},{"krate":0,"index":1605},{"krate":0,"index":1606}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\chunks.rs","byte_start":243898,"byte_end":243904,"line_start":91,"line_end":91,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1609}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\ready_chunks.rs","byte_start":244876,"byte_end":244887,"line_start":23,"line_end":23,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1625},{"krate":0,"index":6793},{"krate":0,"index":6794},{"krate":0,"index":6795},{"krate":0,"index":6796}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\ready_chunks.rs","byte_start":245234,"byte_end":245245,"line_start":37,"line_end":37,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1628},{"krate":0,"index":1629},{"krate":0,"index":1630}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\ready_chunks.rs","byte_start":247353,"byte_end":247364,"line_start":96,"line_end":96,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1633}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\scan.rs","byte_start":248362,"byte_end":248366,"line_start":28,"line_end":28,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1657}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\scan.rs","byte_start":248852,"byte_end":248856,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1664}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\scan.rs","byte_start":249020,"byte_end":249024,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1671},{"krate":0,"index":6862},{"krate":0,"index":6863},{"krate":0,"index":6864},{"krate":0,"index":6865}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\scan.rs","byte_start":249476,"byte_end":249480,"line_start":72,"line_end":72,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1678},{"krate":0,"index":1679},{"krate":0,"index":1680}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\scan.rs","byte_start":250707,"byte_end":250711,"line_start":115,"line_end":115,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1687}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\buffer_unordered.rs","byte_start":5533982,"byte_end":5533997,"line_start":26,"line_end":26,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":6883}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\buffer_unordered.rs","byte_start":5534329,"byte_end":5534344,"line_start":39,"line_end":39,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6886},{"krate":0,"index":6960},{"krate":0,"index":6961},{"krate":0,"index":6962},{"krate":0,"index":6963}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\buffer_unordered.rs","byte_start":5534731,"byte_end":5534746,"line_start":59,"line_end":59,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6889},{"krate":0,"index":6890},{"krate":0,"index":6891}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\buffer_unordered.rs","byte_start":5536223,"byte_end":5536238,"line_start":107,"line_end":107,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6894}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\buffered.rs","byte_start":5537348,"byte_end":5537356,"line_start":27,"line_end":27,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6912}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\buffered.rs","byte_start":5537703,"byte_end":5537711,"line_start":41,"line_end":41,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":6915},{"krate":0,"index":6964},{"krate":0,"index":6965},{"krate":0,"index":6966},{"krate":0,"index":6967}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\buffered.rs","byte_start":5538036,"byte_end":5538044,"line_start":57,"line_end":57,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6918},{"krate":0,"index":6919},{"krate":0,"index":6920}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\for_each_concurrent.rs","byte_start":5540403,"byte_end":5540420,"line_start":23,"line_end":23,"column_start":33,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":6941}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\for_each_concurrent.rs","byte_start":5540766,"byte_end":5540783,"line_start":37,"line_end":37,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6946}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\for_each_concurrent.rs","byte_start":5541216,"byte_end":5541233,"line_start":53,"line_end":53,"column_start":34,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6951}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\for_each_concurrent.rs","byte_start":5541475,"byte_end":5541492,"line_start":63,"line_end":63,"column_start":29,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6956},{"krate":0,"index":6957}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":136870,"byte_end":136871,"line_start":206,"line_end":206,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\and_then.rs","byte_start":287919,"byte_end":287926,"line_start":23,"line_end":23,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1848}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\and_then.rs","byte_start":288219,"byte_end":288226,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1853},{"krate":0,"index":7025},{"krate":0,"index":7026},{"krate":0,"index":7027},{"krate":0,"index":7028}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\and_then.rs","byte_start":288519,"byte_end":288526,"line_start":48,"line_end":48,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1858},{"krate":0,"index":1859},{"krate":0,"index":1860}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\and_then.rs","byte_start":289704,"byte_end":289711,"line_start":86,"line_end":86,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1865}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\into_stream.rs","byte_start":290641,"byte_end":290651,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1879},{"krate":0,"index":7272},{"krate":0,"index":7273},{"krate":0,"index":7274},{"krate":0,"index":7275}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\into_stream.rs","byte_start":290844,"byte_end":290854,"line_start":27,"line_end":27,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1882}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\into_stream.rs","byte_start":290975,"byte_end":290985,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1885},{"krate":0,"index":1886},{"krate":0,"index":1887}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\or_else.rs","byte_start":292107,"byte_end":292113,"line_start":23,"line_end":23,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1906}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\or_else.rs","byte_start":292405,"byte_end":292411,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1911},{"krate":0,"index":7471},{"krate":0,"index":7472},{"krate":0,"index":7473},{"krate":0,"index":7474}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\or_else.rs","byte_start":292701,"byte_end":292707,"line_start":48,"line_end":48,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1916},{"krate":0,"index":1917},{"krate":0,"index":1918}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\or_else.rs","byte_start":294020,"byte_end":294026,"line_start":90,"line_end":90,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1923}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_next.rs","byte_start":294942,"byte_end":294949,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_next.rs","byte_start":295003,"byte_end":295010,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1942}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_next.rs","byte_start":295173,"byte_end":295180,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":1945}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_next.rs","byte_start":295322,"byte_end":295329,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1948},{"krate":0,"index":1949}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_for_each.rs","byte_start":296128,"byte_end":296138,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1967}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_for_each.rs","byte_start":296434,"byte_end":296444,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1972}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_for_each.rs","byte_start":296734,"byte_end":296744,"line_start":48,"line_end":48,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1977},{"krate":0,"index":1978}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_filter.rs","byte_start":298155,"byte_end":298164,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1997}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_filter.rs","byte_start":298560,"byte_end":298569,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2002},{"krate":0,"index":7601},{"krate":0,"index":7602},{"krate":0,"index":7603},{"krate":0,"index":7604}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_filter.rs","byte_start":298868,"byte_end":298877,"line_start":57,"line_end":57,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2007}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_filter.rs","byte_start":299146,"byte_end":299155,"line_start":67,"line_end":67,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2012},{"krate":0,"index":2013},{"krate":0,"index":2014}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":301333,"byte_end":301345,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2034}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":301645,"byte_end":301657,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2039},{"krate":0,"index":7662},{"krate":0,"index":7663},{"krate":0,"index":7664},{"krate":0,"index":7665}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":301854,"byte_end":301866,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2045}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":302156,"byte_end":302168,"line_start":55,"line_end":55,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2051},{"krate":0,"index":2052},{"krate":0,"index":2053}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_flatten.rs","byte_start":304387,"byte_end":304397,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2068},{"krate":0,"index":7706},{"krate":0,"index":7707},{"krate":0,"index":7708},{"krate":0,"index":7709}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_flatten.rs","byte_start":304662,"byte_end":304672,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2071}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_flatten.rs","byte_start":304918,"byte_end":304928,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2074},{"krate":0,"index":2075}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_collect.rs","byte_start":306537,"byte_end":306547,"line_start":20,"line_end":20,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2094}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_collect.rs","byte_start":306720,"byte_end":306730,"line_start":29,"line_end":29,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2098}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_collect.rs","byte_start":306918,"byte_end":306928,"line_start":39,"line_end":39,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2102},{"krate":0,"index":2103}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_concat.rs","byte_start":307949,"byte_end":307958,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2116}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_concat.rs","byte_start":308210,"byte_end":308219,"line_start":32,"line_end":32,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2119},{"krate":0,"index":2120}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_fold.rs","byte_start":309482,"byte_end":309489,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2140}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_fold.rs","byte_start":309848,"byte_end":309855,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2146}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_fold.rs","byte_start":310192,"byte_end":310199,"line_start":52,"line_end":52,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2152}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_fold.rs","byte_start":310465,"byte_end":310472,"line_start":62,"line_end":62,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2158},{"krate":0,"index":2159}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":314304,"byte_end":314313,"line_start":81,"line_end":81,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2180}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":314614,"byte_end":314623,"line_start":94,"line_end":94,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2186},{"krate":0,"index":2187}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":316392,"byte_end":316404,"line_start":26,"line_end":26,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2208}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":316860,"byte_end":316872,"line_start":42,"line_end":42,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2213},{"krate":0,"index":7990},{"krate":0,"index":7991},{"krate":0,"index":7992},{"krate":0,"index":7993}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":317293,"byte_end":317305,"line_start":60,"line_end":60,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2218},{"krate":0,"index":2219},{"krate":0,"index":2220}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":318839,"byte_end":318851,"line_start":107,"line_end":107,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2225}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_take_while.rs","byte_start":320091,"byte_end":320103,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2244}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_take_while.rs","byte_start":320555,"byte_end":320567,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2249},{"krate":0,"index":8059},{"krate":0,"index":8060},{"krate":0,"index":8061},{"krate":0,"index":8062}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_take_while.rs","byte_start":320974,"byte_end":320986,"line_start":64,"line_end":64,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2254},{"krate":0,"index":2255},{"krate":0,"index":2256}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_take_while.rs","byte_start":322593,"byte_end":322605,"line_start":115,"line_end":115,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2261}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_buffer_unordered.rs","byte_start":5544103,"byte_end":5544121,"line_start":26,"line_end":26,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8083},{"krate":0,"index":8154},{"krate":0,"index":8155},{"krate":0,"index":8156},{"krate":0,"index":8157}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_buffer_unordered.rs","byte_start":5544466,"byte_end":5544484,"line_start":41,"line_end":41,"column_start":21,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":8086},{"krate":0,"index":8087}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_buffered.rs","byte_start":5546725,"byte_end":5546736,"line_start":27,"line_end":27,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":8109},{"krate":0,"index":8158},{"krate":0,"index":8159},{"krate":0,"index":8160},{"krate":0,"index":8161}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_buffered.rs","byte_start":5547073,"byte_end":5547084,"line_start":43,"line_end":43,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":8112},{"krate":0,"index":8113}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_for_each_concurrent.rs","byte_start":5549265,"byte_end":5549285,"line_start":25,"line_end":25,"column_start":33,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":8135}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_for_each_concurrent.rs","byte_start":5549650,"byte_end":5549670,"line_start":39,"line_end":39,"column_start":34,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":8140}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_for_each_concurrent.rs","byte_start":5549921,"byte_end":5549941,"line_start":49,"line_end":49,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":8145}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_for_each_concurrent.rs","byte_start":5550389,"byte_end":5550409,"line_start":65,"line_end":65,"column_start":29,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":8150},{"krate":0,"index":8151}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":256115,"byte_end":256116,"line_start":141,"line_end":141,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\iter.rs","byte_start":323386,"byte_end":323390,"line_start":12,"line_end":12,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\iter.rs","byte_start":323996,"byte_end":324000,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2357},{"krate":0,"index":2358},{"krate":0,"index":2359}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat.rs","byte_start":325141,"byte_end":325147,"line_start":32,"line_end":32,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat.rs","byte_start":325174,"byte_end":325180,"line_start":34,"line_end":34,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2377},{"krate":0,"index":2378},{"krate":0,"index":2379}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat.rs","byte_start":325487,"byte_end":325493,"line_start":48,"line_end":48,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2382}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":326064,"byte_end":326074,"line_start":16,"line_end":16,"column_start":36,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":326118,"byte_end":326128,"line_start":18,"line_end":18,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2400},{"krate":0,"index":2401},{"krate":0,"index":2402}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":326442,"byte_end":326452,"line_start":30,"line_end":30,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2406}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\empty.rs","byte_start":328911,"byte_end":328916,"line_start":22,"line_end":22,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\empty.rs","byte_start":328948,"byte_end":328953,"line_start":24,"line_end":24,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2428}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\empty.rs","byte_start":329038,"byte_end":329043,"line_start":30,"line_end":30,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2431},{"krate":0,"index":2432},{"krate":0,"index":2433}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\empty.rs","byte_start":329292,"byte_end":329297,"line_start":42,"line_end":42,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2436}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\once.rs","byte_start":330177,"byte_end":330181,"line_start":33,"line_end":33,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2455}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\once.rs","byte_start":330310,"byte_end":330314,"line_start":39,"line_end":39,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2458},{"krate":0,"index":2459},{"krate":0,"index":2460}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\once.rs","byte_start":330919,"byte_end":330923,"line_start":62,"line_end":62,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2463}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\pending.rs","byte_start":331533,"byte_end":331540,"line_start":20,"line_end":20,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\pending.rs","byte_start":331572,"byte_end":331579,"line_start":22,"line_end":22,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2482}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\pending.rs","byte_start":331664,"byte_end":331671,"line_start":28,"line_end":28,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2485},{"krate":0,"index":2486},{"krate":0,"index":2487}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\pending.rs","byte_start":331916,"byte_end":331923,"line_start":40,"line_end":40,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2490}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":332284,"byte_end":332290,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":332321,"byte_end":332327,"line_start":16,"line_end":16,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2508}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":333069,"byte_end":333075,"line_start":47,"line_end":47,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2515},{"krate":0,"index":2516}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":334477,"byte_end":334483,"line_start":41,"line_end":41,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2538},{"krate":0,"index":2539},{"krate":0,"index":2540},{"krate":0,"index":2541}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":335906,"byte_end":335912,"line_start":76,"line_end":76,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2545}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":336130,"byte_end":336136,"line_start":85,"line_end":85,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2549},{"krate":0,"index":2550}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":339494,"byte_end":339500,"line_start":70,"line_end":70,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2579}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":339766,"byte_end":339772,"line_start":82,"line_end":82,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2585}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":340052,"byte_end":340058,"line_start":96,"line_end":96,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2591},{"krate":0,"index":2592}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5553564,"byte_end":5553576,"line_start":26,"line_end":26,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8367}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5553681,"byte_end":5553693,"line_start":32,"line_end":32,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5553724,"byte_end":5553736,"line_start":34,"line_end":34,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8372}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5553859,"byte_end":5553871,"line_start":40,"line_end":40,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":8375}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5554052,"byte_end":5554064,"line_start":47,"line_end":47,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":8378},{"krate":0,"index":8379}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5556679,"byte_end":5556693,"line_start":105,"line_end":105,"column_start":27,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5556719,"byte_end":5556733,"line_start":107,"line_end":107,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8391},{"krate":0,"index":8392},{"krate":0,"index":8393},{"krate":0,"index":8394}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5558332,"byte_end":5558346,"line_start":151,"line_end":151,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":8397}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5558439,"byte_end":5558453,"line_start":157,"line_end":157,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":8400},{"krate":0,"index":8401},{"krate":0,"index":8402}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5559615,"byte_end":5559629,"line_start":192,"line_end":192,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":8405}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5559795,"byte_end":5559809,"line_start":198,"line_end":198,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":8408}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5560089,"byte_end":5560103,"line_start":211,"line_end":211,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":8413}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5560273,"byte_end":5560287,"line_start":217,"line_end":217,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":8416}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\abort.rs","byte_start":5586389,"byte_end":5586400,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":8460}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\iter.rs","byte_start":5587572,"byte_end":5587582,"line_start":32,"line_end":32,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":8470},{"krate":0,"index":8471},{"krate":0,"index":8472}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\iter.rs","byte_start":5588439,"byte_end":5588449,"line_start":58,"line_end":58,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\iter.rs","byte_start":5588497,"byte_end":5588504,"line_start":60,"line_end":60,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":8478},{"krate":0,"index":8479},{"krate":0,"index":8480}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\iter.rs","byte_start":5588768,"byte_end":5588775,"line_start":72,"line_end":72,"column_start":40,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\iter.rs","byte_start":5588816,"byte_end":5588826,"line_start":74,"line_end":74,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":8486},{"krate":0,"index":8487},{"krate":0,"index":8488}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\iter.rs","byte_start":5589743,"byte_end":5589753,"line_start":103,"line_end":103,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\iter.rs","byte_start":5589801,"byte_end":5589805,"line_start":105,"line_end":105,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":8494},{"krate":0,"index":8495},{"krate":0,"index":8496}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\iter.rs","byte_start":5590061,"byte_end":5590065,"line_start":117,"line_end":117,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\task.rs","byte_start":5591554,"byte_end":5591558,"line_start":41,"line_end":41,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\task.rs","byte_start":5591593,"byte_end":5591597,"line_start":42,"line_end":42,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\task.rs","byte_start":5591629,"byte_end":5591633,"line_start":44,"line_end":44,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8536}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\task.rs","byte_start":5592710,"byte_end":5592714,"line_start":71,"line_end":71,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":8539},{"krate":0,"index":8540}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\task.rs","byte_start":5593714,"byte_end":5593718,"line_start":102,"line_end":102,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":8543}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\ready_to_run_queue.rs","byte_start":5595168,"byte_end":5595183,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8575},{"krate":0,"index":8576},{"krate":0,"index":8577}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\ready_to_run_queue.rs","byte_start":5597033,"byte_end":5597048,"line_start":90,"line_end":90,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8580}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5563521,"byte_end":5563537,"line_start":77,"line_end":77,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5563578,"byte_end":5563594,"line_start":78,"line_end":78,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5563623,"byte_end":5563639,"line_start":79,"line_end":79,"column_start":21,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5563664,"byte_end":5563680,"line_start":81,"line_end":81,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":8597}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5563877,"byte_end":5563893,"line_start":90,"line_end":90,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":8599}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5565612,"byte_end":5565628,"line_start":124,"line_end":124,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":8602}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5565702,"byte_end":5565718,"line_start":130,"line_end":130,"column_start":11,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8605},{"krate":0,"index":8606},{"krate":0,"index":8607},{"krate":0,"index":8608},{"krate":0,"index":8609},{"krate":0,"index":8610},{"krate":0,"index":8611},{"krate":0,"index":8612},{"krate":0,"index":8613},{"krate":0,"index":8614},{"krate":0,"index":8615},{"krate":0,"index":8616},{"krate":0,"index":8617}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5577349,"byte_end":5577365,"line_start":411,"line_end":411,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":8620},{"krate":0,"index":8621},{"krate":0,"index":8630}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5581762,"byte_end":5581766,"line_start":511,"line_end":511,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8629}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5584104,"byte_end":5584120,"line_start":573,"line_end":573,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":8633}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5584267,"byte_end":5584283,"line_start":579,"line_end":579,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8636}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5585723,"byte_end":5585739,"line_start":608,"line_end":608,"column_start":33,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":8639}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5585983,"byte_end":5585999,"line_start":618,"line_end":618,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":8644}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5586121,"byte_end":5586137,"line_start":624,"line_end":624,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":8647}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5598890,"byte_end":5598899,"line_start":30,"line_end":30,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8672}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5599044,"byte_end":5599053,"line_start":36,"line_end":36,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8675},{"krate":0,"index":8676},{"krate":0,"index":8677},{"krate":0,"index":8678}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5600089,"byte_end":5600098,"line_start":68,"line_end":68,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":8681}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5600197,"byte_end":5600206,"line_start":74,"line_end":74,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":8684},{"krate":0,"index":8685}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5601013,"byte_end":5601022,"line_start":99,"line_end":99,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":8688}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5601998,"byte_end":5602007,"line_start":130,"line_end":130,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":8693}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5602152,"byte_end":5602161,"line_start":136,"line_end":136,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":8697}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":342450,"byte_end":342452,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":342507,"byte_end":342509,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":349645,"byte_end":349646,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2656},{"krate":0,"index":2657}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":349880,"byte_end":349881,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2665}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":350150,"byte_end":350151,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2673}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":351166,"byte_end":351170,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2681}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":351264,"byte_end":351268,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2685},{"krate":0,"index":2686}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":351527,"byte_end":351534,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2691},{"krate":0,"index":2692}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":351757,"byte_end":351764,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2697}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":351955,"byte_end":351962,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2702}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":352267,"byte_end":352280,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2708},{"krate":0,"index":2709}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":352697,"byte_end":352706,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2714},{"krate":0,"index":2715}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":352988,"byte_end":352997,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2720}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":353257,"byte_end":353266,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2725}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":353586,"byte_end":353593,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2732},{"krate":0,"index":2733}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":353812,"byte_end":353819,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2739}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":353997,"byte_end":354004,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2745}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":354305,"byte_end":354313,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2753},{"krate":0,"index":2754}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":354536,"byte_end":354544,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2760}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":354726,"byte_end":354734,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2766}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":355044,"byte_end":355055,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2775},{"krate":0,"index":2776}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":355292,"byte_end":355303,"line_start":254,"line_end":254,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2782}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":355518,"byte_end":355529,"line_start":262,"line_end":262,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2788}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":355874,"byte_end":355886,"line_start":277,"line_end":277,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2796},{"krate":0,"index":2797}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":356124,"byte_end":356136,"line_start":286,"line_end":286,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2803}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":356352,"byte_end":356364,"line_start":294,"line_end":294,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2809}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":356961,"byte_end":356975,"line_start":314,"line_end":314,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2822},{"krate":0,"index":2823}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":357196,"byte_end":357210,"line_start":323,"line_end":323,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2829}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":357409,"byte_end":357423,"line_start":331,"line_end":331,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2835}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":357727,"byte_end":357733,"line_start":345,"line_end":345,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2845}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":357826,"byte_end":357832,"line_start":350,"line_end":350,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2849},{"krate":0,"index":2850}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Inherent","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\unfold_state.rs","byte_start":358432,"byte_end":358443,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2857},{"krate":0,"index":2858}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","byte_start":11585,"byte_end":11591,"line_start":310,"line_end":310,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":12}},{"kind":"Mod","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","byte_start":11667,"byte_end":11673,"line_start":314,"line_end":314,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":837}},{"kind":"Mod","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":130035,"byte_end":130052,"line_start":101,"line_end":101,"column_start":13,"column_end":30},"ref_id":{"krate":0,"index":8419}},{"kind":"Mod","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","byte_start":11907,"byte_end":11911,"line_start":325,"line_end":325,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2602}},{"kind":"Mod","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","byte_start":11922,"byte_end":11927,"line_start":327,"line_end":327,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":2640}},{"kind":"Mod","span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","byte_start":12307,"byte_end":12311,"line_start":343,"line_end":343,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2642}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\flatten.rs","byte_start":35943,"byte_end":35950,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":2863},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\flatten.rs","byte_start":36080,"byte_end":36087,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":2863},"to":{"krate":5,"index":17}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\flatten.rs","byte_start":36318,"byte_end":36325,"line_start":38,"line_end":38,"column_start":22,"column_end":29},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":2863},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\flatten.rs","byte_start":37107,"byte_end":37114,"line_start":62,"line_end":62,"column_start":27,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":2863},"to":{"krate":5,"index":82}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\flatten.rs","byte_start":37345,"byte_end":37352,"line_start":74,"line_end":74,"column_start":22,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":2863},"to":{"krate":5,"index":68}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":40424,"byte_end":40428,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":2911},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":40535,"byte_end":40539,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":2911},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":42268,"byte_end":42272,"line_start":74,"line_end":74,"column_start":35,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2911},"to":{"krate":5,"index":17}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":42385,"byte_end":42389,"line_start":80,"line_end":80,"column_start":30,"column_end":34},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2911},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\map.rs","byte_start":43368,"byte_end":43371,"line_start":25,"line_end":25,"column_start":14,"column_end":17},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":2946},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\map.rs","byte_start":43540,"byte_end":43543,"line_start":32,"line_end":32,"column_start":33,"column_end":36},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":2946},"to":{"krate":5,"index":17}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\map.rs","byte_start":43805,"byte_end":43808,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":2946},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":19169,"byte_end":19170,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":131},"to":{"krate":0,"index":132}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":19301,"byte_end":19307,"line_start":123,"line_end":123,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":8336},"to":{"krate":0,"index":132}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\into_future.rs","byte_start":66493,"byte_end":66503,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":3499},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\into_future.rs","byte_start":66654,"byte_end":66664,"line_start":23,"line_end":23,"column_start":52,"column_end":62},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":3499},"to":{"krate":5,"index":17}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\into_future.rs","byte_start":66775,"byte_end":66785,"line_start":27,"line_end":27,"column_start":33,"column_end":43},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":3499},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\try_flatten.rs","byte_start":67517,"byte_end":67527,"line_start":20,"line_end":20,"column_start":18,"column_end":28},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":3534},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\try_flatten.rs","byte_start":67657,"byte_end":67667,"line_start":26,"line_end":26,"column_start":27,"column_end":37},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":3534},"to":{"krate":5,"index":17}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\try_flatten.rs","byte_start":67914,"byte_end":67924,"line_start":38,"line_end":38,"column_start":22,"column_end":32},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":3534},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\try_flatten.rs","byte_start":68946,"byte_end":68956,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":3534},"to":{"krate":5,"index":82}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\try_flatten.rs","byte_start":69203,"byte_end":69213,"line_start":79,"line_end":79,"column_start":22,"column_end":32},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":3534},"to":{"krate":5,"index":68}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\try_flatten_err.rs","byte_start":72716,"byte_end":72729,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":3581},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\try_flatten_err.rs","byte_start":72859,"byte_end":72872,"line_start":23,"line_end":23,"column_start":27,"column_end":40},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":3581},"to":{"krate":5,"index":17}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\try_flatten_err.rs","byte_start":73119,"byte_end":73132,"line_start":35,"line_end":35,"column_start":22,"column_end":35},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":3581},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":49161,"byte_end":49164,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":276},"to":{"krate":0,"index":277}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":49247,"byte_end":49256,"line_start":137,"line_end":137,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":5,"index":32},"to":{"krate":0,"index":277}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":74483,"byte_end":74487,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":4444},"to":{"krate":1,"index":1968}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":75060,"byte_end":75064,"line_start":40,"line_end":40,"column_start":28,"column_end":32},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":4444},"to":{"krate":5,"index":17}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":75196,"byte_end":75200,"line_start":46,"line_end":46,"column_start":23,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":4444},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":75777,"byte_end":75784,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":4450},"to":{"krate":5,"index":17}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":76335,"byte_end":76342,"line_start":41,"line_end":41,"column_start":20,"column_end":27},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":4450},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":76487,"byte_end":76494,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":4450},"to":{"krate":1,"index":1968}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":76521,"byte_end":76528,"line_start":52,"line_end":52,"column_start":19,"column_end":26},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":4450},"to":{"krate":1,"index":1625}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77256,"byte_end":77265,"line_start":23,"line_end":23,"column_start":37,"column_end":46},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":4456},"to":{"krate":1,"index":1968}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77844,"byte_end":77853,"line_start":46,"line_end":46,"column_start":19,"column_end":28},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":4456},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":78951,"byte_end":78960,"line_start":78,"line_end":78,"column_start":35,"column_end":44},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":4456},"to":{"krate":5,"index":17}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":79161,"byte_end":79170,"line_start":87,"line_end":87,"column_start":30,"column_end":39},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":4456},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":80464,"byte_end":80476,"line_start":24,"line_end":24,"column_start":40,"column_end":52},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":4469},"to":{"krate":1,"index":1968}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":80658,"byte_end":80670,"line_start":31,"line_end":31,"column_start":22,"column_end":34},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":4469},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":81783,"byte_end":81795,"line_start":63,"line_end":63,"column_start":38,"column_end":50},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":4469},"to":{"krate":5,"index":17}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":81999,"byte_end":82011,"line_start":72,"line_end":72,"column_start":33,"column_end":45},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":4469},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\option.rs","byte_start":83733,"byte_end":83745,"line_start":34,"line_end":34,"column_start":28,"column_end":40},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":4487},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\option.rs","byte_start":84082,"byte_end":84094,"line_start":48,"line_end":48,"column_start":38,"column_end":50},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":4487},"to":{"krate":5,"index":17}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\option.rs","byte_start":84281,"byte_end":84293,"line_start":57,"line_end":57,"column_start":29,"column_end":41},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":4487},"to":{"krate":1,"index":1845}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":84705,"byte_end":84711,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":458},"to":{"krate":1,"index":1968}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":85381,"byte_end":85387,"line_start":42,"line_end":42,"column_start":24,"column_end":30},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":458},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":85529,"byte_end":85535,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":458},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86012,"byte_end":86017,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":4521},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86196,"byte_end":86201,"line_start":18,"line_end":18,"column_start":19,"column_end":24},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":4521},"to":{"krate":1,"index":1968}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86233,"byte_end":86238,"line_start":20,"line_end":20,"column_start":25,"column_end":30},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":4521},"to":{"krate":5,"index":17}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86335,"byte_end":86340,"line_start":26,"line_end":26,"column_start":20,"column_end":25},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":4521},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join_all.rs","byte_start":93654,"byte_end":93661,"line_start":33,"line_end":33,"column_start":24,"column_end":31},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":568},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join_all.rs","byte_start":95424,"byte_end":95431,"line_start":91,"line_end":91,"column_start":20,"column_end":27},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":568},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join_all.rs","byte_start":96128,"byte_end":96135,"line_start":118,"line_end":118,"column_start":37,"column_end":44},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":568},"to":{"krate":1,"index":4902}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":96605,"byte_end":96611,"line_start":13,"line_end":13,"column_start":36,"column_end":42},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":4875},"to":{"krate":1,"index":1968}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":98853,"byte_end":98859,"line_start":81,"line_end":81,"column_start":23,"column_end":29},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":4875},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":99562,"byte_end":99568,"line_start":103,"line_end":103,"column_start":28,"column_end":34},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":4875},"to":{"krate":5,"index":17}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select_all.rs","byte_start":100105,"byte_end":100114,"line_start":16,"line_end":16,"column_start":28,"column_end":37},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":4883},"to":{"krate":1,"index":1968}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select_all.rs","byte_start":101094,"byte_end":101103,"line_start":44,"line_end":44,"column_start":38,"column_end":47},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":4883},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select_all.rs","byte_start":101809,"byte_end":101818,"line_start":65,"line_end":65,"column_start":49,"column_end":58},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":4883},"to":{"krate":1,"index":4902}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join_all.rs","byte_start":110055,"byte_end":110065,"line_start":39,"line_end":39,"column_start":24,"column_end":34},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":711},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join_all.rs","byte_start":111827,"byte_end":111837,"line_start":101,"line_end":101,"column_start":20,"column_end":30},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":711},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join_all.rs","byte_start":113010,"byte_end":113020,"line_start":138,"line_end":138,"column_start":40,"column_end":50},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":711},"to":{"krate":1,"index":4902}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":113502,"byte_end":113511,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":5211},"to":{"krate":1,"index":1968}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":115217,"byte_end":115226,"line_start":56,"line_end":56,"column_start":37,"column_end":46},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":5211},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select_ok.rs","byte_start":116579,"byte_end":116587,"line_start":16,"line_end":16,"column_start":28,"column_end":36},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":5219},"to":{"krate":1,"index":1968}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select_ok.rs","byte_start":117557,"byte_end":117565,"line_start":42,"line_end":42,"column_start":41,"column_end":49},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":5219},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select_ok.rs","byte_start":119009,"byte_end":119017,"line_start":79,"line_end":79,"column_start":52,"column_end":60},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":5219},"to":{"krate":1,"index":4902}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":119617,"byte_end":119623,"line_start":18,"line_end":18,"column_start":12,"column_end":18},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":5225},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":119962,"byte_end":119968,"line_start":29,"line_end":29,"column_start":15,"column_end":21},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":5225},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":120353,"byte_end":120359,"line_start":41,"line_end":41,"column_start":15,"column_end":21},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":5225},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":120740,"byte_end":120746,"line_start":53,"line_end":53,"column_start":9,"column_end":15},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":5225},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":120987,"byte_end":120993,"line_start":63,"line_end":63,"column_start":23,"column_end":29},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":5225},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":121332,"byte_end":121338,"line_start":78,"line_end":78,"column_start":28,"column_end":34},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":5225},"to":{"krate":5,"index":17}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":121614,"byte_end":121620,"line_start":91,"line_end":91,"column_start":23,"column_end":29},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":5225},"to":{"krate":5,"index":68}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":121972,"byte_end":121978,"line_start":106,"line_end":106,"column_start":28,"column_end":34},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":5225},"to":{"krate":5,"index":82}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5528409,"byte_end":5528418,"line_start":21,"line_end":21,"column_start":11,"column_end":20},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":9298},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5529715,"byte_end":5529726,"line_start":63,"line_end":63,"column_start":6,"column_end":17},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":5280},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5531595,"byte_end":5531602,"line_start":127,"line_end":127,"column_start":23,"column_end":30},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":5291},"to":{"krate":1,"index":6215}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5531818,"byte_end":5531827,"line_start":136,"line_end":136,"column_start":22,"column_end":31},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":9298},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\abortable.rs","byte_start":5532801,"byte_end":5532812,"line_start":165,"line_end":165,"column_start":6,"column_end":17},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":5280},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\chain.rs","byte_start":181130,"byte_end":181135,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":5311},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\chain.rs","byte_start":181392,"byte_end":181397,"line_start":32,"line_end":32,"column_start":32,"column_end":37},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":5311},"to":{"krate":5,"index":82}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\chain.rs","byte_start":181602,"byte_end":181607,"line_start":41,"line_end":41,"column_start":27,"column_end":32},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":5311},"to":{"krate":5,"index":68}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\collect.rs","byte_start":183220,"byte_end":183227,"line_start":20,"line_end":20,"column_start":30,"column_end":37},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":5360},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\collect.rs","byte_start":183525,"byte_end":183532,"line_start":33,"line_end":33,"column_start":29,"column_end":36},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":5360},"to":{"krate":5,"index":17}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\collect.rs","byte_start":183708,"byte_end":183715,"line_start":42,"line_end":42,"column_start":24,"column_end":31},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":5360},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\unzip.rs","byte_start":184739,"byte_end":184744,"line_start":21,"line_end":21,"column_start":50,"column_end":55},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":5411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\unzip.rs","byte_start":185218,"byte_end":185223,"line_start":39,"line_end":39,"column_start":46,"column_end":51},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":5411},"to":{"krate":5,"index":17}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\unzip.rs","byte_start":185473,"byte_end":185478,"line_start":49,"line_end":49,"column_start":41,"column_end":46},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":5411},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\concat.rs","byte_start":186604,"byte_end":186610,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":5469},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\concat.rs","byte_start":186877,"byte_end":186883,"line_start":32,"line_end":32,"column_start":21,"column_end":27},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":5469},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\concat.rs","byte_start":187658,"byte_end":187664,"line_start":61,"line_end":61,"column_start":26,"column_end":32},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":5469},"to":{"krate":5,"index":17}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\cycle.rs","byte_start":188341,"byte_end":188346,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":5509},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\cycle.rs","byte_start":188535,"byte_end":188540,"line_start":31,"line_end":31,"column_start":21,"column_end":26},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":5509},"to":{"krate":5,"index":68}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\cycle.rs","byte_start":189289,"byte_end":189294,"line_start":59,"line_end":59,"column_start":26,"column_end":31},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":5509},"to":{"krate":5,"index":82}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\enumerate.rs","byte_start":190042,"byte_end":190051,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":5549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\enumerate.rs","byte_start":190270,"byte_end":190279,"line_start":31,"line_end":31,"column_start":48,"column_end":57},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":5549},"to":{"krate":5,"index":82}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\enumerate.rs","byte_start":190397,"byte_end":190406,"line_start":37,"line_end":37,"column_start":29,"column_end":38},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":5549},"to":{"krate":5,"index":68}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\filter.rs","byte_start":191870,"byte_end":191876,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":5588},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\filter.rs","byte_start":192349,"byte_end":192355,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":5588},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\filter.rs","byte_start":192733,"byte_end":192739,"line_start":60,"line_end":60,"column_start":34,"column_end":40},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":5588},"to":{"krate":5,"index":82}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\filter.rs","byte_start":193088,"byte_end":193094,"line_start":71,"line_end":71,"column_start":29,"column_end":35},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":5588},"to":{"krate":5,"index":68}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\filter_map.rs","byte_start":195311,"byte_end":195320,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":5653},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\filter_map.rs","byte_start":195617,"byte_end":195626,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":5653},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\filter_map.rs","byte_start":195905,"byte_end":195914,"line_start":49,"line_end":49,"column_start":37,"column_end":46},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":5653},"to":{"krate":5,"index":82}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\filter_map.rs","byte_start":196191,"byte_end":196200,"line_start":59,"line_end":59,"column_start":32,"column_end":41},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":5653},"to":{"krate":5,"index":68}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\flatten.rs","byte_start":198345,"byte_end":198352,"line_start":21,"line_end":21,"column_start":13,"column_end":20},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":5721},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\flatten.rs","byte_start":198521,"byte_end":198528,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":5721},"to":{"krate":5,"index":82}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\flatten.rs","byte_start":198720,"byte_end":198727,"line_start":39,"line_end":39,"column_start":21,"column_end":28},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":5721},"to":{"krate":5,"index":68}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\fold.rs","byte_start":200241,"byte_end":200245,"line_start":22,"line_end":22,"column_start":36,"column_end":40},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":5822},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\fold.rs","byte_start":200601,"byte_end":200605,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":5822},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\fold.rs","byte_start":200923,"byte_end":200927,"line_start":52,"line_end":52,"column_start":37,"column_end":41},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":5822},"to":{"krate":5,"index":17}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\fold.rs","byte_start":201174,"byte_end":201178,"line_start":62,"line_end":62,"column_start":32,"column_end":36},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":5822},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\for_each.rs","byte_start":202779,"byte_end":202786,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":5891},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\for_each.rs","byte_start":203079,"byte_end":203086,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":5891},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\for_each.rs","byte_start":203362,"byte_end":203369,"line_start":48,"line_end":48,"column_start":34,"column_end":41},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":5891},"to":{"krate":5,"index":17}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\for_each.rs","byte_start":203620,"byte_end":203627,"line_start":58,"line_end":58,"column_start":29,"column_end":36},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":5891},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\fuse.rs","byte_start":204740,"byte_end":204744,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":5953},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\fuse.rs","byte_start":205241,"byte_end":205245,"line_start":37,"line_end":37,"column_start":33,"column_end":37},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":5953},"to":{"krate":5,"index":82}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\fuse.rs","byte_start":205343,"byte_end":205347,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":5953},"to":{"krate":5,"index":68}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":206572,"byte_end":206584,"line_start":15,"line_end":15,"column_start":26,"column_end":38},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":5992},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":209074,"byte_end":209086,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":5992},"to":{"krate":5,"index":17}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":209206,"byte_end":209218,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":5992},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\map.rs","byte_start":210126,"byte_end":210129,"line_start":22,"line_end":22,"column_start":28,"column_end":31},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":6067},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\map.rs","byte_start":210344,"byte_end":210347,"line_start":33,"line_end":33,"column_start":13,"column_end":16},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":6067},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\map.rs","byte_start":210516,"byte_end":210519,"line_start":41,"line_end":41,"column_start":29,"column_end":32},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":6067},"to":{"krate":5,"index":82}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\map.rs","byte_start":210693,"byte_end":210696,"line_start":50,"line_end":50,"column_start":24,"column_end":27},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":6067},"to":{"krate":5,"index":68}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\next.rs","byte_start":211843,"byte_end":211847,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":6199},"to":{"krate":1,"index":1968}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\next.rs","byte_start":211898,"byte_end":211902,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":6199},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\next.rs","byte_start":212053,"byte_end":212057,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":6199},"to":{"krate":5,"index":17}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\next.rs","byte_start":212196,"byte_end":212200,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":6199},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\select_next_some.rs","byte_start":212874,"byte_end":212888,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":6207},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\select_next_some.rs","byte_start":213039,"byte_end":213053,"line_start":22,"line_end":22,"column_start":56,"column_end":70},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":6207},"to":{"krate":5,"index":17}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\select_next_some.rs","byte_start":213197,"byte_end":213211,"line_start":28,"line_end":28,"column_start":51,"column_end":65},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":6207},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\peek.rs","byte_start":214466,"byte_end":214474,"line_start":27,"line_end":27,"column_start":18,"column_end":26},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":6220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\peek.rs","byte_start":215651,"byte_end":215659,"line_start":65,"line_end":65,"column_start":34,"column_end":42},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":6220},"to":{"krate":5,"index":82}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\peek.rs","byte_start":215801,"byte_end":215809,"line_start":71,"line_end":71,"column_start":28,"column_end":36},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":6220},"to":{"krate":5,"index":68}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\peek.rs","byte_start":216989,"byte_end":216993,"line_start":113,"line_end":113,"column_start":25,"column_end":29},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":6259},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\peek.rs","byte_start":217264,"byte_end":217268,"line_start":125,"line_end":125,"column_start":34,"column_end":38},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":6259},"to":{"krate":5,"index":17}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\peek.rs","byte_start":217379,"byte_end":217383,"line_start":131,"line_end":131,"column_start":25,"column_end":29},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":6259},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\skip.rs","byte_start":218293,"byte_end":218297,"line_start":20,"line_end":20,"column_start":18,"column_end":22},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":6305},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\skip.rs","byte_start":218521,"byte_end":218525,"line_start":31,"line_end":31,"column_start":39,"column_end":43},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":6305},"to":{"krate":5,"index":82}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\skip.rs","byte_start":218643,"byte_end":218647,"line_start":37,"line_end":37,"column_start":29,"column_end":33},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":6305},"to":{"krate":5,"index":68}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\skip_while.rs","byte_start":220350,"byte_end":220359,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":6344},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\skip_while.rs","byte_start":220811,"byte_end":220820,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":6344},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\skip_while.rs","byte_start":221227,"byte_end":221236,"line_start":59,"line_end":59,"column_start":34,"column_end":43},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":6344},"to":{"krate":5,"index":82}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\skip_while.rs","byte_start":221496,"byte_end":221505,"line_start":69,"line_end":69,"column_start":29,"column_end":38},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":6344},"to":{"krate":5,"index":68}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take.rs","byte_start":223852,"byte_end":223856,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":6418},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take.rs","byte_start":224062,"byte_end":224066,"line_start":32,"line_end":32,"column_start":21,"column_end":25},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":6418},"to":{"krate":5,"index":68}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take.rs","byte_start":225060,"byte_end":225064,"line_start":73,"line_end":73,"column_start":26,"column_end":30},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":6418},"to":{"krate":5,"index":82}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_while.rs","byte_start":226087,"byte_end":226096,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":6457},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_while.rs","byte_start":226544,"byte_end":226553,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":6457},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_while.rs","byte_start":226953,"byte_end":226962,"line_start":59,"line_end":59,"column_start":29,"column_end":38},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":6457},"to":{"krate":5,"index":68}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_while.rs","byte_start":228516,"byte_end":228525,"line_start":111,"line_end":111,"column_start":34,"column_end":43},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":6457},"to":{"krate":5,"index":82}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":229921,"byte_end":229930,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":6526},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":230257,"byte_end":230266,"line_start":44,"line_end":44,"column_start":15,"column_end":24},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":6526},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":232440,"byte_end":232449,"line_start":119,"line_end":119,"column_start":26,"column_end":35},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":6526},"to":{"krate":5,"index":68}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":233481,"byte_end":233490,"line_start":158,"line_end":158,"column_start":31,"column_end":40},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":6526},"to":{"krate":5,"index":82}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\then.rs","byte_start":234432,"byte_end":234436,"line_start":23,"line_end":23,"column_start":33,"column_end":37},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":6583},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\then.rs","byte_start":234726,"byte_end":234730,"line_start":36,"line_end":36,"column_start":18,"column_end":22},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":6583},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\then.rs","byte_start":235027,"byte_end":235031,"line_start":51,"line_end":51,"column_start":34,"column_end":38},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":6583},"to":{"krate":5,"index":82}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\then.rs","byte_start":235269,"byte_end":235273,"line_start":61,"line_end":61,"column_start":29,"column_end":33},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":6583},"to":{"krate":5,"index":68}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":237190,"byte_end":237193,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":6651},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":238836,"byte_end":238839,"line_start":66,"line_end":66,"column_start":32,"column_end":35},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":6651},"to":{"krate":5,"index":82}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":239030,"byte_end":239033,"line_start":74,"line_end":74,"column_start":27,"column_end":30},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":6651},"to":{"krate":5,"index":68}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\chunks.rs","byte_start":241745,"byte_end":241751,"line_start":24,"line_end":24,"column_start":18,"column_end":24},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":6706},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\chunks.rs","byte_start":242254,"byte_end":242260,"line_start":43,"line_end":43,"column_start":29,"column_end":35},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":6706},"to":{"krate":5,"index":68}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\chunks.rs","byte_start":243898,"byte_end":243904,"line_start":91,"line_end":91,"column_start":39,"column_end":45},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":6706},"to":{"krate":5,"index":82}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\ready_chunks.rs","byte_start":244876,"byte_end":244887,"line_start":23,"line_end":23,"column_start":18,"column_end":29},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":6754},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\ready_chunks.rs","byte_start":245234,"byte_end":245245,"line_start":37,"line_end":37,"column_start":29,"column_end":40},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":6754},"to":{"krate":5,"index":68}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\ready_chunks.rs","byte_start":247353,"byte_end":247364,"line_start":96,"line_end":96,"column_start":39,"column_end":50},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":6754},"to":{"krate":5,"index":82}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\scan.rs","byte_start":248362,"byte_end":248366,"line_start":28,"line_end":28,"column_start":36,"column_end":40},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":6797},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\scan.rs","byte_start":248852,"byte_end":248856,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":6797},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\scan.rs","byte_start":249020,"byte_end":249024,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":6797},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\scan.rs","byte_start":249476,"byte_end":249480,"line_start":72,"line_end":72,"column_start":35,"column_end":39},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":6797},"to":{"krate":5,"index":68}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\scan.rs","byte_start":250707,"byte_end":250711,"line_start":115,"line_end":115,"column_start":40,"column_end":44},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":6797},"to":{"krate":5,"index":82}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\buffer_unordered.rs","byte_start":5533982,"byte_end":5533997,"line_start":26,"line_end":26,"column_start":25,"column_end":40},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":9252},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\buffer_unordered.rs","byte_start":5534329,"byte_end":5534344,"line_start":39,"line_end":39,"column_start":10,"column_end":25},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":9252},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\buffer_unordered.rs","byte_start":5534731,"byte_end":5534746,"line_start":59,"line_end":59,"column_start":21,"column_end":36},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":9252},"to":{"krate":5,"index":68}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\buffer_unordered.rs","byte_start":5536223,"byte_end":5536238,"line_start":107,"line_end":107,"column_start":26,"column_end":41},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":9252},"to":{"krate":5,"index":82}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\buffered.rs","byte_start":5537348,"byte_end":5537356,"line_start":27,"line_end":27,"column_start":25,"column_end":33},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":9211},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\buffered.rs","byte_start":5537703,"byte_end":5537711,"line_start":41,"line_end":41,"column_start":10,"column_end":18},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":9211},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\buffered.rs","byte_start":5538036,"byte_end":5538044,"line_start":57,"line_end":57,"column_start":21,"column_end":29},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":9211},"to":{"krate":5,"index":68}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\for_each_concurrent.rs","byte_start":5540403,"byte_end":5540420,"line_start":23,"line_end":23,"column_start":33,"column_end":50},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":9150},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\for_each_concurrent.rs","byte_start":5540766,"byte_end":5540783,"line_start":37,"line_end":37,"column_start":18,"column_end":35},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":9150},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\for_each_concurrent.rs","byte_start":5541216,"byte_end":5541233,"line_start":53,"line_end":53,"column_start":34,"column_end":51},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":9150},"to":{"krate":5,"index":17}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\for_each_concurrent.rs","byte_start":5541475,"byte_end":5541492,"line_start":63,"line_end":63,"column_start":29,"column_end":46},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":9150},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":136870,"byte_end":136871,"line_start":206,"line_end":206,"column_start":31,"column_end":32},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":1691},"to":{"krate":0,"index":1692}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":137014,"byte_end":137020,"line_start":210,"line_end":210,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":5,"index":68},"to":{"krate":0,"index":1692}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\and_then.rs","byte_start":287919,"byte_end":287926,"line_start":23,"line_end":23,"column_start":33,"column_end":40},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":6968},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\and_then.rs","byte_start":288219,"byte_end":288226,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":6968},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\and_then.rs","byte_start":288519,"byte_end":288526,"line_start":48,"line_end":48,"column_start":29,"column_end":36},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":6968},"to":{"krate":5,"index":68}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\and_then.rs","byte_start":289704,"byte_end":289711,"line_start":86,"line_end":86,"column_start":34,"column_end":41},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":6968},"to":{"krate":5,"index":82}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\into_stream.rs","byte_start":290641,"byte_end":290651,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":7241},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\into_stream.rs","byte_start":290844,"byte_end":290854,"line_start":27,"line_end":27,"column_start":51,"column_end":61},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":7241},"to":{"krate":5,"index":82}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\into_stream.rs","byte_start":290975,"byte_end":290985,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":7241},"to":{"krate":5,"index":68}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\or_else.rs","byte_start":292107,"byte_end":292113,"line_start":23,"line_end":23,"column_start":33,"column_end":39},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":7414},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\or_else.rs","byte_start":292405,"byte_end":292411,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":7414},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\or_else.rs","byte_start":292701,"byte_end":292707,"line_start":48,"line_end":48,"column_start":29,"column_end":35},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":7414},"to":{"krate":5,"index":68}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\or_else.rs","byte_start":294020,"byte_end":294026,"line_start":90,"line_end":90,"column_start":34,"column_end":40},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":7414},"to":{"krate":5,"index":82}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_next.rs","byte_start":294942,"byte_end":294949,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":7475},"to":{"krate":1,"index":1968}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_next.rs","byte_start":295003,"byte_end":295010,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":7475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_next.rs","byte_start":295173,"byte_end":295180,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":7475},"to":{"krate":5,"index":17}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_next.rs","byte_start":295322,"byte_end":295329,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":7475},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_for_each.rs","byte_start":296128,"byte_end":296138,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":7483},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_for_each.rs","byte_start":296434,"byte_end":296444,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":7483},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_for_each.rs","byte_start":296734,"byte_end":296744,"line_start":48,"line_end":48,"column_start":29,"column_end":39},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":7483},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_filter.rs","byte_start":298155,"byte_end":298164,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":7540},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_filter.rs","byte_start":298560,"byte_end":298569,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":7540},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_filter.rs","byte_start":298868,"byte_end":298877,"line_start":57,"line_end":57,"column_start":34,"column_end":43},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":7540},"to":{"krate":5,"index":82}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_filter.rs","byte_start":299146,"byte_end":299155,"line_start":67,"line_end":67,"column_start":29,"column_end":38},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":7540},"to":{"krate":5,"index":68}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":301333,"byte_end":301345,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":7605},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":301645,"byte_end":301657,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":7605},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":301854,"byte_end":301866,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":7605},"to":{"krate":5,"index":82}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":302156,"byte_end":302168,"line_start":55,"line_end":55,"column_start":32,"column_end":44},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":7605},"to":{"krate":5,"index":68}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_flatten.rs","byte_start":304387,"byte_end":304397,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":7671},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_flatten.rs","byte_start":304662,"byte_end":304672,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":7671},"to":{"krate":5,"index":82}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_flatten.rs","byte_start":304918,"byte_end":304928,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":7671},"to":{"krate":5,"index":68}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_collect.rs","byte_start":306537,"byte_end":306547,"line_start":20,"line_end":20,"column_start":33,"column_end":43},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":7717},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_collect.rs","byte_start":306720,"byte_end":306730,"line_start":29,"line_end":29,"column_start":29,"column_end":39},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":7717},"to":{"krate":5,"index":17}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_collect.rs","byte_start":306918,"byte_end":306928,"line_start":39,"line_end":39,"column_start":24,"column_end":34},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":7717},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_concat.rs","byte_start":307949,"byte_end":307958,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":7764},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_concat.rs","byte_start":308210,"byte_end":308219,"line_start":32,"line_end":32,"column_start":21,"column_end":30},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":7764},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_fold.rs","byte_start":309482,"byte_end":309489,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":7799},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_fold.rs","byte_start":309848,"byte_end":309855,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":7799},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_fold.rs","byte_start":310192,"byte_end":310199,"line_start":52,"line_end":52,"column_start":37,"column_end":44},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":7799},"to":{"krate":5,"index":17}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_fold.rs","byte_start":310465,"byte_end":310472,"line_start":62,"line_end":62,"column_start":32,"column_end":39},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":7799},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":314304,"byte_end":314313,"line_start":81,"line_end":81,"column_start":32,"column_end":41},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":7868},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":314614,"byte_end":314623,"line_start":94,"line_end":94,"column_start":34,"column_end":43},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":7868},"to":{"krate":5,"index":68}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":316392,"byte_end":316404,"line_start":26,"line_end":26,"column_start":33,"column_end":45},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":7925},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":316860,"byte_end":316872,"line_start":42,"line_end":42,"column_start":18,"column_end":30},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":7925},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":317293,"byte_end":317305,"line_start":60,"line_end":60,"column_start":29,"column_end":41},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":7925},"to":{"krate":5,"index":68}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":318839,"byte_end":318851,"line_start":107,"line_end":107,"column_start":34,"column_end":46},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":7925},"to":{"krate":5,"index":82}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_take_while.rs","byte_start":320091,"byte_end":320103,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":7994},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_take_while.rs","byte_start":320555,"byte_end":320567,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":7994},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_take_while.rs","byte_start":320974,"byte_end":320986,"line_start":64,"line_end":64,"column_start":29,"column_end":41},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":7994},"to":{"krate":5,"index":68}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_take_while.rs","byte_start":322593,"byte_end":322605,"line_start":115,"line_end":115,"column_start":34,"column_end":46},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":7994},"to":{"krate":5,"index":82}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_buffer_unordered.rs","byte_start":5544103,"byte_end":5544121,"line_start":26,"line_end":26,"column_start":10,"column_end":28},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":9111},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_buffer_unordered.rs","byte_start":5544466,"byte_end":5544484,"line_start":41,"line_end":41,"column_start":21,"column_end":39},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":9111},"to":{"krate":5,"index":68}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_buffered.rs","byte_start":5546725,"byte_end":5546736,"line_start":27,"line_end":27,"column_start":10,"column_end":21},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":9067},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_buffered.rs","byte_start":5547073,"byte_end":5547084,"line_start":43,"line_end":43,"column_start":21,"column_end":32},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":9067},"to":{"krate":5,"index":68}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_for_each_concurrent.rs","byte_start":5549265,"byte_end":5549285,"line_start":25,"line_end":25,"column_start":33,"column_end":53},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":9001},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_for_each_concurrent.rs","byte_start":5549650,"byte_end":5549670,"line_start":39,"line_end":39,"column_start":34,"column_end":54},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":9001},"to":{"krate":5,"index":17}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_for_each_concurrent.rs","byte_start":5549921,"byte_end":5549941,"line_start":49,"line_end":49,"column_start":18,"column_end":38},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":9001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_for_each_concurrent.rs","byte_start":5550389,"byte_end":5550409,"line_start":65,"line_end":65,"column_start":29,"column_end":49},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":9001},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":256115,"byte_end":256116,"line_start":141,"line_end":141,"column_start":46,"column_end":47},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":2266},"to":{"krate":0,"index":2267}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":256197,"byte_end":256206,"line_start":144,"line_end":144,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":5,"index":97},"to":{"krate":0,"index":2267}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\iter.rs","byte_start":323386,"byte_end":323390,"line_start":12,"line_end":12,"column_start":19,"column_end":23},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":8162},"to":{"krate":1,"index":1968}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\iter.rs","byte_start":323996,"byte_end":324000,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":8162},"to":{"krate":5,"index":68}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat.rs","byte_start":325141,"byte_end":325147,"line_start":32,"line_end":32,"column_start":19,"column_end":25},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":8171},"to":{"krate":1,"index":1968}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat.rs","byte_start":325174,"byte_end":325180,"line_start":34,"line_end":34,"column_start":20,"column_end":26},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":8171},"to":{"krate":5,"index":68}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat.rs","byte_start":325487,"byte_end":325493,"line_start":48,"line_end":48,"column_start":25,"column_end":31},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":8171},"to":{"krate":5,"index":82}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":326064,"byte_end":326074,"line_start":16,"line_end":16,"column_start":36,"column_end":46},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":8180},"to":{"krate":1,"index":1968}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":326118,"byte_end":326128,"line_start":18,"line_end":18,"column_start":37,"column_end":47},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":8180},"to":{"krate":5,"index":68}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":326442,"byte_end":326452,"line_start":30,"line_end":30,"column_start":42,"column_end":52},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":8180},"to":{"krate":5,"index":82}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\empty.rs","byte_start":328911,"byte_end":328916,"line_start":22,"line_end":22,"column_start":19,"column_end":24},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":8189},"to":{"krate":1,"index":1968}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\empty.rs","byte_start":328948,"byte_end":328953,"line_start":24,"line_end":24,"column_start":25,"column_end":30},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":8189},"to":{"krate":5,"index":82}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\empty.rs","byte_start":329038,"byte_end":329043,"line_start":30,"line_end":30,"column_start":20,"column_end":25},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":8189},"to":{"krate":5,"index":68}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\empty.rs","byte_start":329292,"byte_end":329297,"line_start":42,"line_end":42,"column_start":19,"column_end":24},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":8189},"to":{"krate":1,"index":1625}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\once.rs","byte_start":330177,"byte_end":330181,"line_start":33,"line_end":33,"column_start":11,"column_end":15},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":8200},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\once.rs","byte_start":330310,"byte_end":330314,"line_start":39,"line_end":39,"column_start":30,"column_end":34},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":8200},"to":{"krate":5,"index":68}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\once.rs","byte_start":330919,"byte_end":330923,"line_start":62,"line_end":62,"column_start":35,"column_end":39},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":8200},"to":{"krate":5,"index":82}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\pending.rs","byte_start":331533,"byte_end":331540,"line_start":20,"line_end":20,"column_start":19,"column_end":26},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":8231},"to":{"krate":1,"index":1968}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\pending.rs","byte_start":331572,"byte_end":331579,"line_start":22,"line_end":22,"column_start":25,"column_end":32},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":8231},"to":{"krate":5,"index":82}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\pending.rs","byte_start":331664,"byte_end":331671,"line_start":28,"line_end":28,"column_start":20,"column_end":27},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":8231},"to":{"krate":5,"index":68}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\pending.rs","byte_start":331916,"byte_end":331923,"line_start":40,"line_end":40,"column_start":19,"column_end":26},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":8231},"to":{"krate":1,"index":1625}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":332284,"byte_end":332290,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":2501},"to":{"krate":1,"index":1968}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":332321,"byte_end":332327,"line_start":16,"line_end":16,"column_start":24,"column_end":30},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":2501},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":333069,"byte_end":333075,"line_start":47,"line_end":47,"column_start":23,"column_end":29},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":2501},"to":{"krate":5,"index":68}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":334477,"byte_end":334483,"line_start":41,"line_end":41,"column_start":16,"column_end":22},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":8244},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":335906,"byte_end":335912,"line_start":76,"line_end":76,"column_start":32,"column_end":38},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":8244},"to":{"krate":5,"index":82}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":336130,"byte_end":336136,"line_start":85,"line_end":85,"column_start":27,"column_end":33},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":8244},"to":{"krate":5,"index":68}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":339494,"byte_end":339500,"line_start":70,"line_end":70,"column_start":32,"column_end":38},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":8290},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":339766,"byte_end":339772,"line_start":82,"line_end":82,"column_start":39,"column_end":45},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":8290},"to":{"krate":5,"index":82}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":340052,"byte_end":340058,"line_start":96,"line_end":96,"column_start":34,"column_end":40},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":8290},"to":{"krate":5,"index":68}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5553564,"byte_end":5553576,"line_start":26,"line_end":26,"column_start":23,"column_end":35},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":8966},"to":{"krate":1,"index":1653}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5553681,"byte_end":5553693,"line_start":32,"line_end":32,"column_start":16,"column_end":28},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":8966},"to":{"krate":1,"index":1658}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5553724,"byte_end":5553736,"line_start":34,"line_end":34,"column_start":24,"column_end":36},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":8966},"to":{"krate":1,"index":1690}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5553859,"byte_end":5553871,"line_start":40,"line_end":40,"column_start":17,"column_end":29},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":8966},"to":{"krate":1,"index":1679}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5554052,"byte_end":5554064,"line_start":47,"line_end":47,"column_start":20,"column_end":32},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":8966},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5556679,"byte_end":5556693,"line_start":105,"line_end":105,"column_start":27,"column_end":41},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":8381},"to":{"krate":1,"index":1968}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5556719,"byte_end":5556733,"line_start":107,"line_end":107,"column_start":19,"column_end":33},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":8381},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5558332,"byte_end":5558346,"line_start":151,"line_end":151,"column_start":31,"column_end":45},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":8381},"to":{"krate":1,"index":1915}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5558439,"byte_end":5558453,"line_start":157,"line_end":157,"column_start":30,"column_end":44},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":8381},"to":{"krate":5,"index":68}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5559615,"byte_end":5559629,"line_start":192,"line_end":192,"column_start":29,"column_end":43},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":8381},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5559795,"byte_end":5559809,"line_start":198,"line_end":198,"column_start":41,"column_end":55},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":8381},"to":{"krate":1,"index":4902}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5560089,"byte_end":5560103,"line_start":211,"line_end":211,"column_start":35,"column_end":49},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":8381},"to":{"krate":5,"index":82}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_ordered.rs","byte_start":5560273,"byte_end":5560287,"line_start":217,"line_end":217,"column_start":35,"column_end":49},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":8381},"to":{"krate":1,"index":4915}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\abort.rs","byte_start":5586389,"byte_end":5586400,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":8457},"to":{"krate":1,"index":2122}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\iter.rs","byte_start":5587572,"byte_end":5587582,"line_start":32,"line_end":32,"column_start":28,"column_end":38},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":8702},"to":{"krate":1,"index":4996}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\iter.rs","byte_start":5588439,"byte_end":5588449,"line_start":58,"line_end":58,"column_start":33,"column_end":43},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":8702},"to":{"krate":1,"index":4951}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\iter.rs","byte_start":5588497,"byte_end":5588504,"line_start":60,"line_end":60,"column_start":35,"column_end":42},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":8712},"to":{"krate":1,"index":4996}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\iter.rs","byte_start":5588768,"byte_end":5588775,"line_start":72,"line_end":72,"column_start":40,"column_end":47},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":8712},"to":{"krate":1,"index":4951}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\iter.rs","byte_start":5588816,"byte_end":5588826,"line_start":74,"line_end":74,"column_start":28,"column_end":38},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":8721},"to":{"krate":1,"index":4996}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\iter.rs","byte_start":5589743,"byte_end":5589753,"line_start":103,"line_end":103,"column_start":33,"column_end":43},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":8721},"to":{"krate":1,"index":4951}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\iter.rs","byte_start":5589801,"byte_end":5589805,"line_start":105,"line_end":105,"column_start":35,"column_end":39},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":8732},"to":{"krate":1,"index":4996}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\iter.rs","byte_start":5590061,"byte_end":5590065,"line_start":117,"line_end":117,"column_start":40,"column_end":44},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":8732},"to":{"krate":1,"index":4951}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\task.rs","byte_start":5591554,"byte_end":5591558,"line_start":41,"line_end":41,"column_start":27,"column_end":31},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":8521},"to":{"krate":1,"index":1927}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\task.rs","byte_start":5591593,"byte_end":5591597,"line_start":42,"line_end":42,"column_start":27,"column_end":31},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":8521},"to":{"krate":1,"index":1939}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\task.rs","byte_start":5591629,"byte_end":5591633,"line_start":44,"line_end":44,"column_start":23,"column_end":27},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":8521},"to":{"krate":16,"index":256}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\task.rs","byte_start":5592710,"byte_end":5592714,"line_start":71,"line_end":71,"column_start":11,"column_end":15},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":8521},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\task.rs","byte_start":5593714,"byte_end":5593718,"line_start":102,"line_end":102,"column_start":20,"column_end":24},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":8521},"to":{"krate":1,"index":2122}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\ready_to_run_queue.rs","byte_start":5595168,"byte_end":5595183,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":8567},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\ready_to_run_queue.rs","byte_start":5597033,"byte_end":5597048,"line_start":90,"line_end":90,"column_start":20,"column_end":35},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":8567},"to":{"krate":1,"index":2122}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5563521,"byte_end":5563537,"line_start":77,"line_end":77,"column_start":33,"column_end":49},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":8585},"to":{"krate":1,"index":1927}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5563578,"byte_end":5563594,"line_start":78,"line_end":78,"column_start":33,"column_end":49},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":8585},"to":{"krate":1,"index":1939}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5563623,"byte_end":5563639,"line_start":79,"line_end":79,"column_start":21,"column_end":37},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":8585},"to":{"krate":1,"index":1968}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5563664,"byte_end":5563680,"line_start":81,"line_end":81,"column_start":16,"column_end":32},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":8585},"to":{"krate":16,"index":11}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5563877,"byte_end":5563893,"line_start":90,"line_end":90,"column_start":21,"column_end":37},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":8585},"to":{"krate":16,"index":14}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5565612,"byte_end":5565628,"line_start":124,"line_end":124,"column_start":23,"column_end":39},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":8585},"to":{"krate":1,"index":1915}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5565702,"byte_end":5565718,"line_start":130,"line_end":130,"column_start":11,"column_end":27},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":8585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5577349,"byte_end":5577365,"line_start":411,"line_end":411,"column_start":30,"column_end":46},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":8585},"to":{"krate":5,"index":68}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5581762,"byte_end":5581766,"line_start":511,"line_end":511,"column_start":32,"column_end":36},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":8622},"to":{"krate":1,"index":2122}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5584104,"byte_end":5584120,"line_start":573,"line_end":573,"column_start":21,"column_end":37},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":8585},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5584267,"byte_end":5584283,"line_start":579,"line_end":579,"column_start":20,"column_end":36},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":8585},"to":{"krate":1,"index":2122}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5585723,"byte_end":5585739,"line_start":608,"line_end":608,"column_start":33,"column_end":49},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":8585},"to":{"krate":1,"index":4902}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5585983,"byte_end":5585999,"line_start":618,"line_end":618,"column_start":35,"column_end":51},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":8585},"to":{"krate":5,"index":82}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\futures_unordered\\mod.rs","byte_start":5586121,"byte_end":5586137,"line_start":624,"line_end":624,"column_start":27,"column_end":43},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":8585},"to":{"krate":1,"index":4915}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5598890,"byte_end":5598899,"line_start":30,"line_end":30,"column_start":27,"column_end":36},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":8667},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5599044,"byte_end":5599053,"line_start":36,"line_end":36,"column_start":26,"column_end":35},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":8667},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5600089,"byte_end":5600098,"line_start":68,"line_end":68,"column_start":38,"column_end":47},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":8667},"to":{"krate":1,"index":1915}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5600197,"byte_end":5600206,"line_start":74,"line_end":74,"column_start":37,"column_end":46},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":8667},"to":{"krate":5,"index":68}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5601013,"byte_end":5601022,"line_start":99,"line_end":99,"column_start":42,"column_end":51},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":8667},"to":{"krate":5,"index":82}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5601998,"byte_end":5602007,"line_start":130,"line_end":130,"column_start":47,"column_end":56},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":8667},"to":{"krate":1,"index":4902}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select_all.rs","byte_start":5602152,"byte_end":5602161,"line_start":136,"line_end":136,"column_start":41,"column_end":50},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":8667},"to":{"krate":1,"index":4915}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":342450,"byte_end":342452,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":2628},"to":{"krate":0,"index":2631}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":342507,"byte_end":342509,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":2630},"to":{"krate":0,"index":2634}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":342588,"byte_end":342593,"line_start":20,"line_end":20,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":16,"index":11},"to":{"krate":0,"index":2631}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":345357,"byte_end":345367,"line_start":97,"line_end":97,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":16,"index":14},"to":{"krate":0,"index":2634}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":349645,"byte_end":349646,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":2653},"to":{"krate":0,"index":2648}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":349784,"byte_end":349791,"line_start":19,"line_end":19,"column_start":22,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":2648},"to":{"krate":0,"index":2658}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":349880,"byte_end":349881,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":2662},"to":{"krate":0,"index":2658}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":350066,"byte_end":350072,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":2658},"to":{"krate":0,"index":2666}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":350150,"byte_end":350151,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":2670},"to":{"krate":0,"index":2666}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":351166,"byte_end":351170,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":2675},"to":{"krate":1,"index":1915}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":351264,"byte_end":351268,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":2675},"to":{"krate":0,"index":2648}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":351527,"byte_end":351534,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":8765},"to":{"krate":0,"index":2648}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":351757,"byte_end":351764,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":8765},"to":{"krate":0,"index":2658}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":351955,"byte_end":351962,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":8765},"to":{"krate":0,"index":2666}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":352267,"byte_end":352280,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":8786},"to":{"krate":0,"index":2648}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":352697,"byte_end":352706,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":8802},"to":{"krate":0,"index":2648}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":352988,"byte_end":352997,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":8802},"to":{"krate":0,"index":2658}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":353257,"byte_end":353266,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":8802},"to":{"krate":0,"index":2666}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":353586,"byte_end":353593,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":8817},"to":{"krate":0,"index":2648}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":353812,"byte_end":353819,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":8817},"to":{"krate":0,"index":2658}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":353997,"byte_end":354004,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":8817},"to":{"krate":0,"index":2666}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":354305,"byte_end":354313,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":8832},"to":{"krate":0,"index":2648}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":354536,"byte_end":354544,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":8832},"to":{"krate":0,"index":2658}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":354726,"byte_end":354734,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":8832},"to":{"krate":0,"index":2666}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":355044,"byte_end":355055,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":8847},"to":{"krate":0,"index":2648}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":355292,"byte_end":355303,"line_start":254,"line_end":254,"column_start":48,"column_end":59},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":8847},"to":{"krate":0,"index":2658}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":355518,"byte_end":355529,"line_start":262,"line_end":262,"column_start":45,"column_end":56},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":8847},"to":{"krate":0,"index":2666}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":355874,"byte_end":355886,"line_start":277,"line_end":277,"column_start":49,"column_end":61},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":8859},"to":{"krate":0,"index":2648}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":356124,"byte_end":356136,"line_start":286,"line_end":286,"column_start":48,"column_end":60},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":8859},"to":{"krate":0,"index":2658}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":356352,"byte_end":356364,"line_start":294,"line_end":294,"column_start":45,"column_end":57},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":8859},"to":{"krate":0,"index":2666}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":356961,"byte_end":356975,"line_start":314,"line_end":314,"column_start":41,"column_end":55},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":8871},"to":{"krate":0,"index":2648}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":357196,"byte_end":357210,"line_start":323,"line_end":323,"column_start":40,"column_end":54},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":8871},"to":{"krate":0,"index":2658}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":357409,"byte_end":357423,"line_start":331,"line_end":331,"column_start":37,"column_end":51},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":8871},"to":{"krate":0,"index":2666}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":357727,"byte_end":357733,"line_start":345,"line_end":345,"column_start":21,"column_end":27},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":2839},"to":{"krate":1,"index":1915}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":357826,"byte_end":357832,"line_start":350,"line_end":350,"column_start":27,"column_end":33},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":2839},"to":{"krate":0,"index":2648}},{"span":{"file_name":"C:\\Users\\renat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\unfold_state.rs","byte_start":358432,"byte_end":358443,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":8908},"to":{"krate":4294967295,"index":4294967295}}]}